/*!
 * William DURAND <william.durand1@gmail.com>
 * MIT Licensed
 */
;var Translator=(function(i,d){var e={},l=[],h=new RegExp(/^\w+\: +(.+)$/),f=new RegExp(/^\s*((\{\s*(\-?\d+[\s*,\s*\-?\d+]*)\s*\})|([\[\]])\s*(-Inf|\-?\d+)\s*,\s*(\+?Inf|\-?\d+)\s*([\[\]]))\s?(.+?)$/),o=new RegExp(/^\s*(\{\s*(\-?\d+[\s*,\s*\-?\d+]*)\s*\})|([\[\]])\s*(-Inf|\-?\d+)\s*,\s*(\+?Inf|\-?\d+)\s*([\[\]])/);function j(s,r){var t,p=Translator.placeHolderPrefix,q=Translator.placeHolderSuffix;for(t in r){var u=new RegExp(p+t+q,"g");if(u.test(s)){s=s.replace(u,r[t])}}return s}function g(r,t,z,p,v){var s=z||p||v,A=t;if(d==e[s]){if(d==e[v]){return r}s=v}if(d===A||null===A){for(var u=0;u<l.length;u++){if(c(s,l[u],r)||c(v,l[u],r)){A=l[u];break}}}if(c(s,A,r)){return e[s][A][r]}var y,w,x,q;while(s.length>2){y=s.length;w=s.split(/[\s_]+/);x=w[w.length-1];q=x.length;if(1===w.length){break}s=s.substring(0,y-(q+1));if(c(s,A,r)){return e[s][A][r]}}if(c(v,A,r)){return e[v][A][r]}return r}function c(p,q,r){if(d==e[p]){return false}if(d==e[p][q]){return false}if(d==e[p][q][r]){return false}return true}function m(C,s,z){var p,x,v=[],B=[],w=C.split(Translator.pluralSeparator),u=[];for(p=0;p<w.length;p++){var A=w[p];if(f.test(A)){u=A.match(f);v[u[0]]=u[u.length-1]}else{if(h.test(A)){u=A.match(h);B.push(u[1])}else{B.push(A)}}}for(x in v){if(o.test(x)){u=x.match(o);if(u[1]){var t=u[2].split(","),q;for(q in t){if(s==t[q]){return v[x]}}}else{var r=n(u[4]);var y=n(u[5]);if(("["===u[3]?s>=r:s>r)&&("]"===u[6]?s<=y:s<y)){return v[x]}}}}return B[b(s,z)]||B[0]||d}function n(p){if("-Inf"===p){return Number.NEGATIVE_INFINITY}else{if("+Inf"===p||"Inf"===p){return Number.POSITIVE_INFINITY}}return parseInt(p,10)}function b(r,p){var q=p;if("pt_BR"===q){q="xbr"}if(q.length>3){q=q.split("_")[0]}switch(q){case"bo":case"dz":case"id":case"ja":case"jv":case"ka":case"km":case"kn":case"ko":case"ms":case"th":case"tr":case"vi":case"zh":return 0;case"af":case"az":case"bn":case"bg":case"ca":case"da":case"de":case"el":case"en":case"eo":case"es":case"et":case"eu":case"fa":case"fi":case"fo":case"fur":case"fy":case"gl":case"gu":case"ha":case"he":case"hu":case"is":case"it":case"ku":case"lb":case"ml":case"mn":case"mr":case"nah":case"nb":case"ne":case"nl":case"nn":case"no":case"om":case"or":case"pa":case"pap":case"ps":case"pt":case"so":case"sq":case"sv":case"sw":case"ta":case"te":case"tk":case"ur":case"zu":return(r==1)?0:1;case"am":case"bh":case"fil":case"fr":case"gun":case"hi":case"ln":case"mg":case"nso":case"xbr":case"ti":case"wa":return((r===0)||(r==1))?0:1;case"be":case"bs":case"hr":case"ru":case"sr":case"uk":return((r%10==1)&&(r%100!=11))?0:(((r%10>=2)&&(r%10<=4)&&((r%100<10)||(r%100>=20)))?1:2);case"cs":case"sk":return(r==1)?0:(((r>=2)&&(r<=4))?1:2);case"ga":return(r==1)?0:((r==2)?1:2);case"lt":return((r%10==1)&&(r%100!=11))?0:(((r%10>=2)&&((r%100<10)||(r%100>=20)))?1:2);case"sl":return(r%100==1)?0:((r%100==2)?1:(((r%100==3)||(r%100==4))?2:3));case"mk":return(r%10==1)?0:1;case"mt":return(r==1)?0:(((r===0)||((r%100>1)&&(r%100<11)))?1:(((r%100>10)&&(r%100<20))?2:3));case"lv":return(r===0)?0:(((r%10==1)&&(r%100!=11))?1:2);case"pl":return(r==1)?0:(((r%10>=2)&&(r%10<=4)&&((r%100<12)||(r%100>14)))?1:2);case"cy":return(r==1)?0:((r==2)?1:(((r==8)||(r==11))?2:3));case"ro":return(r==1)?0:(((r===0)||((r%100>0)&&(r%100<20)))?1:2);case"ar":return(r===0)?0:((r==1)?1:((r==2)?2:(((r>=3)&&(r<=10))?3:(((r>=11)&&(r<=99))?4:5))));default:return 0}}function k(r,q){for(var p=0;p<r.length;p++){if(q===r[p]){return true}}return false}function a(){return i.documentElement.lang.replace("-","_")}return{locale:a(),fallback:"en",placeHolderPrefix:"%",placeHolderSuffix:"%",defaultDomain:"messages",pluralSeparator:"|",add:function(u,s,t,q){var r=q||this.locale||this.fallback,p=t||this.defaultDomain;if(!e[r]){e[r]={}}if(!e[r][p]){e[r][p]={}}e[r][p][u]=s;if(false===k(l,p)){l.push(p)}return this},trans:function(t,r,s,p){var q=g(t,s,p,this.locale,this.fallback);return j(q,r||{})},transChoice:function(v,s,r,t,p){var q=g(v,t,p,this.locale,this.fallback);var u=parseInt(s,10);if(d!=q&&!isNaN(u)){q=m(q,u,p||this.locale||this.fallback)}return j(q,r||{})},fromJSON:function(r){if(typeof r==="string"){r=JSON.parse(r)}if(r.locale){this.locale=r.locale}if(r.fallback){this.fallback=r.fallback}if(r.defaultDomain){this.defaultDomain=r.defaultDomain}if(r.translations){for(var p in r.translations){for(var q in r.translations[p]){for(var s in r.translations[p][q]){this.add(s,r.translations[p][q][s],q,p)}}}}return this},reset:function(){e={};l=[];this.locale=a()}}})(document,undefined);if(typeof window.define==="function"&&window.define.amd){window.define("Translator",[],function(){return Translator})}if(typeof exports!=="undefined"){if(typeof module!=="undefined"&&module.exports){module.exports=Translator}};
(function (Translator) {
    Translator.fallback      = 'en';
    Translator.defaultDomain = 'messages';
})(Translator);

(function (Translator) {
    // en
    Translator.add("attribute_group", "Attribute groups", "admin_menu", "en");
    Translator.add("attribute", "Attributes", "admin_menu", "en");
    Translator.add("attribute_value", "Attribute values", "admin_menu", "en");
    Translator.add("availability", "Availability", "admin_menu", "en");
    Translator.add("catalog", "Catalog", "admin_menu", "en");
    Translator.add("category", "Categories", "admin_menu", "en");
    Translator.add("coupon", "Coupons", "admin_menu", "en");
    Translator.add("client", "Clients", "admin_menu", "en");
    Translator.add("client_group", "Client groups", "admin_menu", "en");
    Translator.add("cms", "CMS", "admin_menu", "en");
    Translator.add("configuration", "Configuration", "admin_menu", "en");
    Translator.add("contact", "Contacts", "admin_menu", "en");
    Translator.add("crm", "CRM", "admin_menu", "en");
    Translator.add("currency", "Currencies", "admin_menu", "en");
    Translator.add("dashboard", "Dashboard", "admin_menu", "en");
    Translator.add("deliverer", "Deliverers", "admin_menu", "en");
    Translator.add("dictionary", "Translations", "admin_menu", "en");
    Translator.add("integration", "Integrations", "admin_menu", "en");
    Translator.add("layout", "Layout", "admin_menu", "en");
    Translator.add("layout_box", "Boxes", "admin_menu", "en");
    Translator.add("locale", "Languages", "admin_menu", "en");
    Translator.add("localization", "Internationalization", "admin_menu", "en");
    Translator.add("media", "Media management", "admin_menu", "en");
    Translator.add("news", "News", "admin_menu", "en");
    Translator.add("order", "Orders", "admin_menu", "en");
    Translator.add("payment_method", "Payment methods", "admin_menu", "en");
    Translator.add("producer", "Producers", "admin_menu", "en");
    Translator.add("product", "Products", "admin_menu", "en");
    Translator.add("product_status", "Product statuses", "admin_menu", "en");
    Translator.add("product_review", "Product reviews", "admin_menu", "en");
    Translator.add("promotion", "Promotions", "admin_menu", "en");
    Translator.add("promotions", "Promotions", "admin_menu", "en");
    Translator.add("reports", "Reports", "admin_menu", "en");
    Translator.add("review", "Reviews", "admin_menu", "en");
    Translator.add("routing", "Routing configuration", "admin_menu", "en");
    Translator.add("sales", "Sales", "admin_menu", "en");
    Translator.add("shipping_method", "Shipping methods", "admin_menu", "en");
    Translator.add("tax", "Taxes", "admin_menu", "en");
    Translator.add("theme", "Themes", "admin_menu", "en");
    Translator.add("package", "Packages", "admin_menu", "en");
    Translator.add("channel", "Channels", "admin_menu", "en");
    Translator.add("distribution", "Application management", "admin_menu", "en");
    Translator.add("multi_store", "Multistore management", "admin_menu", "en");
    Translator.add("company", "Companies", "admin_menu", "en");
    Translator.add("shop", "Shops", "admin_menu", "en");
    Translator.add("unit", "Units", "admin_menu", "en");
    Translator.add("order_status", "Order statuses", "admin_menu", "en");
    Translator.add("order_status_group", "Order status groups", "admin_menu", "en");
    Translator.add("sales_report", "Sales report", "admin_menu", "en");
    Translator.add("page", "Pages", "admin_menu", "en");
    Translator.add("user_management", "Users management", "admin_menu", "en");
    Translator.add("user", "Users", "admin_menu", "en");
    Translator.add("user_group", "Users groups", "admin_menu", "en");
    Translator.add("variant", "Variants", "admin_menu", "en");
})(Translator);

(function (Translator) {
    // pl
    Translator.add("attribute_group", "Grupy cech", "admin_menu", "pl");
    Translator.add("attribute", "Cechy produkt\u00f3w", "admin_menu", "pl");
    Translator.add("attribute_value", "Warto\u015bci cech", "admin_menu", "pl");
    Translator.add("availability", "Dost\u0119pno\u015b\u0107", "admin_menu", "pl");
    Translator.add("catalog", "Katalog", "admin_menu", "pl");
    Translator.add("category", "Kategorie", "admin_menu", "pl");
    Translator.add("coupon", "Kupony", "admin_menu", "pl");
    Translator.add("client", "Klienci", "admin_menu", "pl");
    Translator.add("client_group", "Grupy klient\u00f3w", "admin_menu", "pl");
    Translator.add("cms", "CMS", "admin_menu", "pl");
    Translator.add("configuration", "Konfiguracja", "admin_menu", "pl");
    Translator.add("contact", "Kontakty", "admin_menu", "pl");
    Translator.add("crm", "CRM", "admin_menu", "pl");
    Translator.add("currency", "Waluty", "admin_menu", "pl");
    Translator.add("dashboard", "Pulpit", "admin_menu", "pl");
    Translator.add("deliverer", "Dostawcy", "admin_menu", "pl");
    Translator.add("dictionary", "T\u0142umaczenia", "admin_menu", "pl");
    Translator.add("integration", "Integracje", "admin_menu", "pl");
    Translator.add("layout", "Layout", "admin_menu", "pl");
    Translator.add("layout_box", "Boksy", "admin_menu", "pl");
    Translator.add("locale", "J\u0119zyki", "admin_menu", "pl");
    Translator.add("localization", "Internacjonalizacja", "admin_menu", "pl");
    Translator.add("media", "Zarz\u0105dzanie mediami", "admin_menu", "pl");
    Translator.add("news", "Newsy", "admin_menu", "pl");
    Translator.add("order", "Zam\u00f3wienia", "admin_menu", "pl");
    Translator.add("payment_method", "Formy p\u0142atno\u015bci", "admin_menu", "pl");
    Translator.add("producer", "Producenci", "admin_menu", "pl");
    Translator.add("product", "Produkty", "admin_menu", "pl");
    Translator.add("product_status", "Statusy produkt\u00f3w", "admin_menu", "pl");
    Translator.add("product_review", "Opinie dla produkt\u00f3w", "admin_menu", "pl");
    Translator.add("promotion", "Promocje", "admin_menu", "pl");
    Translator.add("promotions", "Promocje", "admin_menu", "pl");
    Translator.add("reports", "Raporty", "admin_menu", "pl");
    Translator.add("review", "Opinie", "admin_menu", "pl");
    Translator.add("routing", "Konfiguracja adres\u00f3w", "admin_menu", "pl");
    Translator.add("sales", "Sprzeda\u017c", "admin_menu", "pl");
    Translator.add("shipping_method", "Formy wysy\u0142ki", "admin_menu", "pl");
    Translator.add("tax", "Stawki podatku", "admin_menu", "pl");
    Translator.add("theme", "Szablony strony", "admin_menu", "pl");
    Translator.add("package", "Modu\u0142y", "admin_menu", "pl");
    Translator.add("channel", "Kana\u0142y aktualizacji", "admin_menu", "pl");
    Translator.add("distribution", "Zarz\u0105dzanie aplikacj\u0105", "admin_menu", "pl");
    Translator.add("multi_store", "Zarz\u0105dzanie multi-store", "admin_menu", "pl");
    Translator.add("company", "Firmy", "admin_menu", "pl");
    Translator.add("shop", "Sklepy", "admin_menu", "pl");
    Translator.add("unit", "Jednostki miary", "admin_menu", "pl");
    Translator.add("order_status", "Statusy zam\u00f3wie\u0144", "admin_menu", "pl");
    Translator.add("order_status_group", "Grupy status\u00f3w zam\u00f3wie\u0144", "admin_menu", "pl");
    Translator.add("sales_report", "Raport sprzeda\u017cy", "admin_menu", "pl");
    Translator.add("page", "Strony CMS", "admin_menu", "pl");
    Translator.add("user_management", "Uprawnienia do systemu", "admin_menu", "pl");
    Translator.add("user", "Administratorzy", "admin_menu", "pl");
    Translator.add("user_group", "Grupy administrator\u00f3w", "admin_menu", "pl");
})(Translator);

(function (Translator) {
    // ar
    Translator.add("An authentication exception occurred.", "\u062d\u062f\u062b \u062e\u0637\u0623 \u0627\u062b\u0646\u0627\u0621 \u0627\u0644\u062f\u062e\u0648\u0644.", "security", "ar");
    Translator.add("Authentication credentials could not be found.", "\u0644\u0645 \u0627\u0633\u062a\u0637\u0639 \u0627\u0644\u0639\u062b\u0648\u0631 \u0639\u0644\u0649 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0644\u062f\u062e\u0648\u0644.", "security", "ar");
    Translator.add("Authentication request could not be processed due to a system problem.", "\u0644\u0645 \u064a\u0643\u062a\u0645\u0644 \u0637\u0644\u0628 \u0627\u0644\u062f\u062e\u0648\u0644 \u0646\u062a\u064a\u062c\u0647 \u0639\u0637\u0644 \u0641\u0649 \u0627\u0644\u0646\u0638\u0627\u0645.", "security", "ar");
    Translator.add("Invalid credentials.", "\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0644\u062f\u062e\u0648\u0644 \u062e\u0627\u0637\u0626\u0629.", "security", "ar");
    Translator.add("Cookie has already been used by someone else.", "\u0645\u0644\u0641\u0627\u062a \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0627\u0631\u062a\u0628\u0627\u0637(cookies) \u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0645\u0646 \u0642\u0628\u0644 \u0634\u062e\u0635 \u0627\u062e\u0631.", "security", "ar");
    Translator.add("Not privileged to request the resource.", "\u0644\u064a\u0633\u062a \u0644\u062f\u064a\u0643 \u0627\u0644\u0635\u0644\u0627\u062d\u064a\u0627\u062a \u0627\u0644\u0643\u0627\u0641\u064a\u0629 \u0644\u0647\u0630\u0627 \u0627\u0644\u0637\u0644\u0628.", "security", "ar");
    Translator.add("Invalid CSRF token.", "\u0631\u0645\u0632 \u0627\u0644\u0645\u0648\u0642\u0639 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d.", "security", "ar");
    Translator.add("Digest nonce has expired.", "\u0627\u0646\u062a\u0647\u062a \u0635\u0644\u0627\u062d\u064a\u0629(digest nonce).", "security", "ar");
    Translator.add("No authentication provider found to support the authentication token.", "\u0644\u0627 \u064a\u0648\u062c\u062f \u0645\u0639\u0631\u0641 \u0644\u0644\u062f\u062e\u0648\u0644 \u064a\u062f\u0639\u0645 \u0627\u0644\u0631\u0645\u0632 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0644\u0644\u062f\u062e\u0648\u0644.", "security", "ar");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "\u0644\u0627 \u064a\u0648\u062c\u062f \u0635\u0644\u0629 \u0628\u064a\u0646\u0643 \u0648 \u0628\u064a\u0646 \u0627\u0644\u0645\u0648\u0642\u0639 \u0627\u0645\u0627 \u0627\u0646\u0647\u0627 \u0627\u0646\u062a\u0647\u062a \u0627\u0648 \u0627\u0646 \u0645\u062a\u0635\u0641\u062d\u0643 \u0644\u0627 \u064a\u062f\u0639\u0645 \u062e\u0627\u0635\u064a\u0629 \u0645\u0644\u0641\u0627\u062a \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0627\u0631\u062a\u0628\u0627\u0637 (cookies).", "security", "ar");
    Translator.add("No token could be found.", "\u0644\u0645 \u0627\u0633\u062a\u0637\u0639 \u0627\u0644\u0639\u062b\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0631\u0645\u0632.", "security", "ar");
    Translator.add("Username could not be found.", "\u0644\u0645 \u0627\u0633\u062a\u0637\u0639 \u0627\u0644\u0639\u062b\u0648\u0631 \u0639\u0644\u0649 \u0627\u0633\u0645 \u0627\u0644\u062f\u062e\u0648\u0644.", "security", "ar");
    Translator.add("Account has expired.", "\u0627\u0646\u062a\u0647\u062a \u0635\u0644\u0627\u062d\u064a\u0629 \u0627\u0644\u062d\u0633\u0627\u0628.", "security", "ar");
    Translator.add("Credentials have expired.", "\u0627\u0646\u062a\u0647\u062a \u0635\u0644\u0627\u062d\u064a\u0629 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0644\u062f\u062e\u0648\u0644.", "security", "ar");
    Translator.add("Account is disabled.", "\u0627\u0644\u062d\u0633\u0627\u0628 \u0645\u0648\u0642\u0648\u0641.", "security", "ar");
    Translator.add("Account is locked.", "\u0627\u0644\u062d\u0633\u0627\u0628 \u0645\u063a\u0644\u0642.", "security", "ar");
})(Translator);

(function (Translator) {
    // az
    Translator.add("An authentication exception occurred.", "Do\u011frulama istisnas\u0131 ba\u015f verdi.", "security", "az");
    Translator.add("Authentication credentials could not be found.", "Do\u011frulama m\u0259lumatlar\u0131 tap\u0131lmad\u0131.", "security", "az");
    Translator.add("Authentication request could not be processed due to a system problem.", "Sistem x\u0259tas\u0131 s\u0259b\u0259bil\u0259 do\u011frulama ist\u0259yi emal edil\u0259 bilm\u0259di.", "security", "az");
    Translator.add("Invalid credentials.", "Yanl\u0131\u015f m\u0259lumat.", "security", "az");
    Translator.add("Cookie has already been used by someone else.", "Kuki ba\u015fqas\u0131 t\u0259r\u0259find\u0259n istifad\u0259 edilib.", "security", "az");
    Translator.add("Not privileged to request the resource.", "Resurs ist\u0259yi \u00fc\u00e7\u00fcn imtiyaz yoxdur.", "security", "az");
    Translator.add("Invalid CSRF token.", "Yanl\u0131\u015f CSRF ni\u015fan\u0131.", "security", "az");
    Translator.add("Digest nonce has expired.", "D\u0259rl\u0259m\u0259 istifad\u0259 m\u00fcdd\u0259ti bitib.", "security", "az");
    Translator.add("No authentication provider found to support the authentication token.", "Do\u011frulama ni\u015fan\u0131n\u0131 d\u0259st\u0259kl\u0259y\u0259c\u0259k provayder tap\u0131lmad\u0131.", "security", "az");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Uy\u011fun seans yoxdur, vaxt\u0131 ke\u00e7ib v\u0259 ya kuki aktiv deyil.", "security", "az");
    Translator.add("No token could be found.", "Ni\u015fan tap\u0131lmad\u0131.", "security", "az");
    Translator.add("Username could not be found.", "\u0130stifad\u0259\u00e7i ad\u0131 tap\u0131lmad\u0131.", "security", "az");
    Translator.add("Account has expired.", "Hesab\u0131n istifad\u0259 m\u00fcdd\u0259ti bitib.", "security", "az");
    Translator.add("Credentials have expired.", "M\u0259lumatlar\u0131n istifad\u0259 m\u00fcdd\u0259ti bitib.", "security", "az");
    Translator.add("Account is disabled.", "Hesab qeyri-aktiv edilib.", "security", "az");
    Translator.add("Account is locked.", "Hesab kilitl\u0259nib.", "security", "az");
})(Translator);

(function (Translator) {
    // bg
    Translator.add("An authentication exception occurred.", "\u0413\u0440\u0435\u0448\u043a\u0430 \u043f\u0440\u0438 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u043a\u0430\u0446\u0438\u044f.", "security", "bg");
    Translator.add("Authentication credentials could not be found.", "\u0423\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435\u0442\u043e \u0437\u0430 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u043a\u0430\u0446\u0438\u044f \u043d\u0435 \u0435 \u043e\u0442\u043a\u0440\u0438\u0442\u043e.", "security", "bg");
    Translator.add("Authentication request could not be processed due to a system problem.", "\u0417\u0430\u044f\u0432\u043a\u0430\u0442\u0430 \u0437\u0430 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u043a\u0430\u0446\u0438\u044f \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0435\u043d\u0430\u0442\u0430 \u043f\u043e\u0440\u0430\u0434\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u0430 \u0433\u0440\u0435\u0448\u043a\u0430.", "security", "bg");
    Translator.add("Invalid credentials.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0437\u0430 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u043a\u0430\u0446\u0438\u044f.", "security", "bg");
    Translator.add("Cookie has already been used by someone else.", "\u0422\u043e\u0432\u0430 cookie \u0432\u0435\u0447\u0435 \u0441\u0435 \u043f\u043e\u043b\u0437\u0432\u0430 \u043e\u0442 \u043d\u044f\u043a\u043e\u0439 \u0434\u0440\u0443\u0433.", "security", "bg");
    Translator.add("Not privileged to request the resource.", "\u041d\u044f\u043c\u0430\u0442\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430 \u0434\u043e\u0441\u0442\u044a\u043f \u0434\u043e \u0442\u043e\u0437\u0438 \u0440\u0435\u0441\u0443\u0440\u0441.", "security", "bg");
    Translator.add("Invalid CSRF token.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d CSRF \u0442\u043e\u043a\u0435\u043d.", "security", "bg");
    Translator.add("Digest nonce has expired.", "Digest nonce \u0435 \u0438\u0437\u0442\u0435\u043a\u044a\u043b.", "security", "bg");
    Translator.add("No authentication provider found to support the authentication token.", "\u041d\u0435 \u0435 \u043e\u0442\u043a\u0440\u0438\u0442 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u044a\u0440, \u043a\u043e\u0439\u0442\u043e \u0434\u0430 \u043f\u043e\u0434\u0434\u044a\u0440\u0436\u0430 \u0442\u043e\u0437\u0438 \u0442\u043e\u043a\u0435\u043d \u0437\u0430 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u043a\u0430\u0446\u0438\u044f.", "security", "bg");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "\u0421\u0435\u0441\u0438\u044f\u0442\u0430 \u043d\u0435 \u0435 \u0434\u043e\u0441\u0442\u044a\u043f\u043d\u0430, \u0438\u043b\u0438 \u0432\u0440\u0435\u043c\u0435\u0442\u043e \u0437\u0430 \u0434\u043e\u0441\u0442\u044a\u043f \u0435 \u0438\u0437\u0442\u0435\u043a\u043b\u043e, \u0438\u043b\u0438 \u043a\u0443\u043a\u0438\u0442\u0430\u0442\u0430 \u043d\u0435 \u0441\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438.", "security", "bg");
    Translator.add("No token could be found.", "\u0422\u043e\u043a\u0435\u043d\u0430 \u043d\u0435 \u0435 \u043e\u0442\u043a\u0440\u0438\u0442.", "security", "bg");
    Translator.add("Username could not be found.", "\u041f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u0441\u043a\u043e\u0442\u043e \u0438\u043c\u0435 \u043d\u0435 \u0435 \u043e\u0442\u043a\u0440\u0438\u0442\u043e.", "security", "bg");
    Translator.add("Account has expired.", "\u0410\u043a\u0430\u0443\u043d\u0442\u0430 \u0435 \u0438\u0437\u0442\u0435\u043a\u044a\u043b.", "security", "bg");
    Translator.add("Credentials have expired.", "\u0423\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435\u0442\u043e \u0437\u0430 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u043a\u0430\u0446\u0438\u044f \u0435 \u0438\u0437\u0442\u0435\u043a\u043b\u043e.", "security", "bg");
    Translator.add("Account is disabled.", "\u0410\u043a\u0430\u0443\u043d\u0442\u0430 \u0435 \u0434\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u0430\u043d.", "security", "bg");
    Translator.add("Account is locked.", "\u0410\u043a\u0430\u0443\u043d\u0442\u0430 \u0435 \u0437\u0430\u043a\u043b\u044e\u0447\u0435\u043d.", "security", "bg");
})(Translator);

(function (Translator) {
    // ca
    Translator.add("An authentication exception occurred.", "Ha succe\u00eft un error d'autenticaci\u00f3.", "security", "ca");
    Translator.add("Authentication credentials could not be found.", "No s'han trobat les credencials d'autenticaci\u00f3.", "security", "ca");
    Translator.add("Authentication request could not be processed due to a system problem.", "La solicitud d'autenticaci\u00f3 no s'ha pogut processar per un problema del sistema.", "security", "ca");
    Translator.add("Invalid credentials.", "Credencials no v\u00e0lides.", "security", "ca");
    Translator.add("Cookie has already been used by someone else.", "La cookie ja ha estat utilitzada per una altra persona.", "security", "ca");
    Translator.add("Not privileged to request the resource.", "No t\u00e9 privilegis per solicitar el recurs.", "security", "ca");
    Translator.add("Invalid CSRF token.", "Token CSRF no v\u00e0lid.", "security", "ca");
    Translator.add("Digest nonce has expired.", "El vector d'inicialitzaci\u00f3 (digest nonce) ha expirat.", "security", "ca");
    Translator.add("No authentication provider found to support the authentication token.", "No s'ha trobat un prove\u00efdor d'autenticaci\u00f3 que suporti el token d'autenticaci\u00f3.", "security", "ca");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "No hi ha sessi\u00f3 disponible, ha expirat o les cookies no estan habilitades.", "security", "ca");
    Translator.add("No token could be found.", "No s'ha trobat cap token.", "security", "ca");
    Translator.add("Username could not be found.", "No s'ha trobat el nom d'usuari.", "security", "ca");
    Translator.add("Account has expired.", "El compte ha expirat.", "security", "ca");
    Translator.add("Credentials have expired.", "Les credencials han expirat.", "security", "ca");
    Translator.add("Account is disabled.", "El compte est\u00e0 deshabilitat.", "security", "ca");
    Translator.add("Account is locked.", "El compte est\u00e0 bloquejat.", "security", "ca");
})(Translator);

(function (Translator) {
    // cs
    Translator.add("An authentication exception occurred.", "P\u0159i ov\u011b\u0159ov\u00e1n\u00ed do\u0161lo k chyb\u011b.", "security", "cs");
    Translator.add("Authentication credentials could not be found.", "Ov\u011b\u0159ovac\u00ed \u00fadaje nebyly nalezeny.", "security", "cs");
    Translator.add("Authentication request could not be processed due to a system problem.", "Po\u017eadavek na ov\u011b\u0159en\u00ed nemohl b\u00fdt zpracov\u00e1n kv\u016fli syst\u00e9mov\u00e9 chyb\u011b.", "security", "cs");
    Translator.add("Invalid credentials.", "Neplatn\u00e9 p\u0159ihla\u0161ovac\u00ed \u00fadaje.", "security", "cs");
    Translator.add("Cookie has already been used by someone else.", "Cookie ji\u017e bylo pou\u017eit\u00e9 n\u011bk\u00fdm jin\u00fdm.", "security", "cs");
    Translator.add("Not privileged to request the resource.", "Nem\u00e1te opr\u00e1vn\u011bn\u00ed p\u0159istupovat k prost\u0159edku.", "security", "cs");
    Translator.add("Invalid CSRF token.", "Neplatn\u00fd CSRF token.", "security", "cs");
    Translator.add("Digest nonce has expired.", "Platnost inicializa\u010dn\u00edho vektoru (digest nonce) vypr\u0161ela.", "security", "cs");
    Translator.add("No authentication provider found to support the authentication token.", "Poskytovatel pro ov\u011b\u0159ovac\u00ed token nebyl nalezen.", "security", "cs");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Session nen\u00ed k dispozici, vypr\u0161ela jej\u00ed platnost, nebo jsou zak\u00e1zan\u00e9 cookies.", "security", "cs");
    Translator.add("No token could be found.", "Token nebyl nalezen.", "security", "cs");
    Translator.add("Username could not be found.", "P\u0159ihla\u0161ovac\u00ed jm\u00e9no nebylo nalezeno.", "security", "cs");
    Translator.add("Account has expired.", "Platnost \u00fa\u010dtu vypr\u0161ela.", "security", "cs");
    Translator.add("Credentials have expired.", "Platnost p\u0159ihla\u0161ovac\u00edch \u00fadaj\u016f vypr\u0161ela.", "security", "cs");
    Translator.add("Account is disabled.", "\u00da\u010det je zak\u00e1zan\u00fd.", "security", "cs");
    Translator.add("Account is locked.", "\u00da\u010det je zablokovan\u00fd.", "security", "cs");
})(Translator);

(function (Translator) {
    // da
    Translator.add("An authentication exception occurred.", "En fejl indtraf ved godkendelse.", "security", "da");
    Translator.add("Authentication credentials could not be found.", "Loginoplysninger kan findes.", "security", "da");
    Translator.add("Authentication request could not be processed due to a system problem.", "Godkendelsesanmodning kan ikke behandles p\u00e5 grund af et systemfejl.", "security", "da");
    Translator.add("Invalid credentials.", "Ugyldige loginoplysninger.", "security", "da");
    Translator.add("Cookie has already been used by someone else.", "Cookie er allerede brugt af en anden.", "security", "da");
    Translator.add("Not privileged to request the resource.", "Ingen tilladselese at anvende kilden.", "security", "da");
    Translator.add("Invalid CSRF token.", "Ugyldigt CSRF token.", "security", "da");
    Translator.add("Digest nonce has expired.", "Digest nonce er udl\u00f8bet.", "security", "da");
    Translator.add("No authentication provider found to support the authentication token.", "Ingen godkendelsesudbyder er fundet til underst\u00f8ttelsen af godkendelsestoken.", "security", "da");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Ingen session tilg\u00e6ngelig, sessionen er enten udl\u00f8bet eller cookies er ikke aktiveret.", "security", "da");
    Translator.add("No token could be found.", "Ingen token kan findes.", "security", "da");
    Translator.add("Username could not be found.", "Brugernavn kan ikke findes.", "security", "da");
    Translator.add("Account has expired.", "Brugerkonto er udl\u00f8bet.", "security", "da");
    Translator.add("Credentials have expired.", "Loginoplysninger er udl\u00f8bet.", "security", "da");
    Translator.add("Account is disabled.", "Brugerkonto er deaktiveret.", "security", "da");
    Translator.add("Account is locked.", "Brugerkonto er l\u00e5st.", "security", "da");
})(Translator);

(function (Translator) {
    // de
    Translator.add("An authentication exception occurred.", "Es ist ein Fehler bei der Authentifikation aufgetreten.", "security", "de");
    Translator.add("Authentication credentials could not be found.", "Es konnten keine Zugangsdaten gefunden werden.", "security", "de");
    Translator.add("Authentication request could not be processed due to a system problem.", "Die Authentifikation konnte wegen eines Systemproblems nicht bearbeitet werden.", "security", "de");
    Translator.add("Invalid credentials.", "Fehlerhafte Zugangsdaten.", "security", "de");
    Translator.add("Cookie has already been used by someone else.", "Cookie wurde bereits von jemand anderem verwendet.", "security", "de");
    Translator.add("Not privileged to request the resource.", "Keine Rechte, um die Ressource anzufragen.", "security", "de");
    Translator.add("Invalid CSRF token.", "Ung\u00fcltiges CSRF-Token.", "security", "de");
    Translator.add("Digest nonce has expired.", "Digest nonce ist abgelaufen.", "security", "de");
    Translator.add("No authentication provider found to support the authentication token.", "Es wurde kein Authentifizierungs-Provider gefunden, der das Authentifizierungs-Token unterst\u00fctzt.", "security", "de");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Keine Session verf\u00fcgbar, entweder ist diese abgelaufen oder Cookies sind nicht aktiviert.", "security", "de");
    Translator.add("No token could be found.", "Es wurde kein Token gefunden.", "security", "de");
    Translator.add("Username could not be found.", "Der Benutzername wurde nicht gefunden.", "security", "de");
    Translator.add("Account has expired.", "Der Account ist abgelaufen.", "security", "de");
    Translator.add("Credentials have expired.", "Die Zugangsdaten sind abgelaufen.", "security", "de");
    Translator.add("Account is disabled.", "Der Account ist deaktiviert.", "security", "de");
    Translator.add("Account is locked.", "Der Account ist gesperrt.", "security", "de");
})(Translator);

(function (Translator) {
    // el
    Translator.add("An authentication exception occurred.", "\u03a3\u03c5\u03bd\u03ad\u03b2\u03b7 \u03ad\u03bd\u03b1 \u03c3\u03c6\u03ac\u03bb\u03bc\u03b1 \u03c0\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2.", "security", "el");
    Translator.add("Authentication credentials could not be found.", "\u03a4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c0\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2 \u03b4\u03b5 \u03b2\u03c1\u03ad\u03b8\u03b7\u03ba\u03b1\u03bd.", "security", "el");
    Translator.add("Authentication request could not be processed due to a system problem.", "\u03a4\u03bf \u03b1\u03af\u03c4\u03b7\u03bc\u03b1 \u03c0\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2 \u03b4\u03b5 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b5\u03af \u03bb\u03cc\u03b3\u03c9 \u03c3\u03c6\u03ac\u03bb\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03c3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2.", "security", "el");
    Translator.add("Invalid credentials.", "\u039b\u03b1\u03bd\u03b8\u03b1\u03c3\u03bc\u03ad\u03bd\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7\u03c2.", "security", "el");
    Translator.add("Cookie has already been used by someone else.", "\u03a4\u03bf Cookie \u03ad\u03c7\u03b5\u03b9 \u03ae\u03b4\u03b7 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03b1\u03c0\u03cc \u03ba\u03ac\u03c0\u03bf\u03b9\u03bf\u03bd \u03ac\u03bb\u03bb\u03bf.", "security", "el");
    Translator.add("Not privileged to request the resource.", "\u0394\u03b5\u03bd \u03b5\u03af\u03c3\u03c4\u03b5 \u03b5\u03be\u03bf\u03c5\u03c3\u03b9\u03bf\u03b4\u03bf\u03c4\u03b7\u03bc\u03ad\u03bd\u03bf\u03c2 \u03b3\u03b9\u03b1 \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7 \u03c3\u03c4\u03bf \u03c3\u03c5\u03b3\u03ba\u03b5\u03ba\u03c1\u03b9\u03bc\u03ad\u03bd\u03bf \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03bf.", "security", "el");
    Translator.add("Invalid CSRF token.", "\u039c\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf CSRF token.", "security", "el");
    Translator.add("Digest nonce has expired.", "\u03a4\u03bf digest nonce \u03ad\u03c7\u03b5\u03b9 \u03bb\u03ae\u03be\u03b5\u03b9.", "security", "el");
    Translator.add("No authentication provider found to support the authentication token.", "\u0394\u03b5 \u03b2\u03c1\u03ad\u03b8\u03b7\u03ba\u03b5 \u03ba\u03ac\u03c0\u03bf\u03b9\u03bf\u03c2 \u03c0\u03ac\u03c1\u03bf\u03c7\u03bf\u03c2 \u03c0\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf token \u03c0\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2.", "security", "el");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "\u0394\u03b5\u03bd \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03b5\u03bd\u03b5\u03c1\u03b3\u03ae \u03c3\u03cd\u03bd\u03bf\u03b4\u03bf\u03c2 (session), \u03b5\u03af\u03c4\u03b5 \u03ad\u03c7\u03b5\u03b9 \u03bb\u03ae\u03be\u03b5\u03b9 \u03ae \u03c4\u03b1 cookies \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03b1.", "security", "el");
    Translator.add("No token could be found.", "\u0394\u03b5\u03bd \u03ae\u03c4\u03b1\u03bd \u03b4\u03c5\u03bd\u03b1\u03c4\u03cc\u03bd \u03bd\u03b1 \u03b2\u03c1\u03b5\u03b8\u03b5\u03af \u03ba\u03ac\u03c0\u03bf\u03b9\u03bf token.", "security", "el");
    Translator.add("Username could not be found.", "\u03a4\u03bf Username \u03b4\u03b5 \u03b2\u03c1\u03ad\u03b8\u03b7\u03ba\u03b5.", "security", "el");
    Translator.add("Account has expired.", "\u039f \u03bb\u03bf\u03b3\u03b1\u03c1\u03b9\u03b1\u03c3\u03bc\u03cc\u03c2 \u03ad\u03c7\u03b5\u03b9 \u03bb\u03ae\u03be\u03b5\u03b9.", "security", "el");
    Translator.add("Credentials have expired.", "\u03a4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7\u03c2 \u03ad\u03c7\u03bf\u03c5\u03bd \u03bb\u03ae\u03be\u03b5\u03b9.", "security", "el");
    Translator.add("Account is disabled.", "\u039f \u03bb\u03bf\u03b3\u03b1\u03c1\u03b9\u03b1\u03c3\u03bc\u03cc\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c0\u03b5\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03bf\u03c2.", "security", "el");
    Translator.add("Account is locked.", "\u039f \u03bb\u03bf\u03b3\u03b1\u03c1\u03b9\u03b1\u03c3\u03bc\u03cc\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03bb\u03b5\u03b9\u03b4\u03c9\u03bc\u03ad\u03bd\u03bf\u03c2.", "security", "el");
})(Translator);

(function (Translator) {
    // en
    Translator.add("An authentication exception occurred.", "An authentication exception occurred.", "security", "en");
    Translator.add("Authentication credentials could not be found.", "Authentication credentials could not be found.", "security", "en");
    Translator.add("Authentication request could not be processed due to a system problem.", "Authentication request could not be processed due to a system problem.", "security", "en");
    Translator.add("Invalid credentials.", "Invalid credentials.", "security", "en");
    Translator.add("Cookie has already been used by someone else.", "Cookie has already been used by someone else.", "security", "en");
    Translator.add("Not privileged to request the resource.", "Not privileged to request the resource.", "security", "en");
    Translator.add("Invalid CSRF token.", "Invalid CSRF token.", "security", "en");
    Translator.add("Digest nonce has expired.", "Digest nonce has expired.", "security", "en");
    Translator.add("No authentication provider found to support the authentication token.", "No authentication provider found to support the authentication token.", "security", "en");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "No session available, it either timed out or cookies are not enabled.", "security", "en");
    Translator.add("No token could be found.", "No token could be found.", "security", "en");
    Translator.add("Username could not be found.", "Username could not be found.", "security", "en");
    Translator.add("Account has expired.", "Account has expired.", "security", "en");
    Translator.add("Credentials have expired.", "Credentials have expired.", "security", "en");
    Translator.add("Account is disabled.", "Account is disabled.", "security", "en");
    Translator.add("Account is locked.", "Account is locked.", "security", "en");
})(Translator);

(function (Translator) {
    // es
    Translator.add("An authentication exception occurred.", "Ocurri\u00f3 un error de autenticaci\u00f3n.", "security", "es");
    Translator.add("Authentication credentials could not be found.", "No se encontraron las credenciales de autenticaci\u00f3n.", "security", "es");
    Translator.add("Authentication request could not be processed due to a system problem.", "La solicitud de autenticaci\u00f3n no se pudo procesar debido a un problema del sistema.", "security", "es");
    Translator.add("Invalid credentials.", "Credenciales no v\u00e1lidas.", "security", "es");
    Translator.add("Cookie has already been used by someone else.", "La cookie ya ha sido usada por otra persona.", "security", "es");
    Translator.add("Not privileged to request the resource.", "No tiene privilegios para solicitar el recurso.", "security", "es");
    Translator.add("Invalid CSRF token.", "Token CSRF no v\u00e1lido.", "security", "es");
    Translator.add("Digest nonce has expired.", "El vector de inicializaci\u00f3n (digest nonce) ha expirado.", "security", "es");
    Translator.add("No authentication provider found to support the authentication token.", "No se encontr\u00f3 un proveedor de autenticaci\u00f3n que soporte el token de autenticaci\u00f3n.", "security", "es");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "No hay ninguna sesi\u00f3n disponible, ha expirado o las cookies no est\u00e1n habilitados.", "security", "es");
    Translator.add("No token could be found.", "No se encontr\u00f3 ning\u00fan token.", "security", "es");
    Translator.add("Username could not be found.", "No se encontr\u00f3 el nombre de usuario.", "security", "es");
    Translator.add("Account has expired.", "La cuenta ha expirado.", "security", "es");
    Translator.add("Credentials have expired.", "Las credenciales han expirado.", "security", "es");
    Translator.add("Account is disabled.", "La cuenta est\u00e1 deshabilitada.", "security", "es");
    Translator.add("Account is locked.", "La cuenta est\u00e1 bloqueada.", "security", "es");
})(Translator);

(function (Translator) {
    // fa
    Translator.add("An authentication exception occurred.", "\u062e\u0637\u0627\u06cc\u06cc \u0647\u0646\u06af\u0627\u0645 \u062a\u0639\u06cc\u06cc\u0646 \u0627\u0639\u062a\u0628\u0627\u0631 \u0627\u062a\u0641\u0627\u0642 \u0627\u0641\u062a\u0627\u062f.", "security", "fa");
    Translator.add("Authentication credentials could not be found.", "\u0634\u0631\u0627\u06cc\u0637 \u062a\u0639\u06cc\u06cc\u0646 \u0627\u0639\u062a\u0628\u0627\u0631 \u067e\u06cc\u062f\u0627 \u0646\u0634\u062f.", "security", "fa");
    Translator.add("Authentication request could not be processed due to a system problem.", "\u062f\u0631\u062e\u0648\u0627\u0633\u062a \u062a\u0639\u06cc\u06cc\u0646 \u0627\u0639\u062a\u0628\u0627\u0631 \u0628\u0647 \u062f\u0644\u06cc\u0644 \u0645\u0634\u06a9\u0644 \u0633\u06cc\u0633\u062a\u0645 \u0642\u0627\u0628\u0644 \u0628\u0631\u0631\u0633\u06cc \u0646\u06cc\u0633\u062a.", "security", "fa");
    Translator.add("Invalid credentials.", "\u0634\u0631\u0627\u06cc\u0637 \u0646\u0627\u0645\u0639\u062a\u0628\u0631.", "security", "fa");
    Translator.add("Cookie has already been used by someone else.", "\u06a9\u0648\u06a9\u06cc \u0642\u0628\u0644\u0627 \u0628\u0631\u0627\u06cc \u0634\u062e\u0635 \u062f\u06cc\u06af\u0631\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u0627\u0633\u062a.", "security", "fa");
    Translator.add("Not privileged to request the resource.", "\u062f\u0633\u062a\u0631\u0633\u06cc \u0644\u0627\u0632\u0645 \u0628\u0631\u0627\u06cc \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0627\u06cc\u0646 \u0645\u0646\u0628\u0639 \u0631\u0627 \u0646\u062f\u0627\u0631\u06cc\u062f.", "security", "fa");
    Translator.add("Invalid CSRF token.", "\u062a\u0648\u06a9\u0646 CSRF \u0645\u0639\u062a\u0628\u0631 \u0646\u06cc\u0633\u062a.", "security", "fa");
    Translator.add("Digest nonce has expired.", "Digest nonce \u0645\u0646\u0642\u0636\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a.", "security", "fa");
    Translator.add("No authentication provider found to support the authentication token.", "\u0647\u06cc\u0686 \u0627\u0631\u0627\u06cc\u0647 \u06a9\u0646\u0646\u062f\u0647 \u062a\u0639\u06cc\u06cc\u0646 \u0627\u0639\u062a\u0628\u0627\u0631\u06cc \u0628\u0631\u0627\u06cc \u0633\u0627\u067e\u0648\u0631\u062a \u062a\u0648\u06a9\u0646 \u062a\u0639\u06cc\u06cc\u0646 \u0627\u0639\u062a\u0628\u0627\u0631 \u067e\u06cc\u062f\u0627 \u0646\u0634\u062f.", "security", "fa");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "\u062c\u0644\u0633\u0647\u200c\u0627\u06cc \u062f\u0631 \u062f\u0633\u062a\u0631\u0633 \u0646\u06cc\u0633\u062a. \u0627\u06cc\u0646 \u0645\u06cc\u062a\u0648\u0627\u0646\u062f \u06cc\u0627 \u0628\u0647 \u062f\u0644\u06cc\u0644 \u067e\u0627\u06cc\u0627\u0646 \u06cc\u0627\u0641\u062a\u0646 \u0632\u0645\u0627\u0646 \u0628\u0627\u0634\u062f \u06cc\u0627 \u0627\u06cc\u0646\u06a9\u0647 \u06a9\u0648\u06a9\u06cc \u0647\u0627 \u0641\u0639\u0627\u0644 \u0646\u06cc\u0633\u062a\u0646\u062f.", "security", "fa");
    Translator.add("No token could be found.", "\u0647\u06cc\u0686 \u062a\u0648\u06a9\u0646\u06cc \u067e\u06cc\u062f\u0627 \u0646\u0634\u062f.", "security", "fa");
    Translator.add("Username could not be found.", "\u0646\u0627\u0645 \u200c\u06a9\u0627\u0631\u0628\u0631\u06cc \u067e\u06cc\u062f\u0627 \u0646\u0634\u062f.", "security", "fa");
    Translator.add("Account has expired.", "\u062d\u0633\u0627\u0628 \u06a9\u0627\u0631\u0628\u0631\u06cc \u0645\u0646\u0642\u0636\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a.", "security", "fa");
    Translator.add("Credentials have expired.", "\u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u062a\u0639\u06cc\u06cc\u0646 \u0627\u0639\u062a\u0628\u0627\u0631 \u0645\u0646\u0642\u0636\u06cc \u0634\u062f\u0647\u200c\u0627\u0646\u062f.", "security", "fa");
    Translator.add("Account is disabled.", "\u062d\u0633\u0627\u0628 \u06a9\u0627\u0631\u0628\u0631\u06cc \u063a\u06cc\u0631\u0641\u0639\u0627\u0644 \u0627\u0633\u062a.", "security", "fa");
    Translator.add("Account is locked.", "\u062d\u0633\u0627\u0628 \u06a9\u0627\u0631\u0628\u0631\u06cc \u0642\u0641\u0644 \u0634\u062f\u0647 \u0627\u0633\u062a.", "security", "fa");
})(Translator);

(function (Translator) {
    // fr
    Translator.add("An authentication exception occurred.", "Une exception d'authentification s'est produite.", "security", "fr");
    Translator.add("Authentication credentials could not be found.", "Les identifiants d'authentification n'ont pas pu \u00eatre trouv\u00e9s.", "security", "fr");
    Translator.add("Authentication request could not be processed due to a system problem.", "La requ\u00eate d'authentification n'a pas pu \u00eatre execut\u00e9e \u00e0 cause d'un probl\u00e8me syst\u00e8me.", "security", "fr");
    Translator.add("Invalid credentials.", "Identifiants invalides.", "security", "fr");
    Translator.add("Cookie has already been used by someone else.", "Le cookie a d\u00e9j\u00e0 \u00e9t\u00e9 utilis\u00e9 par quelqu'un d'autre.", "security", "fr");
    Translator.add("Not privileged to request the resource.", "Privil\u00e8ges insuffisants pour acc\u00e9der \u00e0 la ressource.", "security", "fr");
    Translator.add("Invalid CSRF token.", "Jeton CSRF invalide.", "security", "fr");
    Translator.add("Digest nonce has expired.", "Le digest nonce a expir\u00e9.", "security", "fr");
    Translator.add("No authentication provider found to support the authentication token.", "Aucun fournisseur d'authentification n'a \u00e9t\u00e9 trouv\u00e9 pour supporter le jeton d'authentification.", "security", "fr");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Aucune session disponible, celle-ci a expir\u00e9 ou les cookies ne sont pas activ\u00e9s.", "security", "fr");
    Translator.add("No token could be found.", "Aucun jeton n'a pu \u00eatre trouv\u00e9.", "security", "fr");
    Translator.add("Username could not be found.", "Le nom d'utilisateur n'a pas pu \u00eatre trouv\u00e9.", "security", "fr");
    Translator.add("Account has expired.", "Le compte a expir\u00e9.", "security", "fr");
    Translator.add("Credentials have expired.", "Les identifiants ont expir\u00e9.", "security", "fr");
    Translator.add("Account is disabled.", "Le compte est d\u00e9sactiv\u00e9.", "security", "fr");
    Translator.add("Account is locked.", "Le compte est bloqu\u00e9.", "security", "fr");
})(Translator);

(function (Translator) {
    // gl
    Translator.add("An authentication exception occurred.", "Ocorreu un erro de autenticaci\u00f3n.", "security", "gl");
    Translator.add("Authentication credentials could not be found.", "Non se atoparon as credenciais de autenticaci\u00f3n.", "security", "gl");
    Translator.add("Authentication request could not be processed due to a system problem.", "A solicitude de autenticaci\u00f3n no puido ser procesada debido a un problema do sistema.", "security", "gl");
    Translator.add("Invalid credentials.", "Credenciais non v\u00e1lidas.", "security", "gl");
    Translator.add("Cookie has already been used by someone else.", "A cookie xa foi empregado por outro usuario.", "security", "gl");
    Translator.add("Not privileged to request the resource.", "Non ten privilexios para solicitar o recurso.", "security", "gl");
    Translator.add("Invalid CSRF token.", "Token CSRF non v\u00e1lido.", "security", "gl");
    Translator.add("Digest nonce has expired.", "O vector de inicializaci\u00f3n (digest nonce) expirou.", "security", "gl");
    Translator.add("No authentication provider found to support the authentication token.", "Non se atopou un provedor de autenticaci\u00f3n que soporte o token de autenticaci\u00f3n.", "security", "gl");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Non hai ningunha sesi\u00f3n dispo\u00f1ible, expirou ou as cookies non est\u00e1n habilitadas.", "security", "gl");
    Translator.add("No token could be found.", "Non se atopou ning\u00fan token.", "security", "gl");
    Translator.add("Username could not be found.", "Non se atopou o nome de usuario.", "security", "gl");
    Translator.add("Account has expired.", "A conta expirou.", "security", "gl");
    Translator.add("Credentials have expired.", "As credenciais expiraron.", "security", "gl");
    Translator.add("Account is disabled.", "A conta est\u00e1 deshabilitada.", "security", "gl");
    Translator.add("Account is locked.", "A conta est\u00e1 bloqueada.", "security", "gl");
})(Translator);

(function (Translator) {
    // he
    Translator.add("An authentication exception occurred.", "An authentication exception occurred.", "security", "he");
    Translator.add("Authentication credentials could not be found.", "Authentication credentials could not be found.", "security", "he");
    Translator.add("Authentication request could not be processed due to a system problem.", "Authentication request could not be processed due to a system problem.", "security", "he");
    Translator.add("Invalid credentials.", "Invalid credentials.", "security", "he");
    Translator.add("Cookie has already been used by someone else.", "Cookie has already been used by someone else.", "security", "he");
    Translator.add("Not privileged to request the resource.", "Not privileged to request the resource.", "security", "he");
    Translator.add("Invalid CSRF token.", "Invalid CSRF token.", "security", "he");
    Translator.add("Digest nonce has expired.", "Digest nonce has expired.", "security", "he");
    Translator.add("No authentication provider found to support the authentication token.", "No authentication provider found to support the authentication token.", "security", "he");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "No session available, it either timed out or cookies are not enabled.", "security", "he");
    Translator.add("No token could be found.", "No token could be found.", "security", "he");
    Translator.add("Username could not be found.", "Username could not be found.", "security", "he");
    Translator.add("Account has expired.", "Account has expired.", "security", "he");
    Translator.add("Credentials have expired.", "Credentials have expired.", "security", "he");
    Translator.add("Account is disabled.", "Account is disabled.", "security", "he");
    Translator.add("Account is locked.", "Account is locked.", "security", "he");
})(Translator);

(function (Translator) {
    // hr
    Translator.add("An authentication exception occurred.", "Dogodila se autentifikacijske iznimka.", "security", "hr");
    Translator.add("Authentication credentials could not be found.", "Autentifikacijski podaci nisu prona\u0111eni.", "security", "hr");
    Translator.add("Authentication request could not be processed due to a system problem.", "Autentifikacijski zahtjev nije mogu\u0107e provesti uslijed sistemskog problema.", "security", "hr");
    Translator.add("Invalid credentials.", "Neispravni akreditacijski podaci.", "security", "hr");
    Translator.add("Cookie has already been used by someone else.", "Cookie je ve\u0107 netko drugi iskoristio.", "security", "hr");
    Translator.add("Not privileged to request the resource.", "Nemate privilegije zahtijevati resurs.", "security", "hr");
    Translator.add("Invalid CSRF token.", "Neispravan CSRF token.", "security", "hr");
    Translator.add("Digest nonce has expired.", "Digest nonce je isteko.", "security", "hr");
    Translator.add("No authentication provider found to support the authentication token.", "Nije prona\u0111en autentifikacijski provider koji bi podr\u017eao autentifikacijski token.", "security", "hr");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Sesija nije dostupna, ili je istekla ili cookies nisu omogu\u0107eni.", "security", "hr");
    Translator.add("No token could be found.", "Token nije prona\u0111en.", "security", "hr");
    Translator.add("Username could not be found.", "Korisni\u010dko ime nije prona\u0111eno.", "security", "hr");
    Translator.add("Account has expired.", "Ra\u010dun je isteko.", "security", "hr");
    Translator.add("Credentials have expired.", "Akreditacijski podaci su istekli.", "security", "hr");
    Translator.add("Account is disabled.", "Ra\u010dun je onemogu\u0107en.", "security", "hr");
    Translator.add("Account is locked.", "Ra\u010dun je zaklju\u010dan.", "security", "hr");
})(Translator);

(function (Translator) {
    // hu
    Translator.add("An authentication exception occurred.", "Hiteles\u00edt\u00e9si hiba l\u00e9pett fel.", "security", "hu");
    Translator.add("Authentication credentials could not be found.", "Nem tal\u00e1lhat\u00f3k hiteles\u00edt\u00e9si inform\u00e1ci\u00f3k.", "security", "hu");
    Translator.add("Authentication request could not be processed due to a system problem.", "A hiteles\u00edt\u00e9si k\u00e9r\u00e9st rendszerhiba miatt nem lehet feldolgozni.", "security", "hu");
    Translator.add("Invalid credentials.", "\u00c9rv\u00e9nytelen hiteles\u00edt\u00e9si inform\u00e1ci\u00f3k.", "security", "hu");
    Translator.add("Cookie has already been used by someone else.", "Ezt a s\u00fctit valaki m\u00e1s m\u00e1r felhaszn\u00e1lta.", "security", "hu");
    Translator.add("Not privileged to request the resource.", "Nem rendelkezik az er\u0151forr\u00e1s el\u00e9r\u00e9s\u00e9hez sz\u00fcks\u00e9ges jogosults\u00e1ggal.", "security", "hu");
    Translator.add("Invalid CSRF token.", "\u00c9rv\u00e9nytelen CSRF token.", "security", "hu");
    Translator.add("Digest nonce has expired.", "A kivonat b\u00e9lyege (nonce) lej\u00e1rt.", "security", "hu");
    Translator.add("No authentication provider found to support the authentication token.", "Nem tal\u00e1lhat\u00f3 a hiteles\u00edt\u00e9si tokent t\u00e1mogat\u00f3 hiteles\u00edt\u00e9si szolg\u00e1ltat\u00e1s.", "security", "hu");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Munkamenet nem \u00e1ll rendelkez\u00e9sre, t\u00fall\u00e9pte az id\u0151keretet vagy a s\u00fctik le vannak tiltva.", "security", "hu");
    Translator.add("No token could be found.", "Nem tal\u00e1lhat\u00f3 token.", "security", "hu");
    Translator.add("Username could not be found.", "A felhaszn\u00e1l\u00f3n\u00e9v nem tal\u00e1lhat\u00f3.", "security", "hu");
    Translator.add("Account has expired.", "A fi\u00f3k lej\u00e1rt.", "security", "hu");
    Translator.add("Credentials have expired.", "A hiteles\u00edt\u00e9si inform\u00e1ci\u00f3k lej\u00e1rtak.", "security", "hu");
    Translator.add("Account is disabled.", "Felf\u00fcggesztett fi\u00f3k.", "security", "hu");
    Translator.add("Account is locked.", "Z\u00e1rolt fi\u00f3k.", "security", "hu");
})(Translator);

(function (Translator) {
    // id
    Translator.add("An authentication exception occurred.", "Terjadi sebuah pengecualian otentikasi.", "security", "id");
    Translator.add("Authentication credentials could not be found.", "Kredensial otentikasi tidak bisa ditemukan.", "security", "id");
    Translator.add("Authentication request could not be processed due to a system problem.", "Permintaan otentikasi tidak bisa diproses karena masalah sistem.", "security", "id");
    Translator.add("Invalid credentials.", "Kredensial salah.", "security", "id");
    Translator.add("Cookie has already been used by someone else.", "Cookie sudah digunakan oleh orang lain.", "security", "id");
    Translator.add("Not privileged to request the resource.", "Tidak berhak untuk meminta sumber daya.", "security", "id");
    Translator.add("Invalid CSRF token.", "Token CSRF salah.", "security", "id");
    Translator.add("Digest nonce has expired.", "Digest nonce telah berakhir.", "security", "id");
    Translator.add("No authentication provider found to support the authentication token.", "Tidak ditemukan penyedia otentikasi untuk mendukung token otentikasi.", "security", "id");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Tidak ada sesi yang tersedia, mungkin waktu sudah habis atau cookie tidak diaktifkan", "security", "id");
    Translator.add("No token could be found.", "Tidak ada token yang bisa ditemukan.", "security", "id");
    Translator.add("Username could not be found.", "Username tidak bisa ditemukan.", "security", "id");
    Translator.add("Account has expired.", "Akun telah berakhir.", "security", "id");
    Translator.add("Credentials have expired.", "Kredensial telah berakhir.", "security", "id");
    Translator.add("Account is disabled.", "Akun dinonaktifkan.", "security", "id");
    Translator.add("Account is locked.", "Akun terkunci.", "security", "id");
})(Translator);

(function (Translator) {
    // it
    Translator.add("An authentication exception occurred.", "Si \u00e8 verificato un errore di autenticazione.", "security", "it");
    Translator.add("Authentication credentials could not be found.", "Impossibile trovare le credenziali di autenticazione.", "security", "it");
    Translator.add("Authentication request could not be processed due to a system problem.", "La richiesta di autenticazione non pu\u00f2 essere processata a causa di un errore di sistema.", "security", "it");
    Translator.add("Invalid credentials.", "Credenziali non valide.", "security", "it");
    Translator.add("Cookie has already been used by someone else.", "Il cookie \u00e8 gi\u00e0 stato usato da qualcun altro.", "security", "it");
    Translator.add("Not privileged to request the resource.", "Non hai i privilegi per richiedere questa risorsa.", "security", "it");
    Translator.add("Invalid CSRF token.", "CSRF token non valido.", "security", "it");
    Translator.add("Digest nonce has expired.", "Il numero di autenticazione \u00e8 scaduto.", "security", "it");
    Translator.add("No authentication provider found to support the authentication token.", "Non \u00e8 stato trovato un valido fornitore di autenticazione per supportare il token.", "security", "it");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Nessuna sessione disponibile, pu\u00f2 essere scaduta o i cookie non sono abilitati.", "security", "it");
    Translator.add("No token could be found.", "Nessun token trovato.", "security", "it");
    Translator.add("Username could not be found.", "Username non trovato.", "security", "it");
    Translator.add("Account has expired.", "Account scaduto.", "security", "it");
    Translator.add("Credentials have expired.", "Credenziali scadute.", "security", "it");
    Translator.add("Account is disabled.", "L'account \u00e8 disabilitato.", "security", "it");
    Translator.add("Account is locked.", "L'account \u00e8 bloccato.", "security", "it");
})(Translator);

(function (Translator) {
    // ja
    Translator.add("An authentication exception occurred.", "\u8a8d\u8a3c\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002", "security", "ja");
    Translator.add("Authentication credentials could not be found.", "\u8a8d\u8a3c\u8cc7\u683c\u304c\u3042\u308a\u307e\u305b\u3093\u3002", "security", "ja");
    Translator.add("Authentication request could not be processed due to a system problem.", "\u30b7\u30b9\u30c6\u30e0\u306e\u554f\u984c\u306b\u3088\u308a\u8a8d\u8a3c\u8981\u6c42\u3092\u51e6\u7406\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002", "security", "ja");
    Translator.add("Invalid credentials.", "\u8cc7\u683c\u304c\u7121\u52b9\u3067\u3059\u3002", "security", "ja");
    Translator.add("Cookie has already been used by someone else.", "Cookie \u304c\u5225\u306e\u30e6\u30fc\u30b6\u30fc\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002", "security", "ja");
    Translator.add("Not privileged to request the resource.", "\u30ea\u30bd\u30fc\u30b9\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002", "security", "ja");
    Translator.add("Invalid CSRF token.", "CSRF \u30c8\u30fc\u30af\u30f3\u304c\u7121\u52b9\u3067\u3059\u3002", "security", "ja");
    Translator.add("Digest nonce has expired.", "Digest \u306e nonce \u5024\u304c\u671f\u9650\u5207\u308c\u3067\u3059\u3002", "security", "ja");
    Translator.add("No authentication provider found to support the authentication token.", "\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002", "security", "ja");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "\u5229\u7528\u53ef\u80fd\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u305f\u304b\u3001Cookie \u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002", "security", "ja");
    Translator.add("No token could be found.", "\u30c8\u30fc\u30af\u30f3\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002", "security", "ja");
    Translator.add("Username could not be found.", "\u30e6\u30fc\u30b6\u30fc\u540d\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002", "security", "ja");
    Translator.add("Account has expired.", "\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u6709\u52b9\u671f\u9650\u5207\u308c\u3067\u3059\u3002", "security", "ja");
    Translator.add("Credentials have expired.", "\u8cc7\u683c\u304c\u6709\u52b9\u671f\u9650\u5207\u308c\u3067\u3059\u3002", "security", "ja");
    Translator.add("Account is disabled.", "\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u7121\u52b9\u3067\u3059\u3002", "security", "ja");
    Translator.add("Account is locked.", "\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u30ed\u30c3\u30af\u3055\u308c\u3066\u3044\u307e\u3059\u3002", "security", "ja");
})(Translator);

(function (Translator) {
    // lb
    Translator.add("An authentication exception occurred.", "Bei der Authentifikatioun ass e Feeler opgetrueden.", "security", "lb");
    Translator.add("Authentication credentials could not be found.", "Et konnte keng Zouganksdate fonnt ginn.", "security", "lb");
    Translator.add("Authentication request could not be processed due to a system problem.", "D'Ufro fir eng Authentifikatioun konnt w\u00e9inst engem Problem vum System net beaarbecht ginn.", "security", "lb");
    Translator.add("Invalid credentials.", "Ong\u00eblteg Zouganksdaten.", "security", "lb");
    Translator.add("Cookie has already been used by someone else.", "De Cookie gouf scho vun engem anere benotzt.", "security", "lb");
    Translator.add("Not privileged to request the resource.", "Keng Rechter fir d'Ressource unzefroen.", "security", "lb");
    Translator.add("Invalid CSRF token.", "Ong\u00ebltegen CSRF-Token.", "security", "lb");
    Translator.add("Digest nonce has expired.", "Den eemolege Schl\u00ebssel ass ofgelaf.", "security", "lb");
    Translator.add("No authentication provider found to support the authentication token.", "Et gouf keen Authentifiz\u00e9ierungs-Provider fonnt deen den Authentifiz\u00e9ierungs-Token \u00ebnnerst\u00ebtzt.", "security", "lb");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Keng S\u00ebtzung disponibel. Entweder ass se ofgelaf oder Cookies sinn net aktiv\u00e9iert.", "security", "lb");
    Translator.add("No token could be found.", "Et konnt keen Token fonnt ginn.", "security", "lb");
    Translator.add("Username could not be found.", "De Benotzernumm konnt net fonnt ginn.", "security", "lb");
    Translator.add("Account has expired.", "Den Account ass ofgelaf.", "security", "lb");
    Translator.add("Credentials have expired.", "D'Zouganksdate sinn ofgelaf.", "security", "lb");
    Translator.add("Account is disabled.", "De Konto ass deaktiv\u00e9iert.", "security", "lb");
    Translator.add("Account is locked.", "De Konto ass gespaart.", "security", "lb");
})(Translator);

(function (Translator) {
    // lt
    Translator.add("An authentication exception occurred.", "\u012evyko autentifikacijos klaida.", "security", "lt");
    Translator.add("Authentication credentials could not be found.", "Nepavyko rasti autentifikacijos duomne\u0173.", "security", "lt");
    Translator.add("Authentication request could not be processed due to a system problem.", "Autentifikacijos u\u017eklausos nepavyko \u012fvykdyti d\u0117l sistemos klaid\u0173.", "security", "lt");
    Translator.add("Invalid credentials.", "Klaidingi duomenys.", "security", "lt");
    Translator.add("Cookie has already been used by someone else.", "Slapukas buvo panaudotas ka\u017ekam kitam.", "security", "lt");
    Translator.add("Not privileged to request the resource.", "Neturite teisi\u0173 pasiekt\u012f resurs\u0105.", "security", "lt");
    Translator.add("Invalid CSRF token.", "Neteisingas CSRF raktas.", "security", "lt");
    Translator.add("Digest nonce has expired.", "Prieigos kodas yra pasibaig\u0119s.", "security", "lt");
    Translator.add("No authentication provider found to support the authentication token.", "Nerastas autentifikacijos tiek\u0117jas, kuris palaikyt\u0173 autentifikacijos rakt\u0105.", "security", "lt");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Sesija yra nepasiekiama, pasibaig\u0117 galiojimo laikas arba slapukai yra i\u0161jungti.", "security", "lt");
    Translator.add("No token could be found.", "Nepavyko rasti rakto.", "security", "lt");
    Translator.add("Username could not be found.", "Tokio naudotojo vardo nepavyko rasti.", "security", "lt");
    Translator.add("Account has expired.", "Paskyros galiojimo laikas baig\u0117si.", "security", "lt");
    Translator.add("Credentials have expired.", "Autentifikacijos duomen\u0173 galiojimo laikas baig\u0117si.", "security", "lt");
    Translator.add("Account is disabled.", "Paskyra yra i\u0161jungta.", "security", "lt");
    Translator.add("Account is locked.", "Paskyra yra u\u017eblokuota.", "security", "lt");
})(Translator);

(function (Translator) {
    // nl
    Translator.add("An authentication exception occurred.", "Er heeft zich een authenticatieprobleem voorgedaan.", "security", "nl");
    Translator.add("Authentication credentials could not be found.", "Authenticatiegegevens konden niet worden gevonden.", "security", "nl");
    Translator.add("Authentication request could not be processed due to a system problem.", "Authenticatieaanvraag kon niet worden verwerkt door een technisch probleem.", "security", "nl");
    Translator.add("Invalid credentials.", "Ongeldige inloggegevens.", "security", "nl");
    Translator.add("Cookie has already been used by someone else.", "Cookie is al door een ander persoon gebruikt.", "security", "nl");
    Translator.add("Not privileged to request the resource.", "Onvoldoende rechten om de aanvraag te verwerken.", "security", "nl");
    Translator.add("Invalid CSRF token.", "CSRF-code is ongeldig.", "security", "nl");
    Translator.add("Digest nonce has expired.", "Serverauthenticatiesleutel (digest nonce) is verlopen.", "security", "nl");
    Translator.add("No authentication provider found to support the authentication token.", "Geen authenticatieprovider gevonden die de authenticatietoken ondersteunt.", "security", "nl");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Geen sessie beschikbaar, mogelijk is deze verlopen of cookies zijn uitgeschakeld.", "security", "nl");
    Translator.add("No token could be found.", "Er kon geen authenticatietoken worden gevonden.", "security", "nl");
    Translator.add("Username could not be found.", "Gebruikersnaam kon niet worden gevonden.", "security", "nl");
    Translator.add("Account has expired.", "Account is verlopen.", "security", "nl");
    Translator.add("Credentials have expired.", "Authenticatiegegevens zijn verlopen.", "security", "nl");
    Translator.add("Account is disabled.", "Account is gedeactiveerd.", "security", "nl");
    Translator.add("Account is locked.", "Account is geblokkeerd.", "security", "nl");
})(Translator);

(function (Translator) {
    // no
    Translator.add("An authentication exception occurred.", "En autentiseringsfeil har skjedd.", "security", "no");
    Translator.add("Authentication credentials could not be found.", "P\u00e5loggingsinformasjonen kunne ikke bli funnet.", "security", "no");
    Translator.add("Authentication request could not be processed due to a system problem.", "Autentiserings foresp\u00f8rselen kunne ikke bli prosessert grunnet en system feil.", "security", "no");
    Translator.add("Invalid credentials.", "Ugyldig p\u00e5loggingsinformasjonen.", "security", "no");
    Translator.add("Cookie has already been used by someone else.", "Cookie har allerede blitt brukt av noen andre.", "security", "no");
    Translator.add("Not privileged to request the resource.", "Ingen tilgang til \u00e5 be om gitt ressurs.", "security", "no");
    Translator.add("Invalid CSRF token.", "Ugyldig CSRF token.", "security", "no");
    Translator.add("Digest nonce has expired.", "Digest nonce er utl\u00f8pt.", "security", "no");
    Translator.add("No authentication provider found to support the authentication token.", "Ingen autentiserings tilbyder funnet som st\u00f8tter gitt autentiserings token.", "security", "no");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Ingen sesjon tilgjengelig, sesjonen er enten utl\u00f8pt eller cookies ikke skrudd p\u00e5.", "security", "no");
    Translator.add("No token could be found.", "Ingen token kunne bli funnet.", "security", "no");
    Translator.add("Username could not be found.", "Brukernavn kunne ikke bli funnet.", "security", "no");
    Translator.add("Account has expired.", "Brukerkonto har utg\u00e5tt.", "security", "no");
    Translator.add("Credentials have expired.", "P\u00e5loggingsinformasjon har utl\u00f8pt.", "security", "no");
    Translator.add("Account is disabled.", "Brukerkonto er deaktivert.", "security", "no");
    Translator.add("Account is locked.", "Brukerkonto er sperret.", "security", "no");
})(Translator);

(function (Translator) {
    // pl
    Translator.add("An authentication exception occurred.", "Wyst\u0105pi\u0142 b\u0142\u0105d uwierzytelniania.", "security", "pl");
    Translator.add("Authentication credentials could not be found.", "Dane uwierzytelniania nie zosta\u0142y znalezione.", "security", "pl");
    Translator.add("Authentication request could not be processed due to a system problem.", "\u017b\u0105danie uwierzytelniania nie mog\u0142o zosta\u0107 pomy\u015blnie zako\u0144czone z powodu problemu z systemem.", "security", "pl");
    Translator.add("Invalid credentials.", "Nieprawid\u0142owe dane.", "security", "pl");
    Translator.add("Cookie has already been used by someone else.", "To ciasteczko jest u\u017cywane przez kogo\u015b innego.", "security", "pl");
    Translator.add("Not privileged to request the resource.", "Brak uprawnie\u0144 dla \u017c\u0105dania wskazanego zasobu.", "security", "pl");
    Translator.add("Invalid CSRF token.", "Nieprawid\u0142owy token CSRF.", "security", "pl");
    Translator.add("Digest nonce has expired.", "Kod dost\u0119pu wygas\u0142.", "security", "pl");
    Translator.add("No authentication provider found to support the authentication token.", "Nie znaleziono mechanizmu uwierzytelniania zdolnego do obs\u0142ugi przes\u0142anego tokenu.", "security", "pl");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Brak danych sesji, sesja wygas\u0142a lub ciasteczka nie s\u0105 w\u0142\u0105czone.", "security", "pl");
    Translator.add("No token could be found.", "Nie znaleziono tokenu.", "security", "pl");
    Translator.add("Username could not be found.", "U\u017cytkownik o podanej nazwie nie istnieje.", "security", "pl");
    Translator.add("Account has expired.", "Konto wygas\u0142o.", "security", "pl");
    Translator.add("Credentials have expired.", "Dane uwierzytelniania wygas\u0142y.", "security", "pl");
    Translator.add("Account is disabled.", "Konto jest wy\u0142\u0105czone.", "security", "pl");
    Translator.add("Account is locked.", "Konto jest zablokowane.", "security", "pl");
})(Translator);

(function (Translator) {
    // pt_BR
    Translator.add("An authentication exception occurred.", "Uma exce\u00e7\u00e3o ocorreu durante a autentica\u00e7\u00e3o.", "security", "pt_BR");
    Translator.add("Authentication credentials could not be found.", "As credenciais de autentica\u00e7\u00e3o n\u00e3o foram encontradas.", "security", "pt_BR");
    Translator.add("Authentication request could not be processed due to a system problem.", "A autentica\u00e7\u00e3o n\u00e3o p\u00f4de ser conclu\u00edda devido a um problema no sistema.", "security", "pt_BR");
    Translator.add("Invalid credentials.", "Credenciais inv\u00e1lidas.", "security", "pt_BR");
    Translator.add("Cookie has already been used by someone else.", "Este cookie j\u00e1 est\u00e1 em uso.", "security", "pt_BR");
    Translator.add("Not privileged to request the resource.", "N\u00e3o possui privil\u00e9gios o bastante para requisitar este recurso.", "security", "pt_BR");
    Translator.add("Invalid CSRF token.", "Token CSRF inv\u00e1lido.", "security", "pt_BR");
    Translator.add("Digest nonce has expired.", "Digest nonce expirado.", "security", "pt_BR");
    Translator.add("No authentication provider found to support the authentication token.", "Nenhum provedor de autentica\u00e7\u00e3o encontrado para suportar o token de autentica\u00e7\u00e3o.", "security", "pt_BR");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Nenhuma sess\u00e3o dispon\u00edvel, ela expirou ou os cookies est\u00e3o desativados.", "security", "pt_BR");
    Translator.add("No token could be found.", "Nenhum token foi encontrado.", "security", "pt_BR");
    Translator.add("Username could not be found.", "Nome de usu\u00e1rio n\u00e3o encontrado.", "security", "pt_BR");
    Translator.add("Account has expired.", "A conta est\u00e1 expirada.", "security", "pt_BR");
    Translator.add("Credentials have expired.", "As credenciais est\u00e3o expiradas.", "security", "pt_BR");
    Translator.add("Account is disabled.", "Conta desativada.", "security", "pt_BR");
    Translator.add("Account is locked.", "A conta est\u00e1 travada.", "security", "pt_BR");
})(Translator);

(function (Translator) {
    // pt_PT
    Translator.add("An authentication exception occurred.", "Ocorreu uma excep\u00e7\u00e3o durante a autentica\u00e7\u00e3o.", "security", "pt_PT");
    Translator.add("Authentication credentials could not be found.", "As credenciais de autentica\u00e7\u00e3o n\u00e3o foram encontradas.", "security", "pt_PT");
    Translator.add("Authentication request could not be processed due to a system problem.", "O pedido de autentica\u00e7\u00e3o n\u00e3o foi conclu\u00eddo devido a um problema no sistema.", "security", "pt_PT");
    Translator.add("Invalid credentials.", "Credenciais inv\u00e1lidas.", "security", "pt_PT");
    Translator.add("Cookie has already been used by someone else.", "Este cookie j\u00e1 est\u00e1 em uso.", "security", "pt_PT");
    Translator.add("Not privileged to request the resource.", "N\u00e3o possui privil\u00e9gios para aceder a este recurso.", "security", "pt_PT");
    Translator.add("Invalid CSRF token.", "Token CSRF inv\u00e1lido.", "security", "pt_PT");
    Translator.add("Digest nonce has expired.", "Digest nonce expirado.", "security", "pt_PT");
    Translator.add("No authentication provider found to support the authentication token.", "Nenhum fornecedor de autentica\u00e7\u00e3o encontrado para suportar o token de autentica\u00e7\u00e3o.", "security", "pt_PT");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "N\u00e3o existe sess\u00e3o dispon\u00edvel, esta expirou ou os cookies est\u00e3o desativados.", "security", "pt_PT");
    Translator.add("No token could be found.", "O token n\u00e3o foi encontrado.", "security", "pt_PT");
    Translator.add("Username could not be found.", "Nome de utilizador n\u00e3o encontrado.", "security", "pt_PT");
    Translator.add("Account has expired.", "A conta expirou.", "security", "pt_PT");
    Translator.add("Credentials have expired.", "As credenciais expiraram.", "security", "pt_PT");
    Translator.add("Account is disabled.", "Conta desativada.", "security", "pt_PT");
    Translator.add("Account is locked.", "A conta est\u00e1 trancada.", "security", "pt_PT");
})(Translator);

(function (Translator) {
    // ro
    Translator.add("An authentication exception occurred.", "A ap\u0103rut o eroare de autentificare.", "security", "ro");
    Translator.add("Authentication credentials could not be found.", "Informa\u021biile de autentificare nu au fost g\u0103site.", "security", "ro");
    Translator.add("Authentication request could not be processed due to a system problem.", "Sistemul nu a putut procesa cererea de autentificare din cauza unei erori.", "security", "ro");
    Translator.add("Invalid credentials.", "Date de autentificare invalide.", "security", "ro");
    Translator.add("Cookie has already been used by someone else.", "Cookieul este folosit deja de altcineva.", "security", "ro");
    Translator.add("Not privileged to request the resource.", "Permisiuni insuficiente pentru resursa cerut\u0103.", "security", "ro");
    Translator.add("Invalid CSRF token.", "Tokenul CSRF este invalid.", "security", "ro");
    Translator.add("Digest nonce has expired.", "Tokenul temporar a expirat.", "security", "ro");
    Translator.add("No authentication provider found to support the authentication token.", "Nu a fost g\u0103sit nici un agent de autentificare pentru tokenul specificat.", "security", "ro");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Sesiunea nu mai este disponibil\u0103, a expirat sau suportul pentru cookieuri nu este activat.", "security", "ro");
    Translator.add("No token could be found.", "Tokenul nu a putut fi g\u0103sit.", "security", "ro");
    Translator.add("Username could not be found.", "Numele de utilizator nu a fost g\u0103sit.", "security", "ro");
    Translator.add("Account has expired.", "Contul a expirat.", "security", "ro");
    Translator.add("Credentials have expired.", "Datele de autentificare au expirat.", "security", "ro");
    Translator.add("Account is disabled.", "Contul este dezactivat.", "security", "ro");
    Translator.add("Account is locked.", "Contul este blocat.", "security", "ro");
})(Translator);

(function (Translator) {
    // ru
    Translator.add("An authentication exception occurred.", "\u041e\u0448\u0438\u0431\u043a\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.", "security", "ru");
    Translator.add("Authentication credentials could not be found.", "\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b.", "security", "ru");
    Translator.add("Authentication request could not be processed due to a system problem.", "\u0417\u0430\u043f\u0440\u043e\u0441 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d \u0432 \u0441\u0432\u044f\u0437\u0438 \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435.", "security", "ru");
    Translator.add("Invalid credentials.", "\u041d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.", "security", "ru");
    Translator.add("Cookie has already been used by someone else.", "Cookie \u0443\u0436\u0435 \u0431\u044b\u043b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d \u043a\u0435\u043c-\u0442\u043e \u0434\u0440\u0443\u0433\u0438\u043c.", "security", "ru");
    Translator.add("Not privileged to request the resource.", "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u043f\u0440\u0430\u0432\u0430 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441 \u044d\u0442\u043e\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u0430.", "security", "ru");
    Translator.add("Invalid CSRF token.", "\u041d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0442\u043e\u043a\u0435\u043d CSRF.", "security", "ru");
    Translator.add("Digest nonce has expired.", "\u0412\u0440\u0435\u043c\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043e\u0434\u043d\u043e\u0440\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u044e\u0447\u0430 \u0434\u0430\u0439\u0434\u0436\u0435\u0441\u0442\u0430 \u0438\u0441\u0442\u0435\u043a\u043b\u043e.", "security", "ru");
    Translator.add("No authentication provider found to support the authentication token.", "\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438, \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0439 \u0442\u043e\u043a\u0435\u043d \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.", "security", "ru");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "\u0421\u0435\u0441\u0441\u0438\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430, \u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u0442\u0435\u043a\u043b\u043e, \u043b\u0438\u0431\u043e cookies \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b.", "security", "ru");
    Translator.add("No token could be found.", "\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d.", "security", "ru");
    Translator.add("Username could not be found.", "\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e.", "security", "ru");
    Translator.add("Account has expired.", "\u0412\u0440\u0435\u043c\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0443\u0447\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0441\u0442\u0435\u043a\u043b\u043e.", "security", "ru");
    Translator.add("Credentials have expired.", "\u0412\u0440\u0435\u043c\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0441\u0442\u0435\u043a\u043b\u043e.", "security", "ru");
    Translator.add("Account is disabled.", "\u0423\u0447\u0435\u0442\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0430.", "security", "ru");
    Translator.add("Account is locked.", "\u0423\u0447\u0435\u0442\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u0430.", "security", "ru");
})(Translator);

(function (Translator) {
    // sk
    Translator.add("An authentication exception occurred.", "Pri overovan\u00ed do\u0161lo k chybe.", "security", "sk");
    Translator.add("Authentication credentials could not be found.", "Overovacie \u00fadaje neboli n\u00e1jden\u00e9.", "security", "sk");
    Translator.add("Authentication request could not be processed due to a system problem.", "Po\u017eiadavok na overenie nemohol by\u0165 spracovan\u00fd kv\u00f4li syst\u00e9movej chybe.", "security", "sk");
    Translator.add("Invalid credentials.", "Neplatn\u00e9 prihlasovacie \u00fadaje.", "security", "sk");
    Translator.add("Cookie has already been used by someone else.", "Cookie u\u017e bolo pou\u017eit\u00e9 niek\u00fdm in\u00fdm.", "security", "sk");
    Translator.add("Not privileged to request the resource.", "Nem\u00e1te opr\u00e1vnenie pristupova\u0165 k prostriedku.", "security", "sk");
    Translator.add("Invalid CSRF token.", "Neplatn\u00fd CSRF token.", "security", "sk");
    Translator.add("Digest nonce has expired.", "Platnos\u0165 inicializa\u010dn\u00e9ho vektoru (digest nonce) skon\u010dila.", "security", "sk");
    Translator.add("No authentication provider found to support the authentication token.", "Poskytovate\u013e pre overovac\u00ed token nebol n\u00e1jden\u00fd.", "security", "sk");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Session nie je k dispoz\u00edci, vypr\u0161ala jej platnos\u0165, alebo s\u00fa zak\u00e1zan\u00e9 cookies.", "security", "sk");
    Translator.add("No token could be found.", "Token nebol n\u00e1jden\u00fd.", "security", "sk");
    Translator.add("Username could not be found.", "Prihlasovacie meno nebolo n\u00e1jden\u00e9.", "security", "sk");
    Translator.add("Account has expired.", "Platnos\u0165 \u00fa\u010dtu skon\u010dila.", "security", "sk");
    Translator.add("Credentials have expired.", "Platnos\u0165 prihlasovac\u00edch \u00fadajov skon\u010dila.", "security", "sk");
    Translator.add("Account is disabled.", "\u00da\u010det je zak\u00e1zan\u00fd.", "security", "sk");
    Translator.add("Account is locked.", "\u00da\u010det je zablokovan\u00fd.", "security", "sk");
})(Translator);

(function (Translator) {
    // sl
    Translator.add("An authentication exception occurred.", "Pri\u0161lo je do izjeme pri preverjanju avtentikacije.", "security", "sl");
    Translator.add("Authentication credentials could not be found.", "Poverilnic za avtentikacijo ni bilo mogo\u010de najti.", "security", "sl");
    Translator.add("Authentication request could not be processed due to a system problem.", "Zahteve za avtentikacijo ni bilo mogo\u010de izvesti zaradi sistemske te\u017eave.", "security", "sl");
    Translator.add("Invalid credentials.", "Neveljavne pravice.", "security", "sl");
    Translator.add("Cookie has already been used by someone else.", "Pi\u0161kotek je uporabil \u017ee nekdo drug.", "security", "sl");
    Translator.add("Not privileged to request the resource.", "Nimate privilegijev za zahtevani vir.", "security", "sl");
    Translator.add("Invalid CSRF token.", "Neveljaven CSRF \u017eeton.", "security", "sl");
    Translator.add("Digest nonce has expired.", "Za\u010dasni \u017eeton je potekel.", "security", "sl");
    Translator.add("No authentication provider found to support the authentication token.", "Ponudnika avtentikacije za podporo prijavnega \u017eetona ni bilo mogo\u010de najti.", "security", "sl");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Seja ni na voljo, ali je potekla ali pa pi\u0161kotki niso omogo\u010deni.", "security", "sl");
    Translator.add("No token could be found.", "\u017detona ni bilo mogo\u010de najti.", "security", "sl");
    Translator.add("Username could not be found.", "Uporabni\u0161kega imena ni bilo mogo\u010de najti.", "security", "sl");
    Translator.add("Account has expired.", "Ra\u010dun je potekel.", "security", "sl");
    Translator.add("Credentials have expired.", "Poverilnice so potekle.", "security", "sl");
    Translator.add("Account is disabled.", "Ra\u010dun je onemogo\u010den.", "security", "sl");
    Translator.add("Account is locked.", "Ra\u010dun je zaklenjen.", "security", "sl");
})(Translator);

(function (Translator) {
    // sr_Cyrl
    Translator.add("An authentication exception occurred.", "\u0418\u0437\u0443\u0437\u0435\u0442\u0430\u043a \u043f\u0440\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0458\u0438.", "security", "sr_Cyrl");
    Translator.add("Authentication credentials could not be found.", "\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u0438 \u043f\u043e\u0434\u0430\u0446\u0438 \u043d\u0438\u0441\u0443 \u043f\u0440\u043e\u043d\u0430\u0452\u0435\u043d\u0438.", "security", "sr_Cyrl");
    Translator.add("Authentication request could not be processed due to a system problem.", "\u0417\u0430\u0445\u0442\u0435\u0432 \u0437\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0458\u0443 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0431\u0438\u0442\u0438 \u043e\u0431\u0440\u0430\u0452\u0435\u043d \u0437\u0431\u043e\u0433 \u0441\u0438\u0441\u0442\u0435\u043c\u0441\u043a\u0438\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430.", "security", "sr_Cyrl");
    Translator.add("Invalid credentials.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u0438 \u043f\u043e\u0434\u0430\u0446\u0438 \u0437\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0458\u0443.", "security", "sr_Cyrl");
    Translator.add("Cookie has already been used by someone else.", "\u041a\u043e\u043b\u0430\u0447\u0438\u045b \u0458\u0435 \u0432\u0435\u045b \u0438\u0441\u043a\u043e\u0440\u0438\u0448\u045b\u0435\u043d \u043e\u0434 \u0441\u0442\u0440\u0430\u043d\u0435 \u043d\u0435\u043a\u043e\u0433 \u0434\u0440\u0443\u0433\u043e\u0433.", "security", "sr_Cyrl");
    Translator.add("Not privileged to request the resource.", "\u041d\u0435\u043c\u0430\u0442\u0435 \u043f\u0440\u0430\u0432\u0430 \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0430 \u043e\u0432\u043e\u043c \u0440\u0435\u0441\u0443\u0440\u0441\u0443.", "security", "sr_Cyrl");
    Translator.add("Invalid CSRF token.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0430\u043d CSRF \u0442\u043e\u043a\u0435\u043d.", "security", "sr_Cyrl");
    Translator.add("Digest nonce has expired.", "\u0412\u0440\u0435\u043c\u0435 \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0441\u043a\u043e\u0433 \u043a\u0459\u0443\u0447\u0430 \u0458\u0435 \u0438\u0441\u0442\u0435\u043a\u043b\u043e.", "security", "sr_Cyrl");
    Translator.add("No authentication provider found to support the authentication token.", "\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u0438 \u043f\u0440\u043e\u0432\u0430\u0458\u0434\u0435\u0440 \u0437\u0430 \u043f\u043e\u0434\u0440\u0448\u043a\u0443 \u0442\u043e\u043a\u0435\u043d\u0430 \u043d\u0438\u0458\u0435 \u043f\u0440\u043e\u043d\u0430\u0452\u0435\u043d.", "security", "sr_Cyrl");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "\u0421\u0435\u0441\u0438\u0458\u0430 \u043d\u0438\u0458\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430, \u0438\u0441\u0442\u0435\u043a\u043b\u0430 \u0458\u0435 \u0438\u043b\u0438 \u0441\u0443 \u043a\u043e\u043b\u0430\u0447\u0438\u045b\u0438 \u0438\u0441\u043a\u0459\u0443\u0447\u0435\u043d\u0438.", "security", "sr_Cyrl");
    Translator.add("No token could be found.", "\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043c\u043e\u0436\u0435 \u0431\u0438\u0442\u0438 \u043f\u0440\u043e\u043d\u0430\u0452\u0435\u043d.", "security", "sr_Cyrl");
    Translator.add("Username could not be found.", "\u041a\u043e\u0440\u0438\u0441\u043d\u0438\u0447\u043a\u043e \u0438\u043c\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0431\u0438\u0442\u0438 \u043f\u0440\u043e\u043d\u0430\u0452\u0435\u043d\u043e.", "security", "sr_Cyrl");
    Translator.add("Account has expired.", "\u041d\u0430\u043b\u043e\u0433 \u0458\u0435 \u0438\u0441\u0442\u0435\u043a\u0430\u043e.", "security", "sr_Cyrl");
    Translator.add("Credentials have expired.", "\u041f\u043e\u0434\u0430\u0446\u0438 \u0437\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0458\u0443 \u0441\u0443 \u0438\u0441\u0442\u0435\u043a\u043b\u0438.", "security", "sr_Cyrl");
    Translator.add("Account is disabled.", "\u041d\u0430\u043b\u043e\u0433 \u0458\u0435 \u043e\u043d\u0435\u043c\u043e\u0433\u0443\u045b\u0435\u043d.", "security", "sr_Cyrl");
    Translator.add("Account is locked.", "\u041d\u0430\u043b\u043e\u0433 \u0458\u0435 \u0437\u0430\u043a\u0459\u0443\u0447\u0430\u043d.", "security", "sr_Cyrl");
})(Translator);

(function (Translator) {
    // sr_Latn
    Translator.add("An authentication exception occurred.", "Izuzetak pri autentifikaciji.", "security", "sr_Latn");
    Translator.add("Authentication credentials could not be found.", "Autentifikacioni podaci nisu prona\u0111eni.", "security", "sr_Latn");
    Translator.add("Authentication request could not be processed due to a system problem.", "Zahtev za autentifikaciju ne mo\u017ee biti obra\u0111en zbog sistemskih problema.", "security", "sr_Latn");
    Translator.add("Invalid credentials.", "Nevalidni podaci za autentifikaciju.", "security", "sr_Latn");
    Translator.add("Cookie has already been used by someone else.", "Kola\u010di\u0107 je ve\u0107 iskori\u0161\u0107en od strane nekog drugog.", "security", "sr_Latn");
    Translator.add("Not privileged to request the resource.", "Nemate prava pristupa ovom resursu.", "security", "sr_Latn");
    Translator.add("Invalid CSRF token.", "Nevalidan CSRF token.", "security", "sr_Latn");
    Translator.add("Digest nonce has expired.", "Vreme kriptografskog klju\u010da je isteklo.", "security", "sr_Latn");
    Translator.add("No authentication provider found to support the authentication token.", "Autentifikacioni provajder za podr\u0161ku tokena nije prona\u0111en.", "security", "sr_Latn");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Sesija nije dostupna, istekla je ili su kola\u010di\u0107i isklju\u010deni.", "security", "sr_Latn");
    Translator.add("No token could be found.", "Token ne mo\u017ee biti prona\u0111en.", "security", "sr_Latn");
    Translator.add("Username could not be found.", "Korisni\u010dko ime ne mo\u017ee biti prona\u0111eno.", "security", "sr_Latn");
    Translator.add("Account has expired.", "Nalog je istekao.", "security", "sr_Latn");
    Translator.add("Credentials have expired.", "Podaci za autentifikaciju su istekli.", "security", "sr_Latn");
    Translator.add("Account is disabled.", "Nalog je onemogu\u0107en.", "security", "sr_Latn");
    Translator.add("Account is locked.", "Nalog je zaklju\u010dan.", "security", "sr_Latn");
})(Translator);

(function (Translator) {
    // sv
    Translator.add("An authentication exception occurred.", "Ett autentiseringsfel har intr\u00e4ffat.", "security", "sv");
    Translator.add("Authentication credentials could not be found.", "Uppgifterna f\u00f6r autentisering kunde inte hittas.", "security", "sv");
    Translator.add("Authentication request could not be processed due to a system problem.", "Autentiseringen kunde inte genomf\u00f6ras p\u00e5 grund av systemfel.", "security", "sv");
    Translator.add("Invalid credentials.", "Felaktiga uppgifter.", "security", "sv");
    Translator.add("Cookie has already been used by someone else.", "Cookien har redan anv\u00e4nts av n\u00e5gon annan.", "security", "sv");
    Translator.add("Not privileged to request the resource.", "Saknar r\u00e4ttigheter f\u00f6r resursen.", "security", "sv");
    Translator.add("Invalid CSRF token.", "Ogiltig CSRF-token.", "security", "sv");
    Translator.add("Digest nonce has expired.", "F\u00f6rfallen digest nonce.", "security", "sv");
    Translator.add("No authentication provider found to support the authentication token.", "Ingen leverant\u00f6r f\u00f6r autentisering hittades f\u00f6r angiven autentiseringstoken.", "security", "sv");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Ingen session finns tillg\u00e4nglig, antingen har den f\u00f6rfallit eller \u00e4r cookies inte aktiverat.", "security", "sv");
    Translator.add("No token could be found.", "Ingen token kunde hittas.", "security", "sv");
    Translator.add("Username could not be found.", "Anv\u00e4ndarnamnet kunde inte hittas.", "security", "sv");
    Translator.add("Account has expired.", "Kontot har f\u00f6rfallit.", "security", "sv");
    Translator.add("Credentials have expired.", "Uppgifterna har f\u00f6rfallit.", "security", "sv");
    Translator.add("Account is disabled.", "Kontot \u00e4r inaktiverat.", "security", "sv");
    Translator.add("Account is locked.", "Kontot \u00e4r l\u00e5st.", "security", "sv");
})(Translator);

(function (Translator) {
    // th
    Translator.add("An authentication exception occurred.", "\u0e1e\u0e1a\u0e04\u0e27\u0e32\u0e21\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e43\u0e19\u0e01\u0e32\u0e23\u0e23\u0e31\u0e1a\u0e23\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e15\u0e19", "security", "th");
    Translator.add("Authentication credentials could not be found.", "\u0e44\u0e21\u0e48\u0e1e\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19\u0e01\u0e32\u0e23\u0e23\u0e31\u0e1a\u0e23\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e15\u0e19 (credentials) ", "security", "th");
    Translator.add("Authentication request could not be processed due to a system problem.", "\u0e04\u0e33\u0e23\u0e49\u0e2d\u0e07\u0e43\u0e19\u0e01\u0e32\u0e23\u0e23\u0e31\u0e1a\u0e23\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e15\u0e19\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e01\u0e32\u0e23\u0e44\u0e14\u0e49 \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e32\u0e08\u0e32\u0e01\u0e1b\u0e31\u0e0d\u0e2b\u0e32\u0e02\u0e2d\u0e07\u0e23\u0e30\u0e1a\u0e1a", "security", "th");
    Translator.add("Invalid credentials.", "\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e01\u0e32\u0e23\u0e23\u0e31\u0e1a\u0e23\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e15\u0e19\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "security", "th");
    Translator.add("Cookie has already been used by someone else.", "Cookie \u0e16\u0e39\u0e01\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e44\u0e1b\u0e41\u0e25\u0e49\u0e27\u0e14\u0e49\u0e27\u0e22\u0e1c\u0e39\u0e49\u0e2d\u0e37\u0e48\u0e19", "security", "th");
    Translator.add("Not privileged to request the resource.", "\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e2a\u0e34\u0e17\u0e18\u0e34\u0e4c\u0e43\u0e2b\u0e49\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e2a\u0e48\u0e27\u0e19\u0e19\u0e35\u0e49\u0e44\u0e14\u0e49", "security", "th");
    Translator.add("Invalid CSRF token.", "CSRF token \u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "security", "th");
    Translator.add("Digest nonce has expired.", "Digest nonce \u0e2b\u0e21\u0e14\u0e2d\u0e32\u0e22\u0e38", "security", "th");
    Translator.add("No authentication provider found to support the authentication token.", "\u0e44\u0e21\u0e48\u0e1e\u0e1a authentication provider \u0e17\u0e35\u0e48\u0e23\u0e2d\u0e07\u0e23\u0e31\u0e1a\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a authentication token", "security", "th");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "\u0e44\u0e21\u0e48\u0e21\u0e35 session \u0e17\u0e35\u0e48\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19, Session \u0e2b\u0e21\u0e14\u0e2d\u0e32\u0e22\u0e38\u0e44\u0e1b\u0e41\u0e25\u0e49\u0e27\u0e2b\u0e23\u0e37\u0e2d cookies \u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e40\u0e1b\u0e34\u0e14\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19", "security", "th");
    Translator.add("No token could be found.", "\u0e44\u0e21\u0e48\u0e1e\u0e1a token", "security", "th");
    Translator.add("Username could not be found.", "\u0e44\u0e21\u0e48\u0e1e\u0e1a Username", "security", "th");
    Translator.add("Account has expired.", "\u0e1a\u0e31\u0e0d\u0e0a\u0e35\u0e2b\u0e21\u0e14\u0e2d\u0e32\u0e22\u0e38\u0e44\u0e1b\u0e41\u0e25\u0e49\u0e27", "security", "th");
    Translator.add("Credentials have expired.", "\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e01\u0e32\u0e23\u0e23\u0e30\u0e1a\u0e38\u0e15\u0e31\u0e27\u0e15\u0e19\u0e2b\u0e21\u0e14\u0e2d\u0e32\u0e22\u0e38\u0e41\u0e25\u0e49\u0e27", "security", "th");
    Translator.add("Account is disabled.", "\u0e1a\u0e31\u0e0d\u0e0a\u0e35\u0e16\u0e39\u0e01\u0e23\u0e30\u0e07\u0e31\u0e1a\u0e41\u0e25\u0e49\u0e27", "security", "th");
    Translator.add("Account is locked.", "\u0e1a\u0e31\u0e0d\u0e0a\u0e35\u0e16\u0e39\u0e01\u0e25\u0e47\u0e2d\u0e01\u0e41\u0e25\u0e49\u0e27", "security", "th");
})(Translator);

(function (Translator) {
    // tr
    Translator.add("An authentication exception occurred.", "Bir yetkilendirme istisnas\u0131 olu\u015ftu.", "security", "tr");
    Translator.add("Authentication credentials could not be found.", "Kimlik bilgileri bulunamad\u0131.", "security", "tr");
    Translator.add("Authentication request could not be processed due to a system problem.", "Bir sistem hatas\u0131 nedeniyle yetkilendirme iste\u011fi i\u015fleme al\u0131nam\u0131yor.", "security", "tr");
    Translator.add("Invalid credentials.", "Ge\u00e7ersiz kimlik bilgileri.", "security", "tr");
    Translator.add("Cookie has already been used by someone else.", "\u00c7erez bir ba\u015fkas\u0131 taraf\u0131ndan zaten kullan\u0131lm\u0131\u015ft\u0131.", "security", "tr");
    Translator.add("Not privileged to request the resource.", "Kaynak talebi i\u00e7in imtiyaz bulunamad\u0131.", "security", "tr");
    Translator.add("Invalid CSRF token.", "Ge\u00e7ersiz CSRF fi\u015fi.", "security", "tr");
    Translator.add("Digest nonce has expired.", "Derleme zaman a\u015f\u0131m\u0131na u\u011frad\u0131.", "security", "tr");
    Translator.add("No authentication provider found to support the authentication token.", "Yetkilendirme fi\u015fini destekleyecek yetkilendirme sa\u011flay\u0131c\u0131s\u0131 bulunamad\u0131.", "security", "tr");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Oturum bulunamad\u0131, zaman a\u015f\u0131m\u0131na u\u011frad\u0131 veya \u00e7erezler etkin de\u011fil.", "security", "tr");
    Translator.add("No token could be found.", "Fi\u015f bulunamad\u0131.", "security", "tr");
    Translator.add("Username could not be found.", "Kullan\u0131c\u0131 ad\u0131 bulunamad\u0131.", "security", "tr");
    Translator.add("Account has expired.", "Hesap zaman a\u015f\u0131m\u0131na u\u011frad\u0131.", "security", "tr");
    Translator.add("Credentials have expired.", "Kimlik bilgileri zaman a\u015f\u0131m\u0131na u\u011frad\u0131.", "security", "tr");
    Translator.add("Account is disabled.", "Hesap engellenmi\u015f.", "security", "tr");
    Translator.add("Account is locked.", "Hesap kilitlenmi\u015f.", "security", "tr");
})(Translator);

(function (Translator) {
    // ua
    Translator.add("An authentication exception occurred.", "\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457.", "security", "ua");
    Translator.add("Authentication credentials could not be found.", "\u0410\u0432\u0442\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0439\u043d\u0456 \u0434\u0430\u043d\u0456 \u043d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e.", "security", "ua");
    Translator.add("Authentication request could not be processed due to a system problem.", "\u0417\u0430\u043f\u0438\u0442 \u043d\u0430 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u044e \u043d\u0435 \u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438 \u043e\u043f\u0440\u0430\u0446\u044c\u043e\u0432\u0430\u043d\u043e \u0443 \u0437\u0432\u2019\u044f\u0437\u043a\u0443 \u0437 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u044e \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0456.", "security", "ua");
    Translator.add("Invalid credentials.", "\u041d\u0435\u0432\u0456\u0440\u043d\u0456 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0439\u043d\u0456 \u0434\u0430\u043d\u0456.", "security", "ua");
    Translator.add("Cookie has already been used by someone else.", "\u0425\u0442\u043e\u0441\u044c \u0456\u043d\u0448\u0438\u0439 \u0432\u0436\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0432 \u0446\u0435\u0439 \u0441ookie.", "security", "ua");
    Translator.add("Not privileged to request the resource.", "\u0412\u0456\u0434\u0441\u0443\u0442\u043d\u0456 \u043f\u0440\u0430\u0432\u0430 \u043d\u0430 \u0437\u0430\u043f\u0438\u0442 \u0446\u044c\u043e\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u0443.", "security", "ua");
    Translator.add("Invalid CSRF token.", "\u041d\u0435\u0432\u0456\u0440\u043d\u0438\u0439 \u0442\u043e\u043a\u0435\u043d CSRF.", "security", "ua");
    Translator.add("Digest nonce has expired.", "\u0417\u0430\u043a\u0456\u043d\u0447\u0438\u0432\u0441\u044f \u0442\u0435\u0440\u043c\u0456\u043d \u0434\u0456\u0457 \u043e\u0434\u043d\u043e\u0440\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u044e\u0447\u0430 \u0434\u0430\u0439\u0434\u0436\u0435\u0441\u0442\u0443.", "security", "ua");
    Translator.add("No authentication provider found to support the authentication token.", "\u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457, \u0449\u043e \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454 \u0442\u043e\u043a\u0435\u043d \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0456\u0457.", "security", "ua");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "\u0421\u0435\u0441\u0456\u044f \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430, \u0457\u0457 \u0447\u0430\u0441 \u0432\u0438\u0439\u0448\u043e\u0432, \u0430\u0431\u043e cookies \u0432\u0438\u043c\u043a\u043d\u0435\u043d\u043e.", "security", "ua");
    Translator.add("No token could be found.", "\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e.", "security", "ua");
    Translator.add("Username could not be found.", "\u0406\u043c\u2019\u044f \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430 \u043d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e.", "security", "ua");
    Translator.add("Account has expired.", "\u0422\u0435\u0440\u043c\u0456\u043d \u0434\u0456\u0457 \u043e\u0431\u043b\u0456\u043a\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u043f\u0438\u0441\u0443 \u0432\u0438\u0447\u0435\u0440\u043f\u0430\u043d\u043e.", "security", "ua");
    Translator.add("Credentials have expired.", "\u0422\u0435\u0440\u043c\u0456\u043d \u0434\u0456\u0457 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0439\u043d\u0438\u0445 \u0434\u0430\u043d\u0438\u0445 \u0432\u0438\u0447\u0435\u0440\u043f\u0430\u043d\u043e.", "security", "ua");
    Translator.add("Account is disabled.", "\u041e\u0431\u043b\u0456\u043a\u043e\u0432\u0438\u0439 \u0437\u0430\u043f\u0438\u0441 \u0432\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043e.", "security", "ua");
    Translator.add("Account is locked.", "\u041e\u0431\u043b\u0456\u043a\u043e\u0432\u0438\u0439 \u0437\u0430\u043f\u0438\u0441 \u0437\u0430\u0431\u043b\u043e\u043a\u043e\u0432\u0430\u043d\u043e.", "security", "ua");
})(Translator);

(function (Translator) {
    // vi
    Translator.add("An authentication exception occurred.", "C\u00f3 l\u1ed7i trong qu\u00e1 tr\u00ecnh x\u00e1c th\u1ef1c.", "security", "vi");
    Translator.add("Authentication credentials could not be found.", "Th\u00f4ng tin d\u00f9ng \u0111\u1ec3 x\u00e1c th\u1ef1c kh\u00f4ng t\u00ecm th\u1ea5y.", "security", "vi");
    Translator.add("Authentication request could not be processed due to a system problem.", "Y\u00eau c\u1ea7u x\u00e1c th\u1ef1c kh\u00f4ng th\u1ec3 th\u1ef1c hi\u1ec7n do l\u1ed7i c\u1ee7a h\u1ec7 th\u1ed1ng.", "security", "vi");
    Translator.add("Invalid credentials.", "Th\u00f4ng tin d\u00f9ng \u0111\u1ec3 x\u00e1c th\u1ef1c kh\u00f4ng h\u1ee3p l\u1ec7.", "security", "vi");
    Translator.add("Cookie has already been used by someone else.", "Cookie \u0111\u00e3 \u0111\u01b0\u1ee3c d\u00f9ng b\u1edfi ng\u01b0\u1eddi d\u00f9ng kh\u00e1c.", "security", "vi");
    Translator.add("Not privileged to request the resource.", "Kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p y\u00eau c\u1ea7u t\u00e0i nguy\u00ean.", "security", "vi");
    Translator.add("Invalid CSRF token.", "M\u00e3 CSRF kh\u00f4ng h\u1ee3p l\u1ec7.", "security", "vi");
    Translator.add("Digest nonce has expired.", "M\u00e3 d\u00f9ng m\u1ed9t l\u1ea7n \u0111\u00e3 h\u1ebft h\u1ea1n.", "security", "vi");
    Translator.add("No authentication provider found to support the authentication token.", "Kh\u00f4ng t\u00ecm th\u1ea5y nh\u00e0 cung c\u1ea5p d\u1ecbch v\u1ee5 x\u00e1c th\u1ef1c n\u00e0o cho m\u00e3 x\u00e1c th\u1ef1c m\u00e0 b\u1ea1n s\u1eed d\u1ee5ng.", "security", "vi");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Kh\u00f4ng t\u00ecm th\u1ea5y phi\u00ean l\u00e0m vi\u1ec7c. Phi\u00ean l\u00e0m vi\u1ec7c ho\u1eb7c cookie c\u00f3 th\u1ec3 b\u1ecb t\u1eaft.", "security", "vi");
    Translator.add("No token could be found.", "Kh\u00f4ng t\u00ecm th\u1ea5y m\u00e3 token.", "security", "vi");
    Translator.add("Username could not be found.", "Kh\u00f4ng t\u00ecm th\u1ea5y t\u00ean ng\u01b0\u1eddi d\u00f9ng username.", "security", "vi");
    Translator.add("Account has expired.", "T\u00e0i kho\u1ea3n \u0111\u00e3 h\u1ebft h\u1ea1n.", "security", "vi");
    Translator.add("Credentials have expired.", "Th\u00f4ng tin x\u00e1c th\u1ef1c \u0111\u00e3 h\u1ebft h\u1ea1n.", "security", "vi");
    Translator.add("Account is disabled.", "T\u00e0i kho\u1ea3n b\u1ecb t\u1ea1m ng\u1eebng.", "security", "vi");
    Translator.add("Account is locked.", "T\u00e0i kho\u1ea3n b\u1ecb kh\u00f3a.", "security", "vi");
})(Translator);

(function (Translator) {
    // zh_CN
    Translator.add("An authentication exception occurred.", "\u8eab\u4efd\u9a8c\u8bc1\u53d1\u751f\u5f02\u5e38\u3002", "security", "zh_CN");
    Translator.add("Authentication credentials could not be found.", "\u6ca1\u6709\u627e\u5230\u8eab\u4efd\u9a8c\u8bc1\u7684\u51ed\u8bc1\u3002", "security", "zh_CN");
    Translator.add("Authentication request could not be processed due to a system problem.", "\u7531\u4e8e\u7cfb\u7edf\u6545\u969c\uff0c\u8eab\u4efd\u9a8c\u8bc1\u7684\u8bf7\u6c42\u65e0\u6cd5\u88ab\u5904\u7406\u3002", "security", "zh_CN");
    Translator.add("Invalid credentials.", "\u65e0\u6548\u7684\u51ed\u8bc1\u3002", "security", "zh_CN");
    Translator.add("Cookie has already been used by someone else.", "Cookie \u5df2\u7ecf\u88ab\u5176\u4ed6\u4eba\u4f7f\u7528\u3002", "security", "zh_CN");
    Translator.add("Not privileged to request the resource.", "\u6ca1\u6709\u6743\u9650\u8bf7\u6c42\u6b64\u8d44\u6e90\u3002", "security", "zh_CN");
    Translator.add("Invalid CSRF token.", "\u65e0\u6548\u7684 CSRF token \u3002", "security", "zh_CN");
    Translator.add("Digest nonce has expired.", "\u6458\u8981\u968f\u673a\u4e32\uff08digest nonce\uff09\u5df2\u8fc7\u671f\u3002", "security", "zh_CN");
    Translator.add("No authentication provider found to support the authentication token.", "\u6ca1\u6709\u627e\u5230\u652f\u6301\u6b64 token \u7684\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u63d0\u4f9b\u65b9\u3002", "security", "zh_CN");
    Translator.add("No session available, it either timed out or cookies are not enabled.", "Session \u4e0d\u53ef\u7528\u3002\u4f1a\u8bdd\u8d85\u65f6\u6216\u6ca1\u6709\u542f\u7528 cookies \u3002", "security", "zh_CN");
    Translator.add("No token could be found.", "\u627e\u4e0d\u5230 token \u3002", "security", "zh_CN");
    Translator.add("Username could not be found.", "\u627e\u4e0d\u5230\u7528\u6237\u540d\u3002", "security", "zh_CN");
    Translator.add("Account has expired.", "\u5e10\u53f7\u5df2\u8fc7\u671f\u3002", "security", "zh_CN");
    Translator.add("Credentials have expired.", "\u51ed\u8bc1\u5df2\u8fc7\u671f\u3002", "security", "zh_CN");
    Translator.add("Account is disabled.", "\u5e10\u53f7\u5df2\u88ab\u7981\u7528\u3002", "security", "zh_CN");
    Translator.add("Account is locked.", "\u5e10\u53f7\u5df2\u88ab\u9501\u5b9a\u3002", "security", "zh_CN");
})(Translator);

(function (Translator) {
    // af
    Translator.add("This value should be false.", "Hierdie waarde moet vals wees.", "validators", "af");
    Translator.add("This value should be true.", "Hierdie waarde moet waar wees.", "validators", "af");
    Translator.add("This value should be of type {{ type }}.", "Hierdie waarde moet van die soort {{type}} wees.", "validators", "af");
    Translator.add("This value should be blank.", "Hierdie waarde moet leeg wees.", "validators", "af");
    Translator.add("The value you selected is not a valid choice.", "Die waarde wat jy gekies het is nie 'n geldige keuse nie.", "validators", "af");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Jy moet ten minste {{ limit }} kies.|Jy moet ten minste {{ limit }} keuses kies.", "validators", "af");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Jy moet by die meeste {{ limit }} keuse kies.|Jy moet by die meeste {{ limit }} keuses kies.", "validators", "af");
    Translator.add("One or more of the given values is invalid.", "Een of meer van die gegewe waardes is ongeldig.", "validators", "af");
    Translator.add("This field was not expected.", "Die veld is nie verwag nie.", "validators", "af");
    Translator.add("This field is missing.", "Hierdie veld ontbreek.", "validators", "af");
    Translator.add("This value is not a valid date.", "Hierdie waarde is nie 'n geldige datum nie.", "validators", "af");
    Translator.add("This value is not a valid datetime.", "Hierdie waarde is nie 'n geldige datum en tyd nie.", "validators", "af");
    Translator.add("This value is not a valid email address.", "Hierdie waarde is nie 'n geldige e-pos adres nie.", "validators", "af");
    Translator.add("The file could not be found.", "Die l\u00eaer kon nie gevind word nie.", "validators", "af");
    Translator.add("The file is not readable.", "Die l\u00eaer kan nie gelees word nie.", "validators", "af");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Die l\u00eaer is te groot ({{ size }} {{ suffix }}). Toegelaat maksimum grootte is {{ limit }} {{ suffix }}.", "validators", "af");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Die MIME-tipe van die l\u00eaer is ongeldig ({{ type }}). Toegelaat MIME-tipes is {{ types }}.", "validators", "af");
    Translator.add("This value should be {{ limit }} or less.", "Hierdie waarde moet {{ limit }} of minder wees.", "validators", "af");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Hierdie waarde is te lank. Dit moet {{ limit }} karakter of minder wees.|Hierdie waarde is te lank. Dit moet {{ limit }} karakters of minder wees.", "validators", "af");
    Translator.add("This value should be {{ limit }} or more.", "Hierdie waarde moet {{ limit }} of meer wees.", "validators", "af");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Hierdie waarde is te kort. Dit moet {{ limit }} karakter of meer wees.|Hierdie waarde is te kort. Dit moet {{ limit }} karakters of meer wees.", "validators", "af");
    Translator.add("This value should not be blank.", "Hierdie waarde moet nie leeg wees nie.", "validators", "af");
    Translator.add("This value should not be null.", "Hierdie waarde moet nie nul wees nie.", "validators", "af");
    Translator.add("This value should be null.", "Hierdie waarde moet nul wees.", "validators", "af");
    Translator.add("This value is not valid.", "Hierdie waarde is nie geldig nie.", "validators", "af");
    Translator.add("This value is not a valid time.", "Hierdie waarde is nie 'n geldige tyd nie.", "validators", "af");
    Translator.add("This value is not a valid URL.", "Hierdie waarde is nie 'n geldige URL nie.", "validators", "af");
    Translator.add("The two values should be equal.", "Die twee waardes moet gelyk wees.", "validators", "af");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Die l\u00eaer is te groot. Toegelaat maksimum grootte is {{ limit }} {{ suffix }}.", "validators", "af");
    Translator.add("The file is too large.", "Die l\u00eaer is te groot.", "validators", "af");
    Translator.add("The file could not be uploaded.", "Die l\u00eaer kan nie opgelaai word nie.", "validators", "af");
    Translator.add("This value should be a valid number.", "Hierdie waarde moet 'n geldige nommer wees.", "validators", "af");
    Translator.add("This file is not a valid image.", "Hierdie l\u00eaer is nie 'n geldige beeld nie.", "validators", "af");
    Translator.add("This is not a valid IP address.", "Hierdie is nie 'n geldige IP-adres nie.", "validators", "af");
    Translator.add("This value is not a valid language.", "Hierdie waarde is nie 'n geldige taal nie.", "validators", "af");
    Translator.add("This value is not a valid locale.", "Hierdie waarde is nie 'n geldige land instelling nie.", "validators", "af");
    Translator.add("This value is not a valid country.", "Hierdie waarde is nie 'n geldige land nie.", "validators", "af");
    Translator.add("This value is already used.", "Hierdie waarde word reeds gebruik.", "validators", "af");
    Translator.add("The size of the image could not be detected.", "Die grootte van die beeld kon nie opgespoor word nie.", "validators", "af");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Die beeld breedte is te groot ({{ width }}px). Toegelaat maksimum breedte is {{ max_width }}px.", "validators", "af");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Die beeld breedte is te klein ({{ width }}px). Minimum breedte verwag is {{ min_width }}px.", "validators", "af");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Die beeld hoogte is te groot ({{ height }}px). Toegelaat maksimum hoogte is {{ max_height }}px.", "validators", "af");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Die beeld hoogte is te klein ({{ height }}px). Minimum hoogte verwag is {{ min_height }}px.", "validators", "af");
    Translator.add("This value should be the user's current password.", "Hierdie waarde moet die huidige wagwoord van die gebruiker wees.", "validators", "af");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Hierdie waarde moet presies {{ limit }} karakter wees.|Hierdie waarde moet presies {{ limit }} karakters wees.", "validators", "af");
    Translator.add("The file was only partially uploaded.", "Die l\u00eaer is slegs gedeeltelik opgelaai.", "validators", "af");
    Translator.add("No file was uploaded.", "Geen l\u00eaer is opgelaai nie.", "validators", "af");
    Translator.add("No temporary folder was configured in php.ini.", "Geen tydelike l\u00eaer is ingestel in php.ini nie.", "validators", "af");
    Translator.add("Cannot write temporary file to disk.", "Kan nie tydelike l\u00eaer skryf op skyf nie.", "validators", "af");
    Translator.add("A PHP extension caused the upload to fail.", "'n PHP-uitbreiding veroorsaak die oplaai van die l\u00eaer om te misluk.", "validators", "af");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Hierdie versameling moet {{ limit }} element of meer bevat.|Hierdie versameling moet {{ limit }} elemente of meer bevat.", "validators", "af");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Hierdie versameling moet {{ limit }} element of minder bevat.|Hierdie versameling moet {{ limit }} elemente of meer bevat.", "validators", "af");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Hierdie versameling moet presies {{ limit }} element bevat.|Hierdie versameling moet presies {{ limit }} elemente bevat.", "validators", "af");
    Translator.add("Invalid card number.", "Ongeldige kredietkaart nommer.", "validators", "af");
    Translator.add("Unsupported card type or invalid card number.", "Nie-ondersteunde tipe kaart of ongeldige kredietkaart nommer.", "validators", "af");
})(Translator);

(function (Translator) {
    // ar
    Translator.add("This value should be false.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0623\u0646 \u062a\u0643\u0648\u0646 \u062e\u0627\u0637\u0626\u0629.", "validators", "ar");
    Translator.add("This value should be true.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0623\u0646 \u062a\u0643\u0648\u0646 \u062d\u0642\u064a\u0642\u064a\u0629.", "validators", "ar");
    Translator.add("This value should be of type {{ type }}.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 \u0645\u0646 \u0646\u0648\u0639 {{ type }}.", "validators", "ar");
    Translator.add("This value should be blank.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 \u0641\u0627\u0631\u063a\u0629.", "validators", "ar");
    Translator.add("The value you selected is not a valid choice.", "\u0627\u0644\u0642\u064a\u0645\u0629 \u0627\u0644\u0645\u062e\u062a\u0627\u0631\u0629 \u0644\u064a\u0633\u062a \u062e\u064a\u0627\u0631\u0627 \u0635\u062d\u064a\u062d\u0627.", "validators", "ar");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u064a\u062c\u0628 \u0627\u0646 \u062a\u062e\u062a\u0627\u0631 {{ limit }} \u0627\u062e\u062a\u064a\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644.|\u064a\u062c\u0628 \u0627\u0646 \u062a\u062e\u062a\u0627\u0631 {{ limit }} \u0627\u062e\u062a\u064a\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644.|\u064a\u062c\u0628 \u0627\u0646 \u062a\u062e\u062a\u0627\u0631 {{ limit }} \u0627\u062e\u062a\u064a\u0627\u0631\u0627\u062a \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644.|\u064a\u062c\u0628 \u0627\u0646 \u062a\u062e\u062a\u0627\u0631 {{ limit }} \u0627\u062e\u062a\u064a\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644.|\u064a\u062c\u0628 \u0627\u0646 \u062a\u062e\u062a\u0627\u0631 {{ limit }} \u0627\u062e\u062a\u064a\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644.|\u064a\u062c\u0628 \u0627\u0646 \u062a\u062e\u062a\u0627\u0631 {{ limit }} \u0627\u062e\u062a\u064a\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644.", "validators", "ar");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u064a\u062c\u0628 \u0627\u0646 \u062a\u062e\u062a\u0627\u0631 {{ limit }} \u0627\u062e\u062a\u064a\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0643\u062b\u0631.|\u064a\u062c\u0628 \u0627\u0646 \u062a\u062e\u062a\u0627\u0631 {{ limit }} \u0627\u062e\u062a\u064a\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0643\u062b\u0631.|\u064a\u062c\u0628 \u0627\u0646 \u062a\u062e\u062a\u0627\u0631 {{ limit }} \u0627\u062e\u062a\u064a\u0627\u0631\u0627\u062a \u0639\u0644\u0649 \u0627\u0644\u0627\u0643\u062b\u0631.|\u064a\u062c\u0628 \u0627\u0646 \u062a\u062e\u062a\u0627\u0631 {{ limit }} \u0627\u062e\u062a\u064a\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0643\u062b\u0631.|\u064a\u062c\u0628 \u0627\u0646 \u062a\u062e\u062a\u0627\u0631 {{ limit }} \u0627\u062e\u062a\u064a\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0643\u062b\u0631.|\u064a\u062c\u0628 \u0627\u0646 \u062a\u062e\u062a\u0627\u0631 {{ limit }} \u0627\u062e\u062a\u064a\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0643\u062b\u0631.", "validators", "ar");
    Translator.add("One or more of the given values is invalid.", "\u0648\u0627\u062d\u062f \u0623\u0648 \u0623\u0643\u062b\u0631 \u0645\u0646 \u0627\u0644\u0642\u064a\u0645 \u0627\u0644\u0645\u0639\u0637\u0627\u0647 \u062e\u0627\u0637\u0626.", "validators", "ar");
    Translator.add("This field was not expected.", "\u0644\u0645 \u064a\u0643\u0646 \u0645\u0646 \u0627\u0644\u0645\u062a\u0648\u0642\u0639 \u0647\u0630\u0627 \u0627\u0644\u0645\u062c\u0627\u0644.", "validators", "ar");
    Translator.add("This field is missing.", "\u0647\u0630\u0627 \u0627\u0644\u0645\u062c\u0627\u0644 \u0645\u0641\u0642\u0648\u062f.", "validators", "ar");
    Translator.add("This value is not a valid date.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a \u062a\u0627\u0631\u064a\u062e\u0627 \u0635\u0627\u0644\u062d\u0627.", "validators", "ar");
    Translator.add("This value is not a valid datetime.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a \u062a\u0627\u0631\u064a\u062e\u0627 \u0648 \u0648\u0642\u062a\u0627 \u0635\u0627\u0644\u062d\u0627.", "validators", "ar");
    Translator.add("This value is not a valid email address.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a \u0639\u0646\u0648\u0627\u0646 \u0628\u0631\u064a\u062f \u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a \u0635\u062d\u064a\u062d.", "validators", "ar");
    Translator.add("The file could not be found.", "\u0644\u0627 \u064a\u0645\u0643\u0646 \u0627\u0644\u0639\u062b\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0645\u0644\u0641.", "validators", "ar");
    Translator.add("The file is not readable.", "\u0627\u0644\u0645\u0644\u0641 \u063a\u064a\u0631 \u0642\u0627\u0628\u0644 \u0644\u0644\u0642\u0631\u0627\u0621\u0629.", "validators", "ar");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0627\u0644\u0645\u0644\u0641 \u0643\u0628\u064a\u0631 \u062c\u062f\u0627 ({{ size }} {{ suffix }}).\u0627\u0642\u0635\u0649 \u0645\u0633\u0627\u062d\u0647 \u0645\u0633\u0645\u0648\u062d \u0628\u0647\u0627 ({{ limit }} {{ suffix }}).", "validators", "ar");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "\u0646\u0648\u0639 \u0627\u0644\u0645\u0644\u0641 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d ({{ type }}). \u0627\u0644\u0627\u0646\u0648\u0627\u0639 \u0627\u0644\u0645\u0633\u0645\u0648\u062d \u0628\u0647\u0627 \u0647\u0649 {{ types }}.", "validators", "ar");
    Translator.add("This value should be {{ limit }} or less.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u0627\u0648 \u0627\u0642\u0644.", "validators", "ar");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0637\u0648\u064a\u0644\u0629 \u062c\u062f\u0627. \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u062d\u0631\u0641 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0637\u0648\u064a\u0644\u0629 \u062c\u062f\u0627. \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u062d\u0631\u0641 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0637\u0648\u064a\u0644\u0629 \u062c\u062f\u0627. \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u062d\u0631\u0648\u0641 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0637\u0648\u064a\u0644\u0629 \u062c\u062f\u0627. \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u062d\u0631\u0641 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0637\u0648\u064a\u0644\u0629 \u062c\u062f\u0627. \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u062d\u0631\u0641 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0637\u0648\u064a\u0644\u0629 \u062c\u062f\u0627. \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u062d\u0631\u0641 \u0627\u0648 \u0627\u0642\u0644.", "validators", "ar");
    Translator.add("This value should be {{ limit }} or more.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u0627\u0648 \u0627\u0643\u062b\u0631.", "validators", "ar");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0642\u0635\u064a\u0631\u0629 \u062c\u062f\u0627. \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u062d\u0631\u0641 \u0627\u0648 \u0627\u0643\u062b\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0642\u0635\u064a\u0631\u0629 \u062c\u062f\u0627. \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u062d\u0631\u0641 \u0627\u0648 \u0627\u0643\u062b\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0642\u0635\u064a\u0631\u0629 \u062c\u062f\u0627. \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u062d\u0631\u0648\u0641 \u0627\u0648 \u0627\u0643\u062b\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0642\u0635\u064a\u0631\u0629 \u062c\u062f\u0627. \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u062d\u0631\u0641 \u0627\u0648 \u0627\u0643\u062b\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0642\u0635\u064a\u0631\u0629 \u062c\u062f\u0627. \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u062d\u0631\u0641 \u0627\u0648 \u0627\u0643\u062b\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0642\u0635\u064a\u0631\u0629 \u062c\u062f\u0627. \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 {{ limit }} \u062d\u0631\u0641 \u0627\u0648 \u0627\u0643\u062b\u0631.", "validators", "ar");
    Translator.add("This value should not be blank.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0644\u0627 \u062a\u0643\u0648\u0646 \u0641\u0627\u0631\u063a\u0629.", "validators", "ar");
    Translator.add("This value should not be null.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0644\u0627 \u062a\u0643\u0648\u0646 \u0641\u0627\u0631\u063a\u0629.", "validators", "ar");
    Translator.add("This value should be null.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 \u0641\u0627\u0631\u063a\u0629.", "validators", "ar");
    Translator.add("This value is not valid.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d\u0629.", "validators", "ar");
    Translator.add("This value is not a valid time.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a \u0648\u0642\u062a \u0635\u062d\u064a\u062d.", "validators", "ar");
    Translator.add("This value is not a valid URL.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a \u0631\u0627\u0628\u0637 \u0627\u0644\u0643\u062a\u0631\u0648\u0646\u0649 \u0635\u062d\u064a\u062d.", "validators", "ar");
    Translator.add("The two values should be equal.", "\u0627\u0644\u0642\u064a\u0645\u062a\u0627\u0646 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646\u0627 \u0645\u062a\u0633\u0627\u0648\u064a\u062a\u0627\u0646.", "validators", "ar");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0627\u0644\u0645\u0644\u0641 \u0643\u0628\u064a\u0631 \u062c\u062f\u0627. \u0627\u0642\u0635\u0649 \u0645\u0633\u0627\u062d\u0647 \u0645\u0633\u0645\u0648\u062d \u0628\u0647\u0627 {{ limit }} {{ suffix }}.", "validators", "ar");
    Translator.add("The file is too large.", "\u0627\u0644\u0645\u0644\u0641 \u0643\u0628\u064a\u0631 \u062c\u062f\u0627.", "validators", "ar");
    Translator.add("The file could not be uploaded.", "\u0644\u0645 \u0627\u0633\u062a\u0637\u0639 \u0627\u0633\u062a\u0642\u0628\u0627\u0644 \u0627\u0644\u0645\u0644\u0641.", "validators", "ar");
    Translator.add("This value should be a valid number.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 \u0631\u0642\u0645.", "validators", "ar");
    Translator.add("This file is not a valid image.", "\u0647\u0630\u0627 \u0627\u0644\u0645\u0644\u0641 \u0644\u064a\u0633 \u0635\u0648\u0631\u0629 \u0635\u062d\u064a\u062d\u0629.", "validators", "ar");
    Translator.add("This is not a valid IP address.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a \u0639\u0646\u0648\u0627\u0646 \u0631\u0642\u0645\u0649 \u0635\u062d\u064a\u062d.", "validators", "ar");
    Translator.add("This value is not a valid language.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a \u0644\u063a\u0629 \u0635\u062d\u064a\u062d\u0629.", "validators", "ar");
    Translator.add("This value is not a valid locale.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a \u0645\u0648\u0642\u0639 \u0635\u062d\u064a\u062d.", "validators", "ar");
    Translator.add("This value is not a valid country.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a \u0628\u0644\u062f\u0627 \u0635\u0627\u0644\u062d\u0627.", "validators", "ar");
    Translator.add("This value is already used.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0628\u0627\u0644\u0641\u0639\u0644.", "validators", "ar");
    Translator.add("The size of the image could not be detected.", "\u0644\u0645 \u0627\u0633\u062a\u0637\u0639 \u0645\u0639\u0631\u0641\u0629 \u062d\u062c\u0645 \u0627\u0644\u0635\u0648\u0631\u0629.", "validators", "ar");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u0639\u0631\u0636 \u0627\u0644\u0635\u0648\u0631\u0629 \u0643\u0628\u064a\u0631 \u062c\u062f\u0627 ({{ width }}px). \u0627\u0642\u0635\u0649 \u0639\u0631\u0636 \u0645\u0633\u0645\u0648\u062d \u0628\u0647 \u0647\u0648{{ max_width }}px.", "validators", "ar");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u0639\u0631\u0636 \u0627\u0644\u0635\u0648\u0631\u0629 \u0635\u063a\u064a\u0631 \u062c\u062f\u0627 ({{ width }}px). \u0627\u0642\u0644 \u0639\u0631\u0636 \u0645\u0633\u0645\u0648\u062d \u0628\u0647 \u0647\u0648{{ min_width }}px.", "validators", "ar");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u0637\u0648\u0644 \u0627\u0644\u0635\u0648\u0631\u0629 \u0643\u0628\u064a\u0631 \u062c\u062f\u0627 ({{ height }}px). \u0627\u0642\u0635\u0649 \u0637\u0648\u0644 \u0645\u0633\u0645\u0648\u062d \u0628\u0647 \u0647\u0648{{ max_height }}px.", "validators", "ar");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u0637\u0648\u0644 \u0627\u0644\u0635\u0648\u0631\u0629 \u0635\u063a\u064a\u0631 \u062c\u062f\u0627 ({{ height }}px). \u0627\u0642\u0644 \u0637\u0648\u0644 \u0645\u0633\u0645\u0648\u062d \u0628\u0647 \u0647\u0648{{ min_height }}px.", "validators", "ar");
    Translator.add("This value should be the user's current password.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 \u0643\u0644\u0645\u0629 \u0633\u0631 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u062d\u0627\u0644\u064a\u0629.", "validators", "ar");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u062d\u0631\u0641 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u062d\u0631\u0641 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u062d\u0631\u0648\u0641 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u062d\u0631\u0641 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u062d\u0631\u0641 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u062d\u0631\u0641 \u0641\u0642\u0637.", "validators", "ar");
    Translator.add("The file was only partially uploaded.", "\u062a\u0645 \u0627\u0633\u062a\u0642\u0628\u0627\u0644 \u062c\u0632\u0621 \u0645\u0646 \u0627\u0644\u0645\u0644\u0641 \u0641\u0642\u0637.", "validators", "ar");
    Translator.add("No file was uploaded.", "\u0644\u0645 \u064a\u062a\u0645 \u0627\u0631\u0633\u0627\u0644 \u0627\u0649 \u0645\u0644\u0641.", "validators", "ar");
    Translator.add("No temporary folder was configured in php.ini.", "\u0644\u0645 \u064a\u062a\u0645 \u062a\u0647\u064a\u0626\u0629 \u062d\u0627\u0641\u0638\u0629 \u0645\u0624\u0642\u062a\u0629 \u0641\u0649 \u0645\u0644\u0641 php.ini.", "validators", "ar");
    Translator.add("Cannot write temporary file to disk.", "\u0644\u0645 \u0627\u0633\u062a\u0637\u0639 \u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0645\u0644\u0641 \u0627\u0644\u0645\u0624\u0642\u062a.", "validators", "ar");
    Translator.add("A PHP extension caused the upload to fail.", "\u0627\u062d\u062f \u0627\u0636\u0627\u0641\u0627\u062a PHP \u062a\u0633\u0628\u0628\u062a \u0641\u0649 \u0641\u0634\u0644 \u0627\u0633\u062a\u0642\u0628\u0627\u0644 \u0627\u0644\u0645\u0644\u0641.", "validators", "ar");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0643\u062b\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0643\u062b\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0627\u0635\u0631 \u0627\u0648 \u0627\u0643\u062b\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0643\u062b\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0643\u062b\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0643\u062b\u0631.", "validators", "ar");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0627\u0635\u0631 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0642\u0644.", "validators", "ar");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0627\u0635\u0631 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0641\u0642\u0637.", "validators", "ar");
    Translator.add("Invalid card number.", "\u0631\u0642\u0645 \u0627\u0644\u0628\u0637\u0627\u0642\u0647 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d.", "validators", "ar");
    Translator.add("Unsupported card type or invalid card number.", "\u0646\u0648\u0639 \u0627\u0644\u0628\u0637\u0627\u0642\u0647 \u063a\u064a\u0631 \u0645\u062f\u0639\u0648\u0645 \u0627\u0648 \u0627\u0644\u0631\u0642\u0645 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d.", "validators", "ar");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u0627\u0644\u0631\u0642\u0645 IBAN (\u0631\u0642\u0645 \u0627\u0644\u062d\u0633\u0627\u0628 \u0627\u0644\u0645\u0635\u0631\u0641\u064a \u0627\u0644\u062f\u0648\u0644\u064a) \u0627\u0644\u0630\u064a \u062a\u0645 \u0625\u062f\u062e\u0627\u0644\u0647 \u063a\u064a\u0631 \u0635\u0627\u0644\u062d.", "validators", "ar");
    Translator.add("This value is not a valid ISBN-10.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a ISBN-10 \u0635\u0627\u0644\u062d\u0629.", "validators", "ar");
    Translator.add("This value is not a valid ISBN-13.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a ISBN-13 \u0635\u0627\u0644\u062d\u0629.", "validators", "ar");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a ISBN-10 \u0635\u0627\u0644\u062d\u0629 \u0648\u0644\u0627 ISBN-13 \u0635\u0627\u0644\u062d\u0629.", "validators", "ar");
    Translator.add("This value is not a valid ISSN.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u0644\u064a\u0633\u062a ISSN \u0635\u0627\u0644\u062d\u0629.", "validators", "ar");
    Translator.add("This value is not a valid currency.", "\u0627\u0644\u0639\u064f\u0645\u0644\u0629 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d\u0629.", "validators", "ar");
    Translator.add("This value should be equal to {{ compared_value }}.", "\u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0633\u0627\u0648\u064a {{ compared_value }}.", "validators", "ar");
    Translator.add("This value should be greater than {{ compared_value }}.", "\u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 \u0627\u0639\u0644\u064a \u0645\u0646 {{ compared_value }}.", "validators", "ar");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "\u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 \u0645\u0633\u0627\u0648\u064a\u0629 \u0627\u0648 \u0627\u0639\u0644\u064a \u0645\u0646 {{ compared_value }}.", "validators", "ar");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0637\u0627\u0628\u0642 {{ compared_value_type }} {{ compared_value }}.", "validators", "ar");
    Translator.add("This value should be less than {{ compared_value }}.", "\u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0643\u0648\u0646 \u0627\u0642\u0644 \u0645\u0646 {{ compared_value }}.", "validators", "ar");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "\u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u062a\u0633\u0627\u0648\u064a \u0627\u0648 \u062a\u0642\u0644 \u0639\u0646 {{ compared_value }}.", "validators", "ar");
    Translator.add("This value should not be equal to {{ compared_value }}.", "\u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u0644\u0627 \u062a\u0633\u0627\u0648\u064a {{ compared_value }}.", "validators", "ar");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0627\u0644\u0642\u064a\u0645\u0629 \u064a\u062c\u0628 \u0627\u0646 \u0644\u0627 \u062a\u0637\u0627\u0628\u0642 {{ compared_value_type }} {{ compared_value }}.", "validators", "ar");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "\u0646\u0633\u0628\u0629 \u0627\u0644\u0639\u0631\u0636 \u0639\u0644\u0649 \u0627\u0644\u0627\u0631\u062a\u0641\u0627\u0639 \u0644\u0644\u0635\u0648\u0631\u0629 \u0643\u0628\u064a\u0631\u0629 \u062c\u062f\u0627 ({{ ratio }}). \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0633\u0645\u0648\u062d \u0628\u0647 \u0647\u0648 {{ max_ratio }}.", "validators", "ar");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "\u0646\u0633\u0628\u0629 \u0627\u0644\u0639\u0631\u0636 \u0639\u0644\u0649 \u0627\u0644\u0627\u0631\u062a\u0641\u0627\u0639 \u0644\u0644\u0635\u0648\u0631\u0629 \u0635\u063a\u064a\u0631\u0629 \u062c\u062f\u0627 ({{ ratio }}). \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u062f\u0646\u0649 \u0644\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0633\u0645\u0648\u062d \u0628\u0647 \u0647\u0648 {{ max_ratio }}.", "validators", "ar");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "\u0627\u0644\u0635\u0648\u0631\u0629 \u0645\u0631\u0628\u0639\u0629 ({{ width }}x{{ height }}px). \u0627\u0644\u0635\u0648\u0631 \u0627\u0644\u0645\u0631\u0628\u0639\u0629 \u063a\u064a\u0631 \u0645\u0633\u0645\u0648\u062d \u0628\u0647\u0627.", "validators", "ar");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "\u0627\u0644\u0635\u0648\u0631\u0629 \u0641\u064a \u0648\u0636\u0639 \u0623\u0641\u0642\u064a ({{ width }}x{{ height }}px). \u0627\u0644\u0635\u0648\u0631 \u0641\u064a \u0648\u0636\u0639 \u0623\u0641\u0642\u064a \u063a\u064a\u0631 \u0645\u0633\u0645\u0648\u062d \u0628\u0647\u0627.", "validators", "ar");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "\u0627\u0644\u0635\u0648\u0631\u0629 \u0641\u064a \u0648\u0636\u0639 \u0639\u0645\u0648\u062f\u064a ({{ width }}x{{ height }}px). \u0627\u0644\u0635\u0648\u0631 \u0641\u064a \u0648\u0636\u0639 \u0639\u0645\u0648\u062f\u064a \u063a\u064a\u0631 \u0645\u0633\u0645\u0648\u062d \u0628\u0647\u0627.", "validators", "ar");
    Translator.add("An empty file is not allowed.", "\u0645\u0644\u0641 \u0641\u0627\u0631\u063a \u063a\u064a\u0631 \u0645\u0633\u0645\u0648\u062d \u0628\u0647.", "validators", "ar");
    Translator.add("The host could not be resolved.", "\u064a\u062a\u0639\u0630\u0631 \u0627\u0644\u0625\u062a\u0635\u0627\u0644 \u0628\u0627\u0644\u0646\u0637\u0627\u0642.", "validators", "ar");
    Translator.add("This value does not match the expected {{ charset }} charset.", "\u0647\u0630\u0647 \u0627\u0644\u0642\u064a\u0645\u0629 \u063a\u064a\u0631 \u0645\u062a\u0637\u0627\u0628\u0642\u0629 \u0645\u0639 \u0635\u064a\u063a\u0629 \u0627\u0644\u062a\u062d\u0648\u064a\u0644 {{ charset }}.", "validators", "ar");
    Translator.add("This form should not contain extra fields.", "\u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u064a\u062c\u0628 \u0627\u0644\u0627 \u064a\u062d\u062a\u0648\u0649 \u0639\u0644\u0649 \u0627\u0649 \u062d\u0642\u0648\u0644 \u0627\u0636\u0627\u0641\u064a\u0629.", "validators", "ar");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u0645\u0633\u0627\u062d\u0629 \u0627\u0644\u0645\u0644\u0641 \u0627\u0644\u0645\u0631\u0633\u0644 \u0643\u0628\u064a\u0631\u0629. \u0645\u0646 \u0641\u0636\u0644\u0643 \u062d\u0627\u0648\u0644 \u0627\u0631\u0633\u0627\u0644 \u0645\u0644\u0641 \u0627\u0635\u063a\u0631.", "validators", "ar");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "\u0642\u064a\u0645\u0629 \u0631\u0645\u0632 \u0627\u0644\u0645\u0648\u0642\u0639 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d\u0629. \u0645\u0646 \u0641\u0636\u0644\u0643 \u0627\u0639\u062f \u0627\u0631\u0633\u0627\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c.", "validators", "ar");
})(Translator);

(function (Translator) {
    // az
    Translator.add("This value should be false.", "Bu d\u0259y\u0259r false olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("This value should be true.", "Bu d\u0259y\u0259r true olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("This value should be of type {{ type }}.", "Bu d\u0259y\u0259rin tipi {{ type }} olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("This value should be blank.", "Bu d\u0259y\u0259r bo\u015f olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("The value you selected is not a valid choice.", "Se\u00e7diyiniz d\u0259y\u0259r d\u00fczg\u00fcn bir se\u00e7im de\u011fil.", "validators", "az");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u018fn az {{ limit }} se\u00e7im qeyd edilm\u0259lidir.", "validators", "az");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u018fn \u00e7ox {{ limit }} se\u00e7im qeyd edilm\u0259lidir.", "validators", "az");
    Translator.add("One or more of the given values is invalid.", "T\u0259qdim edil\u0259n d\u0259y\u0259rl\u0259rd\u0259n bir v\u0259 ya bir ne\u00e7\u0259si yanl\u0131\u015fd\u0131r.", "validators", "az");
    Translator.add("This field was not expected.", "Bu sah\u0259 g\u00f6zl\u0259nilmirdi.", "validators", "az");
    Translator.add("This field is missing.", "Bu sah\u0259 \u0259ksikdir.", "validators", "az");
    Translator.add("This value is not a valid date.", "Bu d\u0259y\u0259r d\u00fczg\u00fcn bir tarix deyil.", "validators", "az");
    Translator.add("This value is not a valid datetime.", "Bu d\u0259y\u0259r d\u00fczg\u00fcn bir tarixsaat deyil.", "validators", "az");
    Translator.add("This value is not a valid email address.", "Bu d\u0259y\u0259r d\u00fczg\u00fcn bir e-po\u00e7t adresi deyil.", "validators", "az");
    Translator.add("The file could not be found.", "Fayl tap\u0131lmad\u0131.", "validators", "az");
    Translator.add("The file is not readable.", "Fayl oxunabil\u0259n deyil.", "validators", "az");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Fayl \u00e7ox b\u00f6y\u00fckd\u00fcr ({{ size }} {{ suffix }}). \u0130caz\u0259 veril\u0259n maksimum fayl \u00f6l\u00e7\u00fcs\u00fc {{ limit }} {{ suffix }}.", "validators", "az");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Fayl\u0131n mime tipi yanl\u0131\u015fdr ({{ type }}). \u0130caz\u0259 veril\u0259n mime tipl\u0259ri {{ types }}.", "validators", "az");
    Translator.add("This value should be {{ limit }} or less.", "Bu d\u0259y\u0259r {{ limit }} v\u0259 ya alt\u0131nda olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Bu d\u0259y\u0259r \u00e7ox uzundur. {{ limit }} v\u0259 ya daha az simvol olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("This value should be {{ limit }} or more.", "Bu d\u0259y\u0259r {{ limit }} veya daha fazla olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Bu d\u0259y\u0259r \u00e7ox q\u0131sad\u0131r. {{ limit }} v\u0259 ya daha \u00e7ox simvol olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("This value should not be blank.", "Bu d\u0259y\u0259r bo\u015f olmamal\u0131d\u0131r.", "validators", "az");
    Translator.add("This value should not be null.", "Bu d\u0259y\u0259r bo\u015f olmamal\u0131d\u0131r.", "validators", "az");
    Translator.add("This value should be null.", "Bu d\u0259y\u0259r bo\u015f olmamal\u0131d\u0131r.", "validators", "az");
    Translator.add("This value is not valid.", "Bu d\u0259y\u0259r do\u011fru deyil.", "validators", "az");
    Translator.add("This value is not a valid time.", "Bu d\u0259y\u0259r do\u011fru bir saat deyil.", "validators", "az");
    Translator.add("This value is not a valid URL.", "Bu d\u0259y\u0259r do\u011fru bir URL de\u011fil.", "validators", "az");
    Translator.add("The two values should be equal.", "\u0130ki d\u0259y\u0259r eyni olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Fayl \u00e7ox b\u00f6y\u00fckd\u00fcr. \u0130caz\u0259 veril\u0259n \u0259n b\u00f6y\u00fck fayl \u00f6l\u00e7\u00fcs\u00fc {{ limit }} {{ suffix }}.", "validators", "az");
    Translator.add("The file is too large.", "Fayl \u00e7ox b\u00f6y\u00fckd\u00fcr.", "validators", "az");
    Translator.add("The file could not be uploaded.", "Fayl y\u00fckl\u0259n\u0259bilmir.", "validators", "az");
    Translator.add("This value should be a valid number.", "Bu d\u0259y\u0259r r\u0259q\u0259m olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("This file is not a valid image.", "Bu fayl d\u00fczg\u00fcn bir \u015f\u0259kil deyil.", "validators", "az");
    Translator.add("This is not a valid IP address.", "Bu d\u00fczg\u00fcn bir IP adresi deyil.", "validators", "az");
    Translator.add("This value is not a valid language.", "Bu d\u0259y\u0259r d\u00fczg\u00fcn bir dil deyil.", "validators", "az");
    Translator.add("This value is not a valid locale.", "Bu d\u0259y\u0259r d\u00fczg\u00fcn bir dil deyil.", "validators", "az");
    Translator.add("This value is not a valid country.", "Bu d\u0259y\u0259r d\u00fczg\u00fcn bir \u00f6lk\u0259 deyil.", "validators", "az");
    Translator.add("This value is already used.", "Bu d\u0259y\u0259r hal-haz\u0131rda istifad\u0259d\u0259dir.", "validators", "az");
    Translator.add("The size of the image could not be detected.", "\u015e\u0259klin \u00f6l\u00e7\u00fcs\u00fc hesablana bilmir.", "validators", "az");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u015e\u0259klin geni\u015fliyi \u00e7ox b\u00f6y\u00fckd\u00fcr ({{ width }}px). \u0130caz\u0259 veril\u0259n \u0259n b\u00f6y\u00fck geni\u015flik {{ max_width }}px.", "validators", "az");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u015e\u0259klin geni\u015fliyi \u00e7ox ki\u00e7ikdir ({{ width }}px). \u018fn az {{ min_width }}px olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u015e\u0259klin y\u00fcks\u0259kliyi \u00e7ox b\u00f6y\u00fckd\u00fcr ({{ height }}px). \u0130caz\u0259 veril\u0259n \u0259n b\u00f6y\u00fck y\u00fcks\u0259klik {{ max_height }}px.", "validators", "az");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u015e\u0259klin y\u00fcks\u0259kliyi \u00e7ox ki\u00e7ikdir ({{ height }}px). \u018fn az {{ min_height }}px olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("This value should be the user's current password.", "Bu d\u0259y\u0259r istifad\u0259\u00e7inin haz\u0131rk\u0131 parolu olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Bu d\u0259y\u0259r tam olaraq {{ limit }} simvol olmald\u0131r.", "validators", "az");
    Translator.add("The file was only partially uploaded.", "Fayl qism\u0259n y\u00fckl\u0259ndi.", "validators", "az");
    Translator.add("No file was uploaded.", "Fayl y\u00fckl\u0259nm\u0259di.", "validators", "az");
    Translator.add("No temporary folder was configured in php.ini.", "php.ini'd\u0259 m\u00fcv\u0259qq\u0259ti qovluq qura\u015fd\u0131r\u0131lmay\u0131b.", "validators", "az");
    Translator.add("Cannot write temporary file to disk.", "M\u00fcv\u0259qq\u0259ti fayl disk\u0259 yaz\u0131la bilmir.", "validators", "az");
    Translator.add("A PHP extension caused the upload to fail.", "Bir PHP \u0259lav\u0259si fayl\u0131n y\u00fckl\u0259nm\u0259sin\u0259 mane oldu.", "validators", "az");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Bu kolleksiyada {{ limit }} v\u0259 ya daha \u00e7ox element olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Bu kolleksiyada {{ limit }} v\u0259 ya daha az element olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Bu kolleksiyada tam olaraq {{ limit }} element olmal\u0131d\u0131r.", "validators", "az");
    Translator.add("Invalid card number.", "Yanl\u0131\u015f kart n\u00f6mr\u0259si.", "validators", "az");
    Translator.add("Unsupported card type or invalid card number.", "D\u0259st\u0259kl\u0259nm\u0259y\u0259n kart tipi v\u0259 ya yanl\u0131\u015f kart n\u00f6mr\u0259si.", "validators", "az");
    Translator.add("This form should not contain extra fields.", "Bu formada \u0259lav\u0259 sah\u0259 olmamal\u0131d\u0131r.", "validators", "az");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Y\u00fckl\u0259n\u0259n fayl \u00e7ox b\u00f6y\u00fckd\u00fcr. L\u00fctf\u0259n daha ki\u00e7ik fayl y\u00fckl\u0259yin.", "validators", "az");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF ni\u015fan\u0131 yanl\u0131\u015fd\u0131r. L\u00fctfen forman\u0131 yenid\u0259n g\u00f6nd\u0259rin.", "validators", "az");
})(Translator);

(function (Translator) {
    // bg
    Translator.add("This value should be false.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043b\u044a\u0436\u0430 (false).", "validators", "bg");
    Translator.add("This value should be true.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0438\u0441\u0442\u0438\u043d\u0430 (true).", "validators", "bg");
    Translator.add("This value should be of type {{ type }}.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u0442 \u0442\u0438\u043f {{ type }}.", "validators", "bg");
    Translator.add("This value should be blank.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u0440\u0430\u0437\u043d\u0430.", "validators", "bg");
    Translator.add("The value you selected is not a valid choice.", "\u0418\u0437\u0431\u0440\u0430\u043d\u0430\u0442\u0430 \u0441\u0442\u043e\u0439\u043d\u043e\u0441\u0442 \u0435 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u0430.", "validators", "bg");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043f\u043e\u043d\u0435 {{ limit }} \u043e\u043f\u0446\u0438\u044f.|\u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043f\u043e\u043d\u0435 {{ limit }} \u043e\u043f\u0446\u0438\u0438.", "validators", "bg");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043d\u0430\u0439-\u043c\u043d\u043e\u0433\u043e {{ limit }} \u043e\u043f\u0446\u0438\u044f.|\u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043d\u0430\u0439-\u043c\u043d\u043e\u0433\u043e {{ limit }} \u043e\u043f\u0446\u0438\u0438.", "validators", "bg");
    Translator.add("One or more of the given values is invalid.", "\u0415\u0434\u043d\u0430 \u0438\u043b\u0438 \u043f\u043e\u0432\u0435\u0447\u0435 \u043e\u0442 \u0437\u0430\u0434\u0430\u0434\u0435\u043d\u0438\u0442\u0435 \u0441\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0438 \u0435 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u0430.", "validators", "bg");
    Translator.add("This field was not expected.", "\u0422\u043e\u0432\u0430 \u043f\u043e\u043b\u0435 \u043d\u0435 \u0441\u0435 \u0435 \u043e\u0447\u0430\u043a\u0432\u0430\u043b\u043e.", "validators", "bg");
    Translator.add("This field is missing.", "\u0422\u043e\u0432\u0430 \u043f\u043e\u043b\u0435 \u043b\u0438\u043f\u0441\u0432\u0430.", "validators", "bg");
    Translator.add("This value is not a valid date.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u0434\u0430\u0442\u0430 (date).", "validators", "bg");
    Translator.add("This value is not a valid datetime.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u0434\u0430\u0442\u0430 (datetime).", "validators", "bg");
    Translator.add("This value is not a valid email address.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0435 \u0432\u0430\u043b\u0438\u0434\u0435\u043d email \u0430\u0434\u0440\u0435\u0441.", "validators", "bg");
    Translator.add("The file could not be found.", "\u0424\u0430\u0439\u043b\u044a\u0442 \u043d\u0435 \u0431\u0435\u0448\u0435 \u043e\u0442\u043a\u0440\u0438\u0442.", "validators", "bg");
    Translator.add("The file is not readable.", "\u0424\u0430\u0439\u043b\u044a\u0442 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u0440\u043e\u0447\u0435\u0442\u0435\u043d.", "validators", "bg");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0424\u0430\u0439\u043b\u044a\u0442 \u0435 \u0442\u0432\u044a\u0440\u0434\u0435 \u0433\u043e\u043b\u044f\u043c ({{ size }} {{ suffix }}). \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u043d\u0438\u044f\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0435 {{ limit }} {{ suffix }}.", "validators", "bg");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "\u041c\u0430\u0439\u043c \u0442\u0438\u043f\u0430 \u043d\u0430 \u0444\u0430\u0439\u043b\u0430 \u0435 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d ({{ type }}). \u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438 \u043c\u0430\u0439\u043c \u0442\u0438\u043f\u043e\u0432\u0435 \u0441\u0430 {{ types }}.", "validators", "bg");
    Translator.add("This value should be {{ limit }} or less.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 {{ limit }} \u0438\u043b\u0438 \u043f\u043e-\u043c\u0430\u043b\u043a\u043e.", "validators", "bg");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0435 \u0442\u0432\u044a\u0440\u0434\u0435 \u0434\u044a\u043b\u0433\u0430. \u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u044a\u0434\u044a\u0440\u0436\u0430 \u043d\u0430\u0439-\u043c\u043d\u043e\u0433\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b.|\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0435 \u0442\u0432\u044a\u0440\u0434\u0435 \u0434\u044a\u043b\u0433\u0430. \u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u044a\u0434\u044a\u0440\u0436\u0430 \u043d\u0430\u0439-\u043c\u043d\u043e\u0433\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430.", "validators", "bg");
    Translator.add("This value should be {{ limit }} or more.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 {{ limit }} \u0438\u043b\u0438 \u043f\u043e\u0432\u0435\u0447\u0435.", "validators", "bg");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0435 \u0442\u0432\u044a\u0440\u0434\u0435 \u043a\u0440\u0430\u0442\u043a\u0430. \u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u044a\u0434\u044a\u0440\u0436\u0430 \u043f\u043e\u043d\u0435 {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b.|\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0435 \u0442\u0432\u044a\u0440\u0434\u0435 \u043a\u0440\u0430\u0442\u043a\u0430. \u0422\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u044a\u0434\u044a\u0440\u0436\u0430 \u043f\u043e\u043d\u0435 {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430.", "validators", "bg");
    Translator.add("This value should not be blank.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u0440\u0430\u0437\u043d\u0430.", "validators", "bg");
    Translator.add("This value should not be null.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 null.", "validators", "bg");
    Translator.add("This value should be null.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 null.", "validators", "bg");
    Translator.add("This value is not valid.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u0430.", "validators", "bg");
    Translator.add("This value is not a valid time.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u043e \u0432\u0440\u0435\u043c\u0435 (time).", "validators", "bg");
    Translator.add("This value is not a valid URL.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0435 \u0432\u0430\u043b\u0438\u0434\u0435\u043d URL.", "validators", "bg");
    Translator.add("The two values should be equal.", "\u0414\u0432\u0435\u0442\u0435 \u0441\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0438 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0430\u0442 \u0440\u0430\u0432\u043d\u0438.", "validators", "bg");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0424\u0430\u0439\u043b\u044a\u0442 \u0435 \u0442\u0432\u044a\u0440\u0434\u0435 \u0433\u043e\u043b\u044f\u043c. \u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u0435\u043d \u0440\u0430\u0437\u043c\u0435\u0440 \u0435 {{ limit }} {{ suffix }}.", "validators", "bg");
    Translator.add("The file is too large.", "\u0424\u0430\u0439\u043b\u044a\u0442 \u0435 \u0442\u0432\u044a\u0440\u0434\u0435 \u0433\u043e\u043b\u044f\u043c.", "validators", "bg");
    Translator.add("The file could not be uploaded.", "\u0424\u0430\u0439\u043b\u044a\u0442 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043a\u0430\u0447\u0435\u043d.", "validators", "bg");
    Translator.add("This value should be a valid number.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0432\u0430\u043b\u0438\u0434\u0435\u043d \u043d\u043e\u043c\u0435\u0440.", "validators", "bg");
    Translator.add("This file is not a valid image.", "\u0424\u0430\u0439\u043b\u044a\u0442 \u043d\u0435 \u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435.", "validators", "bg");
    Translator.add("This is not a valid IP address.", "\u0422\u043e\u0432\u0430 \u043d\u0435 \u0435 \u0432\u0430\u043b\u0438\u0434\u0435\u043d IP \u0430\u0434\u0440\u0435\u0441.", "validators", "bg");
    Translator.add("This value is not a valid language.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0435 \u0432\u0430\u043b\u0438\u0434\u0435\u043d \u0435\u0437\u0438\u043a.", "validators", "bg");
    Translator.add("This value is not a valid locale.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f.", "validators", "bg");
    Translator.add("This value is not a valid country.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u0434\u044a\u0440\u0436\u0430\u0432\u0430.", "validators", "bg");
    Translator.add("This value is already used.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0432\u0435\u0447\u0435 \u0435 \u0432 \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u0430.", "validators", "bg");
    Translator.add("The size of the image could not be detected.", "\u0420\u0430\u0437\u043c\u0435\u0440\u0430 \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u043d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d.", "validators", "bg");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u0435 \u0442\u0432\u044a\u0440\u0434\u0435 \u0448\u0438\u0440\u043e\u043a\u043e ({{ width }}px). \u0428\u0438\u0440\u043e\u0447\u0438\u043d\u0430\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c {{ max_width }}px.", "validators", "bg");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u0435 \u0441 \u0442\u0432\u044a\u0440\u0434\u0435 \u043c\u0430\u043b\u043a\u0430 \u0448\u0438\u0440\u043e\u0447\u0438\u043d\u0430 ({{ width }}px). \u0428\u0438\u0440\u043e\u0447\u0438\u043d\u0430\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043c\u0438\u043d\u0438\u043c\u0443\u043c {{ min_width }}px.", "validators", "bg");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u0435 \u0441 \u0442\u0432\u044a\u0440\u0434\u0435 \u0433\u043e\u043b\u044f\u043c\u0430 \u0432\u0438\u0441\u043e\u0447\u0438\u043d\u0430 ({{ height }}px). \u0412\u0438\u0441\u043e\u0447\u0438\u043d\u0430\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c {{ max_height }}px.", "validators", "bg");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u0435 \u0441 \u0442\u0432\u044a\u0440\u0434\u0435 \u043c\u0430\u043b\u043a\u0430 \u0432\u0438\u0441\u043e\u0447\u0438\u043d\u0430 ({{ height }}px). \u0412\u0438\u0441\u043e\u0447\u0438\u043d\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043c\u0438\u043d\u0438\u043c\u0443\u043c {{ min_height }}px.", "validators", "bg");
    Translator.add("This value should be the user's current password.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0442\u0435\u043a\u0443\u0449\u0430\u0442\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u0441\u043a\u0430 \u043f\u0430\u0440\u043e\u043b\u0430.", "validators", "bg");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0442\u043e\u0447\u043d\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b.|\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0442\u043e\u0447\u043d\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430.", "validators", "bg");
    Translator.add("The file was only partially uploaded.", "\u0424\u0430\u0439\u043b\u044a\u0442 \u0435 \u043a\u0430\u0447\u0435\u043d \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e.", "validators", "bg");
    Translator.add("No file was uploaded.", "\u0424\u0430\u0439\u043b\u044a\u0442 \u043d\u0435 \u0431\u0435\u0448\u0435 \u043a\u0430\u0447\u0435\u043d.", "validators", "bg");
    Translator.add("No temporary folder was configured in php.ini.", "\u041d\u0435 \u0435 \u043f\u043e\u0441\u043e\u0447\u0435\u043d\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u0437\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435 \u0432 php.ini.", "validators", "bg");
    Translator.add("Cannot write temporary file to disk.", "\u041d\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0437\u0430\u043f\u0438\u0448\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043d \u0444\u0430\u0439\u043b \u043d\u0430 \u0434\u0438\u0441\u043a\u0430.", "validators", "bg");
    Translator.add("A PHP extension caused the upload to fail.", "PHP \u0440\u0430\u0437\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u0438\u0437\u0432\u0438\u043a\u0430 \u043f\u0440\u0435\u043a\u044a\u0441\u0432\u0430\u043d\u0435 \u043d\u0430 \u043a\u0430\u0447\u0432\u0430\u043d\u0435\u0442\u043e.", "validators", "bg");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "\u041a\u043e\u043b\u0435\u043a\u0446\u0438\u044f\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u044a\u0434\u044a\u0440\u0436\u0430 \u043f\u043e\u043d\u0435 {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442.|\u041a\u043e\u043b\u0435\u043a\u0446\u0438\u044f\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u044a\u0434\u044a\u0440\u0436\u0430 \u043f\u043e\u043d\u0435 {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430.", "validators", "bg");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u041a\u043e\u043b\u0435\u043a\u0446\u0438\u044f\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u044a\u0434\u044a\u0440\u0436\u0430 \u043d\u0430\u0439-\u043c\u043d\u043e\u0433\u043e {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442.|\u041a\u043e\u043b\u0435\u043a\u0446\u0438\u044f\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u044a\u0434\u044a\u0440\u0436\u0430 \u043d\u0430\u0439-\u043c\u043d\u043e\u0433\u043e {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430.", "validators", "bg");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u041a\u043e\u043b\u0435\u043a\u0446\u0438\u044f\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u044a\u0434\u044a\u0440\u0436\u0430 \u0442\u043e\u0447\u043d\u043e {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442.|\u041a\u043e\u043b\u0435\u043a\u0446\u0438\u044f\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u044a\u0434\u044a\u0440\u0436\u0430 \u0442\u043e\u0447\u043d\u043e {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430.", "validators", "bg");
    Translator.add("Invalid card number.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d \u043d\u043e\u043c\u0435\u0440 \u043d\u0430 \u043a\u0430\u0440\u0442\u0430\u0442\u0430.", "validators", "bg");
    Translator.add("Unsupported card type or invalid card number.", "\u041d\u0435\u043f\u043e\u0434\u0434\u044a\u0440\u0436\u0430\u043d \u0442\u0438\u043f \u043a\u0430\u0440\u0442\u0430 \u0438\u043b\u0438 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d \u043d\u043e\u043c\u0435\u0440 \u043d\u0430 \u043a\u0430\u0440\u0442\u0430\u0442\u0430.", "validators", "bg");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d \u041c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u0435\u043d \u043d\u043e\u043c\u0435\u0440 \u043d\u0430 \u0431\u0430\u043d\u043a\u043e\u0432\u0430 \u0441\u043c\u0435\u0442\u043a\u0430 (IBAN).", "validators", "bg");
    Translator.add("This value is not a valid ISBN-10.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d ISBN-10.", "validators", "bg");
    Translator.add("This value is not a valid ISBN-13.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d ISBN-13.", "validators", "bg");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u0441\u0442\u043e\u0439\u043d\u043e\u0441\u0442 \u043a\u0430\u043a\u0442\u043e \u0437\u0430 ISBN-10, \u0442\u0430\u043a\u0430 \u0438 \u0437\u0430 ISBN-13 .", "validators", "bg");
    Translator.add("This value is not a valid ISSN.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d \u041c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u0435\u043d \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0435\u043d \u0441\u0435\u0440\u0438\u0435\u043d \u043d\u043e\u043c\u0435\u0440 (ISSN).", "validators", "bg");
    Translator.add("This value is not a valid currency.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u0432\u0430\u043b\u0443\u0442\u0430.", "validators", "bg");
    Translator.add("This value should be equal to {{ compared_value }}.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0440\u0430\u0432\u043d\u0430 \u043d\u0430 {{ compared_value }}.", "validators", "bg");
    Translator.add("This value should be greater than {{ compared_value }}.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u043e-\u0433\u043e\u043b\u044f\u043c\u0430 \u043e\u0442 {{ compared_value }}.", "validators", "bg");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u043e-\u0433\u043e\u043b\u044f\u043c\u0430 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u0430 \u043d\u0430 {{ compared_value }}.", "validators", "bg");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u0441 {{ compared_value_type }} {{ compared_value }}.", "validators", "bg");
    Translator.add("This value should be less than {{ compared_value }}.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u043e-\u043c\u0430\u043b\u043a\u0430 {{ compared_value }}.", "validators", "bg");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043f\u043e-\u043c\u0430\u043b\u043a\u0430 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u0430 \u043d\u0430 {{ compared_value }}.", "validators", "bg");
    Translator.add("This value should not be equal to {{ compared_value }}.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0440\u0430\u0432\u043d\u0430 \u043d\u0430 {{ compared_value }}.", "validators", "bg");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u0441 {{ compared_value_type }} {{ compared_value }}.", "validators", "bg");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u0435 \u0441 \u0442\u0432\u044a\u0440\u0434\u0435 \u0433\u043e\u043b\u044f\u043c\u0430 \u043f\u0440\u043e\u043f\u043e\u0440\u0446\u0438\u044f ({{ ratio }}). \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u043d\u0430\u0442\u0430 \u043f\u0440\u043e\u043f\u043e\u0440\u0446\u0438\u044f \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0435 {{ max_ratio }}.", "validators", "bg");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u0435 \u0441 \u0442\u0432\u044a\u0440\u0434\u0435 \u043c\u0430\u043b\u043a\u0430 \u043f\u0440\u043e\u043f\u043e\u0440\u0446\u0438\u044f ({{ ratio }}). \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u043d\u0430\u0442\u0430 \u043f\u0440\u043e\u043f\u043e\u0440\u0446\u0438\u044f \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0435 {{ min_ratio }}.", "validators", "bg");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442 ({{ width }}x{{ height }}px). \u0422\u0430\u043a\u0438\u0432\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0435 \u0441\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438.", "validators", "bg");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u0435 \u0441 \u043f\u0435\u0439\u0437\u0430\u0436\u043d\u0430 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f ({{ width }}x{{ height }}px). \u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441 \u0442\u0430\u043a\u0430\u0432\u0430 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043d\u0435 \u0441\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438.", "validators", "bg");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u0435 \u0441 \u043f\u043e\u0440\u0442\u0440\u0435\u0442\u043d\u0430 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f ({{ width }}x{{ height }}px). \u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441 \u0442\u0430\u043a\u0430\u0432\u0430 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043d\u0435 \u0441\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438.", "validators", "bg");
    Translator.add("An empty file is not allowed.", "\u041f\u0440\u0430\u0437\u043d\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435 \u043d\u0435 \u0441\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438.", "validators", "bg");
    Translator.add("The host could not be resolved.", "\u0425\u043e\u0441\u0442\u044a\u0442 \u0435 \u043d\u0435\u0434\u043e\u0441\u0442\u044a\u043f\u0435\u043d.", "validators", "bg");
    Translator.add("This value does not match the expected {{ charset }} charset.", "\u0421\u0442\u043e\u0439\u043d\u043e\u0441\u0442\u0442\u0430 \u043d\u0435 \u0441\u044a\u0432\u043f\u0430\u0434\u0430 \u0441 {{ charset }}.", "validators", "bg");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d \u0431\u0438\u0437\u043d\u0435\u0441 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u0435\u043d \u043a\u043e\u0434 (BIC).", "validators", "bg");
    Translator.add("This form should not contain extra fields.", "\u0422\u0430\u0437\u0438 \u0444\u043e\u0440\u043c\u0430 \u043d\u0435 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u044a\u0434\u044a\u0440\u0436\u0430 \u0434\u043e\u043f\u044a\u043b\u043d\u0438\u0442\u0435\u043b\u043d\u0438 \u043f\u043e\u043b\u0435\u0442\u0430.", "validators", "bg");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u041a\u0430\u0447\u0435\u043d\u0438\u044f\u0442 \u0444\u0430\u0439\u043b \u0435 \u0442\u0432\u044a\u0440\u0434\u0435 \u0433\u043e\u043b\u044f\u043c. \u041c\u043e\u043b\u044f, \u043e\u043f\u0438\u0442\u0430\u0439\u0442\u0435 \u0434\u0430 \u043a\u0430\u0447\u0438\u0442\u0435 \u043f\u043e-\u043c\u0430\u043b\u044a\u043a \u0444\u0430\u0439\u043b.", "validators", "bg");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d CSRF \u0442\u043e\u043a\u0435\u043d. \u041c\u043e\u043b\u044f, \u043e\u043f\u0438\u0442\u0430\u0439\u0442\u0435 \u0434\u0430 \u0438\u0437\u043f\u0440\u0430\u0442\u0438\u0442\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u043e\u0442\u043d\u043e\u0432\u043e.", "validators", "bg");
})(Translator);

(function (Translator) {
    // ca
    Translator.add("This value should be false.", "Aquest valor hauria de ser fals.", "validators", "ca");
    Translator.add("This value should be true.", "Aquest valor hauria de ser cert.", "validators", "ca");
    Translator.add("This value should be of type {{ type }}.", "Aquest valor hauria de ser del tipus {{ type }}.", "validators", "ca");
    Translator.add("This value should be blank.", "Aquest valor hauria d'estar buit.", "validators", "ca");
    Translator.add("The value you selected is not a valid choice.", "El valor seleccionat no \u00e9s una opci\u00f3 v\u00e0lida.", "validators", "ca");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Ha de seleccionar almenys {{ limit }} opci\u00f3.|Ha de seleccionar almenys {{ limit }} opcions.", "validators", "ca");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Ha de seleccionar com a m\u00e0xim {{ limit }} opci\u00f3.|Ha de seleccionar com a m\u00e0xim {{ limit }} opcions.", "validators", "ca");
    Translator.add("One or more of the given values is invalid.", "Un o m\u00e9s dels valors facilitats s\u00f3n incorrectes.", "validators", "ca");
    Translator.add("This field was not expected.", "Aquest camp no s'esperava.", "validators", "ca");
    Translator.add("This field is missing.", "Aquest camp est\u00e0 desaparegut.", "validators", "ca");
    Translator.add("This value is not a valid date.", "Aquest valor no \u00e9s una data v\u00e0lida.", "validators", "ca");
    Translator.add("This value is not a valid datetime.", "Aquest valor no \u00e9s una data i hora v\u00e0lida.", "validators", "ca");
    Translator.add("This value is not a valid email address.", "Aquest valor no \u00e9s una adre\u00e7a d'email v\u00e0lida.", "validators", "ca");
    Translator.add("The file could not be found.", "No s'ha pogut trobar l'arxiu.", "validators", "ca");
    Translator.add("The file is not readable.", "No es pot llegir l'arxiu.", "validators", "ca");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "L'arxiu \u00e9s massa gran ({{ size }} {{ suffix }}). La grand\u00e0ria m\u00e0xima permesa \u00e9s {{ limit }} {{ suffix }}.", "validators", "ca");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "El tipus mime de l'arxiu no \u00e9s v\u00e0lid ({{ type }}). Els tipus mime v\u00e0lids s\u00f3n {{ types }}.", "validators", "ca");
    Translator.add("This value should be {{ limit }} or less.", "Aquest valor hauria de ser {{ limit }} o menys.", "validators", "ca");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Aquest valor \u00e9s massa llarg. Hauria de tenir {{ limit }} car\u00e0cter o menys.|Aquest valor \u00e9s massa llarg. Hauria de tenir {{ limit }} car\u00e0cters o menys.", "validators", "ca");
    Translator.add("This value should be {{ limit }} or more.", "Aquest valor hauria de ser {{ limit }} o m\u00e9s.", "validators", "ca");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Aquest valor \u00e9s massa curt. Hauria de tenir {{ limit }} car\u00e0cters o m\u00e9s.", "validators", "ca");
    Translator.add("This value should not be blank.", "Aquest valor no hauria d'estar buit.", "validators", "ca");
    Translator.add("This value should not be null.", "Aquest valor no hauria de ser null.", "validators", "ca");
    Translator.add("This value should be null.", "Aquest valor hauria de ser null.", "validators", "ca");
    Translator.add("This value is not valid.", "Aquest valor no \u00e9s v\u00e0lid.", "validators", "ca");
    Translator.add("This value is not a valid time.", "Aquest valor no \u00e9s una hora v\u00e0lida.", "validators", "ca");
    Translator.add("This value is not a valid URL.", "Aquest valor no \u00e9s una URL v\u00e0lida.", "validators", "ca");
    Translator.add("The two values should be equal.", "Els dos valors haurien de ser iguals.", "validators", "ca");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "L'arxiu \u00e9s massa gran. El tamany m\u00e0xim perm\u00e9s \u00e9s {{ limit }} {{ suffix }}.", "validators", "ca");
    Translator.add("The file is too large.", "L'arxiu \u00e9s massa gran.", "validators", "ca");
    Translator.add("The file could not be uploaded.", "No es pot pujar l'arxiu.", "validators", "ca");
    Translator.add("This value should be a valid number.", "Aquest valor hauria de ser un nombre v\u00e0lid.", "validators", "ca");
    Translator.add("This file is not a valid image.", "L'arxiu no \u00e9s una imatge v\u00e0lida.", "validators", "ca");
    Translator.add("This is not a valid IP address.", "Aix\u00f2 no \u00e9s una adre\u00e7a IP v\u00e0lida.", "validators", "ca");
    Translator.add("This value is not a valid language.", "Aquest valor no \u00e9s un idioma v\u00e0lid.", "validators", "ca");
    Translator.add("This value is not a valid locale.", "Aquest valor no \u00e9s una localitzaci\u00f3 v\u00e0lida.", "validators", "ca");
    Translator.add("This value is not a valid country.", "Aquest valor no \u00e9s un pa\u00eds v\u00e0lid.", "validators", "ca");
    Translator.add("This value is already used.", "Aquest valor ja s'ha utilitzat.", "validators", "ca");
    Translator.add("The size of the image could not be detected.", "No s'ha pogut determinar la grand\u00e0ria de la imatge.", "validators", "ca");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "L'ampl\u00e0ria de la imatge \u00e9s massa gran ({{ width }}px). L'ampl\u00e0ria m\u00e0xima permesa s\u00f3n {{ max_width }}px.", "validators", "ca");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "L'ampl\u00e0ria de la imatge \u00e9s massa petita ({{ width }}px). L'ampl\u00e0ria m\u00ednima requerida s\u00f3n {{ min_width }}px.", "validators", "ca");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "L'altura de la imatge \u00e9s massa gran ({{ height }}px). L'altura m\u00e0xima permesa s\u00f3n {{ max_height }}px.", "validators", "ca");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "L'altura de la imatge \u00e9s massa petita ({{ height }}px). L'altura m\u00ednima requerida s\u00f3n {{ min_height }}px.", "validators", "ca");
    Translator.add("This value should be the user's current password.", "Aquest valor hauria de ser la contrasenya actual de l'usuari.", "validators", "ca");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Aquest valor hauria de tenir exactament {{ limit }} car\u00e0cter.|Aquest valor hauria de tenir exactament {{ limit }} car\u00e0cters.", "validators", "ca");
    Translator.add("The file was only partially uploaded.", "L'arxiu va ser nom\u00e9s pujat parcialment.", "validators", "ca");
    Translator.add("No file was uploaded.", "Cap arxiu va ser pujat.", "validators", "ca");
    Translator.add("No temporary folder was configured in php.ini.", "Cap carpeta temporal va ser configurada en php.ini.", "validators", "ca");
    Translator.add("Cannot write temporary file to disk.", "No es va poder escriure l'arxiu temporal en el disc.", "validators", "ca");
    Translator.add("A PHP extension caused the upload to fail.", "Una extensi\u00f3 de PHP va fer que la pujada fallara.", "validators", "ca");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Aquesta col\u00b7lecci\u00f3 ha de contenir {{ limit }} element o m\u00e9s.|Aquesta col\u00b7lecci\u00f3 ha de contenir {{ limit }} elements o m\u00e9s.", "validators", "ca");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Aquesta col\u00b7lecci\u00f3 ha de contenir {{ limit }} element o menys.|Aquesta col\u00b7lecci\u00f3 ha de contenir {{ limit }} elements o menys.", "validators", "ca");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Aquesta col\u00b7lecci\u00f3 ha de contenir exactament {{ limit }} element.|Aquesta col\u00b7lecci\u00f3 ha de contenir exactament {{ limit }} elements.", "validators", "ca");
    Translator.add("Invalid card number.", "N\u00famero de targeta inv\u00e0lid.", "validators", "ca");
    Translator.add("Unsupported card type or invalid card number.", "Tipus de targeta no suportada o n\u00famero de targeta inv\u00e0lid.", "validators", "ca");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Aix\u00f2 no \u00e9s un nombre de compte bancari internacional (IBAN) v\u00e0lid.", "validators", "ca");
    Translator.add("This value is not a valid ISBN-10.", "Aquest valor no \u00e9s un ISBN-10 v\u00e0lid.", "validators", "ca");
    Translator.add("This value is not a valid ISBN-13.", "Aquest valor no \u00e9s un ISBN-13 v\u00e0lid.", "validators", "ca");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Aquest valor no \u00e9s ni un ISBN-10 v\u00e0lid ni un ISBN-13 v\u00e0lid.", "validators", "ca");
    Translator.add("This value is not a valid ISSN.", "Aquest valor no \u00e9s un ISSN v\u00e0lid.", "validators", "ca");
    Translator.add("This value is not a valid currency.", "Aquest valor no \u00e9s una divisa v\u00e0lida.", "validators", "ca");
    Translator.add("This value should be equal to {{ compared_value }}.", "Aquest valor hauria de ser igual a {{ compared_value }}.", "validators", "ca");
    Translator.add("This value should be greater than {{ compared_value }}.", "Aquest valor hauria de ser m\u00e9s gran a {{ compared_value }}.", "validators", "ca");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Aquest valor hauria de ser major o igual a {{ compared_value }}.", "validators", "ca");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Aquest valor hauria de ser id\u00e8ntic a {{ compared_value_type }} {{ compared_value }}.", "validators", "ca");
    Translator.add("This value should be less than {{ compared_value }}.", "Aquest valor hauria de ser menor a {{ compared_value }}.", "validators", "ca");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Aquest valor hauria de ser menor o igual a {{ compared_value }}.", "validators", "ca");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Aquest valor no hauria de ser igual a {{ compared_value }}.", "validators", "ca");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Aquest valor no hauria de id\u00e8ntic a {{ compared_value_type }} {{ compared_value }}.", "validators", "ca");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "La proporci\u00f3 de l'imatge \u00e9s massa gran ({{ ratio }}). La m\u00e0xima proporci\u00f3 permesa \u00e9s {{ max_ratio }}.", "validators", "ca");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "La proporci\u00f3 de l'imatge \u00e9s massa petita ({{ ratio }}). La m\u00ednima proporci\u00f3 permesa \u00e9s {{ max_ratio }}.", "validators", "ca");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "L'imatge \u00e9s quadrada({{ width }}x{{ height }}px). Les imatges quadrades no estan permeses.", "validators", "ca");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "L'imatge est\u00e0 orientada horitzontalment ({{ width }}x{{ height }}px). Les imatges orientades horitzontalment no estan permeses.", "validators", "ca");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "L'imatge est\u00e0 orientada verticalment ({{ width }}x{{ height }}px). Les imatges orientades verticalment no estan permeses.", "validators", "ca");
    Translator.add("An empty file is not allowed.", "No est\u00e0 perm\u00e8s un fixter buit.", "validators", "ca");
    Translator.add("This form should not contain extra fields.", "Aquest formulari no hauria de contenir camps addicionals.", "validators", "ca");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "L'arxiu pujat \u00e9s massa gran. Per favor, pugi un arxiu m\u00e9s petit.", "validators", "ca");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "El token CSRF no \u00e9s v\u00e0lid. Per favor, provi d'enviar novament el formulari.", "validators", "ca");
})(Translator);

(function (Translator) {
    // cs
    Translator.add("This value should be false.", "Tato hodnota mus\u00ed b\u00fdt nepravdiv\u00e1 (false).", "validators", "cs");
    Translator.add("This value should be true.", "Tato hodnota mus\u00ed b\u00fdt pravdiv\u00e1 (true).", "validators", "cs");
    Translator.add("This value should be of type {{ type }}.", "Tato hodnota mus\u00ed b\u00fdt typu {{ type }}.", "validators", "cs");
    Translator.add("This value should be blank.", "Tato hodnota mus\u00ed b\u00fdt pr\u00e1zdn\u00e1.", "validators", "cs");
    Translator.add("The value you selected is not a valid choice.", "Vybran\u00e1 hodnota nen\u00ed platnou mo\u017enost\u00ed.", "validators", "cs");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Mus\u00ed b\u00fdt vybr\u00e1na nejm\u00e9n\u011b {{ limit }} mo\u017enost.|Mus\u00ed b\u00fdt vybr\u00e1ny nejm\u00e9n\u011b {{ limit }} mo\u017enosti.|Mus\u00ed b\u00fdt vybr\u00e1no nejm\u00e9n\u011b {{ limit }} mo\u017enost\u00ed.", "validators", "cs");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Mus\u00ed b\u00fdt vybr\u00e1na maxim\u00e1ln\u011b {{ limit }} mo\u017enost.|Mus\u00ed b\u00fdt vybr\u00e1ny maxim\u00e1ln\u011b {{ limit }} mo\u017enosti.|Mus\u00ed b\u00fdt vybr\u00e1no maxim\u00e1ln\u011b {{ limit }} mo\u017enost\u00ed.", "validators", "cs");
    Translator.add("One or more of the given values is invalid.", "N\u011bkter\u00e9 z uveden\u00fdch hodnot jsou neplatn\u00e9.", "validators", "cs");
    Translator.add("This field was not expected.", "Toto pole nebyla o\u010dek\u00e1v\u00e1na.", "validators", "cs");
    Translator.add("This field is missing.", "Toto pole chyb\u00ed.", "validators", "cs");
    Translator.add("This value is not a valid date.", "Tato hodnota nen\u00ed platn\u00e9 datum.", "validators", "cs");
    Translator.add("This value is not a valid datetime.", "Tato hodnota nen\u00ed platn\u00e9 datum s \u010dasov\u00fdm \u00fadajem.", "validators", "cs");
    Translator.add("This value is not a valid email address.", "Tato hodnota nen\u00ed platn\u00e1 e-mailov\u00e1 adresa.", "validators", "cs");
    Translator.add("The file could not be found.", "Soubor nebyl nalezen.", "validators", "cs");
    Translator.add("The file is not readable.", "Soubor je ne\u010diteln\u00fd.", "validators", "cs");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Soubor je p\u0159\u00edli\u0161 velk\u00fd ({{ size }} {{ suffix }}). Maxim\u00e1ln\u00ed povolen\u00e1 velikost souboru je {{ limit }} {{ suffix }}.", "validators", "cs");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Neplatn\u00fd mime typ souboru ({{ type }}). Povolen\u00e9 mime typy soubor\u016f jsou {{ types }}.", "validators", "cs");
    Translator.add("This value should be {{ limit }} or less.", "Tato hodnota mus\u00ed b\u00fdt {{ limit }} nebo m\u00e9n\u011b.", "validators", "cs");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Tato hodnota je p\u0159\u00edli\u0161 dlouh\u00e1. Mus\u00ed obsahovat maxim\u00e1ln\u011b {{ limit }} znak.|Tato hodnota je p\u0159\u00edli\u0161 dlouh\u00e1. Mus\u00ed obsahovat maxim\u00e1ln\u011b {{ limit }} znaky.|Tato hodnota je p\u0159\u00edli\u0161 dlouh\u00e1. Mus\u00ed obsahovat maxim\u00e1ln\u011b {{ limit }} znak\u016f.", "validators", "cs");
    Translator.add("This value should be {{ limit }} or more.", "Tato hodnota mus\u00ed b\u00fdt {{ limit }} nebo v\u00edce.", "validators", "cs");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Tato hodnota je p\u0159\u00edli\u0161 kr\u00e1tk\u00e1. Mus\u00ed obsahovat minim\u00e1ln\u011b {{ limit }} znak.|Tato hodnota je p\u0159\u00edli\u0161 kr\u00e1tk\u00e1. Mus\u00ed obsahovat minim\u00e1ln\u011b {{ limit }} znaky.|Tato hodnota je p\u0159\u00edli\u0161 kr\u00e1tk\u00e1. Mus\u00ed obsahovat minim\u00e1ln\u011b {{ limit }} znak\u016f.", "validators", "cs");
    Translator.add("This value should not be blank.", "Tato hodnota nesm\u00ed b\u00fdt pr\u00e1zdn\u00e1.", "validators", "cs");
    Translator.add("This value should not be null.", "Tato hodnota nesm\u00ed b\u00fdt null.", "validators", "cs");
    Translator.add("This value should be null.", "Tato hodnota mus\u00ed b\u00fdt null.", "validators", "cs");
    Translator.add("This value is not valid.", "Tato hodnota nen\u00ed platn\u00e1.", "validators", "cs");
    Translator.add("This value is not a valid time.", "Tato hodnota nen\u00ed platn\u00fd \u010dasov\u00fd \u00fadaj.", "validators", "cs");
    Translator.add("This value is not a valid URL.", "Tato hodnota nen\u00ed platn\u00e1 URL adresa.", "validators", "cs");
    Translator.add("The two values should be equal.", "Tyto dv\u011b hodnoty mus\u00ed b\u00fdt stejn\u00e9.", "validators", "cs");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Soubor je p\u0159\u00edli\u0161 velk\u00fd. Maxim\u00e1ln\u00ed povolen\u00e1 velikost souboru je {{ limit }} {{ suffix }}.", "validators", "cs");
    Translator.add("The file is too large.", "Soubor je p\u0159\u00edli\u0161 velk\u00fd.", "validators", "cs");
    Translator.add("The file could not be uploaded.", "Soubor se nepoda\u0159ilo nahr\u00e1t.", "validators", "cs");
    Translator.add("This value should be a valid number.", "Tato hodnota mus\u00ed b\u00fdt \u010d\u00edslo.", "validators", "cs");
    Translator.add("This file is not a valid image.", "Tento soubor nen\u00ed obr\u00e1zek.", "validators", "cs");
    Translator.add("This is not a valid IP address.", "Toto nen\u00ed platn\u00e1 IP adresa.", "validators", "cs");
    Translator.add("This value is not a valid language.", "Tento jazyk neexistuje.", "validators", "cs");
    Translator.add("This value is not a valid locale.", "Tato lokalizace neexistuje.", "validators", "cs");
    Translator.add("This value is not a valid country.", "Tato zem\u011b neexistuje.", "validators", "cs");
    Translator.add("This value is already used.", "Tato hodnota je ji\u017e pou\u017e\u00edv\u00e1na.", "validators", "cs");
    Translator.add("The size of the image could not be detected.", "Nepoda\u0159ily se zjistit rozm\u011bry obr\u00e1zku.", "validators", "cs");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Obr\u00e1zek je p\u0159\u00edli\u0161 \u0161irok\u00fd ({{ width }}px). Maxim\u00e1ln\u00ed povolen\u00e1 \u0161\u00ed\u0159ka obr\u00e1zku je {{ max_width }}px.", "validators", "cs");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Obr\u00e1zek je p\u0159\u00edli\u0161 \u00fazk\u00fd ({{ width }}px). Minim\u00e1ln\u00ed \u0161\u00ed\u0159ka mus\u00ed b\u00fdt {{ min_width }}px.", "validators", "cs");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Obr\u00e1zek je p\u0159\u00edli\u0161 vysok\u00fd ({{ height }}px). Maxim\u00e1ln\u00ed povolen\u00e1 v\u00fd\u0161ka obr\u00e1zku je {{ max_height }}px.", "validators", "cs");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Obr\u00e1zek je p\u0159\u00edli\u0161 n\u00edzk\u00fd ({{ height }}px). Minim\u00e1ln\u00ed v\u00fd\u0161ka obr\u00e1zku mus\u00ed b\u00fdt {{ min_height }}px.", "validators", "cs");
    Translator.add("This value should be the user's current password.", "Tato hodnota mus\u00ed b\u00fdt aktu\u00e1ln\u00ed heslo u\u017eivatele.", "validators", "cs");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Tato hodnota mus\u00ed m\u00edt p\u0159esn\u011b {{ limit }} znak.|Tato hodnota mus\u00ed m\u00edt p\u0159esn\u011b {{ limit }} znaky.|Tato hodnota mus\u00ed m\u00edt p\u0159esn\u011b {{ limit }} znak\u016f.", "validators", "cs");
    Translator.add("The file was only partially uploaded.", "Byla nahr\u00e1na jen \u010d\u00e1st souboru.", "validators", "cs");
    Translator.add("No file was uploaded.", "\u017d\u00e1dn\u00fd soubor nebyl nahr\u00e1n.", "validators", "cs");
    Translator.add("No temporary folder was configured in php.ini.", "V php.ini nen\u00ed nastavena cesta k adres\u00e1\u0159i pro do\u010dasn\u00e9 soubory.", "validators", "cs");
    Translator.add("Cannot write temporary file to disk.", "Do\u010dasn\u00fd soubor se nepoda\u0159ilo zapsat na disk.", "validators", "cs");
    Translator.add("A PHP extension caused the upload to fail.", "Roz\u0161\u00ed\u0159en\u00ed PHP zabr\u00e1nilo nahr\u00e1n\u00ed souboru.", "validators", "cs");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Tato kolekce mus\u00ed obsahovat minim\u00e1ln\u011b {{ limit }} prvek.|Tato kolekce mus\u00ed obsahovat minim\u00e1ln\u011b {{ limit }} prvky.|Tato kolekce mus\u00ed obsahovat minim\u00e1ln\u011b {{ limit }} prvk\u016f.", "validators", "cs");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Tato kolekce mus\u00ed obsahovat maxim\u00e1ln\u011b {{ limit }} prvek.|Tato kolekce mus\u00ed obsahovat maxim\u00e1ln\u011b {{ limit }} prvky.|Tato kolekce mus\u00ed obsahovat maxim\u00e1ln\u011b {{ limit }} prvk\u016f.", "validators", "cs");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Tato kolekce mus\u00ed obsahovat p\u0159esn\u011b {{ limit }} prvek.|Tato kolekce mus\u00ed obsahovat p\u0159esn\u011b {{ limit }} prvky.|Tato kolekce mus\u00ed obsahovat p\u0159esn\u011b {{ limit }} prvk\u016f.", "validators", "cs");
    Translator.add("Invalid card number.", "Neplatn\u00e9 \u010d\u00edslo karty.", "validators", "cs");
    Translator.add("Unsupported card type or invalid card number.", "Nepodporovan\u00fd typ karty nebo neplatn\u00e9 \u010d\u00edslo karty.", "validators", "cs");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Toto je neplatn\u00fd IBAN.", "validators", "cs");
    Translator.add("This value is not a valid ISBN-10.", "Tato hodnota nen\u00ed platn\u00e9 ISBN-10.", "validators", "cs");
    Translator.add("This value is not a valid ISBN-13.", "Tato hodnota nen\u00ed platn\u00e9 ISBN-13.", "validators", "cs");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Tato hodnota nen\u00ed platn\u00e9 ISBN-10 ani ISBN-13.", "validators", "cs");
    Translator.add("This value is not a valid ISSN.", "Tato hodnota nen\u00ed platn\u00e9 ISSN.", "validators", "cs");
    Translator.add("This value is not a valid currency.", "Tato m\u011bna neexistuje.", "validators", "cs");
    Translator.add("This value should be equal to {{ compared_value }}.", "Tato hodnota mus\u00ed b\u00fdt rovna {{ compared_value }}.", "validators", "cs");
    Translator.add("This value should be greater than {{ compared_value }}.", "Tato hodnota mus\u00ed b\u00fdt v\u011bt\u0161\u00ed ne\u017e {{ compared_value }}.", "validators", "cs");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Tato hodnota mus\u00ed b\u00fdt v\u011bt\u0161\u00ed nebo rovna {{ compared_value }}.", "validators", "cs");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Tato hodnota mus\u00ed b\u00fdt typu {{ compared_value_type }} a z\u00e1rove\u0148 mus\u00ed b\u00fdt rovna {{ compared_value }}.", "validators", "cs");
    Translator.add("This value should be less than {{ compared_value }}.", "Tato hodnota mus\u00ed b\u00fdt men\u0161\u00ed ne\u017e {{ compared_value }}.", "validators", "cs");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Tato hodnota mus\u00ed b\u00fdt men\u0161\u00ed nebo rovna {{ compared_value }}.", "validators", "cs");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Tato hodnota nesm\u00ed b\u00fdt rovna {{ compared_value }}.", "validators", "cs");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Tato hodnota nesm\u00ed b\u00fdt typu {{ compared_value_type }} a z\u00e1rove\u0148 nesm\u00ed b\u00fdt rovna {{ compared_value }}.", "validators", "cs");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "Pom\u011br stran obr\u00e1zku je p\u0159\u00edli\u0161 velk\u00fd ({{ ratio }}). Maxim\u00e1ln\u00ed povolen\u00fd pom\u011br stran obr\u00e1zku je {{ max_ratio }}.", "validators", "cs");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "Pom\u011br stran obr\u00e1zku je p\u0159\u00edli\u0161 mal\u00fd ({{ ratio }}). Minim\u00e1ln\u00ed povolen\u00fd pom\u011br stran obr\u00e1zku je {{ min_ratio }}.", "validators", "cs");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "Strany obr\u00e1zku jsou \u010dtvercov\u00e9 ({{ width }}x{{ height }}px). \u010ctvercov\u00e9 obr\u00e1zky nejsou povolen\u00e9.", "validators", "cs");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "Obr\u00e1zek je orientovan\u00fd na \u0161\u00ed\u0159ku ({{ width }}x{{ height }}px). Obr\u00e1zky orientovan\u00e9 na \u0161\u00ed\u0159ku nejsou povolen\u00e9.", "validators", "cs");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "Obr\u00e1zek je orientovan\u00fd na v\u00fd\u0161ku ({{ width }}x{{ height }}px). Obr\u00e1zky orientovan\u00e9 na v\u00fd\u0161ku nejsou povolen\u00e9.", "validators", "cs");
    Translator.add("An empty file is not allowed.", "Soubor nesm\u00ed b\u00fdt pr\u00e1zdn\u00fd.", "validators", "cs");
    Translator.add("This form should not contain extra fields.", "Tato skupina pol\u00ed nesm\u00ed obsahovat dal\u0161\u00ed pole.", "validators", "cs");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Nahran\u00fd soubor je p\u0159\u00edli\u0161 velk\u00fd. Nahrajte pros\u00edm men\u0161\u00ed soubor.", "validators", "cs");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF token je neplatn\u00fd. Zkuste pros\u00edm znovu odeslat formul\u00e1\u0159.", "validators", "cs");
})(Translator);

(function (Translator) {
    // cy
    Translator.add("This value should be false.", "Dylid bod y gwerth hwn yn ffug.", "validators", "cy");
    Translator.add("This value should be true.", "Dylid bod y gwerth hwn yn wir.", "validators", "cy");
    Translator.add("This value should be of type {{ type }}.", "Dylid bod y gwerth hwn bod o fath {{ type }}.", "validators", "cy");
    Translator.add("This value should be blank.", "Dylid bod y gwerth hwn yn wag.", "validators", "cy");
    Translator.add("The value you selected is not a valid choice.", "Nid yw'r gwerth \u00e2 ddewiswyd yn ddilys.", "validators", "cy");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Rhaid dewis o leiaf {{ limit }} opsiwn.", "validators", "cy");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Rhaid dewis dim mwy na {{ limit }} opsiwn.", "validators", "cy");
    Translator.add("One or more of the given values is invalid.", "Mae un neu fwy o'r gwerthoedd a roddwyd yn annilys.", "validators", "cy");
    Translator.add("This field was not expected.", "Nid oedd disgwyl y maes hwn.", "validators", "cy");
    Translator.add("This field is missing.", "Mae'r maes hwn ar goll.", "validators", "cy");
    Translator.add("This value is not a valid date.", "Nid yw'r gwerth yn ddyddiad dilys.", "validators", "cy");
    Translator.add("This value is not a valid datetime.", "Nid yw'r gwerth yn datetime dilys.", "validators", "cy");
    Translator.add("This value is not a valid email address.", "Nid yw'r gwerth yn gyfeiriad ebost dilys.", "validators", "cy");
    Translator.add("The file could not be found.", "Ni ddarganfyddwyd y ffeil.", "validators", "cy");
    Translator.add("The file is not readable.", "Ni ellir darllen y ffeil.", "validators", "cy");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Mae'r ffeil yn rhy fawr ({{ size }} {{ suffix }}). Yr uchafswm \u00e2 ganiateir yw {{ limit }} {{ suffix }}.", "validators", "cy");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Nid yw math mime y ffeil yn ddilys ({{ type }}). Dyma'r mathau \u00e2 ganiateir {{ types }}.", "validators", "cy");
    Translator.add("This value should be {{ limit }} or less.", "Dylai'r gwerth hwn fod yn {{ limit }} neu lai.", "validators", "cy");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Mae'r gwerth hwn rhy hir. Dylai gynnwys {{ limit }} nodyn cyfrifiadurol neu lai.", "validators", "cy");
    Translator.add("This value should be {{ limit }} or more.", "Dylai'r gwerth hwn fod yn {{ limit }} neu fwy.", "validators", "cy");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Mae'r gwerth hwn yn rhy fyr. Dylai gynnwys {{ limit }} nodyn cyfrifiadurol neu fwy.", "validators", "cy");
    Translator.add("This value should not be blank.", "Ni ddylai'r gwerth hwn fod yn wag.", "validators", "cy");
    Translator.add("This value should not be null.", "Ni ddylai'r gwerth hwn fod yn null.", "validators", "cy");
    Translator.add("This value should be null.", "Dylai'r gwerth fod yn null.", "validators", "cy");
    Translator.add("This value is not valid.", "Nid yw'r gwerth hwn yn ddilys.", "validators", "cy");
    Translator.add("This value is not a valid time.", "Nid yw'r gwerth hwn yn amser dilys.", "validators", "cy");
    Translator.add("This value is not a valid URL.", "Nid yw'r gwerth hwn yn URL dilys.", "validators", "cy");
    Translator.add("The two values should be equal.", "Rhaid i'r ddau werth fod yn gyfystyr a'u gilydd.", "validators", "cy");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Mae'r ffeil yn rhy fawr. Yr uchafswm \u00e2 ganiateir yw {{ limit }} {{ suffix }}.", "validators", "cy");
    Translator.add("The file is too large.", "Mae'r ffeil yn rhy fawr.", "validators", "cy");
    Translator.add("The file could not be uploaded.", "Methwyd ag uwchlwytho'r ffeil.", "validators", "cy");
    Translator.add("This value should be a valid number.", "Dylai'r gwerth hwn fod yn rif dilys.", "validators", "cy");
    Translator.add("This file is not a valid image.", "Nid yw'r ffeil hon yn ddelwedd dilys.", "validators", "cy");
    Translator.add("This is not a valid IP address.", "Nid yw hwn yn gyfeiriad IP dilys.", "validators", "cy");
    Translator.add("This value is not a valid language.", "Nid yw'r gwerth hwn yn iaith ddilys.", "validators", "cy");
    Translator.add("This value is not a valid locale.", "Nid yw'r gwerth hwn yn locale dilys.", "validators", "cy");
    Translator.add("This value is not a valid country.", "Nid yw'r gwerth hwn yn wlad dilys.", "validators", "cy");
    Translator.add("This value is already used.", "Mae'r gwerth hwn eisoes yn cael ei ddefnyddio.", "validators", "cy");
    Translator.add("The size of the image could not be detected.", "Methwyd \u00e2 darganfod maint y ddelwedd.", "validators", "cy");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Mae lled y ddelwedd yn rhy fawr ({{ width }}px). Y lled mwyaf \u00e2 ganiateir yw {{ max_width }}px.", "validators", "cy");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Mae lled y ddelwedd yn rhy fach ({{ width }}px). Y lled lleiaf \u00e2 ganiateir yw {{ min_width }}px.", "validators", "cy");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Mae uchder y ddelwedd yn rhy fawr ({{ width }}px). Yr uchder mwyaf \u00e2 ganiateir yw {{ max_height }}px.", "validators", "cy");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Mae uchder y ddelwedd yn rhy fach ({{ width }}px). Yr uchder lleiaf \u00e2 ganiateir yw {{ min_height }}px.", "validators", "cy");
    Translator.add("This value should be the user's current password.", "Dylaid bod y gwerth hwn yn gyfrinair presenol y defnyddiwr.", "validators", "cy");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Dylai'r gwerth hwn fod yn union {{ limit }} nodyn cyfrifiadurol o hyd.", "validators", "cy");
    Translator.add("The file was only partially uploaded.", "Dim ond rhan o'r ffeil ag uwchlwythwyd.", "validators", "cy");
    Translator.add("No file was uploaded.", "Ni uwchlwythwyd unrhyw ffeil.", "validators", "cy");
    Translator.add("No temporary folder was configured in php.ini.", "Nid oes ffolder dros-dro wedi'i gosod yn php.ini.", "validators", "cy");
    Translator.add("Cannot write temporary file to disk.", "Methwyd ag ysgrifennu'r ffeil dros-dro ar ddisg.", "validators", "cy");
    Translator.add("A PHP extension caused the upload to fail.", "Methwyd ag uwchlwytho oherwydd ategyn PHP.", "validators", "cy");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Dylai'r casgliad hwn gynnwys {{ limit }} elfen neu fwy.", "validators", "cy");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Dylai'r casgliad hwn gynnwys {{ limit }} elfen neu lai.", "validators", "cy");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Dylai'r casgliad hwn gynnwys union {{ limit }} elfen.", "validators", "cy");
    Translator.add("Invalid card number.", "Nid oedd rhif y cerdyn yn ddilys.", "validators", "cy");
    Translator.add("Unsupported card type or invalid card number.", "Unai ni dderbynir y math yna o gerdyn, neu nid yw rhif y cerdyn yn ddilys.", "validators", "cy");
})(Translator);

(function (Translator) {
    // da
    Translator.add("This value should be false.", "V\u00e6rdien skal v\u00e6re falsk.", "validators", "da");
    Translator.add("This value should be true.", "V\u00e6rdien skal v\u00e6re sand.", "validators", "da");
    Translator.add("This value should be of type {{ type }}.", "V\u00e6rdien skal v\u00e6re af typen {{ type }}.", "validators", "da");
    Translator.add("This value should be blank.", "V\u00e6rdien skal v\u00e6re blank.", "validators", "da");
    Translator.add("The value you selected is not a valid choice.", "V\u00e6rdien skal v\u00e6re en af de givne muligheder.", "validators", "da");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Du skal v\u00e6lge mindst {{ limit }} muligheder.", "validators", "da");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Du kan h\u00f8jest v\u00e6lge {{ limit }} muligheder.", "validators", "da");
    Translator.add("One or more of the given values is invalid.", "En eller flere af de oplyste v\u00e6rdier er ugyldige.", "validators", "da");
    Translator.add("This field was not expected.", "Feltet blev ikke forventet.", "validators", "da");
    Translator.add("This field is missing.", "Dette felt er mangler.", "validators", "da");
    Translator.add("This value is not a valid date.", "V\u00e6rdien er ikke en gyldig dato.", "validators", "da");
    Translator.add("This value is not a valid datetime.", "V\u00e6rdien er ikke en gyldig dato og tid.", "validators", "da");
    Translator.add("This value is not a valid email address.", "V\u00e6rdien er ikke en gyldig e-mail adresse.", "validators", "da");
    Translator.add("The file could not be found.", "Filen kunne ikke findes.", "validators", "da");
    Translator.add("The file is not readable.", "Filen kan ikke l\u00e6ses.", "validators", "da");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Filen er for stor ({{ size }} {{ suffix }}). Tilladte maksimale st\u00f8rrelse {{ limit }} {{ suffix }}.", "validators", "da");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Mimetypen af filen er ugyldig ({{ type }}). Tilladte mimetyper er {{ types }}.", "validators", "da");
    Translator.add("This value should be {{ limit }} or less.", "V\u00e6rdien skal v\u00e6re {{ limit }} eller mindre.", "validators", "da");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "V\u00e6rdien er for lang. Den skal have {{ limit }} bogstaver eller mindre.", "validators", "da");
    Translator.add("This value should be {{ limit }} or more.", "V\u00e6rdien skal v\u00e6re {{ limit }} eller mere.", "validators", "da");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "V\u00e6rdien er for kort. Den skal have {{ limit }} tegn eller flere.", "validators", "da");
    Translator.add("This value should not be blank.", "V\u00e6rdien m\u00e5 ikke v\u00e6re blank.", "validators", "da");
    Translator.add("This value should not be null.", "V\u00e6rdien m\u00e5 ikke v\u00e6re tom (null).", "validators", "da");
    Translator.add("This value should be null.", "V\u00e6rdien skal v\u00e6re tom (null).", "validators", "da");
    Translator.add("This value is not valid.", "V\u00e6rdien er ikke gyldig.", "validators", "da");
    Translator.add("This value is not a valid time.", "V\u00e6rdien er ikke en gyldig tid.", "validators", "da");
    Translator.add("This value is not a valid URL.", "V\u00e6rdien er ikke en gyldig URL.", "validators", "da");
    Translator.add("The two values should be equal.", "De to v\u00e6rdier skal v\u00e6re ens.", "validators", "da");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Filen er for stor. Den maksimale st\u00f8rrelse er {{ limit }} {{ suffix }}.", "validators", "da");
    Translator.add("The file is too large.", "Filen er for stor.", "validators", "da");
    Translator.add("The file could not be uploaded.", "Filen kunne ikke blive uploadet.", "validators", "da");
    Translator.add("This value should be a valid number.", "V\u00e6rdien skal v\u00e6re et gyldigt tal.", "validators", "da");
    Translator.add("This file is not a valid image.", "Filen er ikke gyldigt billede.", "validators", "da");
    Translator.add("This is not a valid IP address.", "Dette er ikke en gyldig IP adresse.", "validators", "da");
    Translator.add("This value is not a valid language.", "V\u00e6rdien er ikke et gyldigt sprog.", "validators", "da");
    Translator.add("This value is not a valid locale.", "V\u00e6rdien er ikke en gyldig lokalitet.", "validators", "da");
    Translator.add("This value is not a valid country.", "V\u00e6rdien er ikke et gyldigt land.", "validators", "da");
    Translator.add("This value is already used.", "V\u00e6rdien er allerede i brug.", "validators", "da");
    Translator.add("The size of the image could not be detected.", "St\u00f8rrelsen p\u00e5 billedet kunne ikke detekteres.", "validators", "da");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Billedbredden er for stor ({{ width }}px). Tilladt maksimumsbredde er {{ max_width }}px.", "validators", "da");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Billedebredden er for lille ({{ width }}px). Forventet minimumsh\u00f8jde er {{ min_width }}px.", "validators", "da");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Billedh\u00f8jden er for stor ({{ height }}px). Tilladt maksimumsh\u00f8jde er {{ max_height }}px.", "validators", "da");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Billedh\u00f8jden er for lille ({{ height }}px). Forventet minimumsh\u00f8jde er {{ min_height }}px.", "validators", "da");
    Translator.add("This value should be the user's current password.", "V\u00e6rdien skal v\u00e6re brugerens nuv\u00e6rende password.", "validators", "da");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "V\u00e6rdien skal have pr\u00e6cis {{ limit }} tegn.", "validators", "da");
    Translator.add("The file was only partially uploaded.", "Filen var kun delvis uploadet.", "validators", "da");
    Translator.add("No file was uploaded.", "Ingen fil blev uploadet.", "validators", "da");
    Translator.add("No temporary folder was configured in php.ini.", "Ingen midlertidig mappe er konfigureret i php.ini.", "validators", "da");
    Translator.add("Cannot write temporary file to disk.", "Kan ikke skrive midlertidig fil til disk.", "validators", "da");
    Translator.add("A PHP extension caused the upload to fail.", "En PHP udvidelse for\u00e5rsagede fejl i upload.", "validators", "da");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Denne samling skal indeholde {{ limit }} element eller flere.|Denne samling skal indeholde {{ limit }} elementer eller flere.", "validators", "da");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Denne samling skal indeholde {{ limit }} element eller mindre.|Denne samling skal indeholde {{ limit }} elementer eller mindre.", "validators", "da");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Denne samling skal indeholde pr\u00e6cis {{ limit }} element.|Denne samling skal indeholde pr\u00e6cis {{ limit }} elementer.", "validators", "da");
    Translator.add("Invalid card number.", "Ugyldigt kortnummer.", "validators", "da");
    Translator.add("Unsupported card type or invalid card number.", "Ikke-underst\u00f8ttet korttype eller ugyldigt kortnummer.", "validators", "da");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Det er ikke en gyldig International Bank Account Number (IBAN).", "validators", "da");
    Translator.add("This value is not a valid ISBN-10.", "V\u00e6rdien er ikke en gyldig ISBN-10.", "validators", "da");
    Translator.add("This value is not a valid ISBN-13.", "V\u00e6rdien er ikke en gyldig ISBN-13.", "validators", "da");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "V\u00e6rdien er hverken en gyldig ISBN-10 eller en gyldig ISBN-13.", "validators", "da");
    Translator.add("This value is not a valid ISSN.", "V\u00e6rdien er ikke en gyldig ISSN.", "validators", "da");
    Translator.add("This form should not contain extra fields.", "Feltgruppen m\u00e5 ikke indeholde ekstra felter.", "validators", "da");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Den oploadede fil var for stor. Opload venligst en mindre fil.", "validators", "da");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF n\u00f8glen er ugyldig.", "validators", "da");
})(Translator);

(function (Translator) {
    // de
    Translator.add("This value should be false.", "Dieser Wert sollte false sein.", "validators", "de");
    Translator.add("This value should be true.", "Dieser Wert sollte true sein.", "validators", "de");
    Translator.add("This value should be of type {{ type }}.", "Dieser Wert sollte vom Typ {{ type }} sein.", "validators", "de");
    Translator.add("This value should be blank.", "Dieser Wert sollte leer sein.", "validators", "de");
    Translator.add("The value you selected is not a valid choice.", "Sie haben einen ung\u00fcltigen Wert ausgew\u00e4hlt.", "validators", "de");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Sie m\u00fcssen mindestens {{ limit }} M\u00f6glichkeit w\u00e4hlen.|Sie m\u00fcssen mindestens {{ limit }} M\u00f6glichkeiten w\u00e4hlen.", "validators", "de");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Sie d\u00fcrfen h\u00f6chstens {{ limit }} M\u00f6glichkeit w\u00e4hlen.|Sie d\u00fcrfen h\u00f6chstens {{ limit }} M\u00f6glichkeiten w\u00e4hlen.", "validators", "de");
    Translator.add("One or more of the given values is invalid.", "Einer oder mehrere der angegebenen Werte sind ung\u00fcltig.", "validators", "de");
    Translator.add("This field was not expected.", "Dieses Feld wurde nicht erwartet.", "validators", "de");
    Translator.add("This field is missing.", "Dieses Feld fehlt.", "validators", "de");
    Translator.add("This value is not a valid date.", "Dieser Wert entspricht keiner g\u00fcltigen Datumsangabe.", "validators", "de");
    Translator.add("This value is not a valid datetime.", "Dieser Wert entspricht keiner g\u00fcltigen Datums- und Zeitangabe.", "validators", "de");
    Translator.add("This value is not a valid email address.", "Dieser Wert ist keine g\u00fcltige E-Mail-Adresse.", "validators", "de");
    Translator.add("The file could not be found.", "Die Datei wurde nicht gefunden.", "validators", "de");
    Translator.add("The file is not readable.", "Die Datei ist nicht lesbar.", "validators", "de");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Die Datei ist zu gro\u00df ({{ size }} {{ suffix }}). Die maximal zul\u00e4ssige Gr\u00f6\u00dfe betr\u00e4gt {{ limit }} {{ suffix }}.", "validators", "de");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Der Dateityp ist ung\u00fcltig ({{ type }}). Erlaubte Dateitypen sind {{ types }}.", "validators", "de");
    Translator.add("This value should be {{ limit }} or less.", "Dieser Wert sollte kleiner oder gleich {{ limit }} sein.", "validators", "de");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Diese Zeichenkette ist zu lang. Sie sollte h\u00f6chstens {{ limit }} Zeichen haben.|Diese Zeichenkette ist zu lang. Sie sollte h\u00f6chstens {{ limit }} Zeichen haben.", "validators", "de");
    Translator.add("This value should be {{ limit }} or more.", "Dieser Wert sollte gr\u00f6\u00dfer oder gleich {{ limit }} sein.", "validators", "de");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Diese Zeichenkette ist zu kurz. Sie sollte mindestens {{ limit }} Zeichen haben.|Diese Zeichenkette ist zu kurz. Sie sollte mindestens {{ limit }} Zeichen haben.", "validators", "de");
    Translator.add("This value should not be blank.", "Dieser Wert sollte nicht leer sein.", "validators", "de");
    Translator.add("This value should not be null.", "Dieser Wert sollte nicht null sein.", "validators", "de");
    Translator.add("This value should be null.", "Dieser Wert sollte null sein.", "validators", "de");
    Translator.add("This value is not valid.", "Dieser Wert ist nicht g\u00fcltig.", "validators", "de");
    Translator.add("This value is not a valid time.", "Dieser Wert entspricht keiner g\u00fcltigen Zeitangabe.", "validators", "de");
    Translator.add("This value is not a valid URL.", "Dieser Wert ist keine g\u00fcltige URL.", "validators", "de");
    Translator.add("The two values should be equal.", "Die beiden Werte sollten identisch sein.", "validators", "de");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Die Datei ist zu gro\u00df. Die maximal zul\u00e4ssige Gr\u00f6\u00dfe betr\u00e4gt {{ limit }} {{ suffix }}.", "validators", "de");
    Translator.add("The file is too large.", "Die Datei ist zu gro\u00df.", "validators", "de");
    Translator.add("The file could not be uploaded.", "Die Datei konnte nicht hochgeladen werden.", "validators", "de");
    Translator.add("This value should be a valid number.", "Dieser Wert sollte eine g\u00fcltige Zahl sein.", "validators", "de");
    Translator.add("This file is not a valid image.", "Diese Datei ist kein g\u00fcltiges Bild.", "validators", "de");
    Translator.add("This is not a valid IP address.", "Dies ist keine g\u00fcltige IP-Adresse.", "validators", "de");
    Translator.add("This value is not a valid language.", "Dieser Wert entspricht keiner g\u00fcltigen Sprache.", "validators", "de");
    Translator.add("This value is not a valid locale.", "Dieser Wert entspricht keinem g\u00fcltigen Gebietsschema.", "validators", "de");
    Translator.add("This value is not a valid country.", "Dieser Wert entspricht keinem g\u00fcltigen Land.", "validators", "de");
    Translator.add("This value is already used.", "Dieser Wert wird bereits verwendet.", "validators", "de");
    Translator.add("The size of the image could not be detected.", "Die Gr\u00f6\u00dfe des Bildes konnte nicht ermittelt werden.", "validators", "de");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Die Bildbreite ist zu gro\u00df ({{ width }}px). Die maximal zul\u00e4ssige Breite betr\u00e4gt {{ max_width }}px.", "validators", "de");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Die Bildbreite ist zu gering ({{ width }}px). Die erwartete Mindestbreite betr\u00e4gt {{ min_width }}px.", "validators", "de");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Die Bildh\u00f6he ist zu gro\u00df ({{ height }}px). Die maximal zul\u00e4ssige H\u00f6he betr\u00e4gt {{ max_height }}px.", "validators", "de");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Die Bildh\u00f6he ist zu gering ({{ height }}px). Die erwartete Mindesth\u00f6he betr\u00e4gt {{ min_height }}px.", "validators", "de");
    Translator.add("This value should be the user's current password.", "Dieser Wert sollte dem aktuellen Benutzerpasswort entsprechen.", "validators", "de");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Dieser Wert sollte genau {{ limit }} Zeichen lang sein.|Dieser Wert sollte genau {{ limit }} Zeichen lang sein.", "validators", "de");
    Translator.add("The file was only partially uploaded.", "Die Datei wurde nur teilweise hochgeladen.", "validators", "de");
    Translator.add("No file was uploaded.", "Es wurde keine Datei hochgeladen.", "validators", "de");
    Translator.add("No temporary folder was configured in php.ini.", "Es wurde kein tempor\u00e4rer Ordner in der php.ini konfiguriert.", "validators", "de");
    Translator.add("Cannot write temporary file to disk.", "Kann die tempor\u00e4re Datei nicht speichern.", "validators", "de");
    Translator.add("A PHP extension caused the upload to fail.", "Eine PHP-Erweiterung verhinderte den Upload.", "validators", "de");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Diese Sammlung sollte {{ limit }} oder mehr Elemente beinhalten.|Diese Sammlung sollte {{ limit }} oder mehr Elemente beinhalten.", "validators", "de");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Diese Sammlung sollte {{ limit }} oder weniger Elemente beinhalten.|Diese Sammlung sollte {{ limit }} oder weniger Elemente beinhalten.", "validators", "de");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Diese Sammlung sollte genau {{ limit }} Element beinhalten.|Diese Sammlung sollte genau {{ limit }} Elemente beinhalten.", "validators", "de");
    Translator.add("Invalid card number.", "Ung\u00fcltige Kartennummer.", "validators", "de");
    Translator.add("Unsupported card type or invalid card number.", "Nicht unterst\u00fctzer Kartentyp oder ung\u00fcltige Kartennummer.", "validators", "de");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Dieser Wert ist keine g\u00fcltige internationale Bankkontonummer (IBAN).", "validators", "de");
    Translator.add("This value is not a valid ISBN-10.", "Dieser Wert entspricht keiner g\u00fcltigen ISBN-10.", "validators", "de");
    Translator.add("This value is not a valid ISBN-13.", "Dieser Wert entspricht keiner g\u00fcltigen ISBN-13.", "validators", "de");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Dieser Wert ist weder eine g\u00fcltige ISBN-10 noch eine g\u00fcltige ISBN-13.", "validators", "de");
    Translator.add("This value is not a valid ISSN.", "Dieser Wert ist keine g\u00fcltige ISSN.", "validators", "de");
    Translator.add("This value is not a valid currency.", "Dieser Wert ist keine g\u00fcltige W\u00e4hrung.", "validators", "de");
    Translator.add("This value should be equal to {{ compared_value }}.", "Dieser Wert sollte gleich {{ compared_value }} sein.", "validators", "de");
    Translator.add("This value should be greater than {{ compared_value }}.", "Dieser Wert sollte gr\u00f6\u00dfer als {{ compared_value }} sein.", "validators", "de");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Dieser Wert sollte gr\u00f6\u00dfer oder gleich {{ compared_value }} sein.", "validators", "de");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Dieser Wert sollte identisch sein mit {{ compared_value_type }} {{ compared_value }}.", "validators", "de");
    Translator.add("This value should be less than {{ compared_value }}.", "Dieser Wert sollte kleiner als {{ compared_value }} sein.", "validators", "de");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Dieser Wert sollte kleiner oder gleich {{ compared_value }} sein.", "validators", "de");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Dieser Wert sollte nicht {{ compared_value }} sein.", "validators", "de");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Dieser Wert sollte nicht identisch sein mit {{ compared_value_type }} {{ compared_value }}.", "validators", "de");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "Das Seitenverh\u00e4ltnis des Bildes ist zu gro\u00df ({{ ratio }}). Der erlaubte Maximalwert ist {{ max_ratio }}.", "validators", "de");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "Das Seitenverh\u00e4ltnis des Bildes ist zu klein ({{ ratio }}). Der erwartete Minimalwert ist {{ min_ratio }}.", "validators", "de");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "Das Bild ist quadratisch ({{ width }}x{{ height }}px). Quadratische Bilder sind nicht erlaubt.", "validators", "de");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "Das Bild ist im Querformat ({{ width }}x{{ height }}px). Bilder im Querformat sind nicht erlaubt.", "validators", "de");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "Das Bild ist im Hochformat ({{ width }}x{{ height }}px). Bilder im Hochformat sind nicht erlaubt.", "validators", "de");
    Translator.add("An empty file is not allowed.", "Eine leere Datei ist nicht erlaubt.", "validators", "de");
    Translator.add("The host could not be resolved.", "Der Hostname konnte nicht aufgel\u00f6st werden.", "validators", "de");
    Translator.add("This value does not match the expected {{ charset }} charset.", "Dieser Wert entspricht nicht dem erwarteten Zeichensatz {{ charset }}.", "validators", "de");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "Dieser Wert ist kein g\u00fcltiger BIC.", "validators", "de");
    Translator.add("This form should not contain extra fields.", "Dieses Formular sollte keine zus\u00e4tzlichen Felder enthalten.", "validators", "de");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Die hochgeladene Datei ist zu gro\u00df. Versuchen Sie bitte eine kleinere Datei hochzuladen.", "validators", "de");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "Der CSRF-Token ist ung\u00fcltig. Versuchen Sie bitte das Formular erneut zu senden.", "validators", "de");
})(Translator);

(function (Translator) {
    // el
    Translator.add("This value should be false.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c8\u03b5\u03c5\u03b4\u03ae\u03c2.", "validators", "el");
    Translator.add("This value should be true.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bb\u03b7\u03b8\u03ae\u03c2.", "validators", "el");
    Translator.add("This value should be of type {{ type }}.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03cd\u03c0\u03bf\u03c5 {{ type }}.", "validators", "el");
    Translator.add("This value should be blank.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03b5\u03bd\u03ae.", "validators", "el");
    Translator.add("The value you selected is not a valid choice.", "\u0397 \u03c4\u03b9\u03bc\u03ae \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03bb\u03ad\u03c7\u03b8\u03b7\u03ba\u03b5 \u03b4\u03b5\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03b5 \u03ad\u03b3\u03ba\u03c5\u03c1\u03b7 \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae.", "validators", "el");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u03a0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03bb\u03ad\u03be\u03b5\u03c4\u03b5 \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd {{ limit }} \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae.|\u03a0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03bb\u03ad\u03be\u03b5\u03c4\u03b5 \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd {{ limit }} \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ad\u03c2.", "validators", "el");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u03a0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03bb\u03ad\u03be\u03b5\u03c4\u03b5 \u03c4\u03bf \u03c0\u03bf\u03bb\u03cd {{ limit }} \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae.|\u03a0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03bb\u03ad\u03be\u03b5\u03c4\u03b5 \u03c4\u03bf \u03c0\u03bf\u03bb\u03cd {{ limit }} \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ad\u03c2.", "validators", "el");
    Translator.add("One or more of the given values is invalid.", "\u039c\u03b9\u03b1 \u03ae \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03b5\u03c2.", "validators", "el");
    Translator.add("This field was not expected.", "\u0391\u03c5\u03c4\u03cc \u03c4\u03bf \u03c0\u03b5\u03b4\u03af\u03bf \u03b4\u03b5\u03bd \u03ae\u03c4\u03b1\u03bd \u03b1\u03bd\u03b1\u03bc\u03b5\u03bd\u03cc\u03bc\u03b5\u03bd\u03bf.", "validators", "el");
    Translator.add("This field is missing.", "\u039b\u03b5\u03af\u03c0\u03b5\u03b9 \u03b1\u03c5\u03c4\u03cc \u03c4\u03bf \u03c0\u03b5\u03b4\u03af\u03bf.", "validators", "el");
    Translator.add("This value is not a valid date.", "\u0397 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03b5 \u03ad\u03b3\u03ba\u03c5\u03c1\u03b7 \u03b7\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1.", "validators", "el");
    Translator.add("This value is not a valid datetime.", "\u0397 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03b5 \u03ad\u03b3\u03ba\u03c5\u03c1\u03b7 \u03b7\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1 \u03ba\u03b1\u03b9 \u03ce\u03c1\u03b1.", "validators", "el");
    Translator.add("This value is not a valid email address.", "\u0397 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03b5 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf email.", "validators", "el");
    Translator.add("The file could not be found.", "\u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03b4\u03b5 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b2\u03c1\u03b5\u03b8\u03b5\u03af.", "validators", "el");
    Translator.add("The file is not readable.", "\u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bd\u03b1\u03b3\u03bd\u03ce\u03c3\u03b9\u03bc\u03bf.", "validators", "el");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b5\u03b3\u03ac\u03bb\u03bf ({{ size }} {{ suffix }}). \u03a4\u03bf \u03bc\u03ad\u03b3\u03b9\u03c3\u03c4\u03bf \u03b5\u03c0\u03b9\u03c4\u03c1\u03b5\u03c0\u03c4\u03cc \u03bc\u03ad\u03b3\u03b5\u03b8\u03bf\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 {{ limit }} {{ suffix }}.", "validators", "el");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "\u039f \u03c4\u03cd\u03c0\u03bf\u03c2 mime \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 ({{ type }}). \u039f\u03b9 \u03ad\u03b3\u03ba\u03c1\u03c5\u03bf\u03b9 \u03c4\u03cd\u03c0\u03bf\u03b9 mime \u03b5\u03af\u03bd\u03b1\u03b9 {{ types }}.", "validators", "el");
    Translator.add("This value should be {{ limit }} or less.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b8\u03b1 \u03ad\u03c0\u03c1\u03b5\u03c0\u03b5 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 {{ limit }} \u03ae \u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03bf.", "validators", "el");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b5\u03b3\u03ac\u03bb\u03b7. \u0398\u03b1 \u03ad\u03c0\u03c1\u03b5\u03c0\u03b5 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 {{ limit }} \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 \u03ae \u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03bf.|\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b5\u03b3\u03ac\u03bb\u03b7. \u0398\u03b1 \u03ad\u03c0\u03c1\u03b5\u03c0\u03b5 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 {{ limit }} \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2 \u03ae \u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03bf.", "validators", "el");
    Translator.add("This value should be {{ limit }} or more.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b8\u03b1 \u03ad\u03c0\u03c1\u03b5\u03c0\u03b5 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 {{ limit }} \u03ae \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03bf.", "validators", "el");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b9\u03ba\u03c1\u03ae. \u0398\u03b1 \u03ad\u03c0\u03c1\u03b5\u03c0\u03b5 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 {{ limit }} \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 \u03ae \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03bf.|\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b9\u03ba\u03c1\u03ae. \u0398\u03b1 \u03ad\u03c0\u03c1\u03b5\u03c0\u03b5 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 {{ limit }} \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2 \u03ae \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03bf.", "validators", "el");
    Translator.add("This value should not be blank.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03b5\u03bd\u03ae.", "validators", "el");
    Translator.add("This value should not be null.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b7\u03b4\u03b5\u03bd\u03b9\u03ba\u03ae.", "validators", "el");
    Translator.add("This value should be null.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b7\u03b4\u03b5\u03bd\u03b9\u03ba\u03ae.", "validators", "el");
    Translator.add("This value is not valid.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03ba\u03b3\u03c5\u03c1\u03b7.", "validators", "el");
    Translator.add("This value is not a valid time.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03b5 \u03ad\u03b3\u03ba\u03c5\u03c1\u03b7 \u03ce\u03c1\u03b1.", "validators", "el");
    Translator.add("This value is not a valid URL.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03b5 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf URL.", "validators", "el");
    Translator.add("The two values should be equal.", "\u039f\u03b9 \u03b4\u03cd\u03bf \u03c4\u03b9\u03bc\u03ad\u03c2 \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03af\u03b4\u03b9\u03b5\u03c2.", "validators", "el");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b5\u03b3\u03ac\u03bb\u03bf. \u03a4\u03bf \u03bc\u03ad\u03b3\u03b9\u03c3\u03c4\u03bf \u03b5\u03c0\u03b9\u03c4\u03c1\u03b5\u03c0\u03c4\u03cc \u03bc\u03ad\u03b3\u03b5\u03b8\u03bf\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 {{ limit }} {{ suffix }}.", "validators", "el");
    Translator.add("The file is too large.", "\u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b5\u03b3\u03ac\u03bb\u03bf.", "validators", "el");
    Translator.add("The file could not be uploaded.", "\u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03b4\u03b5 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b1\u03bd\u03ad\u03b2\u03b5\u03b9.", "validators", "el");
    Translator.add("This value should be a valid number.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1\u03c2 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2.", "validators", "el");
    Translator.add("This file is not a valid image.", "\u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03b4\u03b5\u03bd \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03af \u03ad\u03b3\u03ba\u03c5\u03c1\u03b7 \u03b5\u03b9\u03ba\u03cc\u03bd\u03b1.", "validators", "el");
    Translator.add("This is not a valid IP address.", "\u0391\u03c5\u03c4\u03cc \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03ad\u03ba\u03b3\u03c5\u03c1\u03b7 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 IP.", "validators", "el");
    Translator.add("This value is not a valid language.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03ad\u03ba\u03b3\u03c5\u03c1\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1.", "validators", "el");
    Translator.add("This value is not a valid locale.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03b5 \u03ad\u03ba\u03b3\u03c5\u03c1\u03bf \u03ba\u03c9\u03b4\u03b9\u03ba\u03cc \u03c4\u03bf\u03c0\u03bf\u03b8\u03b5\u03c3\u03af\u03b1\u03c2.", "validators", "el");
    Translator.add("This value is not a valid country.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03ad\u03ba\u03b3\u03c5\u03c1\u03b7 \u03c7\u03ce\u03c1\u03b1.", "validators", "el");
    Translator.add("This value is already used.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03ae\u03b4\u03b7.", "validators", "el");
    Translator.add("The size of the image could not be detected.", "\u03a4\u03bf \u03bc\u03ad\u03b3\u03b5\u03b8\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03b5\u03b9\u03ba\u03cc\u03bd\u03b1\u03c2 \u03b4\u03b5\u03bd \u03ae\u03c4\u03b1\u03bd \u03b4\u03c5\u03bd\u03b1\u03c4\u03cc \u03bd\u03b1 \u03b1\u03bd\u03b9\u03c7\u03bd\u03b5\u03c5\u03b8\u03b5\u03af.", "validators", "el");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u03a4\u03bf \u03c0\u03bb\u03ac\u03c4\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03b5\u03b9\u03ba\u03cc\u03bd\u03b1\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b5\u03b3\u03ac\u03bb\u03bf ({{ width }}px). \u03a4\u03bf \u03bc\u03ad\u03b3\u03b9\u03c3\u03c4\u03bf \u03b5\u03c0\u03b9\u03c4\u03c1\u03b5\u03c0\u03c4\u03cc \u03c0\u03bb\u03ac\u03c4\u03bf\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 {{ max_width }}px.", "validators", "el");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u03a4\u03bf \u03c0\u03bb\u03ac\u03c4\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03b5\u03b9\u03ba\u03cc\u03bd\u03b1\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b9\u03ba\u03c1\u03cc ({{ width }}px). \u03a4\u03bf \u03b5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf \u03b5\u03c0\u03b9\u03c4\u03c1\u03b5\u03c0\u03c4\u03cc \u03c0\u03bb\u03ac\u03c4\u03bf\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 {{ min_width }}px.", "validators", "el");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u03a4\u03bf \u03cd\u03c8\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03b5\u03b9\u03ba\u03cc\u03bd\u03b1\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b5\u03b3\u03ac\u03bb\u03bf ({{ height }}px). \u03a4\u03bf \u03bc\u03ad\u03b3\u03b9\u03c3\u03c4\u03bf \u03b5\u03c0\u03b9\u03c4\u03c1\u03b5\u03c0\u03c4\u03cc \u03cd\u03c8\u03bf\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 {{ max_height }}px.", "validators", "el");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u03a4\u03bf \u03cd\u03c8\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03b5\u03b9\u03ba\u03cc\u03bd\u03b1\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b9\u03ba\u03c1\u03cc ({{ height }}px). \u03a4\u03bf \u03b5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf \u03b5\u03c0\u03b9\u03c4\u03c1\u03b5\u03c0\u03c4\u03cc \u03cd\u03c8\u03bf\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 {{ min_height }}px.", "validators", "el");
    Translator.add("This value should be the user's current password.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b8\u03b1 \u03ad\u03c0\u03c1\u03b5\u03c0\u03b5 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf \u03c4\u03c1\u03ad\u03c7\u03c9\u03bd \u03ba\u03c9\u03b4\u03b9\u03ba\u03cc\u03c2.", "validators", "el");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b8\u03b1 \u03ad\u03c0\u03c1\u03b5\u03c0\u03b5 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03b1\u03ba\u03c1\u03b9\u03b2\u03ce\u03c2 {{ limit }} \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1.|\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b8\u03b1 \u03ad\u03c0\u03c1\u03b5\u03c0\u03b5 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03b1\u03ba\u03c1\u03b9\u03b2\u03ce\u03c2 {{ limit }} \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2.", "validators", "el");
    Translator.add("The file was only partially uploaded.", "\u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03b4\u03b5\u03bd \u03b1\u03bd\u03ad\u03b2\u03b7\u03ba\u03b5 \u03bf\u03bb\u03cc\u03ba\u03bb\u03b7\u03c1\u03bf.", "validators", "el");
    Translator.add("No file was uploaded.", "\u0394\u03b5\u03bd \u03b1\u03bd\u03ad\u03b2\u03b7\u03ba\u03b5 \u03ba\u03b1\u03bd\u03ad\u03bd\u03b1 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf.", "validators", "el");
    Translator.add("No temporary folder was configured in php.ini.", "\u039a\u03b1\u03bd\u03ad\u03bd\u03b1\u03c2 \u03c0\u03c1\u03bf\u03c3\u03c9\u03c1\u03b9\u03bd\u03cc\u03c2 \u03c6\u03ac\u03ba\u03b5\u03bb\u03bf\u03c2 \u03b4\u03b5\u03bd \u03ad\u03c7\u03b5\u03b9 \u03c1\u03c5\u03b8\u03bc\u03b9\u03c3\u03c4\u03b5\u03af \u03c3\u03c4\u03bf php.ini.", "validators", "el");
    Translator.add("Cannot write temporary file to disk.", "\u0391\u03b4\u03c5\u03bd\u03b1\u03bc\u03af\u03b1 \u03b5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2 \u03c0\u03c1\u03bf\u03c3\u03c9\u03c1\u03b9\u03bd\u03bf\u03cd \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 \u03c3\u03c4\u03bf \u03b4\u03af\u03c3\u03ba\u03bf.", "validators", "el");
    Translator.add("A PHP extension caused the upload to fail.", "\u039c\u03b9\u03b1 \u03b5\u03c0\u03ad\u03ba\u03c4\u03b1\u03c3\u03b7 PHP \u03c0\u03c1\u03bf\u03ba\u03ac\u03bb\u03b5\u03c3\u03b5 \u03b1\u03b4\u03c5\u03bd\u03b1\u03bc\u03af\u03b1 \u03b1\u03bd\u03b5\u03b2\u03ac\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2.", "validators", "el");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 {{ limit }} \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03ae \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b1.|\u0391\u03c5\u03c4\u03ae \u03b7 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 {{ limit }} \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03ae \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b1.", "validators", "el");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 {{ limit }} \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03afo \u03ae \u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03b1.|\u0391\u03c5\u03c4\u03ae \u03b7 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 {{ limit }} \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03ae \u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03b1.", "validators", "el");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03b1\u03ba\u03c1\u03b9\u03b2\u03ce\u03c2 {{ limit }} \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03afo.|\u0391\u03c5\u03c4\u03ae \u03b7 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03b1\u03ba\u03c1\u03b9\u03b2\u03ce\u03c2 {{ limit }} \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1.", "validators", "el");
    Translator.add("Invalid card number.", "\u039c\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03ba\u03ac\u03c1\u03c4\u03b1\u03c2.", "validators", "el");
    Translator.add("Unsupported card type or invalid card number.", "\u039c\u03b7 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03b9\u03b6\u03cc\u03bc\u03b5\u03bd\u03bf\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c2 \u03ba\u03ac\u03c1\u03c4\u03b1\u03c2 \u03ae \u03bc\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03ba\u03ac\u03c1\u03c4\u03b1\u03c2.", "validators", "el");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u0391\u03c5\u03c4\u03cc \u03b4\u03b5\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03b5 \u03ad\u03ba\u03b3\u03c5\u03c1\u03bf \u03b4\u03b9\u03b5\u03b8\u03bd\u03ae \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc \u03c4\u03c1\u03b1\u03c0\u03b5\u03b6\u03b9\u03ba\u03bf\u03cd \u03bb\u03bf\u03b3\u03b1\u03c1\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd (IBAN).", "validators", "el");
    Translator.add("This value is not a valid ISBN-10.", "\u0391\u03c5\u03c4\u03cc \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03ba\u03c9\u03b4\u03b9\u03ba\u03cc\u03c2 ISBN-10.", "validators", "el");
    Translator.add("This value is not a valid ISBN-13.", "\u0391\u03c5\u03c4\u03cc \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03ba\u03c9\u03b4\u03b9\u03ba\u03cc\u03c2 ISBN-13.", "validators", "el");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u0391\u03c5\u03c4\u03cc \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03cd\u03c4\u03b5 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03ba\u03c9\u03b4\u03b9\u03ba\u03cc\u03c2 ISBN-10 \u03bf\u03cd\u03c4\u03b5 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03ba\u03c9\u03b4\u03b9\u03ba\u03cc\u03c2 ISBN-13.", "validators", "el");
    Translator.add("This value is not a valid ISSN.", "\u0391\u03c5\u03c4\u03cc \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03ba\u03c9\u03b4\u03b9\u03ba\u03cc\u03c2 ISSN.", "validators", "el");
    Translator.add("This value is not a valid currency.", "\u0391\u03c5\u03c4\u03cc \u03b4\u03b5\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03b5 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf \u03bd\u03cc\u03bc\u03b9\u03c3\u03bc\u03b1.", "validators", "el");
    Translator.add("This value should be equal to {{ compared_value }}.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03af\u03c3\u03b7 \u03bc\u03b5 {{ compared_value }}.", "validators", "el");
    Translator.add("This value should be greater than {{ compared_value }}.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b7 \u03b1\u03c0\u03cc {{ compared_value }}.", "validators", "el");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b7 \u03ae \u03af\u03c3\u03b7 \u03bc\u03b5 {{ compared_value }}.", "validators", "el");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03b1\u03bd\u03bf\u03bc\u03bf\u03b9\u03cc\u03c4\u03c5\u03c0\u03b7 \u03bc\u03b5 {{ compared_value_type }} {{ compared_value }}.", "validators", "el");
    Translator.add("This value should be less than {{ compared_value }}.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03ba\u03c1\u03cc\u03c4\u03b5\u03c1\u03b7 \u03b1\u03c0\u03cc {{ compared_value }}.", "validators", "el");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03ba\u03c1\u03cc\u03c4\u03b5\u03c1\u03b7 \u03ae \u03af\u03c3\u03b7 \u03bc\u03b5 {{ compared_value }}.", "validators", "el");
    Translator.add("This value should not be equal to {{ compared_value }}.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03af\u03c3\u03b7 \u03bc\u03b5 {{ compared_value }}.", "validators", "el");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b4\u03b5\u03bd \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03b1\u03bd\u03bf\u03bc\u03bf\u03b9\u03cc\u03c4\u03c5\u03c0\u03b7 \u03bc\u03b5 {{ compared_value_type }} {{ compared_value }}.", "validators", "el");
    Translator.add("This form should not contain extra fields.", "\u0391\u03c5\u03c4\u03ae \u03b7 \u03c6\u03cc\u03c1\u03bc\u03b1 \u03b4\u03b5\u03bd \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03c0\u03b5\u03b4\u03af\u03b1.", "validators", "el");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b5\u03b3\u03ac\u03bb\u03bf. \u03a0\u03b1\u03c1\u03b1\u03ba\u03b1\u03bb\u03bf\u03cd\u03bc\u03b5 \u03c0\u03c1\u03bf\u03c3\u03c0\u03b1\u03b8\u03ae\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03b1\u03bd\u03b5\u03b2\u03ac\u03c3\u03b5\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03bc\u03b9\u03ba\u03c1\u03cc\u03c4\u03b5\u03c1\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf.", "validators", "el");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "\u03a4\u03bf CSRF token \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf. \u03a0\u03b1\u03c1\u03b1\u03ba\u03b1\u03bb\u03bf\u03cd\u03bc\u03b5 \u03b4\u03bf\u03ba\u03b9\u03bc\u03ac\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03b2\u03ac\u03bb\u03b5\u03c4\u03b5 \u03c4\u03b7 \u03c6\u03cc\u03c1\u03bc\u03b1 \u03be\u03b1\u03bd\u03ac.", "validators", "el");
})(Translator);

(function (Translator) {
    // en
    Translator.add("This value should be false.", "This value should be false.", "validators", "en");
    Translator.add("This value should be true.", "This value should be true.", "validators", "en");
    Translator.add("This value should be of type {{ type }}.", "This value should be of type {{ type }}.", "validators", "en");
    Translator.add("This value should be blank.", "This value should be blank.", "validators", "en");
    Translator.add("The value you selected is not a valid choice.", "The value you selected is not a valid choice.", "validators", "en");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "validators", "en");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "validators", "en");
    Translator.add("One or more of the given values is invalid.", "One or more of the given values is invalid.", "validators", "en");
    Translator.add("This field was not expected.", "This field was not expected.", "validators", "en");
    Translator.add("This field is missing.", "This field is missing.", "validators", "en");
    Translator.add("This value is not a valid date.", "This value is not a valid date.", "validators", "en");
    Translator.add("This value is not a valid datetime.", "This value is not a valid datetime.", "validators", "en");
    Translator.add("This value is not a valid email address.", "This value is not a valid email address.", "validators", "en");
    Translator.add("The file could not be found.", "The file could not be found.", "validators", "en");
    Translator.add("The file is not readable.", "The file is not readable.", "validators", "en");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "validators", "en");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "validators", "en");
    Translator.add("This value should be {{ limit }} or less.", "This value should be {{ limit }} or less.", "validators", "en");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "validators", "en");
    Translator.add("This value should be {{ limit }} or more.", "This value should be {{ limit }} or more.", "validators", "en");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "validators", "en");
    Translator.add("This value should not be blank.", "This value should not be blank.", "validators", "en");
    Translator.add("This value should not be null.", "This value should not be null.", "validators", "en");
    Translator.add("This value should be null.", "This value should be null.", "validators", "en");
    Translator.add("This value is not valid.", "This value is not valid.", "validators", "en");
    Translator.add("This value is not a valid time.", "This value is not a valid time.", "validators", "en");
    Translator.add("This value is not a valid URL.", "This value is not a valid URL.", "validators", "en");
    Translator.add("The two values should be equal.", "The two values should be equal.", "validators", "en");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "validators", "en");
    Translator.add("The file is too large.", "The file is too large.", "validators", "en");
    Translator.add("The file could not be uploaded.", "The file could not be uploaded.", "validators", "en");
    Translator.add("This value should be a valid number.", "This value should be a valid number.", "validators", "en");
    Translator.add("This file is not a valid image.", "This file is not a valid image.", "validators", "en");
    Translator.add("This is not a valid IP address.", "This is not a valid IP address.", "validators", "en");
    Translator.add("This value is not a valid language.", "This value is not a valid language.", "validators", "en");
    Translator.add("This value is not a valid locale.", "This value is not a valid locale.", "validators", "en");
    Translator.add("This value is not a valid country.", "This value is not a valid country.", "validators", "en");
    Translator.add("This value is already used.", "This value is already used.", "validators", "en");
    Translator.add("The size of the image could not be detected.", "The size of the image could not be detected.", "validators", "en");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "validators", "en");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "validators", "en");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "validators", "en");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "validators", "en");
    Translator.add("This value should be the user's current password.", "This value should be the user's current password.", "validators", "en");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "validators", "en");
    Translator.add("The file was only partially uploaded.", "The file was only partially uploaded.", "validators", "en");
    Translator.add("No file was uploaded.", "No file was uploaded.", "validators", "en");
    Translator.add("No temporary folder was configured in php.ini.", "No temporary folder was configured in php.ini.", "validators", "en");
    Translator.add("Cannot write temporary file to disk.", "Cannot write temporary file to disk.", "validators", "en");
    Translator.add("A PHP extension caused the upload to fail.", "A PHP extension caused the upload to fail.", "validators", "en");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "validators", "en");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "validators", "en");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "validators", "en");
    Translator.add("Invalid card number.", "Invalid card number.", "validators", "en");
    Translator.add("Unsupported card type or invalid card number.", "Unsupported card type or invalid card number.", "validators", "en");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "This is not a valid International Bank Account Number (IBAN).", "validators", "en");
    Translator.add("This value is not a valid ISBN-10.", "This value is not a valid ISBN-10.", "validators", "en");
    Translator.add("This value is not a valid ISBN-13.", "This value is not a valid ISBN-13.", "validators", "en");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "This value is neither a valid ISBN-10 nor a valid ISBN-13.", "validators", "en");
    Translator.add("This value is not a valid ISSN.", "This value is not a valid ISSN.", "validators", "en");
    Translator.add("This value is not a valid currency.", "This value is not a valid currency.", "validators", "en");
    Translator.add("This value should be equal to {{ compared_value }}.", "This value should be equal to {{ compared_value }}.", "validators", "en");
    Translator.add("This value should be greater than {{ compared_value }}.", "This value should be greater than {{ compared_value }}.", "validators", "en");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "This value should be greater than or equal to {{ compared_value }}.", "validators", "en");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "validators", "en");
    Translator.add("This value should be less than {{ compared_value }}.", "This value should be less than {{ compared_value }}.", "validators", "en");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "This value should be less than or equal to {{ compared_value }}.", "validators", "en");
    Translator.add("This value should not be equal to {{ compared_value }}.", "This value should not be equal to {{ compared_value }}.", "validators", "en");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "validators", "en");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "validators", "en");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "validators", "en");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "validators", "en");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "validators", "en");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "validators", "en");
    Translator.add("An empty file is not allowed.", "An empty file is not allowed.", "validators", "en");
    Translator.add("The host could not be resolved.", "The host could not be resolved.", "validators", "en");
    Translator.add("This value does not match the expected {{ charset }} charset.", "This value does not match the expected {{ charset }} charset.", "validators", "en");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "This is not a valid Business Identifier Code (BIC).", "validators", "en");
    Translator.add("This form should not contain extra fields.", "This form should not contain extra fields.", "validators", "en");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "The uploaded file was too large. Please try to upload a smaller file.", "validators", "en");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "The CSRF token is invalid. Please try to resubmit the form.", "validators", "en");
    Translator.add("client.conditions_not_accepted", "You must accept store conditions", "validators", "en");
    Translator.add("client.email_not_unique", "You have an account already. Please login first.", "validators", "en");
})(Translator);

(function (Translator) {
    // es
    Translator.add("This value should be false.", "Este valor deber\u00eda ser falso.", "validators", "es");
    Translator.add("This value should be true.", "Este valor deber\u00eda ser verdadero.", "validators", "es");
    Translator.add("This value should be of type {{ type }}.", "Este valor deber\u00eda ser de tipo {{ type }}.", "validators", "es");
    Translator.add("This value should be blank.", "Este valor deber\u00eda estar vac\u00edo.", "validators", "es");
    Translator.add("The value you selected is not a valid choice.", "El valor seleccionado no es una opci\u00f3n v\u00e1lida.", "validators", "es");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Debe seleccionar al menos {{ limit }} opci\u00f3n.|Debe seleccionar al menos {{ limit }} opciones.", "validators", "es");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Debe seleccionar como m\u00e1ximo {{ limit }} opci\u00f3n.|Debe seleccionar como m\u00e1ximo {{ limit }} opciones.", "validators", "es");
    Translator.add("One or more of the given values is invalid.", "Uno o m\u00e1s de los valores indicados no son v\u00e1lidos.", "validators", "es");
    Translator.add("This field was not expected.", "Este campo no se esperaba.", "validators", "es");
    Translator.add("This field is missing.", "Este campo est\u00e1 desaparecido.", "validators", "es");
    Translator.add("This value is not a valid date.", "Este valor no es una fecha v\u00e1lida.", "validators", "es");
    Translator.add("This value is not a valid datetime.", "Este valor no es una fecha y hora v\u00e1lidas.", "validators", "es");
    Translator.add("This value is not a valid email address.", "Este valor no es una direcci\u00f3n de email v\u00e1lida.", "validators", "es");
    Translator.add("The file could not be found.", "No se pudo encontrar el archivo.", "validators", "es");
    Translator.add("The file is not readable.", "No se puede leer el archivo.", "validators", "es");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "El archivo es demasiado grande ({{ size }} {{ suffix }}). El tama\u00f1o m\u00e1ximo permitido es {{ limit }} {{ suffix }}.", "validators", "es");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "El tipo mime del archivo no es v\u00e1lido ({{ type }}). Los tipos mime v\u00e1lidos son {{ types }}.", "validators", "es");
    Translator.add("This value should be {{ limit }} or less.", "Este valor deber\u00eda ser {{ limit }} o menos.", "validators", "es");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Este valor es demasiado largo. Deber\u00eda tener {{ limit }} car\u00e1cter o menos.|Este valor es demasiado largo. Deber\u00eda tener {{ limit }} caracteres o menos.", "validators", "es");
    Translator.add("This value should be {{ limit }} or more.", "Este valor deber\u00eda ser {{ limit }} o m\u00e1s.", "validators", "es");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Este valor es demasiado corto. Deber\u00eda tener {{ limit }} car\u00e1cter o m\u00e1s.|Este valor es demasiado corto. Deber\u00eda tener {{ limit }} caracteres o m\u00e1s.", "validators", "es");
    Translator.add("This value should not be blank.", "Este valor no deber\u00eda estar vac\u00edo.", "validators", "es");
    Translator.add("This value should not be null.", "Este valor no deber\u00eda ser nulo.", "validators", "es");
    Translator.add("This value should be null.", "Este valor deber\u00eda ser nulo.", "validators", "es");
    Translator.add("This value is not valid.", "Este valor no es v\u00e1lido.", "validators", "es");
    Translator.add("This value is not a valid time.", "Este valor no es una hora v\u00e1lida.", "validators", "es");
    Translator.add("This value is not a valid URL.", "Este valor no es una URL v\u00e1lida.", "validators", "es");
    Translator.add("The two values should be equal.", "Los dos valores deber\u00edan ser iguales.", "validators", "es");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "El archivo es demasiado grande. El tama\u00f1o m\u00e1ximo permitido es {{ limit }} {{ suffix }}.", "validators", "es");
    Translator.add("The file is too large.", "El archivo es demasiado grande.", "validators", "es");
    Translator.add("The file could not be uploaded.", "No se pudo subir el archivo.", "validators", "es");
    Translator.add("This value should be a valid number.", "Este valor deber\u00eda ser un n\u00famero v\u00e1lido.", "validators", "es");
    Translator.add("This file is not a valid image.", "El archivo no es una imagen v\u00e1lida.", "validators", "es");
    Translator.add("This is not a valid IP address.", "Esto no es una direcci\u00f3n IP v\u00e1lida.", "validators", "es");
    Translator.add("This value is not a valid language.", "Este valor no es un idioma v\u00e1lido.", "validators", "es");
    Translator.add("This value is not a valid locale.", "Este valor no es una localizaci\u00f3n v\u00e1lida.", "validators", "es");
    Translator.add("This value is not a valid country.", "Este valor no es un pa\u00eds v\u00e1lido.", "validators", "es");
    Translator.add("This value is already used.", "Este valor ya se ha utilizado.", "validators", "es");
    Translator.add("The size of the image could not be detected.", "No se pudo determinar el tama\u00f1o de la imagen.", "validators", "es");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "El ancho de la imagen es demasiado grande ({{ width }}px). El ancho m\u00e1ximo permitido es de {{ max_width }}px.", "validators", "es");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "El ancho de la imagen es demasiado peque\u00f1o ({{ width }}px). El ancho m\u00ednimo requerido es {{ min_width }}px.", "validators", "es");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "La altura de la imagen es demasiado grande ({{ height }}px). La altura m\u00e1xima permitida es de {{ max_height }}px.", "validators", "es");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "La altura de la imagen es demasiado peque\u00f1a ({{ height }}px). La altura m\u00ednima requerida es de {{ min_height }}px.", "validators", "es");
    Translator.add("This value should be the user's current password.", "Este valor deber\u00eda ser la contrase\u00f1a actual del usuario.", "validators", "es");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Este valor deber\u00eda tener exactamente {{ limit }} car\u00e1cter.|Este valor deber\u00eda tener exactamente {{ limit }} caracteres.", "validators", "es");
    Translator.add("The file was only partially uploaded.", "El archivo fue s\u00f3lo subido parcialmente.", "validators", "es");
    Translator.add("No file was uploaded.", "Ning\u00fan archivo fue subido.", "validators", "es");
    Translator.add("No temporary folder was configured in php.ini.", "Ninguna carpeta temporal fue configurada en php.ini.", "validators", "es");
    Translator.add("Cannot write temporary file to disk.", "No se pudo escribir el archivo temporal en el disco.", "validators", "es");
    Translator.add("A PHP extension caused the upload to fail.", "Una extensi\u00f3n de PHP hizo que la subida fallara.", "validators", "es");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Esta colecci\u00f3n debe contener {{ limit }} elemento o m\u00e1s.|Esta colecci\u00f3n debe contener {{ limit }} elementos o m\u00e1s.", "validators", "es");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Esta colecci\u00f3n debe contener {{ limit }} elemento o menos.|Esta colecci\u00f3n debe contener {{ limit }} elementos o menos.", "validators", "es");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Esta colecci\u00f3n debe contener exactamente {{ limit }} elemento.|Esta colecci\u00f3n debe contener exactamente {{ limit }} elementos.", "validators", "es");
    Translator.add("Invalid card number.", "N\u00famero de tarjeta inv\u00e1lido.", "validators", "es");
    Translator.add("Unsupported card type or invalid card number.", "Tipo de tarjeta no soportado o n\u00famero de tarjeta inv\u00e1lido.", "validators", "es");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Esto no es un International Bank Account Number (IBAN) v\u00e1lido.", "validators", "es");
    Translator.add("This value is not a valid ISBN-10.", "Este valor no es un ISBN-10 v\u00e1lido.", "validators", "es");
    Translator.add("This value is not a valid ISBN-13.", "Este valor no es un ISBN-13 v\u00e1lido.", "validators", "es");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Este valor no es ni un ISBN-10 v\u00e1lido ni un ISBN-13 v\u00e1lido.", "validators", "es");
    Translator.add("This value is not a valid ISSN.", "Este valor no es un ISSN v\u00e1lido.", "validators", "es");
    Translator.add("This value is not a valid currency.", "Este valor no es una divisa v\u00e1lida.", "validators", "es");
    Translator.add("This value should be equal to {{ compared_value }}.", "Este valor deber\u00eda ser igual que {{ compared_value }}.", "validators", "es");
    Translator.add("This value should be greater than {{ compared_value }}.", "Este valor deber\u00eda ser mayor que {{ compared_value }}.", "validators", "es");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Este valor deber\u00eda ser mayor o igual que {{ compared_value }}.", "validators", "es");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Este valor deber\u00eda ser id\u00e9ntico a {{ compared_value_type }} {{ compared_value }}.", "validators", "es");
    Translator.add("This value should be less than {{ compared_value }}.", "Este valor deber\u00eda ser menor que {{ compared_value }}.", "validators", "es");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Este valor deber\u00eda ser menor o igual que {{ compared_value }}.", "validators", "es");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Este valor deber\u00eda ser distinto de {{ compared_value }}.", "validators", "es");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Este valor no deber\u00eda ser id\u00e9ntico a {{ compared_value_type }} {{ compared_value }}.", "validators", "es");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "La proporci\u00f3n de la imagen es demasiado grande ({{ ratio }}). La m\u00e1xima proporci\u00f3n permitida es {{ max_ratio }}.", "validators", "es");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "La proporci\u00f3n de la imagen es demasiado peque\u00f1a ({{ ratio }}). La m\u00ednima proporci\u00f3n permitida es {{ min_ratio }}.", "validators", "es");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "La imagen es cuadrada ({{ width }}x{{ height }}px). Las im\u00e1genes cuadradas no est\u00e1n permitidas.", "validators", "es");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "La imagen est\u00e1 orientada horizontalmente ({{ width }}x{{ height }}px). Las im\u00e1genes orientadas horizontalmente no est\u00e1n permitidas.", "validators", "es");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "La imagen est\u00e1 orientada verticalmente ({{ width }}x{{ height }}px). Las im\u00e1genes orientadas verticalmente no est\u00e1n permitidas.", "validators", "es");
    Translator.add("An empty file is not allowed.", "No est\u00e1 permitido un archivo vac\u00edo.", "validators", "es");
    Translator.add("The host could not be resolved.", "No se puede resolver el host.", "validators", "es");
    Translator.add("This value does not match the expected {{ charset }} charset.", "La codificaci\u00f3n de caracteres para este valor deber\u00eda ser {{ charset }}.", "validators", "es");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "No es un C\u00f3digo de Identificaci\u00f3n Bancaria (BIC) v\u00e1lido.", "validators", "es");
    Translator.add("This form should not contain extra fields.", "Este formulario no deber\u00eda contener campos adicionales.", "validators", "es");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "El archivo subido es demasiado grande. Por favor, suba un archivo m\u00e1s peque\u00f1o.", "validators", "es");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "El token CSRF no es v\u00e1lido. Por favor, pruebe a enviar nuevamente el formulario.", "validators", "es");
})(Translator);

(function (Translator) {
    // et
    Translator.add("This value should be false.", "V\u00e4\u00e4rtus peaks olema v\u00e4\u00e4r.", "validators", "et");
    Translator.add("This value should be true.", "V\u00e4\u00e4rtus peaks oleme t\u00f5ene.", "validators", "et");
    Translator.add("This value should be of type {{ type }}.", "V\u00e4\u00e4rtus peaks olema {{ type }}-t\u00fc\u00fcpi.", "validators", "et");
    Translator.add("This value should be blank.", "V\u00e4\u00e4rtus peaks olema t\u00fchi.", "validators", "et");
    Translator.add("The value you selected is not a valid choice.", "V\u00e4\u00e4rtus peaks olema \u00fcks etteantud valikutest.", "validators", "et");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Valima peaks v\u00e4hemalt {{ limit }} valikut.", "validators", "et");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Valima peaks mitte rohkem kui  {{ limit }} valikut.", "validators", "et");
    Translator.add("One or more of the given values is invalid.", "One or more of the given values is invalid.", "validators", "et");
    Translator.add("This field was not expected.", "See v\u00e4li ei oodatud.", "validators", "et");
    Translator.add("This field is missing.", "See v\u00e4li on puudu.", "validators", "et");
    Translator.add("This value is not a valid date.", "V\u00e4\u00e4rtus pole korrektne kuup\u00e4ev.", "validators", "et");
    Translator.add("This value is not a valid datetime.", "V\u00e4\u00e4rtus pole korrektne kuup\u00e4ev ja kellaeg.", "validators", "et");
    Translator.add("This value is not a valid email address.", "V\u00e4\u00e4rtus pole korrektne e-maili aadress.", "validators", "et");
    Translator.add("The file could not be found.", "Faili ei leita.", "validators", "et");
    Translator.add("The file is not readable.", "Fail ei ole loetav.", "validators", "et");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Fail on liiga suur ({{ size }} {{ suffix }}). Suurim lubatud suurus on {{ limit }} {{ suffix }}.", "validators", "et");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Faili sisut\u00fc\u00fcp on vigane ({{ type }}). Lubatud sisut\u00fc\u00fcbid on {{ types }}.", "validators", "et");
    Translator.add("This value should be {{ limit }} or less.", "V\u00e4\u00e4rtus peaks olema {{ limit }} v\u00f5i v\u00e4hem.", "validators", "et");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "V\u00e4\u00e4rtus on liiga pikk. Pikkus peaks olema {{ limit }} t\u00e4hem\u00e4rki v\u00f5i v\u00e4hem.", "validators", "et");
    Translator.add("This value should be {{ limit }} or more.", "V\u00e4\u00e4rtus peaks olema {{ limit }} v\u00f5i rohkem.", "validators", "et");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "V\u00e4\u00e4rtus on liiga l\u00fchike. Pikkus peaks  olema {{ limit }} t\u00e4hem\u00e4rki v\u00f5i rohkem.", "validators", "et");
    Translator.add("This value should not be blank.", "V\u00e4\u00e4rtus ei tohiks olla t\u00fchi.", "validators", "et");
    Translator.add("This value should not be null.", "V\u00e4\u00e4rtus ei tohiks olla 'null'.", "validators", "et");
    Translator.add("This value should be null.", "V\u00e4\u00e4rtus peaks olema 'null'.", "validators", "et");
    Translator.add("This value is not valid.", "V\u00e4\u00e4rtus on vigane.", "validators", "et");
    Translator.add("This value is not a valid time.", "V\u00e4\u00e4rtus pole korrektne aeg.", "validators", "et");
    Translator.add("This value is not a valid URL.", "V\u00e4\u00e4rtus pole korrektne URL.", "validators", "et");
    Translator.add("The two values should be equal.", "V\u00e4\u00e4rtused peaksid olema v\u00f5rdsed.", "validators", "et");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Fail on liiga suur. Maksimaalne lubatud suurus on {{ limit }} {{ suffix }}.", "validators", "et");
    Translator.add("The file is too large.", "Fail on liiga suur.", "validators", "et");
    Translator.add("The file could not be uploaded.", "Faili ei saa \u00fcles laadida.", "validators", "et");
    Translator.add("This value should be a valid number.", "V\u00e4\u00e4rtus peaks olema korrektne number.", "validators", "et");
    Translator.add("This file is not a valid image.", "Fail ei ole korrektne pilt.", "validators", "et");
    Translator.add("This is not a valid IP address.", "IP aadress pole korrektne.", "validators", "et");
    Translator.add("This value is not a valid language.", "V\u00e4\u00e4rtus pole korrektne keel.", "validators", "et");
    Translator.add("This value is not a valid locale.", "V\u00e4\u00e4rtus pole korrektne asukohakeel.", "validators", "et");
    Translator.add("This value is not a valid country.", "V\u00e4\u00e4rtus pole olemasolev riik.", "validators", "et");
    Translator.add("This value is already used.", "V\u00e4\u00e4rtust on juba kasutatud.", "validators", "et");
    Translator.add("The size of the image could not be detected.", "Pildi suurust polnud v\u00f5imalik tuvastada.", "validators", "et");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Pilt on liiga lai ({{ width }}px). Suurim lubatud laius on {{ max_width }}px.", "validators", "et");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Pilt on liiga kitsas ({{ width }}px). V\u00e4him lubatud laius on {{ min_width }}px.", "validators", "et");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Pilt on liiga pikk ({{ height }}px). Lubatud suurim pikkus on {{ max_height }}px.", "validators", "et");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Pilt pole piisavalt pikk ({{ height }}px). Lubatud v\u00e4him pikkus on {{ min_height }}px.", "validators", "et");
    Translator.add("This value should be the user's current password.", "V\u00e4\u00e4rtus peaks olema kasutaja kehtiv salas\u00f5na.", "validators", "et");
    Translator.add("This value should have exactly {{ limit }} characters.", "V\u00e4\u00e4rtus peaks olema t\u00e4pselt {{ limit }} t\u00e4hem\u00e4rk pikk.|V\u00e4\u00e4rtus peaks olema t\u00e4pselt {{ limit }} t\u00e4hem\u00e4rki pikk.", "validators", "et");
    Translator.add("The file was only partially uploaded.", "Fail ei laetud t\u00e4ielikult \u00fcles.", "validators", "et");
    Translator.add("No file was uploaded.", "\u00dchtegi faili ei laetud \u00fcles.", "validators", "et");
    Translator.add("No temporary folder was configured in php.ini.", "\u00dchtegi ajutist kausta polnud php.ini-s seadistatud.", "validators", "et");
    Translator.add("Cannot write temporary file to disk.", "Ajutist faili ei saa kettale kirjutada.", "validators", "et");
    Translator.add("A PHP extension caused the upload to fail.", "PHP laiendi t\u00f5ttu eba\u00f5nnestus faili \u00fcleslaadimine.", "validators", "et");
    Translator.add("This collection should contain {{ limit }} elements or more.", "Kogumikus peaks olema v\u00e4hemalt {{ limit }} element.|Kogumikus peaks olema v\u00e4hemalt {{ limit }} elementi.", "validators", "et");
    Translator.add("This collection should contain {{ limit }} elements or less.", "Kogumikus peaks olema \u00fclimalt {{ limit }} element.|Kogumikus peaks olema \u00fclimalt {{ limit }} elementi.", "validators", "et");
    Translator.add("This collection should contain exactly {{ limit }} elements.", "Kogumikus peaks olema t\u00e4pselt {{ limit }} element.|Kogumikus peaks olema t\u00e4pselt {{ limit }}|elementi.", "validators", "et");
    Translator.add("Invalid card number.", "Vigane kaardi number.", "validators", "et");
    Translator.add("Unsupported card type or invalid card number.", "Kaardi t\u00fc\u00fcpi ei toetata v\u00f5i kaardi number on vigane.", "validators", "et");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "V\u00e4\u00e4rtus pole korrektne IBAN-number.", "validators", "et");
    Translator.add("This value is not a valid ISBN-10.", "V\u00e4\u00e4rtus pole korrektne ISBN-10.", "validators", "et");
    Translator.add("This value is not a valid ISBN-13.", "V\u00e4\u00e4rtus pole korrektne ISBN-13.", "validators", "et");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "V\u00e4\u00e4rtus pole korrektne ISBN-10 ega ISBN-13.", "validators", "et");
    Translator.add("This value is not a valid ISSN.", "V\u00e4\u00e4rtus pole korrektne ISSN.", "validators", "et");
    Translator.add("This value is not a valid currency.", "V\u00e4\u00e4rtus pole korrektne valuuta.", "validators", "et");
    Translator.add("This value should be equal to {{ compared_value }}.", "V\u00e4\u00e4rtus peaks olema v\u00f5rdne {{ compared_value }}-ga.", "validators", "et");
    Translator.add("This value should be greater than {{ compared_value }}.", "V\u00e4\u00e4rtus peaks olema suurem kui {{ compared_value }}.", "validators", "et");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "V\u00e4\u00e4rtus peaks olema suurem kui v\u00f5i v\u00f5rduma {{ compared_value }}-ga.", "validators", "et");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "V\u00e4\u00e4rtus peaks olema identne v\u00e4\u00e4rtusega {{ compared_value_type }} {{ compared_value }}.", "validators", "et");
    Translator.add("This value should be less than {{ compared_value }}.", "V\u00e4\u00e4rtus peaks olema v\u00e4iksem kui {{ compared_value }}.", "validators", "et");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "V\u00e4\u00e4rtus peaks olema v\u00e4iksem kui v\u00f5i v\u00f5rduma {{ compared_value }}-ga.", "validators", "et");
    Translator.add("This value should not be equal to {{ compared_value }}.", "V\u00e4\u00e4rtus ei tohiks v\u00f5rduda {{ compared_value }}-ga.", "validators", "et");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "V\u00e4\u00e4rtus ei tohiks olla identne v\u00e4\u00e4rtusega {{ compared_value_type }} {{ compared_value }}.", "validators", "et");
    Translator.add("This form should not contain extra fields.", "V\u00e4ljade grupp ei tohiks sisalda lisav\u00e4ljasid.", "validators", "et");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u00dcleslaaditud fail oli liiga suur. Palun proovi uuesti v\u00e4iksema failiga.", "validators", "et");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF-m\u00e4rgis on vigane. Palun proovi vormi uuesti esitada.", "validators", "et");
})(Translator);

(function (Translator) {
    // eu
    Translator.add("This value should be false.", "Balio hau faltsua izan beharko litzateke.", "validators", "eu");
    Translator.add("This value should be true.", "Balio hau egia izan beharko litzateke.", "validators", "eu");
    Translator.add("This value should be of type {{ type }}.", "Balio hau {{ type }} motakoa izan beharko litzateke.", "validators", "eu");
    Translator.add("This value should be blank.", "Balio hau hutsik egon beharko litzateke.", "validators", "eu");
    Translator.add("The value you selected is not a valid choice.", "Hautatu duzun balioa ez da aukera egoki bat.", "validators", "eu");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Gutxienez aukera {{ limit }} hautatu behar duzu.|Gutxienez {{ limit }} aukera hautatu behar dituzu.", "validators", "eu");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Gehienez aukera {{ limit }} hautatu behar duzu.|Gehienez {{ limit }} aukera hautatu behar dituzu.", "validators", "eu");
    Translator.add("One or more of the given values is invalid.", "Emandako balioetatik gutxienez bat ez da egokia.", "validators", "eu");
    Translator.add("This field was not expected.", "Eremu hau ez zen espero.", "validators", "eu");
    Translator.add("This field is missing.", "Eremu hau falta da.", "validators", "eu");
    Translator.add("This value is not a valid date.", "Balio hau ez da data egoki bat.", "validators", "eu");
    Translator.add("This value is not a valid datetime.", "Balio hau ez da data-ordu egoki bat.", "validators", "eu");
    Translator.add("This value is not a valid email address.", "Balio hau ez da posta elektroniko egoki bat.", "validators", "eu");
    Translator.add("The file could not be found.", "Ezin izan da fitxategia aurkitu.", "validators", "eu");
    Translator.add("The file is not readable.", "Fitxategia ez da irakurgarria.", "validators", "eu");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Fitxategia handiegia da ({{ size }} {{ suffix }}). Baimendutako tamaina handiena {{ limit }} {{ suffix }} da.", "validators", "eu");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Fitxategiaren mime mota ez da egokia ({{ type }}). Hauek dira baimendutako mime motak: {{ types }}.", "validators", "eu");
    Translator.add("This value should be {{ limit }} or less.", "Balio hau gehienez {{ limit }} izan beharko litzateke.", "validators", "eu");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Balio hau luzeegia da. Gehienez karaktere {{ limit }} eduki beharko luke.|Balio hau luzeegia da. Gehienez {{ limit }} karaktere eduki beharko lituzke.", "validators", "eu");
    Translator.add("This value should be {{ limit }} or more.", "Balio hau gutxienez {{ limit }} izan beharko litzateke.", "validators", "eu");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Balio hau motzegia da. Karaktere {{ limit }} gutxienez eduki beharko luke.|Balio hau motzegia da. Gutxienez {{ limit }} karaktere eduki beharko lituzke.", "validators", "eu");
    Translator.add("This value should not be blank.", "Balio hau ez litzateke hutsik egon behar.", "validators", "eu");
    Translator.add("This value should not be null.", "Balio hau ez litzateke nulua izan behar.", "validators", "eu");
    Translator.add("This value should be null.", "Balio hau nulua izan beharko litzateke.", "validators", "eu");
    Translator.add("This value is not valid.", "Balio hau ez da egokia.", "validators", "eu");
    Translator.add("This value is not a valid time.", "Balio hau ez da ordu egoki bat.", "validators", "eu");
    Translator.add("This value is not a valid URL.", "Balio hau ez da baliabideen kokatzaile uniforme (URL) egoki bat.", "validators", "eu");
    Translator.add("The two values should be equal.", "Bi balioak berdinak izan beharko lirateke.", "validators", "eu");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Fitxategia handiegia da. Baimendutako tamaina handiena {{ limit }} {{ suffix }} da.", "validators", "eu");
    Translator.add("The file is too large.", "Fitxategia handiegia da.", "validators", "eu");
    Translator.add("The file could not be uploaded.", "Ezin izan da fitxategia igo.", "validators", "eu");
    Translator.add("This value should be a valid number.", "Balio hau zenbaki egoki bat izan beharko litzateke.", "validators", "eu");
    Translator.add("This file is not a valid image.", "Fitxategi hau ez da irudi egoki bat.", "validators", "eu");
    Translator.add("This is not a valid IP address.", "Honako hau ez da IP helbide egoki bat.", "validators", "eu");
    Translator.add("This value is not a valid language.", "Balio hau ez da hizkuntza egoki bat.", "validators", "eu");
    Translator.add("This value is not a valid locale.", "Balio hau ez da kokapen egoki bat.", "validators", "eu");
    Translator.add("This value is not a valid country.", "Balio hau ez da herrialde egoki bat.", "validators", "eu");
    Translator.add("This value is already used.", "Balio hau jadanik erabilia izan da.", "validators", "eu");
    Translator.add("The size of the image could not be detected.", "Ezin izan da irudiaren tamaina detektatu.", "validators", "eu");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Irudiaren zabalera handiegia da ({{ width }}px). Onartutako gehienezko zabalera {{ max_width }}px dira.", "validators", "eu");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Irudiaren zabalera txikiegia da ({{ width }}px). Onartutako gutxieneko zabalera {{ min_width }}px dira.", "validators", "eu");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Irudiaren altuera handiegia da ({{ height }}px). Onartutako gehienezko altuera {{ max_height }}px dira.", "validators", "eu");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Irudiaren altuera txikiegia da ({{ height }}px). Onartutako gutxieneko altuera {{ min_height }}px dira.", "validators", "eu");
    Translator.add("This value should be the user's current password.", "Balio hau uneko erabiltzailearen pasahitza izan beharko litzateke.", "validators", "eu");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Balio honek zehazki karaktere {{ limit }} izan beharko luke.|Balio honek zehazki {{ limit }} karaktere izan beharko lituzke.", "validators", "eu");
    Translator.add("The file was only partially uploaded.", "Fitxategiaren zati bat bakarrik igo da.", "validators", "eu");
    Translator.add("No file was uploaded.", "Ez da fitxategirik igo.", "validators", "eu");
    Translator.add("No temporary folder was configured in php.ini.", "Ez da aldi baterako karpetarik konfiguratu php.ini fitxategian.", "validators", "eu");
    Translator.add("Cannot write temporary file to disk.", "Ezin izan da aldi baterako fitxategia diskoan idatzi.", "validators", "eu");
    Translator.add("A PHP extension caused the upload to fail.", "PHP luzapen batek igoeraren hutsa eragin du.", "validators", "eu");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Bilduma honek gutxienez elementu {{ limit }} eduki beharko luke.|Bilduma honek gutxienez {{ limit }} elementu eduki beharko lituzke.", "validators", "eu");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Bilduma honek gehienez elementu {{ limit }} eduki beharko luke.|Bilduma honek gehienez {{ limit }} elementu eduki beharko lituzke.", "validators", "eu");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Bilduma honek zehazki elementu {{ limit }} eduki beharko luke.|Bilduma honek zehazki {{ limit }} elementu eduki beharko lituzke.", "validators", "eu");
    Translator.add("Invalid card number.", "Txartel zenbaki baliogabea.", "validators", "eu");
    Translator.add("Unsupported card type or invalid card number.", "Txartel mota onartezina edo txartel zenbaki baliogabea.", "validators", "eu");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Hau ez da baliozko banku internazionaleko kontu zenbaki (IBAN) bat.", "validators", "eu");
    Translator.add("This value is not a valid ISBN-10.", "Balio hau ez da onartutako ISBN-10 bat.", "validators", "eu");
    Translator.add("This value is not a valid ISBN-13.", "Balio hau ez da onartutako ISBN-13 bat.", "validators", "eu");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Balio hau ez da onartutako ISBN-10 edo ISBN-13 bat.", "validators", "eu");
    Translator.add("This value is not a valid ISSN.", "Balio hau ez da onartutako ISSN bat.", "validators", "eu");
    Translator.add("This value is not a valid currency.", "Balio hau ez da baliozko moneta bat.", "validators", "eu");
    Translator.add("This value should be equal to {{ compared_value }}.", "Balio hau {{ compared_value }}-(r)en berbera izan beharko litzateke.", "validators", "eu");
    Translator.add("This value should be greater than {{ compared_value }}.", "Balio hau {{ compared_value }} baino handiagoa izan beharko litzateke.", "validators", "eu");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Balio hau {{ compared_value }}-(r)en berdina edota handiagoa izan beharko litzateke.", "validators", "eu");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Balio hau {{ compared_value_type }} {{ compared_value }}-(r)en berbera izan beharko litzateke.", "validators", "eu");
    Translator.add("This value should be less than {{ compared_value }}.", "Balio hau {{ compared_value }} baino txikiagoa izan beharko litzateke.", "validators", "eu");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Balio hau {{ compared_value }}-(r)en berdina edota txikiagoa izan beharko litzateke.", "validators", "eu");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Balio hau ez litzateke {{ compared_value }}-(r)en berdina izan behar.", "validators", "eu");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Balio hau ez litzateke {{ compared_value_type }} {{ compared_value }}-(r)en berbera izan behar.", "validators", "eu");
    Translator.add("This form should not contain extra fields.", "Formulario honek ez luke aparteko eremurik eduki behar.", "validators", "eu");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Igotako fitxategia handiegia da. Mesedez saiatu fitxategi txikiago bat igotzen.", "validators", "eu");
    Translator.add("The CSRF token is invalid.", "CSRF tokena ez da egokia.", "validators", "eu");
})(Translator);

(function (Translator) {
    // fa
    Translator.add("This value should be false.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u0646\u0627\u062f\u0631\u0633\u062a(False) \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should be true.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u062f\u0631\u0633\u062a(True) \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should be of type {{ type }}.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u0627\u0632 \u0646\u0648\u0639 {{ type }} \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should be blank.", "\u0627\u06cc\u0646 \u0641\u06cc\u0644\u062f \u0628\u0627\u06cc\u062f \u062e\u0627\u0644\u06cc \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("The value you selected is not a valid choice.", "\u06af\u0632\u06cc\u0646\u0647 \u0627\u0646\u062a\u062e\u0627\u0628\u06cc \u0645\u0639\u062a\u0628\u0631 \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u0628\u0627\u06cc\u062f \u062d\u062f\u0627\u0642\u0644 {{ limit }} \u06af\u0632\u06cc\u0646\u0647 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f.|\u0628\u0627\u06cc\u062f \u062d\u062f\u0627\u0642\u0644 {{ limit }} \u06af\u0632\u06cc\u0646\u0647 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f.", "validators", "fa");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u062d\u062f\u0627\u06a9\u062b\u0631 {{ limit }} \u06af\u0632\u06cc\u0646\u0647 \u0645\u06cc \u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f.|\u062d\u062f\u0627\u06a9\u062b\u0631 {{ limit }} \u06af\u0632\u06cc\u0646\u0647 \u0645\u06cc \u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f.", "validators", "fa");
    Translator.add("One or more of the given values is invalid.", "\u06cc\u06a9 \u06cc\u0627 \u0686\u0646\u062f \u0645\u0642\u062f\u0627\u0631 \u0646\u0627\u0645\u0639\u062a\u0628\u0631 \u0648\u062c\u0648\u062f \u062f\u0627\u0631\u062f.", "validators", "fa");
    Translator.add("The fields {{ fields }} were not expected.", "\u0641\u06cc\u0644\u062f\u0647\u0627\u06cc {{ fields }} \u0627\u0636\u0627\u0641\u06cc \u0647\u0633\u062a\u0646\u062f.", "validators", "fa");
    Translator.add("The fields {{ fields }} are missing.", "\u0641\u06cc\u0644\u062f\u0647\u0627\u06cc {{ fields }} \u06a9\u0645 \u0647\u0633\u062a\u0646\u062f.", "validators", "fa");
    Translator.add("This value is not a valid date.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u06cc\u06a9 \u062a\u0627\u0631\u06cc\u062e \u0645\u0639\u062a\u0628\u0631 \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is not a valid datetime.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u06cc\u06a9 \u062a\u0627\u0631\u06cc\u062e \u0648 \u0632\u0645\u0627\u0646 \u0645\u0639\u062a\u0628\u0631 \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is not a valid email address.", "\u0627\u06cc\u0646 \u06cc\u06a9 \u0631\u0627\u06cc\u0627\u0646\u0627\u0645\u0647 \u0645\u0639\u062a\u0628\u0631 \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("The file could not be found.", "\u0641\u0627\u06cc\u0644 \u067e\u06cc\u062f\u0627 \u0646\u0634\u062f.", "validators", "fa");
    Translator.add("The file is not readable.", "\u0641\u0627\u06cc\u0644 \u0642\u0627\u0628\u0644\u06cc\u062a \u062e\u0648\u0627\u0646\u062f\u0646 \u0646\u062f\u0627\u0631\u062f.", "validators", "fa");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0641\u0627\u06cc\u0644 \u0628\u06cc\u0634 \u0627\u0632 \u0627\u0646\u062f\u0627\u0632\u0647 \u0628\u0632\u0631\u06af \u0627\u0633\u062a({{ size }} {{ suffix }}). \u062d\u062f\u0627\u06a9\u062b\u0631 \u0627\u0646\u062f\u0627\u0632\u0647 \u0645\u062c\u0627\u0632 \u0628\u0631\u0627\u0628\u0631 {{ limit }} {{ suffix }} \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "\u0627\u06cc\u0646 \u0646\u0648\u0639 \u0641\u0627\u06cc\u0644 \u0645\u062c\u0627\u0632 \u0646\u06cc\u0633\u062a({{ type }}). \u0646\u0648\u0639 \u0647\u0627\u06cc \u0645\u062c\u0627\u0632 {{ types }} \u0647\u0633\u062a\u0646\u062f.", "validators", "fa");
    Translator.add("This value should be {{ limit }} or less.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u06a9\u0648\u0686\u06a9\u062a\u0631 \u06cc\u0627 \u0645\u0633\u0627\u0648\u06cc {{ limit }} \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u0628\u0633\u06cc\u0627\u0631 \u0637\u0648\u0644\u0627\u0646\u06cc \u0627\u0633\u062a.\u062d\u062f\u0627\u06a9\u062b\u0631 \u062a\u0639\u062f\u0627\u062f \u062d\u0631\u0648\u0641 \u0645\u062c\u0627\u0632 \u0628\u0631\u0627\u0628\u0631 {{ limit }} \u0627\u0633\u062a.|\u0628\u0633\u06cc\u0627\u0631 \u0637\u0648\u0644\u0627\u0646\u06cc \u0627\u0633\u062a.\u062d\u062f\u0627\u06a9\u062b\u0631 \u062a\u0639\u062f\u0627\u062f \u062d\u0631\u0648\u0641 \u0645\u062c\u0627\u0632 \u0628\u0631\u0627\u0628\u0631 {{ limit }} \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("This value should be {{ limit }} or more.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u0628\u0631\u0627\u0628\u0631 \u0648 \u06cc\u0627 \u0628\u06cc\u0634\u062a\u0631 \u0627\u0632 {{ limit }} \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u0628\u0633\u06cc\u0627\u0631 \u06a9\u0648\u062a\u0627\u0647 \u0627\u0633\u062a.\u062a\u0639\u062f\u0627\u062f \u062d\u0631\u0648\u0641 \u0628\u0627\u06cc\u062f \u062d\u062f\u0627\u0642\u0644 {{ limit }} \u0628\u0627\u0634\u062f.|\u0628\u0633\u06cc\u0627\u0631 \u06a9\u0648\u062a\u0627\u0647 \u0627\u0633\u062a.\u062a\u0639\u062f\u0627\u062f \u062d\u0631\u0648\u0641 \u0628\u0627\u06cc\u062f \u062d\u062f\u0627\u0642\u0644 {{ limit }} \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should not be blank.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0646\u0628\u0627\u06cc\u062f \u062a\u0647\u06cc \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should not be null.", "\u0628\u0627\u06cc\u062f \u0645\u0642\u062f\u0627\u0631\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u062f..", "validators", "fa");
    Translator.add("This value should be null.", "\u0646\u0628\u0627\u06cc\u062f \u0645\u0642\u062f\u0627\u0631\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value is not valid.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0645\u0639\u062a\u0628\u0631 \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is not a valid time.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u06cc\u06a9 \u0632\u0645\u0627\u0646 \u0635\u062d\u06cc\u062d \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is not a valid URL.", "\u0627\u06cc\u0646 \u06cc\u06a9 URL \u0645\u0639\u062a\u0628\u0631 \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("The two values should be equal.", "\u062f\u0648 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u0628\u0631\u0627\u0628\u0631 \u0628\u0627\u0634\u0646\u062f.", "validators", "fa");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0641\u0627\u06cc\u0644 \u0628\u06cc\u0634 \u0627\u0632 \u0627\u0646\u062f\u0627\u0632\u0647 \u0628\u0632\u0631\u06af \u0627\u0633\u062a. \u062d\u062f\u0627\u06a9\u062b\u0631 \u0627\u0646\u062f\u0627\u0632\u0647 \u0645\u062c\u0627\u0632 \u0628\u0631\u0627\u0628\u0631 {{ limit }} {{ suffix }} \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("The file is too large.", "\u0641\u0627\u06cc\u0644 \u0628\u06cc\u0634 \u0627\u0632 \u0627\u0646\u062f\u0627\u0632\u0647 \u0628\u0632\u0631\u06af \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("The file could not be uploaded.", "\u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc \u0641\u0627\u06cc\u0644 \u0628\u0627 \u0634\u06a9\u0633\u062a \u0645\u0648\u0627\u062c\u0647 \u0634\u062f.", "validators", "fa");
    Translator.add("This value should be a valid number.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u06cc\u06a9 \u0639\u062f\u062f \u0645\u0639\u062a\u0628\u0631 \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This file is not a valid image.", "\u0627\u06cc\u0646 \u0641\u0627\u06cc\u0644 \u06cc\u06a9 \u062a\u0635\u0648\u06cc\u0631 \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This is not a valid IP address.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u06cc\u06a9 IP \u0645\u0639\u062a\u0628\u0631 \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is not a valid language.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u06cc\u06a9 \u0632\u0628\u0627\u0646 \u0635\u062d\u06cc\u062d \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is not a valid locale.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u06cc\u06a9 \u0645\u062d\u0644 \u0635\u062d\u06cc\u062d \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is not a valid country.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u06cc\u06a9 \u06a9\u0634\u0648\u0631 \u0635\u062d\u06cc\u062d \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is already used.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0642\u0628\u0644\u0627 \u0645\u0648\u0631\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0642\u0631\u0627\u0631 \u06af\u0631\u0641\u062a\u0647 \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("The size of the image could not be detected.", "\u0627\u0646\u062f\u0627\u0632\u0647 \u062a\u0635\u0648\u06cc\u0631 \u0642\u0627\u0628\u0644 \u0634\u0646\u0627\u0633\u0627\u06cc\u06cc \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u0637\u0648\u0644 \u062a\u0635\u0648\u06cc\u0631 \u0628\u0633\u06cc\u0627\u0631 \u0628\u0632\u0631\u06af \u0627\u0633\u062a ({{ width }}px). \u0628\u0634\u06cc\u0646\u0647 \u0637\u0648\u0644 \u0645\u062c\u0627\u0632 {{ max_width }}px \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u0637\u0648\u0644 \u062a\u0635\u0648\u06cc\u0631 \u0628\u0633\u06cc\u0627\u0631 \u06a9\u0648\u0686\u06a9 \u0627\u0633\u062a ({{ width }}px). \u06a9\u0645\u06cc\u0646\u0647 \u0637\u0648\u0644 \u0645\u0648\u0631\u062f\u0646\u0638\u0631 {{ min_width }}px \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u0627\u0631\u062a\u0641\u0627\u0639 \u062a\u0635\u0648\u06cc\u0631 \u0628\u0633\u06cc\u0627\u0631 \u0628\u0632\u0631\u06af \u0627\u0633\u062a ({{ height }}px). \u0628\u0634\u06cc\u0646\u0647 \u0627\u0631\u062a\u0641\u0627\u0639 \u0645\u062c\u0627\u0632 {{ max_height }}px \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u0627\u0631\u062a\u0641\u0627\u0639 \u062a\u0635\u0648\u06cc\u0631 \u0628\u0633\u06cc\u0627\u0631 \u06a9\u0648\u0686\u06a9 \u0627\u0633\u062a ({{ height }}px). \u06a9\u0645\u06cc\u0646\u0647 \u0627\u0631\u062a\u0641\u0627\u0639 \u0645\u0648\u0631\u062f\u0646\u0638\u0631 {{ min_height }}px \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("This value should be the user's current password.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0645\u06cc \u0628\u0627\u06cc\u0633\u062a \u06a9\u0644\u0645\u0647 \u0639\u0628\u0648\u0631 \u06a9\u0646\u0648\u0646\u06cc \u06a9\u0627\u0631\u0628\u0631 \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", " \u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0645\u06cc \u0628\u0627\u06cc\u0633\u062a \u062f\u0642\u06cc\u0642\u0627 {{ limit }} \u06a9\u0627\u0631\u0627\u06a9\u062a\u0631 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u062f.| \u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0645\u06cc \u0628\u0627\u06cc\u0633\u062a \u062f\u0642\u06cc\u0642\u0627 {{ limit }} \u06a9\u0627\u0631\u0627\u06a9\u062a\u0631 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("The file was only partially uploaded.", "\u0641\u0627\u06cc\u0644 \u0628\u0647 \u0635\u0648\u0631\u062a \u062c\u0632\u06cc\u06cc \u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("No file was uploaded.", "\u0647\u06cc\u0686 \u0641\u0627\u06cc\u0644\u06cc \u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc \u0646\u0634\u062f.", "validators", "fa");
    Translator.add("No temporary folder was configured in php.ini.", "\u0641\u0648\u0644\u062f\u0631 \u0645\u0648\u0642\u062a \u062f\u0631 php.ini \u067e\u06cc\u06a9\u0631\u0628\u0646\u062f\u06cc \u0646\u0634\u062f\u0647 \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("Cannot write temporary file to disk.", "\u0641\u0627\u06cc\u0644 \u0645\u0648\u0642\u062a \u0631\u0627 \u0646\u0645\u06cc \u062a\u0648\u0627\u0646 \u062f\u0631 \u062f\u06cc\u0633\u06a9 \u0646\u0648\u0634\u062a.", "validators", "fa");
    Translator.add("A PHP extension caused the upload to fail.", "\u0627\u06a9\u0633\u062a\u0646\u0634\u0646 PHP \u0645\u0648\u062c\u0628 \u0634\u062f \u06a9\u0647 \u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc \u0641\u0627\u06cc\u0644 \u0628\u0627 \u0634\u06a9\u0633\u062a \u0645\u0648\u0627\u062c\u0647 \u0634\u0648\u062f.", "validators", "fa");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "\u0627\u06cc\u0646 \u0645\u062c\u0645\u0648\u0639\u0647 \u0645\u06cc \u0628\u0627\u06cc\u0633\u062a \u062f\u0627\u0631\u0627\u06cc {{ limit }} \u0639\u0646\u0635\u0631 \u06cc\u0627 \u0628\u06cc\u0634\u062a\u0631 \u0628\u0627\u0634\u062f.|\u0627\u06cc\u0646 \u0645\u062c\u0645\u0648\u0639\u0647 \u0645\u06cc \u0628\u0627\u06cc\u0633\u062a \u062f\u0627\u0631\u0627\u06cc {{ limit }} \u0639\u0646\u0635\u0631 \u06cc\u0627 \u0628\u06cc\u0634\u062a\u0631 \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u0627\u06cc\u0646 \u0645\u062c\u0645\u0648\u0639\u0647 \u0645\u06cc \u0628\u0627\u06cc\u0633\u062a \u062f\u0627\u0631\u0627\u06cc \u062d\u062f\u0627\u0642\u0644 {{ limit }} \u0639\u0646\u0635\u0631 \u06cc\u0627 \u06a9\u0645\u062a\u0631 \u0628\u0627\u0634\u062f.|\u0627\u06cc\u0646 \u0645\u062c\u0645\u0648\u0639\u0647 \u0645\u06cc \u0628\u0627\u06cc\u0633\u062a \u062f\u0627\u0631\u0627\u06cc {{ limit }} \u0639\u0646\u0635\u0631 \u06cc\u0627 \u06a9\u0645\u062a\u0631 \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u0627\u06cc\u0646 \u0645\u062c\u0645\u0648\u0639\u0647 \u0645\u06cc \u0628\u0627\u06cc\u0633\u062a \u0628\u0647 \u0637\u0648\u0631 \u062f\u0642\u06cc\u0642 \u062f\u0627\u0631\u0627 {{ limit }} \u0639\u0646\u0635\u0631 \u0628\u0627\u0634\u062f.|\u0627\u06cc\u0646 \u0645\u062c\u0645\u0648\u0639\u0647 \u0645\u06cc \u0628\u0627\u06cc\u0633\u062a \u0628\u0647 \u0637\u0648\u0631 \u062f\u0642\u06cc\u0642 \u062f\u0627\u0631\u0627\u06cc {{ limit }} \u0642\u0644\u0645 \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("Invalid card number.", "\u0634\u0645\u0627\u0631\u0647 \u06a9\u0627\u0631\u062a \u0646\u0627\u0645\u0639\u062a\u0628\u0631 \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("Unsupported card type or invalid card number.", "\u0646\u0648\u0639 \u06a9\u0627\u0631\u062a \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0646\u0645\u06cc \u0634\u0648\u062f \u06cc\u0627 \u0634\u0645\u0627\u0631\u0647 \u06a9\u0627\u0631\u062a \u0646\u0627\u0645\u0639\u062a\u0628\u0631 \u0627\u0633\u062a.", "validators", "fa");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u0627\u06cc\u0646 \u06cc\u06a9 \u0634\u0645\u0627\u0631\u0647 \u062d\u0633\u0627\u0628 \u0628\u06cc\u0646 \u0627\u0644\u0645\u0644\u0644\u06cc \u0628\u0627\u0646\u06a9 (IBAN) \u062f\u0631\u0633\u062a \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is not a valid ISBN-10.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u06cc\u06a9 ISBN-10 \u062f\u0631\u0633\u062a \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is not a valid ISBN-13.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u06cc\u06a9 ISBN-13 \u062f\u0631\u0633\u062a \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u06cc\u06a9 ISBN-10 \u062f\u0631\u0633\u062a \u06cc\u0627 ISBN-13 \u062f\u0631\u0633\u062a \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is not a valid ISSN.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u06cc\u06a9 ISSN \u062f\u0631\u0633\u062a \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value is not a valid currency.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u06cc\u06a9 \u06cc\u06a9\u0627\u06cc \u067e\u0648\u0644 \u062f\u0631\u0633\u062a \u0646\u06cc\u0633\u062a.", "validators", "fa");
    Translator.add("This value should be equal to {{ compared_value }}.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u0628\u0631\u0627\u0628\u0631 \u0628\u0627 {{ compared_value }} \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should be greater than {{ compared_value }}.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u0627\u0632 {{ compared_value }} \u0628\u06cc\u0634\u062a\u0631 \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u0628\u0632\u0631\u06af\u062a\u0631 \u06cc\u0627 \u0645\u0633\u0627\u0648\u06cc \u0628\u0627 {{ compared_value }} \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u0628\u0627 {{ compared_value_type }} {{ compared_value }} \u06cc\u06a9\u06cc \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should be less than {{ compared_value }}.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u06a9\u0645\u062a\u0631 \u0627\u0632 {{ compared_value }} \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0628\u0627\u06cc\u062f \u06a9\u0645\u062a\u0631 \u06cc\u0627 \u0645\u0633\u0627\u0648\u06cc \u0628\u0627 {{ compared_value }} \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should not be equal to {{ compared_value }}.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0646\u0628\u0627\u06cc\u062f \u0628\u0627 {{ compared_value }} \u0628\u0631\u0627\u0628\u0631 \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0627\u06cc\u0646 \u0645\u0642\u062f\u0627\u0631 \u0646\u0628\u0627\u06cc\u062f {{ compared_value_type }} {{ compared_value }} \u06cc\u06a9\u06cc \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("This form should not contain extra fields.", "\u0627\u06cc\u0646 \u0641\u0631\u0645 \u0646\u0628\u0627\u06cc\u062f \u0641\u06cc\u0644\u062f \u0627\u0636\u0627\u0641\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u062f.", "validators", "fa");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u0641\u0627\u06cc\u0644 \u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc \u0634\u062f\u0647 \u0628\u0633\u06cc\u0627\u0631 \u0628\u0632\u0631\u06af \u0627\u0633\u062a. \u0644\u0637\u0641\u0627 \u0641\u0627\u06cc\u0644 \u06a9\u0648\u0686\u06a9\u062a\u0631\u06cc \u0631\u0627 \u0628\u0627\u0631\u06af\u0632\u0627\u0631\u06cc \u06a9\u0646\u06cc\u062f.", "validators", "fa");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "\u0645\u0642\u062f\u0627\u0631 CSRF \u0646\u0627\u0645\u0639\u062a\u0628\u0631 \u0627\u0633\u062a. \u0644\u0637\u0641\u0627 \u0641\u0631\u0645 \u0631\u0627 \u0645\u062c\u062f\u062f\u0627 \u0627\u0631\u0633\u0627\u0644 \u0641\u0631\u0645\u0627\u06cc\u06cc\u062f..", "validators", "fa");
})(Translator);

(function (Translator) {
    // fi
    Translator.add("This value should be false.", "Arvon tulee olla ep\u00e4tosi.", "validators", "fi");
    Translator.add("This value should be true.", "Arvon tulee olla tosi.", "validators", "fi");
    Translator.add("This value should be of type {{ type }}.", "Arvon tulee olla tyyppi\u00e4 {{ type }}.", "validators", "fi");
    Translator.add("This value should be blank.", "Arvon tulee olla tyhj\u00e4.", "validators", "fi");
    Translator.add("The value you selected is not a valid choice.", "Arvon tulee olla yksi annetuista vaihtoehdoista.", "validators", "fi");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Sinun tulee valita v\u00e4hint\u00e4\u00e4n {{ limit }} vaihtoehtoa.", "validators", "fi");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Sinun tulee valitan enint\u00e4\u00e4n {{ limit }} vaihtoehtoa.", "validators", "fi");
    Translator.add("One or more of the given values is invalid.", "Yksi tai useampi annetuista arvoista on virheellinen.", "validators", "fi");
    Translator.add("This field was not expected.", "T\u00e4ss\u00e4 kent\u00e4ss\u00e4 ei odotettu.", "validators", "fi");
    Translator.add("This field is missing.", "T\u00e4m\u00e4 kentt\u00e4 puuttuu.", "validators", "fi");
    Translator.add("This value is not a valid date.", "Annettu arvo ei ole kelvollinen p\u00e4iv\u00e4m\u00e4\u00e4r\u00e4.", "validators", "fi");
    Translator.add("This value is not a valid datetime.", "Annettu arvo ei ole kelvollinen p\u00e4iv\u00e4m\u00e4\u00e4r\u00e4 ja kellonaika.", "validators", "fi");
    Translator.add("This value is not a valid email address.", "Annettu arvo ei ole kelvollinen s\u00e4hk\u00f6postiosoite.", "validators", "fi");
    Translator.add("The file could not be found.", "Tiedostoa ei l\u00f6ydy.", "validators", "fi");
    Translator.add("The file is not readable.", "Tiedostoa ei voida lukea.", "validators", "fi");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Tiedostonkoko ({{ size }} {{ suffix }}) on liian iso. Suurin sallittu tiedostonkoko on {{ limit }} {{ suffix }}.", "validators", "fi");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Tiedostotyyppi ({{ type }}) on virheellinen. Sallittuja tiedostotyyppej\u00e4 ovat {{ types }}.", "validators", "fi");
    Translator.add("This value should be {{ limit }} or less.", "Arvon tulee olla {{ limit }} tai v\u00e4hemm\u00e4n.", "validators", "fi");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Liian pitk\u00e4 sy\u00f6te. Sy\u00f6te saa olla enint\u00e4\u00e4n {{ limit }} merkki\u00e4.", "validators", "fi");
    Translator.add("This value should be {{ limit }} or more.", "Arvon tulee olla {{ limit }} tai enemm\u00e4n.", "validators", "fi");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Liian lyhyt sy\u00f6te. Sy\u00f6tteen tulee olla v\u00e4hint\u00e4\u00e4n {{ limit }} merkki\u00e4.", "validators", "fi");
    Translator.add("This value should not be blank.", "Kentt\u00e4 ei voi olla tyhj\u00e4.", "validators", "fi");
    Translator.add("This value should not be null.", "Sy\u00f6te ei voi olla null.", "validators", "fi");
    Translator.add("This value should be null.", "Sy\u00f6tteen tulee olla null.", "validators", "fi");
    Translator.add("This value is not valid.", "Virheellinen arvo.", "validators", "fi");
    Translator.add("This value is not a valid time.", "Annettu arvo ei ole kelvollinen kellonaika.", "validators", "fi");
    Translator.add("This value is not a valid URL.", "Annettu arvo ei ole kelvollinen URL-osoite.", "validators", "fi");
    Translator.add("The two values should be equal.", "Kahden annetun arvon tulee olla samat.", "validators", "fi");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Annettu tiedosto on liian iso. Suurin sallittu tiedostokoko on {{ limit }} {{ suffix }}.", "validators", "fi");
    Translator.add("The file is too large.", "Tiedosto on liian iso.", "validators", "fi");
    Translator.add("The file could not be uploaded.", "Tiedoston siirto ep\u00e4onnistui.", "validators", "fi");
    Translator.add("This value should be a valid number.", "T\u00e4m\u00e4n arvon tulee olla numero.", "validators", "fi");
    Translator.add("This file is not a valid image.", "T\u00e4m\u00e4 tiedosto ei ole kelvollinen kuva.", "validators", "fi");
    Translator.add("This is not a valid IP address.", "T\u00e4m\u00e4 ei ole kelvollinen IP-osoite.", "validators", "fi");
    Translator.add("This value is not a valid language.", "T\u00e4m\u00e4 arvo ei ole kelvollinen kieli.", "validators", "fi");
    Translator.add("This value is not a valid locale.", "T\u00e4m\u00e4 arvo ei ole kelvollinen kieli- ja alueasetus (locale).", "validators", "fi");
    Translator.add("This value is not a valid country.", "T\u00e4m\u00e4 arvo ei ole kelvollinen maa.", "validators", "fi");
    Translator.add("This value is already used.", "T\u00e4m\u00e4 arvo on jo k\u00e4ytetty.", "validators", "fi");
    Translator.add("The size of the image could not be detected.", "Kuvan kokoa ei voitu tunnistaa.", "validators", "fi");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Kuva on liian leve\u00e4 ({{ width }}px). Sallittu maksimileveys on {{ max_width }}px.", "validators", "fi");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Kuva on liian kapea ({{ width }}px). Leveyden tulisi olla v\u00e4hint\u00e4\u00e4n {{ min_width }}px.", "validators", "fi");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Kuva on liian korkea ({{ width }}px). Sallittu maksimikorkeus on {{ max_width }}px.", "validators", "fi");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Kuva on liian matala ({{ height }}px). Korkeuden tulisi olla v\u00e4hint\u00e4\u00e4n {{ min_height }}px.", "validators", "fi");
    Translator.add("This value should be the user's current password.", "T\u00e4m\u00e4n arvon tulisi olla k\u00e4ytt\u00e4j\u00e4n t\u00e4m\u00e4nhetkinen salasana.", "validators", "fi");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "T\u00e4m\u00e4n arvon tulisi olla tasan yhden merkin pituinen.|T\u00e4m\u00e4n arvon tulisi olla tasan {{ limit }} merkki\u00e4 pitk\u00e4.", "validators", "fi");
    Translator.add("The file was only partially uploaded.", "Tiedosto ladattiin vain osittain.", "validators", "fi");
    Translator.add("No file was uploaded.", "Tiedostoa ei ladattu.", "validators", "fi");
    Translator.add("No temporary folder was configured in php.ini.", "V\u00e4liaikaishakemistoa ei ole asetettu php.ini -tiedostoon.", "validators", "fi");
    Translator.add("Cannot write temporary file to disk.", "V\u00e4liaikaistiedostoa ei voitu kirjoittaa levylle.", "validators", "fi");
    Translator.add("A PHP extension caused the upload to fail.", "PHP-laajennoksen vuoksi tiedoston lataus ep\u00e4onnistui.", "validators", "fi");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "T\u00e4ss\u00e4 ryhm\u00e4ss\u00e4 tulisi olla yksi tai useampi elementti.|T\u00e4ss\u00e4 ryhm\u00e4ss\u00e4 tulisi olla v\u00e4hint\u00e4\u00e4n {{ limit }} elementti\u00e4.", "validators", "fi");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "T\u00e4ss\u00e4 ryhm\u00e4ss\u00e4 tulisi olla enint\u00e4\u00e4n yksi elementti.|T\u00e4ss\u00e4 ryhm\u00e4ss\u00e4 tulisi olla enint\u00e4\u00e4n {{ limit }} elementti\u00e4.", "validators", "fi");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "T\u00e4ss\u00e4 ryhm\u00e4ss\u00e4 tulisi olla tasan yksi elementti.|T\u00e4ss\u00e4 ryhm\u00e4ss\u00e4 tulisi olla enint\u00e4\u00e4n {{ limit }} elementti\u00e4.", "validators", "fi");
    Translator.add("Invalid card number.", "Virheellinen korttinumero.", "validators", "fi");
    Translator.add("Unsupported card type or invalid card number.", "T\u00e4t\u00e4 korttityyppi\u00e4 ei tueta tai korttinumero on virheellinen.", "validators", "fi");
    Translator.add("This field group should not contain extra fields.", "T\u00e4m\u00e4 kentt\u00e4ryhm\u00e4 ei voi sis\u00e4lt\u00e4\u00e4 ylim\u00e4\u00e4r\u00e4isi\u00e4 kentti\u00e4.", "validators", "fi");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Ladattu tiedosto on liian iso. Ole hyv\u00e4 ja lataa pienempi tiedosto.", "validators", "fi");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF tarkiste on virheellinen. Ole hyv\u00e4 ja yrit\u00e4 l\u00e4hett\u00e4\u00e4 lomake uudestaan.", "validators", "fi");
})(Translator);

(function (Translator) {
    // fr
    Translator.add("This value should be false.", "Cette valeur doit \u00eatre fausse.", "validators", "fr");
    Translator.add("This value should be true.", "Cette valeur doit \u00eatre vraie.", "validators", "fr");
    Translator.add("This value should be of type {{ type }}.", "Cette valeur doit \u00eatre de type {{ type }}.", "validators", "fr");
    Translator.add("This value should be blank.", "Cette valeur doit \u00eatre vide.", "validators", "fr");
    Translator.add("The value you selected is not a valid choice.", "Cette valeur doit \u00eatre l'un des choix propos\u00e9s.", "validators", "fr");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Vous devez s\u00e9lectionner au moins {{ limit }} choix.|Vous devez s\u00e9lectionner au moins {{ limit }} choix.", "validators", "fr");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Vous devez s\u00e9lectionner au maximum {{ limit }} choix.|Vous devez s\u00e9lectionner au maximum {{ limit }} choix.", "validators", "fr");
    Translator.add("One or more of the given values is invalid.", "Une ou plusieurs des valeurs soumises sont invalides.", "validators", "fr");
    Translator.add("This field was not expected.", "Ce champ n'a pas \u00e9t\u00e9 pr\u00e9vu.", "validators", "fr");
    Translator.add("This field is missing.", "Ce champ est manquant.", "validators", "fr");
    Translator.add("This value is not a valid date.", "Cette valeur n'est pas une date valide.", "validators", "fr");
    Translator.add("This value is not a valid datetime.", "Cette valeur n'est pas une date valide.", "validators", "fr");
    Translator.add("This value is not a valid email address.", "Cette valeur n'est pas une adresse email valide.", "validators", "fr");
    Translator.add("The file could not be found.", "Le fichier n'a pas \u00e9t\u00e9 trouv\u00e9.", "validators", "fr");
    Translator.add("The file is not readable.", "Le fichier n'est pas lisible.", "validators", "fr");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Le fichier est trop volumineux ({{ size }} {{ suffix }}). Sa taille ne doit pas d\u00e9passer {{ limit }} {{ suffix }}.", "validators", "fr");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Le type du fichier est invalide ({{ type }}). Les types autoris\u00e9s sont {{ types }}.", "validators", "fr");
    Translator.add("This value should be {{ limit }} or less.", "Cette valeur doit \u00eatre inf\u00e9rieure ou \u00e9gale \u00e0 {{ limit }}.", "validators", "fr");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Cette chaine est trop longue. Elle doit avoir au maximum {{ limit }} caract\u00e8re.|Cette chaine est trop longue. Elle doit avoir au maximum {{ limit }} caract\u00e8res.", "validators", "fr");
    Translator.add("This value should be {{ limit }} or more.", "Cette valeur doit \u00eatre sup\u00e9rieure ou \u00e9gale \u00e0 {{ limit }}.", "validators", "fr");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Cette chaine est trop courte. Elle doit avoir au minimum {{ limit }} caract\u00e8re.|Cette chaine est trop courte. Elle doit avoir au minimum {{ limit }} caract\u00e8res.", "validators", "fr");
    Translator.add("This value should not be blank.", "Cette valeur ne doit pas \u00eatre vide.", "validators", "fr");
    Translator.add("This value should not be null.", "Cette valeur ne doit pas \u00eatre nulle.", "validators", "fr");
    Translator.add("This value should be null.", "Cette valeur doit \u00eatre nulle.", "validators", "fr");
    Translator.add("This value is not valid.", "Cette valeur n'est pas valide.", "validators", "fr");
    Translator.add("This value is not a valid time.", "Cette valeur n'est pas une heure valide.", "validators", "fr");
    Translator.add("This value is not a valid URL.", "Cette valeur n'est pas une URL valide.", "validators", "fr");
    Translator.add("The two values should be equal.", "Les deux valeurs doivent \u00eatre identiques.", "validators", "fr");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Le fichier est trop volumineux. Sa taille ne doit pas d\u00e9passer {{ limit }} {{ suffix }}.", "validators", "fr");
    Translator.add("The file is too large.", "Le fichier est trop volumineux.", "validators", "fr");
    Translator.add("The file could not be uploaded.", "Le t\u00e9l\u00e9chargement de ce fichier est impossible.", "validators", "fr");
    Translator.add("This value should be a valid number.", "Cette valeur doit \u00eatre un nombre.", "validators", "fr");
    Translator.add("This file is not a valid image.", "Ce fichier n'est pas une image valide.", "validators", "fr");
    Translator.add("This is not a valid IP address.", "Cette adresse IP n'est pas valide.", "validators", "fr");
    Translator.add("This value is not a valid language.", "Cette langue n'est pas valide.", "validators", "fr");
    Translator.add("This value is not a valid locale.", "Ce param\u00e8tre r\u00e9gional n'est pas valide.", "validators", "fr");
    Translator.add("This value is not a valid country.", "Ce pays n'est pas valide.", "validators", "fr");
    Translator.add("This value is already used.", "Cette valeur est d\u00e9j\u00e0 utilis\u00e9e.", "validators", "fr");
    Translator.add("The size of the image could not be detected.", "La taille de l'image n'a pas pu \u00eatre d\u00e9tect\u00e9e.", "validators", "fr");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "La largeur de l'image est trop grande ({{ width }}px). La largeur maximale autoris\u00e9e est de {{ max_width }}px.", "validators", "fr");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "La largeur de l'image est trop petite ({{ width }}px). La largeur minimale attendue est de {{ min_width }}px.", "validators", "fr");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "La hauteur de l'image est trop grande ({{ height }}px). La hauteur maximale autoris\u00e9e est de {{ max_height }}px.", "validators", "fr");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "La hauteur de l'image est trop petite ({{ height }}px). La hauteur minimale attendue est de {{ min_height }}px.", "validators", "fr");
    Translator.add("This value should be the user's current password.", "Cette valeur doit \u00eatre le mot de passe actuel de l'utilisateur.", "validators", "fr");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Cette chaine doit avoir exactement {{ limit }} caract\u00e8re.|Cette chaine doit avoir exactement {{ limit }} caract\u00e8res.", "validators", "fr");
    Translator.add("The file was only partially uploaded.", "Le fichier a \u00e9t\u00e9 partiellement transf\u00e9r\u00e9.", "validators", "fr");
    Translator.add("No file was uploaded.", "Aucun fichier n'a \u00e9t\u00e9 transf\u00e9r\u00e9.", "validators", "fr");
    Translator.add("No temporary folder was configured in php.ini.", "Aucun r\u00e9pertoire temporaire n'a \u00e9t\u00e9 configur\u00e9 dans le php.ini.", "validators", "fr");
    Translator.add("Cannot write temporary file to disk.", "Impossible d'\u00e9crire le fichier temporaire sur le disque.", "validators", "fr");
    Translator.add("A PHP extension caused the upload to fail.", "Une extension PHP a emp\u00each\u00e9 le transfert du fichier.", "validators", "fr");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Cette collection doit contenir {{ limit }} \u00e9l\u00e9ment ou plus.|Cette collection doit contenir {{ limit }} \u00e9l\u00e9ments ou plus.", "validators", "fr");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Cette collection doit contenir {{ limit }} \u00e9l\u00e9ment ou moins.|Cette collection doit contenir {{ limit }} \u00e9l\u00e9ments ou moins.", "validators", "fr");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Cette collection doit contenir exactement {{ limit }} \u00e9l\u00e9ment.|Cette collection doit contenir exactement {{ limit }} \u00e9l\u00e9ments.", "validators", "fr");
    Translator.add("Invalid card number.", "Num\u00e9ro de carte invalide.", "validators", "fr");
    Translator.add("Unsupported card type or invalid card number.", "Type de carte non support\u00e9 ou num\u00e9ro invalide.", "validators", "fr");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Le num\u00e9ro IBAN (International Bank Account Number) saisi n'est pas valide.", "validators", "fr");
    Translator.add("This value is not a valid ISBN-10.", "Cette valeur n'est pas un code ISBN-10 valide.", "validators", "fr");
    Translator.add("This value is not a valid ISBN-13.", "Cette valeur n'est pas un code ISBN-13 valide.", "validators", "fr");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Cette valeur n'est ni un code ISBN-10, ni un code ISBN-13 valide.", "validators", "fr");
    Translator.add("This value is not a valid ISSN.", "Cette valeur n'est pas un code ISSN valide.", "validators", "fr");
    Translator.add("This value is not a valid currency.", "Cette valeur n'est pas une devise valide.", "validators", "fr");
    Translator.add("This value should be equal to {{ compared_value }}.", "Cette valeur doit \u00eatre \u00e9gale \u00e0 {{ compared_value }}.", "validators", "fr");
    Translator.add("This value should be greater than {{ compared_value }}.", "Cette valeur doit \u00eatre sup\u00e9rieure \u00e0 {{ compared_value }}.", "validators", "fr");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Cette valeur doit \u00eatre sup\u00e9rieure ou \u00e9gale \u00e0 {{ compared_value }}.", "validators", "fr");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Cette valeur doit \u00eatre identique \u00e0 {{ compared_value_type }} {{ compared_value }}.", "validators", "fr");
    Translator.add("This value should be less than {{ compared_value }}.", "Cette valeur doit \u00eatre inf\u00e9rieure \u00e0 {{ compared_value }}.", "validators", "fr");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Cette valeur doit \u00eatre inf\u00e9rieure ou \u00e9gale \u00e0 {{ compared_value }}.", "validators", "fr");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Cette valeur ne doit pas \u00eatre \u00e9gale \u00e0 {{ compared_value }}.", "validators", "fr");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Cette valeur ne doit pas \u00eatre identique \u00e0 {{ compared_value_type }} {{ compared_value }}.", "validators", "fr");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "Le rapport largeur\/hauteur de l'image est trop grand ({{ ratio }}). Le rapport maximal autoris\u00e9 est {{ max_ratio }}.", "validators", "fr");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "Le rapport largeur\/hauteur de l'image est trop petit ({{ ratio }}). Le rapport minimal attendu est {{ min_ratio }}.", "validators", "fr");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "L'image est carr\u00e9e ({{ width }}x{{ height }}px). Les images carr\u00e9es ne sont pas autoris\u00e9es.", "validators", "fr");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "L'image est au format paysage ({{ width }}x{{ height }}px). Les images au format paysage ne sont pas autoris\u00e9es.", "validators", "fr");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "L'image est au format portrait ({{ width }}x{{ height }}px). Les images au format portrait ne sont pas autoris\u00e9es.", "validators", "fr");
    Translator.add("An empty file is not allowed.", "Un fichier vide n'est pas autoris\u00e9.", "validators", "fr");
    Translator.add("The host could not be resolved.", "Le nom de domaine n'a pas pu \u00eatre r\u00e9solu.", "validators", "fr");
    Translator.add("This value does not match the expected {{ charset }} charset.", "Cette valeur ne correspond pas au jeu de caract\u00e8res {{ charset }} attendu.", "validators", "fr");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "Ce n'est pas un code universel d'identification des banques (BIC) valide.", "validators", "fr");
    Translator.add("This form should not contain extra fields.", "Ce formulaire ne doit pas contenir des champs suppl\u00e9mentaires.", "validators", "fr");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Le fichier t\u00e9l\u00e9charg\u00e9 est trop volumineux. Merci d'essayer d'envoyer un fichier plus petit.", "validators", "fr");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "Le jeton CSRF est invalide. Veuillez renvoyer le formulaire.", "validators", "fr");
})(Translator);

(function (Translator) {
    // gl
    Translator.add("This value should be false.", "Este valor deber\u00eda ser falso.", "validators", "gl");
    Translator.add("This value should be true.", "Este valor deber\u00eda ser verdadeiro.", "validators", "gl");
    Translator.add("This value should be of type {{ type }}.", "Este valor deber\u00eda ser de tipo {{ type }}.", "validators", "gl");
    Translator.add("This value should be blank.", "Este valor deber\u00eda estar baleiro.", "validators", "gl");
    Translator.add("The value you selected is not a valid choice.", "O valor seleccionado non \u00e9 unha opci\u00f3n v\u00e1lida.", "validators", "gl");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Debe seleccionar polo menos {{ limit }} opci\u00f3n.|Debe seleccionar polo menos {{ limit }} opcions.", "validators", "gl");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Debe seleccionar como m\u00e1ximo {{ limit }} opci\u00f3n.|Debe seleccionar como m\u00e1ximo {{ limit }} opcions.", "validators", "gl");
    Translator.add("One or more of the given values is invalid.", "Un ou m\u00e1is dos valores indicados non son v\u00e1lidos.", "validators", "gl");
    Translator.add("This field was not expected.", "Este campo non era esperado.", "validators", "gl");
    Translator.add("This field is missing.", "Este campo falta.", "validators", "gl");
    Translator.add("This value is not a valid date.", "Este valor non \u00e9 unha data v\u00e1lida.", "validators", "gl");
    Translator.add("This value is not a valid datetime.", "Este valor non \u00e9 unha data e hora v\u00e1lidas.", "validators", "gl");
    Translator.add("This value is not a valid email address.", "Este valor non \u00e9 unha direcci\u00f3n de correo electr\u00f3nico v\u00e1lida.", "validators", "gl");
    Translator.add("The file could not be found.", "Non se puido atopar o arquivo.", "validators", "gl");
    Translator.add("The file is not readable.", "O arquivo non se pode ler.", "validators", "gl");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "O arquivo \u00e9 demasiado grande ({{ size }} {{ suffix }}). O tama\u00f1o m\u00e1ximo permitido \u00e9 {{ limit }} {{ suffix }}.", "validators", "gl");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "O tipo mime do arquivo non \u00e9 v\u00e1lido ({{ type }}). Os tipos mime v\u00e1lidos son {{ types }}.", "validators", "gl");
    Translator.add("This value should be {{ limit }} or less.", "Este valor deber\u00eda ser {{ limit }} ou menos.", "validators", "gl");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Este valor \u00e9 demasiado longo. Deber\u00eda ter {{ limit }} car\u00e1cter ou menos.|Este valor \u00e9 demasiado longo. Deber\u00eda ter {{ limit }} caracteres ou menos.", "validators", "gl");
    Translator.add("This value should be {{ limit }} or more.", "Este valor deber\u00eda ser {{ limit }} ou m\u00e1is.", "validators", "gl");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Este valor \u00e9 demasiado curto. Deber\u00eda ter {{ limit }} car\u00e1cter ou m\u00e1is.|Este valor \u00e9 demasiado corto. Deber\u00eda ter {{ limit }} caracteres ou m\u00e1is.", "validators", "gl");
    Translator.add("This value should not be blank.", "Este valor non deber\u00eda estar baleiro.", "validators", "gl");
    Translator.add("This value should not be null.", "Este valor non deber\u00eda ser null.", "validators", "gl");
    Translator.add("This value should be null.", "Este valor deber\u00eda ser null.", "validators", "gl");
    Translator.add("This value is not valid.", "Este valor non \u00e9 v\u00e1lido.", "validators", "gl");
    Translator.add("This value is not a valid time.", "Este valor non \u00e9 unha hora v\u00e1lida.", "validators", "gl");
    Translator.add("This value is not a valid URL.", "Este valor non \u00e9 unha URL v\u00e1lida.", "validators", "gl");
    Translator.add("The two values should be equal.", "Os dous valores deber\u00edan ser iguais.", "validators", "gl");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "O arquivo \u00e9 demasiado grande. O tama\u00f1o m\u00e1ximo permitido \u00e9 {{ limit }} {{ suffix }}.", "validators", "gl");
    Translator.add("The file is too large.", "O arquivo \u00e9 demasiado grande.", "validators", "gl");
    Translator.add("The file could not be uploaded.", "No se puido cargar o arquivo.", "validators", "gl");
    Translator.add("This value should be a valid number.", "Este valor deber\u00eda ser un n\u00famero v\u00e1lido.", "validators", "gl");
    Translator.add("This file is not a valid image.", "O arquivo non \u00e9 unha imaxe v\u00e1lida.", "validators", "gl");
    Translator.add("This is not a valid IP address.", "Isto non \u00e9 unha direcci\u00f3n IP v\u00e1lida.", "validators", "gl");
    Translator.add("This value is not a valid language.", "Este valor non \u00e9 un idioma v\u00e1lido.", "validators", "gl");
    Translator.add("This value is not a valid locale.", "Este valor non \u00e9 unha localizaci\u00f3n v\u00e1lida.", "validators", "gl");
    Translator.add("This value is not a valid country.", "Este valor non \u00e9 un pa\u00eds v\u00e1lido.", "validators", "gl");
    Translator.add("This value is already used.", "Este valor xa est\u00e1 a ser empregado.", "validators", "gl");
    Translator.add("The size of the image could not be detected.", "Non se puido determinar o tama\u00f1o da imaxe.", "validators", "gl");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "A largura da imaxe \u00e9 demasiado grande ({{ width }}px). A largura m\u00e1xima permitida son {{ max_width }}px.", "validators", "gl");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "A largura da imaxe \u00e9 demasiado pequena ({{ width }}px). A largura m\u00ednima requerida son {{ min_width }}px.", "validators", "gl");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "A altura da imaxe \u00e9 demasiado grande ({{ height }}px). A altura m\u00e1xima permitida son {{ max_height }}px.", "validators", "gl");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "A altura da imaxe \u00e9 demasiado pequena ({{ height }}px). A altura m\u00ednima requerida son {{ min_height }}px.", "validators", "gl");
    Translator.add("This value should be the user's current password.", "Este valor deber\u00eda ser a contrasinal actual do usuario.", "validators", "gl");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Este valor deber\u00eda ter exactamente {{ limit }} car\u00e1cter.|Este valor deber\u00eda ter exactamente {{ limit }} caracteres.", "validators", "gl");
    Translator.add("The file was only partially uploaded.", "O arquivo foi s\u00f3 subido parcialmente.", "validators", "gl");
    Translator.add("No file was uploaded.", "Non se subiu ning\u00fan arquivo.", "validators", "gl");
    Translator.add("No temporary folder was configured in php.ini.", "Ningunha carpeta temporal foi configurada en php.ini.", "validators", "gl");
    Translator.add("Cannot write temporary file to disk.", "Non se puido escribir o arquivo temporal no disco.", "validators", "gl");
    Translator.add("A PHP extension caused the upload to fail.", "Unha extensi\u00f3n de PHP provocou que a subida fallara.", "validators", "gl");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Esta colecci\u00f3n debe conter {{ limit }} elemento ou m\u00e1is.|Esta colecci\u00f3n debe conter {{ limit }} elementos ou m\u00e1is.", "validators", "gl");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Esta colecci\u00f3n debe conter {{ limit }} elemento ou menos.|Esta colecci\u00f3n debe conter {{ limit }} elementos ou menos.", "validators", "gl");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Esta colecci\u00f3n debe conter exactamente {{ limit }} elemento.|Esta colecci\u00f3n debe conter exactamente {{ limit }} elementos.", "validators", "gl");
    Translator.add("Invalid card number.", "N\u00famero de tarxeta non v\u00e1lido.", "validators", "gl");
    Translator.add("Unsupported card type or invalid card number.", "Tipo de tarxeta non soportado ou n\u00famero de tarxeta non v\u00e1lido.", "validators", "gl");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Este valor non \u00e9 un International Bank Account Number (IBAN) v\u00e1lido.", "validators", "gl");
    Translator.add("This value is not a valid ISBN-10.", "Este valor non \u00e9 un ISBN-10 v\u00e1lido.", "validators", "gl");
    Translator.add("This value is not a valid ISBN-13.", "Este valor non \u00e9 un ISBN-13 v\u00e1lido.", "validators", "gl");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Este valor non \u00e9 nin un ISBN-10 v\u00e1lido nin un ISBN-13 v\u00e1lido.", "validators", "gl");
    Translator.add("This value is not a valid ISSN.", "Este valor non \u00e9 un ISSN v\u00e1lido.", "validators", "gl");
    Translator.add("This value is not a valid currency.", "Este valor non \u00e9 unha moeda v\u00e1lida.", "validators", "gl");
    Translator.add("This value should be equal to {{ compared_value }}.", "Este valor deber\u00eda ser igual a {{ compared_value }}.", "validators", "gl");
    Translator.add("This value should be greater than {{ compared_value }}.", "Este valor deber\u00eda ser maior que {{ compared_value }}.", "validators", "gl");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Este valor deber\u00eda ser maior ou igual que {{ compared_value }}.", "validators", "gl");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Este valor deber\u00eda ser identico a {{ compared_value_type }} {{ compared_value }}.", "validators", "gl");
    Translator.add("This value should be less than {{ compared_value }}.", "Este valor deber\u00eda ser menor que {{ compared_value }}.", "validators", "gl");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Este valor deber\u00eda ser menor ou igual que {{ compared_value }}.", "validators", "gl");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Este valor non deber\u00eda ser igual a {{ compared_value }}.", "validators", "gl");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Este valor non deber\u00eda ser identico a {{ compared_value_type }} {{ compared_value }}.", "validators", "gl");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "A proporci\u00f3n da imaxe \u00e9 demasiado grande ({{ ratio }}). A proporci\u00f3n m\u00e1xima permitida \u00e9 {{ max_ratio }}.", "validators", "gl");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "A proporci\u00f3n da \u00e9 demasiado pequena ({{ ratio }}). A proporci\u00f3n m\u00ednima permitida \u00e9 {{ min_ratio }}.", "validators", "gl");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "A imaxe \u00e9 cadrada ({{ width }}x{{ height }}px). As im\u00e1xenes cadradas non est\u00e1n permitidas.", "validators", "gl");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "A imaxe est\u00e1 orientada horizontalmente ({{ width }}x{{ height }}px). As im\u00e1xenes orientadas horizontalmente non est\u00e1n permitidas.", "validators", "gl");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "A imaxe est\u00e1 orientada verticalmente ({{ width }}x{{ height }}px). As im\u00e1xenes orientadas verticalmente non est\u00e1n permitidas.", "validators", "gl");
    Translator.add("An empty file is not allowed.", "Non est\u00e1 permitido un arquivo baleiro.", "validators", "gl");
    Translator.add("The host could not be resolved.", "Non se puido resolver o host.", "validators", "gl");
    Translator.add("This value does not match the expected {{ charset }} charset.", "A codificaci\u00f3n de caracteres para este valor deber\u00eda ser {{ charset }}.", "validators", "gl");
    Translator.add("This form should not contain extra fields.", "Este formulario non deber\u00eda conter campos adicionais.", "validators", "gl");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "O arquivo subido \u00e9 demasiado grande. Por favor, suba un arquivo m\u00e1is pequeno.", "validators", "gl");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "O token CSRF non \u00e9 v\u00e1lido. Por favor, probe a enviar novamente o formulario.", "validators", "gl");
})(Translator);

(function (Translator) {
    // he
    Translator.add("This value should be false.", "\u05d4\u05e2\u05e8\u05da \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05d9\u05d5\u05ea \u05e9\u05e7\u05e8.", "validators", "he");
    Translator.add("This value should be true.", "\u05d4\u05e2\u05e8\u05da \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05d9\u05d5\u05ea \u05d0\u05de\u05ea.", "validators", "he");
    Translator.add("This value should be of type {{ type }}.", "\u05d4\u05e2\u05e8\u05da \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05d9\u05d5\u05ea \u05de\u05e1\u05d5\u05d2 {{ type }}.", "validators", "he");
    Translator.add("This value should be blank.", "\u05d4\u05e2\u05e8\u05da \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05d9\u05d5\u05ea \u05e8\u05d9\u05e7.", "validators", "he");
    Translator.add("The value you selected is not a valid choice.", "\u05d4\u05e2\u05e8\u05da \u05e9\u05d1\u05d7\u05e8\u05ea \u05d0\u05d9\u05e0\u05d5 \u05d7\u05d5\u05e7\u05d9.", "validators", "he");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u05d0\u05ea\u05d4 \u05e6\u05e8\u05d9\u05da \u05dc\u05d1\u05d7\u05d5\u05e8 \u05dc\u05e4\u05d7\u05d5\u05ea {{ limit }} \u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea.|\u05d0\u05ea\u05d4 \u05e6\u05e8\u05d9\u05da \u05dc\u05d1\u05d7\u05d5\u05e8 \u05dc\u05e4\u05d7\u05d5\u05ea {{ limit }} \u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea.", "validators", "he");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u05d0\u05ea\u05d4 \u05e6\u05e8\u05d9\u05da \u05dc\u05d1\u05d7\u05d5\u05e8 \u05dc\u05db\u05dc \u05d4\u05d9\u05d5\u05ea\u05e8 {{ limit }} \u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea.|\u05d0\u05ea\u05d4 \u05e6\u05e8\u05d9\u05da \u05dc\u05d1\u05d7\u05d5\u05e8 \u05dc\u05db\u05dc \u05d4\u05d9\u05d5\u05ea\u05e8 {{ limit }} \u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea.", "validators", "he");
    Translator.add("One or more of the given values is invalid.", "\u05d0\u05d7\u05d3 \u05d0\u05d5 \u05d9\u05d5\u05ea\u05e8 \u05de\u05d4\u05e2\u05e8\u05db\u05d9\u05dd \u05d0\u05d9\u05e0\u05d5 \u05d7\u05d5\u05e7\u05d9.", "validators", "he");
    Translator.add("This field was not expected.", "\u05e9\u05d3\u05d4 \u05d6\u05d4 \u05dc\u05d0 \u05d4\u05d9\u05d4 \u05e6\u05e4\u05d5\u05d9", "validators", "he");
    Translator.add("This field is missing.", "\u05e9\u05d3\u05d4 \u05d6\u05d4 \u05d7\u05e1\u05e8.", "validators", "he");
    Translator.add("This value is not a valid date.", "\u05d4\u05e2\u05e8\u05da \u05d0\u05d9\u05e0\u05d5 \u05ea\u05d0\u05e8\u05d9\u05da \u05d7\u05d5\u05e7\u05d9.", "validators", "he");
    Translator.add("This value is not a valid datetime.", "\u05d4\u05e2\u05e8\u05da \u05d0\u05d9\u05e0\u05d5 \u05ea\u05d0\u05e8\u05d9\u05da \u05d5\u05e9\u05e2\u05d4 \u05d7\u05d5\u05e7\u05d9\u05d9\u05dd.", "validators", "he");
    Translator.add("This value is not a valid email address.", "\u05db\u05ea\u05d5\u05d1\u05ea \u05d4\u05de\u05d9\u05d9\u05dc \u05d0\u05d9\u05e0\u05d4 \u05ea\u05e7\u05d9\u05e0\u05d4.", "validators", "he");
    Translator.add("The file could not be found.", "\u05d4\u05e7\u05d5\u05d1\u05e5 \u05dc\u05d0 \u05e0\u05de\u05e6\u05d0.", "validators", "he");
    Translator.add("The file is not readable.", "\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05e7\u05e8\u05d5\u05d0 \u05d0\u05ea \u05d4\u05e7\u05d5\u05d1\u05e5.", "validators", "he");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u05d4\u05e7\u05d5\u05d1\u05e5 \u05d2\u05d3\u05d5\u05dc \u05de\u05d3\u05d9 ({{ size }} {{ suffix }}). \u05d4\u05d2\u05d5\u05d3\u05dc \u05d4\u05de\u05e8\u05d1\u05d9 \u05d4\u05de\u05d5\u05ea\u05e8 \u05d4\u05d5\u05d0 {{ limit }} {{ suffix }}.", "validators", "he");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "\u05e1\u05d5\u05d2 MIME \u05e9\u05dc \u05d4\u05e7\u05d5\u05d1\u05e5 \u05d0\u05d9\u05e0\u05d5 \u05d7\u05d5\u05e7\u05d9 ({{ type }}). \u05de\u05d5\u05ea\u05e8\u05d9\u05dd \u05e1\u05d5\u05d2\u05d9 MIME {{ types }}.", "validators", "he");
    Translator.add("This value should be {{ limit }} or less.", "\u05d4\u05e2\u05e8\u05da \u05e6\u05e8\u05d9\u05dc \u05dc\u05d4\u05db\u05d9\u05dc {{ limit }} \u05ea\u05d5\u05d5\u05d9\u05dd \u05dc\u05db\u05dc \u05d4\u05d9\u05d5\u05ea\u05e8.", "validators", "he");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u05d4\u05e2\u05e8\u05da \u05d0\u05e8\u05d5\u05da \u05de\u05d9\u05d3\u05d9. \u05d4\u05d5\u05d0 \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05db\u05d9\u05dc {{ limit }} \u05ea\u05d5\u05d5\u05d9\u05dd \u05dc\u05db\u05dc \u05d4\u05d9\u05d5\u05ea\u05e8.|\u05d4\u05e2\u05e8\u05da \u05d0\u05e8\u05d5\u05da \u05de\u05d9\u05d3\u05d9. \u05d4\u05d5\u05d0 \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05db\u05d9\u05dc {{ limit }} \u05ea\u05d5\u05d5\u05d9\u05dd \u05dc\u05db\u05dc \u05d4\u05d9\u05d5\u05ea\u05e8.", "validators", "he");
    Translator.add("This value should be {{ limit }} or more.", "\u05d4\u05e2\u05e8\u05da \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05db\u05d9\u05dc {{ limit }} \u05ea\u05d5\u05d5\u05d9\u05dd \u05dc\u05e4\u05d7\u05d5\u05ea.", "validators", "he");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u05d4\u05e2\u05e8\u05da \u05e7\u05e6\u05e8 \u05de\u05d9\u05d3\u05d9\u05e5 \u05d4\u05d5\u05d0 \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05db\u05d9\u05dc {{ limit }} \u05ea\u05d5\u05d5\u05d9\u05dd \u05dc\u05e4\u05d7\u05d5\u05ea.|\u05d4\u05e2\u05e8\u05da \u05e7\u05e6\u05e8 \u05de\u05d9\u05d3\u05d9\u05e5 \u05d4\u05d5\u05d0 \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05db\u05d9\u05dc {{ limit }} \u05ea\u05d5\u05d5\u05d9\u05dd \u05dc\u05e4\u05d7\u05d5\u05ea.", "validators", "he");
    Translator.add("This value should not be blank.", "\u05d4\u05e2\u05e8\u05da \u05dc\u05d0 \u05d0\u05de\u05d5\u05e8 \u05dc\u05d4\u05d9\u05d5\u05ea \u05e8\u05d9\u05e7.", "validators", "he");
    Translator.add("This value should not be null.", "\u05d4\u05e2\u05e8\u05da \u05dc\u05d0 \u05d0\u05de\u05d5\u05e8 \u05dc\u05d4\u05d9\u05d5\u05ea \u05e8\u05d9\u05e7.", "validators", "he");
    Translator.add("This value should be null.", "\u05d4\u05e2\u05e8\u05da \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05d9\u05d5\u05ea \u05e8\u05d9\u05e7.", "validators", "he");
    Translator.add("This value is not valid.", "\u05d4\u05e2\u05e8\u05da \u05d0\u05d9\u05e0\u05d5 \u05d7\u05d5\u05e7\u05d9.", "validators", "he");
    Translator.add("This value is not a valid time.", "\u05d4\u05e2\u05e8\u05da \u05d0\u05d9\u05e0\u05d5 \u05d6\u05de\u05df \u05ea\u05e7\u05d9\u05df.", "validators", "he");
    Translator.add("This value is not a valid URL.", "\u05d6\u05d0\u05ea \u05d0\u05d9\u05e0\u05d4 \u05db\u05ea\u05d5\u05d1\u05ea \u05d0\u05ea\u05e8 \u05ea\u05e7\u05d9\u05e0\u05d4.", "validators", "he");
    Translator.add("The two values should be equal.", "\u05e9\u05e0\u05d9 \u05d4\u05e2\u05e8\u05db\u05d9\u05dd \u05e6\u05e8\u05d9\u05db\u05d9\u05dd \u05dc\u05d4\u05d9\u05d5\u05ea \u05e9\u05d5\u05d5\u05d9\u05dd.", "validators", "he");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u05d4\u05e7\u05d5\u05d1\u05e5 \u05d2\u05d3\u05d5\u05dc \u05de\u05d3\u05d9. \u05d4\u05d2\u05d5\u05d3\u05dc \u05d4\u05de\u05e8\u05d1\u05d9 \u05d4\u05de\u05d5\u05ea\u05e8 \u05d4\u05d5\u05d0 {{ limit }} {{ suffix }}.", "validators", "he");
    Translator.add("The file is too large.", "\u05d4\u05e7\u05d5\u05d1\u05e5 \u05d2\u05d3\u05d5\u05dc \u05de\u05d3\u05d9.", "validators", "he");
    Translator.add("The file could not be uploaded.", "\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05e2\u05dc\u05d5\u05ea \u05d0\u05ea \u05d4\u05e7\u05d5\u05d1\u05e5.", "validators", "he");
    Translator.add("This value should be a valid number.", "\u05d4\u05e2\u05e8\u05da \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05d9\u05d5\u05ea \u05de\u05e1\u05e4\u05e8 \u05d7\u05d5\u05e7\u05d9.", "validators", "he");
    Translator.add("This file is not a valid image.", "\u05d4\u05e7\u05d5\u05d1\u05e5 \u05d4\u05d6\u05d4 \u05d0\u05d9\u05e0\u05d5 \u05ea\u05de\u05d5\u05e0\u05d4 \u05ea\u05e7\u05d9\u05e0\u05d4.", "validators", "he");
    Translator.add("This is not a valid IP address.", "\u05d6\u05d5 \u05d0\u05d9\u05e0\u05d4 \u05db\u05ea\u05d5\u05d1\u05ea IP \u05d7\u05d5\u05e7\u05d9\u05ea.", "validators", "he");
    Translator.add("This value is not a valid language.", "\u05d4\u05e2\u05e8\u05da \u05d0\u05d9\u05e0\u05d5 \u05e9\u05e4\u05d4 \u05d7\u05d5\u05e7\u05d9\u05ea.", "validators", "he");
    Translator.add("This value is not a valid locale.", "\u05d4\u05e2\u05e8\u05da \u05d0\u05d9\u05e0\u05d5 \u05d0\u05d6\u05d5\u05e8 \u05ea\u05e7\u05e3.", "validators", "he");
    Translator.add("This value is not a valid country.", "\u05d4\u05e2\u05e8\u05da \u05d0\u05d9\u05e0\u05d5 \u05d0\u05e8\u05e5 \u05d7\u05d5\u05e7\u05d9\u05ea.", "validators", "he");
    Translator.add("This value is already used.", "\u05d4\u05e2\u05e8\u05da \u05db\u05d1\u05e8 \u05d1\u05e9\u05d9\u05de\u05d5\u05e9.", "validators", "he");
    Translator.add("The size of the image could not be detected.", "\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05e7\u05d1\u05d5\u05e2 \u05d0\u05ea \u05d2\u05d5\u05d3\u05dc \u05d4\u05ea\u05de\u05d5\u05e0\u05d4.", "validators", "he");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u05e8\u05d5\u05d7\u05d1 \u05d4\u05ea\u05de\u05d5\u05e0\u05d4 \u05d2\u05d3\u05d5\u05dc \u05de\u05d3\u05d9 ({{ width }}px). \u05d4\u05e8\u05d5\u05d7\u05d1 \u05d4\u05de\u05e7\u05e1\u05d9\u05de\u05dc\u05d9 \u05d4\u05d5\u05d0 {{ max_width }}px.", "validators", "he");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u05e8\u05d5\u05d7\u05d1 \u05d4\u05ea\u05de\u05d5\u05e0\u05d4 \u05e7\u05d8\u05df \u05de\u05d3\u05d9 ({{ width }}px). \u05d4\u05e8\u05d5\u05d7\u05d1 \u05d4\u05de\u05d9\u05e0\u05d9\u05de\u05dc\u05d9 \u05d4\u05d5\u05d0 {{ min_width }}px.", "validators", "he");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u05d2\u05d5\u05d1\u05d4 \u05d4\u05ea\u05de\u05d5\u05e0\u05d4 \u05d2\u05d3\u05d5\u05dc \u05de\u05d3\u05d9 ({{ height }}px). \u05d4\u05d2\u05d5\u05d1\u05d4 \u05d4\u05de\u05e7\u05e1\u05d9\u05de\u05dc\u05d9 \u05d4\u05d5\u05d0 {{ max_height }}px.", "validators", "he");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u05d2\u05d5\u05d1\u05d4 \u05d4\u05ea\u05de\u05d5\u05e0\u05d4 \u05e7\u05d8\u05df \u05de\u05d3\u05d9 ({{ height }}px). \u05d4\u05d2\u05d5\u05d1\u05d4 \u05d4\u05de\u05d9\u05e0\u05d9\u05de\u05dc\u05d9 \u05d4\u05d5\u05d0 {{ min_height }}px.", "validators", "he");
    Translator.add("This value should be the user's current password.", "\u05d4\u05e2\u05e8\u05da \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05d9\u05d5\u05ea \u05e1\u05d9\u05e1\u05de\u05ea \u05d4\u05de\u05e9\u05ea\u05de\u05e9 \u05d4\u05e0\u05d5\u05db\u05d7\u05d9.", "validators", "he");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u05d4\u05e2\u05e8\u05da \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05d9\u05d5\u05ea \u05d1\u05d3\u05d9\u05d5\u05e7 {{ limit }} \u05ea\u05d5\u05d5\u05d9\u05dd.|\u05d4\u05e2\u05e8\u05da \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05d9\u05d5\u05ea \u05d1\u05d3\u05d9\u05d5\u05e7 {{ limit }} \u05ea\u05d5\u05d5\u05d9\u05dd.", "validators", "he");
    Translator.add("The file was only partially uploaded.", "\u05d4\u05e7\u05d5\u05d1\u05e5 \u05d4\u05d5\u05e2\u05dc\u05d4 \u05d1\u05d0\u05d5\u05e4\u05df \u05d7\u05dc\u05e7\u05d9.", "validators", "he");
    Translator.add("No file was uploaded.", "\u05d4\u05e7\u05d5\u05d1\u05e5 \u05dc\u05d0 \u05d4\u05d5\u05e2\u05dc\u05d4.", "validators", "he");
    Translator.add("No temporary folder was configured in php.ini.", "\u05dc\u05d0 \u05d4\u05d5\u05d2\u05d3\u05e8\u05d4 \u05ea\u05d9\u05e7\u05d9\u05d9\u05d4 \u05d6\u05de\u05e0\u05d9\u05ea \u05d1 php.ini.", "validators", "he");
    Translator.add("Cannot write temporary file to disk.", "\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05db\u05ea\u05d5\u05d1 \u05e7\u05d5\u05d1\u05e5 \u05d6\u05de\u05e0\u05d9 \u05dc\u05d3\u05d9\u05e1\u05e7.", "validators", "he");
    Translator.add("A PHP extension caused the upload to fail.", "\u05e1\u05d9\u05d5\u05de\u05ea PHP \u05d2\u05e8\u05dd \u05dc\u05d4\u05e2\u05dc\u05d0\u05d4 \u05dc\u05d4\u05d9\u05db\u05e9\u05dc.", "validators", "he");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "\u05d4\u05d0\u05d5\u05e1\u05e3 \u05d0\u05de\u05d5\u05e8 \u05dc\u05d4\u05db\u05d9\u05dc {{ limit }} \u05d0\u05dc\u05de\u05e0\u05d8\u05d9\u05dd \u05d0\u05d5 \u05d9\u05d5\u05ea\u05e8.|\u05d4\u05d0\u05d5\u05e1\u05e3 \u05d0\u05de\u05d5\u05e8 \u05dc\u05d4\u05db\u05d9\u05dc {{ limit }} \u05d0\u05dc\u05de\u05e0\u05d8\u05d9\u05dd \u05d0\u05d5 \u05d9\u05d5\u05ea\u05e8.", "validators", "he");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u05d4\u05d0\u05d5\u05e1\u05e3 \u05d0\u05de\u05d5\u05e8 \u05dc\u05d4\u05db\u05d9\u05dc {{ limit }} \u05d0\u05dc\u05de\u05e0\u05d8\u05d9\u05dd \u05d0\u05d5 \u05e4\u05d7\u05d5\u05ea.|\u05d4\u05d0\u05d5\u05e1\u05e3 \u05d0\u05de\u05d5\u05e8 \u05dc\u05d4\u05db\u05d9\u05dc {{ limit }} \u05d0\u05dc\u05de\u05e0\u05d8\u05d9\u05dd \u05d0\u05d5 \u05e4\u05d7\u05d5\u05ea.", "validators", "he");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u05d4\u05d0\u05d5\u05e1\u05e3 \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05db\u05d9\u05dc \u05d1\u05d3\u05d9\u05d5\u05e7 {{ limit }} \u05d0\u05dc\u05de\u05e0\u05d8\u05d9\u05dd.|\u05d4\u05d0\u05d5\u05e1\u05e3 \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05db\u05d9\u05dc \u05d1\u05d3\u05d9\u05d5\u05e7 {{ limit }} \u05d0\u05dc\u05de\u05e0\u05d8\u05d9\u05dd.", "validators", "he");
    Translator.add("Invalid card number.", "\u05de\u05e1\u05e4\u05e8 \u05d4\u05db\u05e8\u05d8\u05d9\u05e1 \u05d0\u05d9\u05e0\u05d5 \u05d7\u05d5\u05e7\u05d9.", "validators", "he");
    Translator.add("Unsupported card type or invalid card number.", "\u05e1\u05d5\u05d2 \u05d4\u05db\u05e8\u05d8\u05d9\u05e1 \u05d0\u05d9\u05e0\u05d5 \u05e0\u05ea\u05de\u05da \u05d0\u05d5 \u05dc\u05d0 \u05d7\u05d5\u05e7\u05d9.", "validators", "he");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "This is not a valid International Bank Account Number (IBAN).", "validators", "he");
    Translator.add("This value is not a valid ISBN-10.", "This value is not a valid ISBN-10.", "validators", "he");
    Translator.add("This value is not a valid ISBN-13.", "This value is not a valid ISBN-13.", "validators", "he");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "This value is neither a valid ISBN-10 nor a valid ISBN-13.", "validators", "he");
    Translator.add("This value is not a valid ISSN.", "This value is not a valid ISSN.", "validators", "he");
    Translator.add("This value is not a valid currency.", "This value is not a valid currency.", "validators", "he");
    Translator.add("This value should be equal to {{ compared_value }}.", "This value should be equal to {{ compared_value }}.", "validators", "he");
    Translator.add("This value should be greater than {{ compared_value }}.", "This value should be greater than {{ compared_value }}.", "validators", "he");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "This value should be greater than or equal to {{ compared_value }}.", "validators", "he");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "validators", "he");
    Translator.add("This value should be less than {{ compared_value }}.", "This value should be less than {{ compared_value }}.", "validators", "he");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "This value should be less than or equal to {{ compared_value }}.", "validators", "he");
    Translator.add("This value should not be equal to {{ compared_value }}.", "This value should not be equal to {{ compared_value }}.", "validators", "he");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "validators", "he");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "validators", "he");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "validators", "he");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "validators", "he");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "validators", "he");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "validators", "he");
    Translator.add("An empty file is not allowed.", "An empty file is not allowed.", "validators", "he");
    Translator.add("This form should not contain extra fields.", "\u05d4\u05d8\u05d5\u05e4\u05e1 \u05dc\u05d0 \u05e6\u05e8\u05d9\u05da \u05dc\u05d4\u05db\u05d9\u05dc \u05e9\u05d3\u05d5\u05ea \u05e0\u05d5\u05e1\u05e4\u05d9\u05dd.", "validators", "he");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u05d4\u05e7\u05d5\u05d1\u05e5 \u05e9\u05d4\u05d5\u05e2\u05dc\u05d4 \u05d2\u05d3\u05d5\u05dc \u05de\u05d3\u05d9. \u05e0\u05e1\u05d4 \u05dc\u05d4\u05e2\u05dc\u05d5\u05ea \u05e7\u05d5\u05d1\u05e5 \u05e7\u05d8\u05df \u05d9\u05d5\u05ea\u05e8.", "validators", "he");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "\u05d0\u05e1\u05d9\u05de\u05d5\u05df CSRF \u05d0\u05d9\u05e0\u05d5 \u05d7\u05d5\u05e7\u05d9. \u05d0\u05e0\u05d0 \u05e0\u05e1\u05d4 \u05dc\u05e9\u05dc\u05d5\u05d7 \u05e9\u05d5\u05d1 \u05d0\u05ea \u05d4\u05d8\u05d5\u05e4\u05e1.", "validators", "he");
})(Translator);

(function (Translator) {
    // hr
    Translator.add("This value should be false.", "Ova vrijednost treba biti neto\u010dna (false).", "validators", "hr");
    Translator.add("This value should be true.", "Ova vrijednost treba biti to\u010dna (true).", "validators", "hr");
    Translator.add("This value should be of type {{ type }}.", "Ova vrijednost treba biti tipa {{ type }}.", "validators", "hr");
    Translator.add("This value should be blank.", "Ova vrijednost treba biti prazna.", "validators", "hr");
    Translator.add("The value you selected is not a valid choice.", "Ova vrijednost treba biti jedna od ponu\u0111enih.", "validators", "hr");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Izaberite barem {{ limit }} mogu\u0107nosti.", "validators", "hr");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Izaberite najvi\u0161e {{ limit }} mogu\u0107nosti.", "validators", "hr");
    Translator.add("One or more of the given values is invalid.", "Jedna ili vi\u0161e danih vrijednosti nije ispravna.", "validators", "hr");
    Translator.add("This field was not expected.", "Ovo polje nije o\u010dekivalo.", "validators", "hr");
    Translator.add("This field is missing.", "Ovo polje nedostaje.", "validators", "hr");
    Translator.add("This value is not a valid date.", "Ova vrijednost nije ispravan datum.", "validators", "hr");
    Translator.add("This value is not a valid datetime.", "Ova vrijednost nije ispravan datum-vrijeme.", "validators", "hr");
    Translator.add("This value is not a valid email address.", "Ova vrijednost nije ispravna e-mail adresa.", "validators", "hr");
    Translator.add("The file could not be found.", "Datoteka ne mo\u017ee biti prona\u0111ena.", "validators", "hr");
    Translator.add("The file is not readable.", "Datoteka nije \u010ditljiva.", "validators", "hr");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Datoteka je prevelika ({{ size }} {{ suffix }}). Najve\u0107a dozvoljena veli\u010dina je {{ limit }} {{ suffix }}.", "validators", "hr");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Mime tip datoteke nije ispravan ({{ type }}). Dozvoljeni mime tipovi su {{ types }}.", "validators", "hr");
    Translator.add("This value should be {{ limit }} or less.", "Ova vrijednost treba biti {{ limit }} ili manje.", "validators", "hr");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Ova vrijednost je preduga\u010dka. Treba imati {{ limit }} znakova ili manje.", "validators", "hr");
    Translator.add("This value should be {{ limit }} or more.", "Ova vrijednost treba biti {{ limit }} ili vi\u0161e.", "validators", "hr");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Ova vrijednost je prekratka. Treba imati {{ limit }} znakova ili vi\u0161e.", "validators", "hr");
    Translator.add("This value should not be blank.", "Ova vrijednost ne smije biti prazna.", "validators", "hr");
    Translator.add("This value should not be null.", "Ova vrijednost ne smije biti null.", "validators", "hr");
    Translator.add("This value should be null.", "Ova vrijednost treba biti null.", "validators", "hr");
    Translator.add("This value is not valid.", "Ova vrijednost nije ispravna.", "validators", "hr");
    Translator.add("This value is not a valid time.", "Ova vrijednost nije ispravno vrijeme.", "validators", "hr");
    Translator.add("This value is not a valid URL.", "Ova vrijednost nije ispravan URL.", "validators", "hr");
    Translator.add("The two values should be equal.", "Obje vrijednosti trebaju biti jednake.", "validators", "hr");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Ova datoteka je prevelika. Najve\u0107a dozvoljena veli\u010dina je {{ limit }} {{ suffix }}.", "validators", "hr");
    Translator.add("The file is too large.", "Ova datoteka je prevelika.", "validators", "hr");
    Translator.add("The file could not be uploaded.", "Ova datoteka ne mo\u017ee biti prenesena.", "validators", "hr");
    Translator.add("This value should be a valid number.", "Ova vrijednost treba biti ispravan broj.", "validators", "hr");
    Translator.add("This file is not a valid image.", "Ova datoteka nije ispravna slika.", "validators", "hr");
    Translator.add("This is not a valid IP address.", "Ovo nije ispravna IP adresa.", "validators", "hr");
    Translator.add("This value is not a valid language.", "Ova vrijednost nije ispravan jezik.", "validators", "hr");
    Translator.add("This value is not a valid locale.", "Ova vrijednost nije ispravana regionalna oznaka.", "validators", "hr");
    Translator.add("This value is not a valid country.", "Ova vrijednost nije ispravna zemlja.", "validators", "hr");
    Translator.add("This value is already used.", "Ova vrijednost je ve\u0107 iskori\u0161tena.", "validators", "hr");
    Translator.add("The size of the image could not be detected.", "Veli\u010dina slike se ne mo\u017ee odrediti.", "validators", "hr");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u0160irina slike je prevelika ({{ width }}px). Najve\u0107a dozvoljena \u0161irina je {{ max_width }}px.", "validators", "hr");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u0160irina slike je premala ({{ width }}px). Najmanja dozvoljena \u0161irina je {{ min_width }}px.", "validators", "hr");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Visina slike je prevelika ({{ height }}px). Najve\u0107a dozvoljena visina je {{ max_height }}px.", "validators", "hr");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Visina slike je premala ({{ height }}px). Najmanja dozvoljena visina je {{ min_height }}px.", "validators", "hr");
    Translator.add("This value should be the user's current password.", "Ova vrijednost treba biti trenutna korisni\u010dka lozinka.", "validators", "hr");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Ova vrijednost treba imati to\u010dno {{ limit }} znakova.", "validators", "hr");
    Translator.add("The file was only partially uploaded.", "Datoteka je samo djelomi\u010dno prenesena.", "validators", "hr");
    Translator.add("No file was uploaded.", "Niti jedna datoteka nije prenesena.", "validators", "hr");
    Translator.add("No temporary folder was configured in php.ini.", "U php.ini datoteci nije konfiguriran privremeni folder.", "validators", "hr");
    Translator.add("Cannot write temporary file to disk.", "Ne mogu zapisati privremenu datoteku na disk.", "validators", "hr");
    Translator.add("A PHP extension caused the upload to fail.", "Prijenos datoteke nije uspio zbog PHP ekstenzije.", "validators", "hr");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Ova kolekcija treba sadr\u017eavati {{ limit }} ili vi\u0161e elemenata.|Ova kolekcija treba sadr\u017eavati {{ limit }} ili vi\u0161e elemenata.|Ova kolekcija treba sadr\u017eavati {{ limit }} ili vi\u0161e elemenata.", "validators", "hr");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Ova kolekcija treba sadr\u017eavati {{ limit }} ili manje elemenata.|Ova kolekcija treba sadr\u017eavati {{ limit }} ili manje elemenata.|Ova kolekcija treba sadr\u017eavati {{ limit }} ili manje elemenata.", "validators", "hr");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Ova kolekcija treba sadr\u017eavati to\u010dno {{ limit }} element.|Ova kolekcija treba sadr\u017eavati to\u010dno {{ limit }} elementa.|Ova kolekcija treba sadr\u017eavati to\u010dno {{ limit }} elemenata.", "validators", "hr");
    Translator.add("Invalid card number.", "Neispravan broj kartice.", "validators", "hr");
    Translator.add("Unsupported card type or invalid card number.", "Neispravan broj kartice ili tip kartice nije podr\u017ean.", "validators", "hr");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Ova vrijednost nije ispravan me\u0111unarodni broj bankovnog ra\u010duna (IBAN).", "validators", "hr");
    Translator.add("This value is not a valid ISBN-10.", "Ova vrijednost nije ispravan ISBN-10.", "validators", "hr");
    Translator.add("This value is not a valid ISBN-13.", "Ova vrijednost nije ispravan ISBN-13.", "validators", "hr");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Ova vrijednost nije ispravan ISBN-10 niti ISBN-13.", "validators", "hr");
    Translator.add("This value is not a valid ISSN.", "Ova vrijednost nije ispravan ISSN.", "validators", "hr");
    Translator.add("This value is not a valid currency.", "Ova vrijednost nije ispravna valuta.", "validators", "hr");
    Translator.add("This value should be equal to {{ compared_value }}.", "Ova vrijednost bi trebala biti jednaka {{ compared_value }}.", "validators", "hr");
    Translator.add("This value should be greater than {{ compared_value }}.", "Ova vrijednost bi trebala biti ve\u0107a od {{ compared_value }}.", "validators", "hr");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Ova vrijednost bi trebala biti ve\u0107a ili jednaka od {{ compared_value }}.", "validators", "hr");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Ova vrijednost bi trebala biti {{ compared_value_type }} {{ compared_value }}.", "validators", "hr");
    Translator.add("This value should be less than {{ compared_value }}.", "Ova vrijednost bi trebala biti manja od {{ compared_value }}.", "validators", "hr");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Ova vrijednost bi trebala biti manja ili jednaka {{ compared_value }}.", "validators", "hr");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Ova vrijednost ne bi trebala biti {{ compared_value }}.", "validators", "hr");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Ova vrijednost ne bi trebala biti {{ compared_value_type }} {{ compared_value }}.", "validators", "hr");
    Translator.add("This form should not contain extra fields.", "Ovaj obrazac ne smije sadr\u017eavati dodatna polja.", "validators", "hr");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Prenesena datoteka je prevelika. Molim poku\u0161ajte prenijeti manju datoteku.", "validators", "hr");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF vrijednost nije ispravna. Poku\u0161ajte ponovo poslati obrazac.", "validators", "hr");
})(Translator);

(function (Translator) {
    // hu
    Translator.add("This value should be false.", "Ennek az \u00e9rt\u00e9knek hamisnak kell lennie.", "validators", "hu");
    Translator.add("This value should be true.", "Ennek az \u00e9rt\u00e9knek igaznak kell lennie.", "validators", "hu");
    Translator.add("This value should be of type {{ type }}.", "Ennek az \u00e9rt\u00e9knek {{ type }} t\u00edpus\u00fanak kell lennie.", "validators", "hu");
    Translator.add("This value should be blank.", "Ennek az \u00e9rt\u00e9knek \u00fcresnek kell lennie.", "validators", "hu");
    Translator.add("The value you selected is not a valid choice.", "A v\u00e1lasztott \u00e9rt\u00e9k \u00e9rv\u00e9nytelen.", "validators", "hu");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Legal\u00e1bb {{ limit }} \u00e9rt\u00e9ket kell kiv\u00e1lasztani.|Legal\u00e1bb {{ limit }} \u00e9rt\u00e9ket kell kiv\u00e1lasztani.", "validators", "hu");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Legfeljebb {{ limit }} \u00e9rt\u00e9ket lehet kiv\u00e1lasztani.|Legfeljebb {{ limit }} \u00e9rt\u00e9ket lehet kiv\u00e1lasztani.", "validators", "hu");
    Translator.add("One or more of the given values is invalid.", "A megadott \u00e9rt\u00e9kek k\u00f6z\u00fcl legal\u00e1bb egy \u00e9rv\u00e9nytelen.", "validators", "hu");
    Translator.add("This field was not expected.", "Nem v\u00e1rt mez\u0151.", "validators", "hu");
    Translator.add("This field is missing.", "Ez a mez\u0151 hi\u00e1nyzik.", "validators", "hu");
    Translator.add("This value is not a valid date.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes d\u00e1tum.", "validators", "hu");
    Translator.add("This value is not a valid datetime.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes id\u0151pont.", "validators", "hu");
    Translator.add("This value is not a valid email address.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes e-mail c\u00edm.", "validators", "hu");
    Translator.add("The file could not be found.", "A f\u00e1jl nem tal\u00e1lhat\u00f3.", "validators", "hu");
    Translator.add("The file is not readable.", "A f\u00e1jl nem olvashat\u00f3.", "validators", "hu");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "A f\u00e1jl t\u00fal nagy ({{ size }} {{ suffix }}). A legnagyobb megengedett m\u00e9ret {{ limit }} {{ suffix }}.", "validators", "hu");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "A f\u00e1jl MIME t\u00edpusa \u00e9rv\u00e9nytelen ({{ type }}). Az enged\u00e9lyezett MIME t\u00edpusok: {{ types }}.", "validators", "hu");
    Translator.add("This value should be {{ limit }} or less.", "Ez az \u00e9rt\u00e9k legfeljebb {{ limit }} lehet.", "validators", "hu");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Ez az \u00e9rt\u00e9k t\u00fal hossz\u00fa. Legfeljebb {{ limit }} karaktert tartalmazhat.|Ez az \u00e9rt\u00e9k t\u00fal hossz\u00fa. Legfeljebb {{ limit }} karaktert tartalmazhat.", "validators", "hu");
    Translator.add("This value should be {{ limit }} or more.", "Ez az \u00e9rt\u00e9k legal\u00e1bb {{ limit }} kell, hogy legyen.", "validators", "hu");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Ez az \u00e9rt\u00e9k t\u00fal r\u00f6vid. Legal\u00e1bb {{ limit }} karaktert kell tartalmaznia.|Ez az \u00e9rt\u00e9k t\u00fal r\u00f6vid. Legal\u00e1bb {{ limit }} karaktert kell tartalmaznia.", "validators", "hu");
    Translator.add("This value should not be blank.", "Ez az \u00e9rt\u00e9k nem lehet \u00fcres.", "validators", "hu");
    Translator.add("This value should not be null.", "Ez az \u00e9rt\u00e9k nem lehet null.", "validators", "hu");
    Translator.add("This value should be null.", "Ennek az \u00e9rt\u00e9knek nullnak kell lennie.", "validators", "hu");
    Translator.add("This value is not valid.", "Ez az \u00e9rt\u00e9k nem \u00e9rv\u00e9nyes.", "validators", "hu");
    Translator.add("This value is not a valid time.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes id\u0151pont.", "validators", "hu");
    Translator.add("This value is not a valid URL.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes URL.", "validators", "hu");
    Translator.add("The two values should be equal.", "A k\u00e9t \u00e9rt\u00e9knek azonosnak kell lennie.", "validators", "hu");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "A f\u00e1jl t\u00fal nagy. A megengedett maxim\u00e1lis m\u00e9ret: {{ limit }} {{ suffix }}.", "validators", "hu");
    Translator.add("The file is too large.", "A f\u00e1jl t\u00fal nagy.", "validators", "hu");
    Translator.add("The file could not be uploaded.", "A f\u00e1jl nem t\u00f6lthet\u0151 fel.", "validators", "hu");
    Translator.add("This value should be a valid number.", "Ennek az \u00e9rt\u00e9knek \u00e9rv\u00e9nyes sz\u00e1mnak kell lennie.", "validators", "hu");
    Translator.add("This file is not a valid image.", "Ez a f\u00e1jl nem egy \u00e9rv\u00e9nyes k\u00e9p.", "validators", "hu");
    Translator.add("This is not a valid IP address.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes IP c\u00edm.", "validators", "hu");
    Translator.add("This value is not a valid language.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes nyelv.", "validators", "hu");
    Translator.add("This value is not a valid locale.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes ter\u00fcleti be\u00e1ll\u00edt\u00e1s.", "validators", "hu");
    Translator.add("This value is not a valid country.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes orsz\u00e1g.", "validators", "hu");
    Translator.add("This value is already used.", "Ez az \u00e9rt\u00e9k m\u00e1r haszn\u00e1latban van.", "validators", "hu");
    Translator.add("The size of the image could not be detected.", "A k\u00e9p m\u00e9ret\u00e9t nem lehet meg\u00e1llap\u00edtani.", "validators", "hu");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "A k\u00e9p sz\u00e9less\u00e9ge t\u00fal nagy ({{ width }}px). A megengedett legnagyobb sz\u00e9less\u00e9g {{ max_width }}px.", "validators", "hu");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "A k\u00e9p sz\u00e9less\u00e9ge t\u00fal kicsi ({{ width }}px). Az elv\u00e1rt legkisebb sz\u00e9less\u00e9g {{ min_width }}px.", "validators", "hu");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "A k\u00e9p magass\u00e1ga t\u00fal nagy ({{ height }}px). A megengedett legnagyobb magass\u00e1g {{ max_height }}px.", "validators", "hu");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "A k\u00e9p magass\u00e1ga t\u00fal kicsi ({{ height }}px). Az elv\u00e1rt legkisebb magass\u00e1g {{ min_height }}px.", "validators", "hu");
    Translator.add("This value should be the user's current password.", "Ez az \u00e9rt\u00e9k a felhaszn\u00e1l\u00f3 jelenlegi jelszav\u00e1val kell megegyezzen.", "validators", "hu");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Ennek az \u00e9rt\u00e9knek pontosan {{ limit }} karaktert kell tartalmaznia.|Ennek az \u00e9rt\u00e9knek pontosan {{ limit }} karaktert kell tartalmaznia.", "validators", "hu");
    Translator.add("The file was only partially uploaded.", "A f\u00e1jl csak r\u00e9szben lett felt\u00f6ltve.", "validators", "hu");
    Translator.add("No file was uploaded.", "Nem lett f\u00e1jl felt\u00f6ltve.", "validators", "hu");
    Translator.add("No temporary folder was configured in php.ini.", "Nincs ideiglenes k\u00f6nyvt\u00e1r be\u00e1ll\u00edtva a php.ini-ben.", "validators", "hu");
    Translator.add("Cannot write temporary file to disk.", "Az ideiglenes f\u00e1jl nem \u00edrhat\u00f3 a lemezre.", "validators", "hu");
    Translator.add("A PHP extension caused the upload to fail.", "Egy PHP b\u0151v\u00edtm\u00e9ny miatt a felt\u00f6lt\u00e9s nem siker\u00fclt.", "validators", "hu");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Ennek a gy\u0171jtem\u00e9nynek legal\u00e1bb {{ limit }} elemet kell tartalmaznia.|Ennek a gy\u0171jtem\u00e9nynek legal\u00e1bb {{ limit }} elemet kell tartalmaznia.", "validators", "hu");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Ez a gy\u0171jtem\u00e9ny legfeljebb {{ limit }} elemet tartalmazhat.|Ez a gy\u0171jtem\u00e9ny legfeljebb {{ limit }} elemet tartalmazhat.", "validators", "hu");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Ennek a gy\u0171jtem\u00e9nynek pontosan {{ limit }} elemet kell tartalmaznia.|Ennek a gy\u0171jtem\u00e9nynek pontosan {{ limit }} elemet kell tartalmaznia.", "validators", "hu");
    Translator.add("Invalid card number.", "\u00c9rv\u00e9nytelen k\u00e1rtyasz\u00e1m.", "validators", "hu");
    Translator.add("Unsupported card type or invalid card number.", "Nem t\u00e1mogatott k\u00e1rtyat\u00edpus vagy \u00e9rv\u00e9nytelen k\u00e1rtyasz\u00e1m.", "validators", "hu");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u00c9rv\u00e9nytelen nemzetk\u00f6zi banksz\u00e1mlasz\u00e1m (IBAN).", "validators", "hu");
    Translator.add("This value is not a valid ISBN-10.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes ISBN-10.", "validators", "hu");
    Translator.add("This value is not a valid ISBN-13.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes ISBN-13.", "validators", "hu");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes ISBN-10 vagy ISBN-13.", "validators", "hu");
    Translator.add("This value is not a valid ISSN.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes ISSN.", "validators", "hu");
    Translator.add("This value is not a valid currency.", "Ez az \u00e9rt\u00e9k nem egy \u00e9rv\u00e9nyes p\u00e9nznem.", "validators", "hu");
    Translator.add("This value should be equal to {{ compared_value }}.", "Ez az \u00e9rt\u00e9k legyen {{ compared_value }}.", "validators", "hu");
    Translator.add("This value should be greater than {{ compared_value }}.", "Ez az \u00e9rt\u00e9k nagyobb legyen, mint {{ compared_value }}.", "validators", "hu");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Ez az \u00e9rt\u00e9k nagyobb vagy egyenl\u0151 legyen, mint {{ compared_value }}.", "validators", "hu");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Ez az \u00e9rt\u00e9k ugyanolyan legyen, mint {{ compared_value_type }} {{ compared_value }}.", "validators", "hu");
    Translator.add("This value should be less than {{ compared_value }}.", "Ez az \u00e9rt\u00e9k kisebb legyen, mint {{ compared_value }}.", "validators", "hu");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Ez az \u00e9rt\u00e9k kisebb vagy egyenl\u0151 legyen, mint {{ compared_value }}.", "validators", "hu");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Ez az \u00e9rt\u00e9k ne legyen {{ compared_value }}.", "validators", "hu");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Ez az \u00e9rt\u00e9k ne legyen ugyanolyan, mint {{ compared_value_type }} {{ compared_value }}.", "validators", "hu");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "A k\u00e9par\u00e1ny t\u00fal nagy ({{ ratio }}). A megengedett legnagyobb k\u00e9par\u00e1ny {{ max_ratio }}.", "validators", "hu");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "A k\u00e9par\u00e1ny t\u00fal kicsi ({{ ratio }}). A megengedett legkisebb k\u00e9par\u00e1ny {{ min_ratio }}.", "validators", "hu");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "A k\u00e9p n\u00e9gyzet alak\u00fa ({{ width }}x{{ height }}px). A n\u00e9gyzet alak\u00fa k\u00e9pek nem enged\u00e9lyezettek.", "validators", "hu");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "A k\u00e9p fekv\u0151 t\u00e1jol\u00e1s\u00fa ({{ width }}x{{ height }}px). A fekv\u0151 t\u00e1jol\u00e1s\u00fa k\u00e9pek nem enged\u00e9lyezettek.", "validators", "hu");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "A k\u00e9p \u00e1ll\u00f3 t\u00e1jol\u00e1s\u00fa ({{ width }}x{{ height }}px). Az \u00e1ll\u00f3 t\u00e1jol\u00e1s\u00fa k\u00e9pek nem enged\u00e9lyezettek.", "validators", "hu");
    Translator.add("An empty file is not allowed.", "\u00dcres f\u00e1jl nem megengedett.", "validators", "hu");
    Translator.add("The host could not be resolved.", "Az \u00e1llom\u00e1snevet nem lehet feloldani.", "validators", "hu");
    Translator.add("This value does not match the expected {{ charset }} charset.", "Ez az \u00e9rt\u00e9k nem az elv\u00e1rt {{ charset }} karakterk\u00f3dol\u00e1st haszn\u00e1lja.", "validators", "hu");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "\u00c9rv\u00e9nytelen nemzetk\u00f6zi bankazonos\u00edt\u00f3 k\u00f3d (BIC\/SWIFT).", "validators", "hu");
    Translator.add("This form should not contain extra fields.", "Ez a mez\u0151csoport nem tartalmazhat extra mez\u0151ket.", "validators", "hu");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "A felt\u00f6lt\u00f6tt f\u00e1jl t\u00fal nagy. K\u00e9rem, pr\u00f3b\u00e1ljon egy kisebb f\u00e1jlt felt\u00f6lteni.", "validators", "hu");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "\u00c9rv\u00e9nytelen CSRF token. K\u00e9rem, pr\u00f3b\u00e1lja \u00fajra elk\u00fcldeni az \u0171rlapot.", "validators", "hu");
})(Translator);

(function (Translator) {
    // hy
    Translator.add("This value should be false.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b \u057d\u056d\u0561\u056c\u0589", "validators", "hy");
    Translator.add("This value should be true.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b \u0573\u056b\u0577\u057f\u0589", "validators", "hy");
    Translator.add("This value should be of type {{ type }}.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b {{ type }} \u057f\u0565\u057d\u0561\u056f\u056b\u0589", "validators", "hy");
    Translator.add("This value should be blank.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b \u0564\u0561\u057f\u0561\u0580\u056f\u0589", "validators", "hy");
    Translator.add("The value you selected is not a valid choice.", "\u0541\u0565\u0580 \u0568\u0576\u057f\u0580\u0561\u056e \u0561\u0580\u056a\u0565\u0584\u0568 \u0561\u0576\u057e\u0561\u057e\u0565\u0580 \u0568\u0576\u057f\u0580\u0578\u0582\u0569\u0575\u0578\u0582\u0576 \u0567\u0589", "validators", "hy");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u0534\u0578\u0582\u0584 \u057a\u0565\u057f\u0584 \u0567 \u0568\u0576\u057f\u0580\u0565\u0584 \u0561\u0574\u0565\u0576\u0561\u0584\u056b\u0579\u0568 {{ limit }} \u057f\u0561\u0580\u0562\u0565\u0580\u0561\u056f\u0576\u0565\u0580\u0589", "validators", "hy");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u0534\u0578\u0582\u0584 \u057a\u0565\u057f\u0584 \u0567 \u0568\u0576\u057f\u0580\u0565\u0584 \u0578\u0579 \u0561\u057e\u0565\u056c\u056b \u0584\u0561\u0576 {{ limit }} \u057f\u0561\u0580\u0562\u0565\u0580\u0561\u056f\u0576\u0565\u0580\u0589", "validators", "hy");
    Translator.add("One or more of the given values is invalid.", "\u0544\u0565\u056f \u056f\u0561\u0574 \u0561\u057e\u0565\u056c\u056b \u057f\u0580\u057e\u0561\u056e \u0561\u0580\u056a\u0565\u0584\u0576\u0565\u0580\u0568 \u0561\u0576\u057e\u0561\u057e\u0565\u0580 \u0565\u0576\u0589", "validators", "hy");
    Translator.add("This field was not expected.", "\u0531\u0575\u057d \u0564\u0561\u0577\u057f\u0568 \u0579\u056b \u057d\u057a\u0561\u057d\u057e\u0578\u0582\u0574\u0589", "validators", "hy");
    Translator.add("This field is missing.", "\u0531\u0575\u057d \u0564\u0561\u0577\u057f\u0568 \u0562\u0561\u0581\u0561\u056f\u0561\u0575\u0578\u0582\u0574 \u0567\u0589", "validators", "hy");
    Translator.add("This value is not a valid date.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057d\u056d\u0561\u056c \u0561\u0574\u057d\u0561\u0569\u056b\u057e \u0567\u0589", "validators", "hy");
    Translator.add("This value is not a valid datetime.", "\u0531\u0574\u057d\u0561\u0569\u057e\u056b \u0587 \u056a\u0561\u0574\u0561\u0576\u0561\u056f\u056b \u0561\u0580\u056a\u0565\u0584\u0568 \u0561\u0576\u057e\u0561\u057e\u0565\u0580 \u0567\u0589", "validators", "hy");
    Translator.add("This value is not a valid email address.", "\u0531\u0576\u057e\u0561\u057e\u0565\u0580 \u0567\u056c\u058a\u0583\u0578\u057d\u057f\u056b \u0561\u0580\u056a\u0565\u0584\u0589", "validators", "hy");
    Translator.add("The file could not be found.", "\u0546\u056b\u0577\u0584\u0568 \u0579\u056b \u0563\u057f\u0576\u057e\u0565\u056c\u0589", "validators", "hy");
    Translator.add("The file is not readable.", "\u0546\u056b\u0577\u0584\u0568 \u0561\u0576\u0568\u0576\u0569\u0565\u057c\u0576\u0565\u056c\u056b \u0567\u0589", "validators", "hy");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0546\u056b\u0577\u0584\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0574\u0565\u056e \u0567 ({{ size }} {{ suffix }}): \u0544\u0561\u0584\u057d\u056b\u0574\u0561\u056c \u0569\u0578\u0582\u0575\u056c\u0561\u057f\u0580\u0565\u056c\u056b \u0579\u0561\u0583\u057d\u0568\u055d {{ limit }} {{ suffix }}\u0589", "validators", "hy");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "MIME-\u057f\u0565\u057d\u0561\u056f\u0568 \u0561\u0576\u057e\u0561\u057e\u0565\u0580 \u0567 \u0567({{ type }}): \u0546\u056b\u0577\u0584\u0565\u0580\u056b \u0569\u0578\u0582\u0575\u056c\u0561\u057f\u0580\u0565\u056c\u056b MIME-\u057f\u0565\u057d\u0561\u056f\u0576\u0565\u0580\u0576 \u0565\u0576: {{ types }}\u0589", "validators", "hy");
    Translator.add("This value should be {{ limit }} or less.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b {{ limit }} \u056f\u0561\u0574 \u0583\u0578\u0584\u0580\u0589", "validators", "hy");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0565\u0580\u056f\u0561\u0580 \u0567: \u054a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b {{ limit }} \u056f\u0561\u0574 \u0561\u057e\u0565\u056c \u057d\u056b\u0574\u057e\u0578\u056c\u0576\u0565\u0580\u0589", "validators", "hy");
    Translator.add("This value should be {{ limit }} or more.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f \u0567 \u056c\u056b\u0576\u056b {{ limit }} \u056f\u0561\u0574 \u0577\u0561\u057f\u0589", "validators", "hy");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u056f\u0561\u0580\u0573 \u0567: \u054a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b {{ limit }} \u056f\u0561\u0574 \u0561\u057e\u0565\u056c\u056b \u057d\u056b\u0574\u057e\u0578\u056c\u0576\u0565\u0580\u0589", "validators", "hy");
    Translator.add("This value should not be blank.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u0579\u057a\u0565\u057f\u0584 \u0567 \u0564\u0561\u057f\u0561\u0580\u056f \u056c\u056b\u0576\u056b\u0589", "validators", "hy");
    Translator.add("This value should not be null.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u0579\u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b null\u0589", "validators", "hy");
    Translator.add("This value should be null.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b null\u0589", "validators", "hy");
    Translator.add("This value is not valid.", "\u0531\u0576\u057e\u0561\u057e\u0565\u0580 \u0561\u0580\u056a\u0565\u0584\u0589", "validators", "hy");
    Translator.add("This value is not a valid time.", "\u053a\u0561\u0574\u0561\u0576\u0561\u056f\u056b \u0561\u0580\u056a\u0565\u0584\u0568 \u0561\u0576\u057e\u0561\u057e\u0565\u0580 \u0567\u0589", "validators", "hy");
    Translator.add("This value is not a valid URL.", "\u0531\u0580\u056a\u0565\u0584\u0568  URL  \u0579\u0567\u0589", "validators", "hy");
    Translator.add("The two values should be equal.", "\u0535\u0580\u056f\u0578\u0582 \u0561\u0580\u056a\u0565\u0584\u0576\u0565\u0580\u0568 \u057a\u0565\u057f\u0584 \u0567 \u0576\u0578\u0582\u0575\u0576\u0568 \u056c\u056b\u0576\u0565\u0576\u0589", "validators", "hy");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0546\u056b\u0577\u0584\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0574\u0565\u056e \u0567: \u0544\u0561\u0584\u057d\u056b\u0574\u0561\u056c \u0569\u0578\u0582\u0575\u056c\u0561\u057f\u0580\u0565\u056c\u056b \u0579\u0561\u0583\u057d\u0568 {{ limit }} {{ suffix }} \u0567\u0589", "validators", "hy");
    Translator.add("The file is too large.", "\u0546\u056b\u0577\u0584\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0574\u0565\u056e \u0567\u0589", "validators", "hy");
    Translator.add("The file could not be uploaded.", "\u0546\u056b\u0577\u0584\u0568 \u0579\u056b \u056f\u0561\u0580\u0578\u0572 \u0562\u0565\u057c\u0576\u057e\u0565\u056c\u0589", "validators", "hy");
    Translator.add("This value should be a valid number.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b \u0569\u056b\u057e\u0589", "validators", "hy");
    Translator.add("This value is not a valid country.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b \u0565\u0580\u056f\u056b\u0580\u0589", "validators", "hy");
    Translator.add("This file is not a valid image.", "\u0546\u056b\u0577\u0584\u0568 \u0576\u056f\u0561\u0580\u056b \u057e\u0561\u057e\u0565\u0580 \u0586\u0578\u0580\u0574\u0561\u057f \u0579\u0567\u0589", "validators", "hy");
    Translator.add("This is not a valid IP address.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057e\u0561\u057e\u0565\u0580 IP \u0570\u0561\u057d\u0581\u0565 \u0579\u0567\u0589", "validators", "hy");
    Translator.add("This value is not a valid language.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057e\u0561\u057e\u0565\u0580 \u056c\u0565\u0566\u0578\u0582 \u0579\u0567\u0589", "validators", "hy");
    Translator.add("This value is not a valid locale.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u0579\u056b \u0570\u0561\u0576\u0564\u056b\u057d\u0561\u0576\u0578\u0582\u0574 \u057e\u0561\u057e\u0565\u0580 \u057f\u0565\u0572\u0561\u0575\u0576\u0561\u0581\u0578\u0582\u0574\u0589", "validators", "hy");
    Translator.add("This value is already used.", "\u0531\u0575\u0564 \u0561\u0580\u056a\u0565\u0584\u0576 \u0561\u0580\u0564\u0565\u0576 \u0585\u0563\u057f\u0561\u0563\u0578\u0580\u056e\u057e\u0578\u0582\u0574 \u0567\u0589", "validators", "hy");
    Translator.add("The size of the image could not be detected.", "\u0546\u056f\u0561\u0580\u056b \u0579\u0561\u0583\u057d\u0565\u0580\u0568 \u0579\u057d\u057f\u0561\u0581\u057e\u0565\u0581 \u0578\u0580\u0578\u0577\u0565\u056c\u0589", "validators", "hy");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u0546\u056f\u0561\u0580\u056b \u056c\u0561\u0575\u0576\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0574\u0565\u056e \u0567({{ width }}px). \u0544\u0561\u0584\u057d\u056b\u0574\u0561\u056c \u0579\u0561\u0583\u0576 \u0567 {{ max_width }}px\u0589", "validators", "hy");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u0546\u056f\u0561\u0580\u056b \u056c\u0561\u0575\u0576\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0583\u0578\u0584\u0580 \u0567 ({{ width }}px). \u0544\u056b\u0576\u056b\u0574\u0561\u056c \u0579\u0561\u0583\u0576 \u0567 {{ min_ width }}px\u0589", "validators", "hy");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u0546\u056f\u0561\u0580\u056b \u0562\u0561\u0580\u0571\u0580\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0574\u0565\u056e \u0567 ({{ height }}px). \u0544\u0561\u0584\u057d\u056b\u0574\u0561\u056c \u0579\u0561\u0583\u0576 \u0567 {{ max_height }}px\u0589", "validators", "hy");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u0546\u056f\u0561\u0580\u056b \u0562\u0561\u0580\u0571\u0580\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0583\u0578\u0584\u0580 \u0567 ({{ height }}px). \u0544\u056b\u0576\u056b\u0574\u0561\u056c \u0579\u0561\u0583\u0576 \u0567 {{ min_height }}px\u0589", "validators", "hy");
    Translator.add("This value should be the user's current password.", "\u0531\u0575\u057d \u0561\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b \u0585\u0563\u057f\u0561\u0563\u0578\u0580\u056e\u0578\u0572\u056b \u0576\u0565\u0580\u056f\u0561 \u056e\u0561\u056e\u056f\u0561\u0563\u056b\u0580\u0568\u0589", "validators", "hy");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u0531\u0575\u057d \u0561\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u0578\u0582\u0576\u0565\u0576\u0561 \u0573\u056b\u0577\u057f {{ limit }} \u057d\u056b\u0574\u057e\u0578\u056c\u0576\u0565\u0580\u0589", "validators", "hy");
    Translator.add("The file was only partially uploaded.", "\u0546\u056b\u0577\u0584\u056b \u0574\u0561\u057d\u0576\u0561\u056f\u056b \u0562\u0565\u057c\u0576\u0574\u0561\u0576 \u057d\u056d\u0561\u056c\u0589", "validators", "hy");
    Translator.add("No file was uploaded.", "\u0546\u056b\u0577\u0584\u0568 \u0579\u056b \u0562\u0565\u057c\u0576\u057e\u0565\u056c\u0589", "validators", "hy");
    Translator.add("No temporary folder was configured in php.ini.", "php.ini \u0576\u056b\u0577\u0584\u0578\u0582\u0574 \u056a\u0561\u0574\u0561\u0576\u0561\u056f\u0561\u057e\u0578\u0580 \u057a\u0561\u0576\u0561\u056f \u0576\u0577\u057e\u0561\u056e \u0579\u0567\u0589", "validators", "hy");
    Translator.add("Cannot write temporary file to disk.", "\u053a\u0561\u0574\u0561\u0576\u0561\u056f\u0561\u057e\u0578\u0580 \u0576\u056b\u0577\u0584\u0568 \u0570\u0576\u0561\u0580\u0561\u057e\u0578\u0580 \u0579\u0567 \u0563\u0580\u0565\u056c \u057d\u056f\u0561\u057e\u0561\u057c\u0561\u056f\u056b \u057e\u0580\u0561\u0589", "validators", "hy");
    Translator.add("A PHP extension caused the upload to fail.", "PHP \u0586\u0578\u0580\u0574\u0561\u057f\u0568 \u0564\u0561\u0580\u0571\u0565\u056c \u0567 \u0562\u0565\u057c\u0576\u0574\u0561\u0576 \u0579\u0570\u0561\u057b\u0578\u0572\u0574\u0561\u0576 \u057a\u0561\u057f\u0573\u0561\u057c\u0589", "validators", "hy");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "\u0531\u0575\u057d \u0570\u0561\u057e\u0561\u0584\u0561\u056e\u0578\u0582\u0576 \u057a\u0565\u057f\u0584 \u0567 \u057a\u0561\u0578\u0582\u0580\u0561\u056f\u056b {{ limit }} \u056f\u0561\u0574 \u0561\u057e\u0565\u056c\u056b \u057f\u0561\u0580\u0580\u0565\u0580\u0589|\u0531\u0575\u057d \u0570\u0561\u057e\u0565\u056c\u057e\u0561\u056e\u0568 \u057a\u0565\u057f\u0584 \u0567 \u057a\u0561\u0580\u0578\u0582\u0576\u0561\u056f\u056b limit }} \u057f\u0561\u0580\u0580 \u056f\u0561\u0574 \u0561\u057e\u0565\u056c\u056b\u0576\u0589|\u0531\u0575\u057d \u0570\u0561\u057e\u0561\u0584\u0561\u056e\u0578\u0582\u0576 \u057a\u0565\u057f\u0584 \u0567 \u057a\u0561\u0580\u0578\u0582\u0576\u0561\u056f\u056b {{ limit }} \u057f\u0561\u0580\u0580\u0565\u0580\u056b\u0576 \u056f\u0561\u0574 \u0561\u057e\u0565\u056c\u056b\u0589", "validators", "hy");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u0531\u0575\u057d \u0570\u0561\u057e\u0561\u0584\u0561\u056e\u0578\u0582\u0576 \u057a\u0565\u057f\u0584 \u0567 \u057a\u0561\u0578\u0582\u0580\u0561\u056f\u056b {{ limit }} \u057f\u0561\u0580\u0580\u0565\u0580 \u056f\u0561\u0574 \u0584\u056b\u0579\u0589|\u0531\u0575\u057d \u0570\u0561\u057e\u0561\u0584\u0561\u056e\u0578\u0582\u0576 \u057a\u0565\u057f\u0584 \u0567 \u057a\u0561\u0578\u0582\u0580\u0561\u056f\u056b {{ limit }} \u057f\u0561\u0580\u0580 \u056f\u0561\u0574 \u0584\u056b\u0579\u0589|\u0531\u0575\u057d \u0570\u0561\u057e\u0561\u0584\u0561\u056e\u0578\u0582\u0576 \u057a\u0565\u057f\u0584 \u0567 \u057a\u0561\u0578\u0582\u0580\u0561\u056f\u056b {{ limit }} \u057f\u0561\u0580\u0580\u0565\u0580 \u056f\u0561\u0574 \u0584\u056b\u0579\u0589", "validators", "hy");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u0531\u0575\u057d \u0570\u0561\u057e\u0561\u0584\u0561\u056e\u0578\u0582\u0576 \u057a\u0565\u057f\u0584 \u0567 \u057a\u0561\u0578\u0582\u0580\u0561\u056f\u056b \u0578\u0582\u0572\u056b\u0572 {{ limit }} \u057f\u0561\u0580\u0580\u0589|\u0531\u0575\u057d \u0570\u0561\u057e\u0561\u0584\u0561\u056e\u0578\u0582\u0576 \u057a\u0565\u057f\u0584 \u0567 \u057a\u0561\u0578\u0582\u0580\u0561\u056f\u056b \u0578\u0582\u0572\u056b\u0572 {{ limit }} \u057f\u0561\u0580\u0580\u0565\u0580\u0589|\u0531\u0575\u057d \u0570\u0561\u057e\u0561\u0584\u0561\u056e\u0578\u0582\u0576 \u057a\u0565\u057f\u0584 \u0567 \u057a\u0561\u0578\u0582\u0580\u0561\u056f\u056b {{ limit }} \u057f\u0561\u0580\u0580\u0565\u0580\u0589", "validators", "hy");
    Translator.add("Invalid card number.", "\u0554\u0561\u0580\u057f\u056b \u057d\u056d\u0561\u056c \u0570\u0561\u0574\u0561\u0580:", "validators", "hy");
    Translator.add("Unsupported card type or invalid card number.", "\u0549\u057d\u057a\u0561\u057d\u0561\u0580\u056f\u057e\u0578\u0572 \u056f\u0561\u0574 \u057d\u056d\u0561\u056c \u0584\u0561\u0580\u057f\u056b \u0570\u0561\u0574\u0561\u0580:", "validators", "hy");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057e\u0561\u057e\u0565\u0580 \u0574\u056b\u057b\u0561\u0566\u0561\u0575\u056b\u0576 \u0562\u0561\u0576\u056f\u0561\u0575\u056b\u0576 \u0570\u0561\u0577\u057e\u056b \u0570\u0561\u0574\u0561\u0580 \u0579\u0567 (IBAN)\u0589", "validators", "hy");
    Translator.add("This value is not a valid ISBN-10.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u0578\u0582\u0576\u056b \u0561\u0576\u057e\u0561\u057e\u0565\u0580 ISBN-10 \u0571\u0587\u0561\u0579\u0561\u0583\u0589", "validators", "hy");
    Translator.add("This value is not a valid ISBN-13.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u0578\u0582\u0576\u056b \u0561\u0576\u057e\u0561\u057e\u0565\u0580 ISBN-13 \u0571\u0587\u0561\u0579\u0561\u0583\u0589", "validators", "hy");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u0579\u056b \u0570\u0561\u0574\u0561\u057a\u0561\u057f\u0561\u057d\u056d\u0561\u0576\u0578\u0582\u0574 ISBN-10 \u0587 ISBN-13 \u0571\u0587\u0561\u0579\u0561\u0583\u0565\u0580\u056b\u0576\u0589", "validators", "hy");
    Translator.add("This value is not a valid ISSN.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u0579\u056b \u0570\u0561\u0574\u0561\u057a\u0561\u057d\u057f\u0561\u057d\u056d\u0561\u0576\u0578\u0582\u0574 ISSN \u0571\u0587\u0561\u0579\u0561\u0583\u056b\u0576\u0589", "validators", "hy");
    Translator.add("This value is not a valid currency.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057e\u0561\u057e\u0565\u0580 \u057f\u0561\u0580\u0561\u0564\u0580\u0561\u0574 \u0579\u0567\u0589", "validators", "hy");
    Translator.add("This value should be equal to {{ compared_value }}.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b {{ compared_value }}\u0589", "validators", "hy");
    Translator.add("This value should be greater than {{ compared_value }}.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u0574\u0565\u056e \u056c\u056b\u0576\u056b, \u0584\u0561\u0576 {{ compared_value }}\u0589", "validators", "hy");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b \u0570\u0561\u057e\u0561\u057d\u0561\u0580 \u056f\u0561\u0574 \u0574\u0565\u056e \u0584\u0561\u0576 {{ compared_value }}\u0589", "validators", "hy");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b \u056b\u0576\u0579\u057a\u0565\u057d {{ compared_value_type }} {{ compared_value }}\u0589", "validators", "hy");
    Translator.add("This value should be less than {{ compared_value }}.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b \u0583\u0578\u0584\u0580 \u0584\u0561\u0576 {{ compared_value }}\u0589", "validators", "hy");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b \u0583\u0578\u0584\u0580 \u056f\u0561\u0574 \u0570\u0561\u057e\u0561\u057d\u0561\u0580 {{ compared_value }}\u0589", "validators", "hy");
    Translator.add("This value should not be equal to {{ compared_value }}.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b \u0570\u0561\u057e\u0561\u057d\u0561\u0580 {{ compared_value }}\u0589", "validators", "hy");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u057a\u0565\u057f\u0584 \u0567 \u056c\u056b\u0576\u056b \u0576\u0578\u0582\u0576\u0568 {{ compared_value_type }} {{ compared_value }}:", "validators", "hy");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "\u054a\u0561\u057f\u056f\u0565\u0580\u056b \u056f\u0578\u0572\u0574\u0565\u0580\u056b \u0570\u0561\u0580\u0561\u0562\u0565\u0580\u0561\u056f\u0581\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568 \u056d\u056b\u057d\u057f \u0574\u0565\u056e \u0567 ({{ ratio }}). \u0544\u0561\u0584\u057d\u056b\u0574\u0561\u056c \u0570\u0561\u0580\u0561\u0562\u0565\u0580\u0561\u056f\u0581\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568\u055d {{ max_ratio }}\u0589", "validators", "hy");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "\u054a\u0561\u057f\u056f\u0565\u0580\u056b \u056f\u0578\u0572\u0574\u0565\u0580\u056b \u0570\u0561\u0580\u0561\u0562\u0565\u0580\u0561\u056f\u0581\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568 \u056d\u056b\u057d\u057f \u0583\u0578\u0584\u0580 \u0567 ({{ ratio }}). \u0544\u056b\u0576\u056b\u0574\u0561\u056c \u0570\u0561\u0580\u0561\u0562\u0565\u0580\u0561\u056f\u0581\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568\u055d {{ min_ratio }}\u0589", "validators", "hy");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "\u054a\u0561\u057f\u056f\u0565\u0580\u0568 \u0584\u0561\u057c\u0561\u056f\u0578\u0582\u057d\u056b \u0567({{ width }}x{{ height }}px)\u0589 \u0554\u0561\u057c\u0561\u056f\u0578\u0582\u057d\u056b \u0576\u056f\u0561\u0580\u0576\u0565\u0580 \u0579\u0565\u0576 \u0569\u0578\u0582\u0575\u056c\u0561\u057f\u0580\u057e\u0578\u0582\u0574\u0589", "validators", "hy");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "\u054a\u0561\u057f\u056f\u0565\u0580\u0568 \u0561\u056c\u0562\u0578\u0574\u0561\u0575\u056b\u0576 \u0578\u0582\u0572\u0572\u057e\u0561\u056e\u0578\u0582\u0569\u0575\u0561\u0576 \u0567({{ width }}x{{ height }}px)\u2024 \u0564\u0561 \u0579\u056b \u0569\u0578\u0582\u0575\u056c\u0561\u057f\u0580\u057e\u0578\u0582\u0574\u0589", "validators", "hy");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "\u054a\u0561\u057f\u056f\u0565\u0580\u0568 \u057a\u0578\u0580\u057f\u0580\u0565\u057f\u0561\u0575\u056b\u0576 \u0578\u0582\u0572\u0572\u057e\u0561\u056e\u0578\u0582\u0569\u0575\u0561\u0576 \u0567 ({{ width }}x{{ height }}px)\u2024 \u0564\u0561 \u0579\u056b \u0569\u0578\u0582\u0575\u056c\u0561\u057f\u0580\u057e\u0578\u0582\u0574\u0589", "validators", "hy");
    Translator.add("An empty file is not allowed.", "\u0534\u0561\u057f\u0561\u0580\u056f \u0576\u056b\u0577\u0584 \u0579\u056b \u0569\u0578\u0582\u0575\u056c\u0561\u057f\u0580\u057e\u0578\u0582\u0574\u0589", "validators", "hy");
    Translator.add("The host could not be resolved.", "\u0540\u0578\u057d\u0569\u056b \u0561\u0576\u0578\u0582\u0576\u0568 \u0570\u0576\u0561\u0580\u0561\u057e\u0578\u0580 \u0579\u056b \u057a\u0561\u0580\u0566\u0565\u056c:", "validators", "hy");
    Translator.add("This value does not match the expected {{ charset }} charset.", "\u0531\u0580\u056a\u0565\u0584\u0568 \u0579\u056b \u0570\u0561\u0574\u0568\u0576\u056f\u0576\u0578\u0582\u0574 {{ charset }} \u056f\u0578\u0564\u0561\u057e\u0578\u0580\u0574\u0561\u0576 \u0570\u0565\u057f:", "validators", "hy");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "\u054d\u0561 \u057e\u0561\u057e\u0565\u0580 Business Identifier Code (BIC) \u0579\u0567\u0589", "validators", "hy");
    Translator.add("This form should not contain extra fields.", "\u0531\u0575\u057d \u0571\u0587\u0568 \u0579\u057a\u0565\u057f\u0584 \u0567 \u057a\u0561\u0580\u0578\u0582\u0576\u0561\u056f\u056b \u056c\u0580\u0561\u0581\u0578\u0582\u0581\u056b\u0579 \u057f\u0578\u0572\u0565\u0580.", "validators", "hy");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u054e\u0565\u0580\u0562\u0565\u057c\u0576\u057e\u0561\u056e \u0586\u0561\u0575\u056c\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0574\u0565\u056e \u0567: \u053d\u0576\u0564\u0580\u057e\u0578\u0582\u0574 \u0567 \u057e\u0565\u0580\u0562\u0565\u057c\u0576\u0565\u056c \u0561\u057e\u0565\u056c\u056b \u0583\u0578\u0584\u0580 \u0579\u0561\u0583\u057d\u056b \u0586\u0561\u0575\u056c.", "validators", "hy");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF \u0561\u0580\u056a\u0565\u0584\u0568 \u0561\u0576\u0569\u0578\u0582\u0575\u056c\u0561\u057f\u0580\u0565\u056c\u056b \u0567: \u0553\u0578\u0580\u0571\u0565\u0584 \u0576\u0578\u0580\u056b\u0581 \u0578\u0582\u0572\u0561\u0580\u056f\u0565\u056c \u0571\u0587\u0568.", "validators", "hy");
})(Translator);

(function (Translator) {
    // id
    Translator.add("This value should be false.", "Nilai ini harus bernilai salah.", "validators", "id");
    Translator.add("This value should be true.", "Nilai ini harus bernilai benar.", "validators", "id");
    Translator.add("This value should be of type {{ type }}.", "Nilai ini harus bertipe {{ type }}.", "validators", "id");
    Translator.add("This value should be blank.", "Nilai ini harus kosong.", "validators", "id");
    Translator.add("The value you selected is not a valid choice.", "Nilai yang dipilih tidak tepat.", "validators", "id");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Anda harus memilih paling tidak {{ limit }} pilihan.", "validators", "id");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Anda harus memilih paling banyak {{ limit }} pilihan.", "validators", "id");
    Translator.add("One or more of the given values is invalid.", "Satu atau lebih nilai yang diberikan tidak sah.", "validators", "id");
    Translator.add("This field was not expected.", "Bidang ini tidak diharapkan.", "validators", "id");
    Translator.add("This field is missing.", "Bidang ini hilang.", "validators", "id");
    Translator.add("This value is not a valid date.", "Nilai ini bukan merupakan tanggal yang sah.", "validators", "id");
    Translator.add("This value is not a valid datetime.", "Nilai ini bukan merupakan tanggal dan waktu yang sah.", "validators", "id");
    Translator.add("This value is not a valid email address.", "Nilai ini bukan alamat email yang sah.", "validators", "id");
    Translator.add("The file could not be found.", "Berkas tidak ditemukan.", "validators", "id");
    Translator.add("The file is not readable.", "Berkas tidak bisa dibaca.", "validators", "id");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Ukuran berkas terlalu besar ({{ size }} {{ suffix }}). Ukuran maksimum yang diizinkan adalah {{ limit }} {{ suffix }}.", "validators", "id");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Jenis berkas ({{ type }}) tidak sah. Jenis berkas yang diijinkan adalah {{ types }}.", "validators", "id");
    Translator.add("This value should be {{ limit }} or less.", "Nilai ini harus {{ limit }} atau kurang.", "validators", "id");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Nilai ini terlalu panjang. Seharusnya {{ limit }} karakter atau kurang.", "validators", "id");
    Translator.add("This value should be {{ limit }} or more.", "Nilai ini harus {{ limit }} atau lebih.", "validators", "id");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Nilai ini terlalu pendek. Seharusnya {{ limit }} karakter atau lebih.", "validators", "id");
    Translator.add("This value should not be blank.", "Nilai ini tidak boleh kosong.", "validators", "id");
    Translator.add("This value should not be null.", "Nilai ini tidak boleh 'null'.", "validators", "id");
    Translator.add("This value should be null.", "Nilai ini harus 'null'.", "validators", "id");
    Translator.add("This value is not valid.", "Nilai ini tidak sah.", "validators", "id");
    Translator.add("This value is not a valid time.", "Nilai ini bukan merupakan waktu yang sah.", "validators", "id");
    Translator.add("This value is not a valid URL.", "Nilai ini bukan URL yang sah.", "validators", "id");
    Translator.add("The two values should be equal.", "Isi keduanya harus sama.", "validators", "id");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Ukuran berkas terlalu besar. Ukuran maksimum yang diijinkan adalah {{ limit }} {{ suffix }}.", "validators", "id");
    Translator.add("The file is too large.", "Ukuran berkas terlalu besar.", "validators", "id");
    Translator.add("The file could not be uploaded.", "Berkas tidak dapat diunggah.", "validators", "id");
    Translator.add("This value should be a valid number.", "Nilai ini harus angka yang sah.", "validators", "id");
    Translator.add("This file is not a valid image.", "Berkas ini tidak termasuk gambar.", "validators", "id");
    Translator.add("This is not a valid IP address.", "Ini bukan alamat IP yang sah.", "validators", "id");
    Translator.add("This value is not a valid language.", "Nilai ini bukan bahasa yang sah.", "validators", "id");
    Translator.add("This value is not a valid locale.", "Nilai ini bukan lokal yang sah.", "validators", "id");
    Translator.add("This value is not a valid country.", "Nilai ini bukan negara yang sah.", "validators", "id");
    Translator.add("This value is already used.", "Nilai ini sudah digunakan.", "validators", "id");
    Translator.add("The size of the image could not be detected.", "Ukuran dari gambar tidak bisa dideteksi.", "validators", "id");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Lebar gambar terlalu besar ({{ width }}px). Ukuran lebar maksimum adalah {{ max_width }}px.", "validators", "id");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Lebar gambar terlalu kecil ({{ width }}px). Ukuran lebar minimum yang diharapkan adalah {{ min_width }}px.", "validators", "id");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Tinggi gambar terlalu besar ({{ height }}px). Ukuran tinggi maksimum adalah {{ max_height }}px.", "validators", "id");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Tinggi gambar terlalu kecil ({{ height }}px). Ukuran tinggi minimum yang diharapkan adalah {{ min_height }}px.", "validators", "id");
    Translator.add("This value should be the user's current password.", "Nilai ini harus kata sandi pengguna saat ini.", "validators", "id");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Nilai ini harus memiliki tepat {{ limit }} karakter.", "validators", "id");
    Translator.add("The file was only partially uploaded.", "Berkas hanya terunggah sebagian.", "validators", "id");
    Translator.add("No file was uploaded.", "Tidak ada berkas terunggah.", "validators", "id");
    Translator.add("No temporary folder was configured in php.ini.", "Direktori sementara tidak dikonfiguasi pada php.ini.", "validators", "id");
    Translator.add("Cannot write temporary file to disk.", "Tidak dapat menuliskan berkas sementara ke dalam media penyimpanan.", "validators", "id");
    Translator.add("A PHP extension caused the upload to fail.", "Sebuah ekstensi PHP menyebabkan kegagalan unggah.", "validators", "id");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Kumpulan ini harus memiliki {{ limit }} elemen atau lebih.", "validators", "id");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Kumpulan ini harus memiliki kurang dari {{ limit }} elemen.", "validators", "id");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Kumpulan ini harus memiliki tepat {{ limit }} elemen.", "validators", "id");
    Translator.add("Invalid card number.", "Nomor kartu tidak sah.", "validators", "id");
    Translator.add("Unsupported card type or invalid card number.", "Jenis kartu tidak didukung atau nomor kartu tidak sah.", "validators", "id");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Ini bukan Nomor Rekening Bank Internasional (IBAN) yang sah.", "validators", "id");
    Translator.add("This value is not a valid ISBN-10.", "Nilai ini bukan ISBN-10 yang sah.", "validators", "id");
    Translator.add("This value is not a valid ISBN-13.", "Nilai ini bukan ISBN-13 yang sah.", "validators", "id");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Nilai ini bukan ISBN-10 maupun ISBN-13 yang sah.", "validators", "id");
    Translator.add("This value is not a valid ISSN.", "Nilai ini bukan ISSN yang sah.", "validators", "id");
    Translator.add("This value is not a valid currency.", "Nilai ini bukan mata uang yang sah.", "validators", "id");
    Translator.add("This value should be equal to {{ compared_value }}.", "Nilai ini seharusnya sama dengan {{ compared_value }}.", "validators", "id");
    Translator.add("This value should be greater than {{ compared_value }}.", "Nilai ini seharusnya lebih dari {{ compared_value }}.", "validators", "id");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Nilai ini seharusnya lebih dari atau sama dengan {{ compared_value }}.", "validators", "id");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Nilai ini seharusnya identik dengan {{ compared_value_type }} {{ compared_value }}.", "validators", "id");
    Translator.add("This value should be less than {{ compared_value }}.", "Nilai ini seharusnya kurang dari {{ compared_value }}.", "validators", "id");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Nilai ini seharusnya kurang dari atau sama dengan {{ compared_value }}.", "validators", "id");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Nilai ini seharusnya tidak sama dengan {{ compared_value }}.", "validators", "id");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Nilai ini seharusnya tidak identik dengan {{ compared_value_type }} {{ compared_value }}.", "validators", "id");
    Translator.add("This form should not contain extra fields.", "Gabungan kolom tidak boleh mengandung kolom tambahan.", "validators", "id");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Berkas yang di unggah terlalu besar. Silahkan coba unggah berkas yang lebih kecil.", "validators", "id");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF-Token tidak sah. Silahkan coba kirim ulang formulir.", "validators", "id");
})(Translator);

(function (Translator) {
    // it
    Translator.add("This value should be false.", "Questo valore dovrebbe essere falso.", "validators", "it");
    Translator.add("This value should be true.", "Questo valore dovrebbe essere vero.", "validators", "it");
    Translator.add("This value should be of type {{ type }}.", "Questo valore dovrebbe essere di tipo {{ type }}.", "validators", "it");
    Translator.add("This value should be blank.", "Questo valore dovrebbe essere vuoto.", "validators", "it");
    Translator.add("The value you selected is not a valid choice.", "Questo valore dovrebbe essere una delle opzioni disponibili.", "validators", "it");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Si dovrebbe selezionare almeno {{ limit }} opzione.|Si dovrebbero selezionare almeno {{ limit }} opzioni.", "validators", "it");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Si dovrebbe selezionare al massimo {{ limit }} opzione.|Si dovrebbero selezionare al massimo {{ limit }} opzioni.", "validators", "it");
    Translator.add("One or more of the given values is invalid.", "Uno o pi\u00f9 valori inseriti non sono validi.", "validators", "it");
    Translator.add("This field was not expected.", "Questo campo non \u00e8 stato previsto.", "validators", "it");
    Translator.add("This field is missing.", "Questo campo \u00e8 mancante.", "validators", "it");
    Translator.add("This value is not a valid date.", "Questo valore non \u00e8 una data valida.", "validators", "it");
    Translator.add("This value is not a valid datetime.", "Questo valore non \u00e8 una data e ora valida.", "validators", "it");
    Translator.add("This value is not a valid email address.", "Questo valore non \u00e8 un indirizzo email valido.", "validators", "it");
    Translator.add("The file could not be found.", "Non \u00e8 stato possibile trovare il file.", "validators", "it");
    Translator.add("The file is not readable.", "Il file non \u00e8 leggibile.", "validators", "it");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Il file \u00e8 troppo grande ({{ size }} {{ suffix }}). La dimensione massima consentita \u00e8 {{ limit }} {{ suffix }}.", "validators", "it");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Il mime type del file non \u00e8 valido ({{ type }}). I tipi permessi sono {{ types }}.", "validators", "it");
    Translator.add("This value should be {{ limit }} or less.", "Questo valore dovrebbe essere {{ limit }} o inferiore.", "validators", "it");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Questo valore \u00e8 troppo lungo. Dovrebbe essere al massimo di {{ limit }} carattere.|Questo valore \u00e8 troppo lungo. Dovrebbe essere al massimo di {{ limit }} caratteri.", "validators", "it");
    Translator.add("This value should be {{ limit }} or more.", "Questo valore dovrebbe essere {{ limit }} o superiore.", "validators", "it");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Questo valore \u00e8 troppo corto. Dovrebbe essere almeno di {{ limit }} carattere.|Questo valore \u00e8 troppo corto. Dovrebbe essere almeno di {{ limit }} caratteri.", "validators", "it");
    Translator.add("This value should not be blank.", "Questo valore non dovrebbe essere vuoto.", "validators", "it");
    Translator.add("This value should not be null.", "Questo valore non dovrebbe essere nullo.", "validators", "it");
    Translator.add("This value should be null.", "Questo valore dovrebbe essere nullo.", "validators", "it");
    Translator.add("This value is not valid.", "Questo valore non \u00e8 valido.", "validators", "it");
    Translator.add("This value is not a valid time.", "Questo valore non \u00e8 un'ora valida.", "validators", "it");
    Translator.add("This value is not a valid URL.", "Questo valore non \u00e8 un URL valido.", "validators", "it");
    Translator.add("The two values should be equal.", "I due valori dovrebbero essere uguali.", "validators", "it");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Il file \u00e8 troppo grande. La dimensione massima \u00e8 {{ limit }} {{ suffix }}.", "validators", "it");
    Translator.add("The file is too large.", "Il file \u00e8 troppo grande.", "validators", "it");
    Translator.add("The file could not be uploaded.", "Il file non pu\u00f2 essere caricato.", "validators", "it");
    Translator.add("This value should be a valid number.", "Questo valore dovrebbe essere un numero.", "validators", "it");
    Translator.add("This file is not a valid image.", "Questo file non \u00e8 una immagine valida.", "validators", "it");
    Translator.add("This is not a valid IP address.", "Questo valore non \u00e8 un indirizzo IP valido.", "validators", "it");
    Translator.add("This value is not a valid language.", "Questo valore non \u00e8 una lingua valida.", "validators", "it");
    Translator.add("This value is not a valid locale.", "Questo valore non \u00e8 una impostazione regionale valida.", "validators", "it");
    Translator.add("This value is not a valid country.", "Questo valore non \u00e8 una nazione valida.", "validators", "it");
    Translator.add("This value is already used.", "Questo valore \u00e8 gi\u00e0 stato utilizzato.", "validators", "it");
    Translator.add("The size of the image could not be detected.", "La dimensione dell'immagine non pu\u00f2 essere determinata.", "validators", "it");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "La larghezza dell'immagine \u00e8 troppo grande ({{ width }}px). La larghezza massima \u00e8 di {{ max_width }}px.", "validators", "it");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "La larghezza dell'immagine \u00e8 troppo piccola ({{ width }}px). La larghezza minima \u00e8 di {{ min_width }}px.", "validators", "it");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "L'altezza dell'immagine \u00e8 troppo grande ({{ height }}px). L'altezza massima \u00e8 di {{ max_height }}px.", "validators", "it");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "L'altezza dell'immagine \u00e8 troppo piccola ({{ height }}px). L'altezza minima \u00e8 di {{ min_height }}px.", "validators", "it");
    Translator.add("This value should be the user's current password.", "Questo valore dovrebbe essere la password attuale dell'utente.", "validators", "it");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Questo valore dovrebbe contenere esattamente {{ limit }} carattere.|Questo valore dovrebbe contenere esattamente {{ limit }} caratteri.", "validators", "it");
    Translator.add("The file was only partially uploaded.", "Il file \u00e8 stato caricato solo parzialmente.", "validators", "it");
    Translator.add("No file was uploaded.", "Nessun file \u00e8 stato caricato.", "validators", "it");
    Translator.add("No temporary folder was configured in php.ini.", "Nessuna cartella temporanea \u00e8 stata configurata nel php.ini.", "validators", "it");
    Translator.add("Cannot write temporary file to disk.", "Impossibile scrivere il file temporaneo sul disco.", "validators", "it");
    Translator.add("A PHP extension caused the upload to fail.", "Un'estensione PHP ha causato il fallimento del caricamento.", "validators", "it");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Questa collezione dovrebbe contenere almeno {{ limit }} elemento.|Questa collezione dovrebbe contenere almeno {{ limit }} elementi.", "validators", "it");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Questa collezione dovrebbe contenere massimo {{ limit }} elemento.|Questa collezione dovrebbe contenere massimo {{ limit }} elementi.", "validators", "it");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Questa collezione dovrebbe contenere esattamente {{ limit }} elemento.|Questa collezione dovrebbe contenere esattamente {{ limit }} elementi.", "validators", "it");
    Translator.add("Invalid card number.", "Numero di carta non valido.", "validators", "it");
    Translator.add("Unsupported card type or invalid card number.", "Tipo di carta non supportato o numero non valido.", "validators", "it");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Questo valore non \u00e8 un IBAN (International Bank Account Number) valido.", "validators", "it");
    Translator.add("This value is not a valid ISBN-10.", "Questo valore non \u00e8 un codice ISBN-10 valido.", "validators", "it");
    Translator.add("This value is not a valid ISBN-13.", "Questo valore non \u00e8 un codice ISBN-13 valido.", "validators", "it");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Questo valore non \u00e8 un codice ISBN-10 o ISBN-13 valido.", "validators", "it");
    Translator.add("This value is not a valid ISSN.", "Questo valore non \u00e8 un codice ISSN valido.", "validators", "it");
    Translator.add("This value is not a valid currency.", "Questo valore non \u00e8 una valuta valida.", "validators", "it");
    Translator.add("This value should be equal to {{ compared_value }}.", "Questo valore dovrebbe essere uguale a {{ compared_value }}.", "validators", "it");
    Translator.add("This value should be greater than {{ compared_value }}.", "Questo valore dovrebbe essere maggiore di {{ compared_value }}.", "validators", "it");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Questo valore dovrebbe essere maggiore o uguale a {{ compared_value }}.", "validators", "it");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Questo valore dovrebbe essere identico a {{ compared_value_type }} {{ compared_value }}.", "validators", "it");
    Translator.add("This value should be less than {{ compared_value }}.", "Questo valore dovrebbe essere minore di {{ compared_value }}.", "validators", "it");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Questo valore dovrebbe essere minore o uguale a {{ compared_value }}.", "validators", "it");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Questo valore dovrebbe essere diverso da {{ compared_value }}.", "validators", "it");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Questo valore dovrebbe essere diverso da {{ compared_value_type }} {{ compared_value }}.", "validators", "it");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "Il rapporto di aspetto dell'immagine \u00e8 troppo grande ({{ ratio }}). Il rapporto massimo consentito \u00e8 {{ max_ratio }}.", "validators", "it");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "Il rapporto di aspetto dell'immagine \u00e8 troppo piccolo ({{ ratio }}). Il rapporto minimo consentito \u00e8 {{ min_ratio }}.", "validators", "it");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "L'immagine \u00e8 quadrata ({{ width }}x{{ height }}px). Le immagini quadrate non sono consentite.", "validators", "it");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "L'immagine \u00e8 orizzontale ({{ width }}x{{ height }}px). Le immagini orizzontali non sono consentite.", "validators", "it");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "L'immagine \u00e8 verticale ({{ width }}x{{ height }}px). Le immagini verticali non sono consentite.", "validators", "it");
    Translator.add("An empty file is not allowed.", "Un file vuoto non \u00e8 consentito.", "validators", "it");
    Translator.add("The host could not be resolved.", "L'host non pu\u00f2 essere risolto.", "validators", "it");
    Translator.add("This value does not match the expected {{ charset }} charset.", "Questo valore non corrisponde al charset {{ charset }}.", "validators", "it");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "Questo valore non \u00e8 un codice BIC valido.", "validators", "it");
    Translator.add("This form should not contain extra fields.", "Questo form non dovrebbe contenere nessun campo extra.", "validators", "it");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Il file caricato \u00e8 troppo grande. Per favore caricare un file pi\u00f9 piccolo.", "validators", "it");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "Il token CSRF non \u00e8 valido. Provare a reinviare il form.", "validators", "it");
})(Translator);

(function (Translator) {
    // ja
    Translator.add("This value should be false.", "false\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should be true.", "true\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should be of type {{ type }}.", "\u578b\u306f{{ type }}\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should be blank.", "\u7a7a\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The value you selected is not a valid choice.", "\u6709\u52b9\u306a\u9078\u629e\u80a2\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "{{ limit }}\u500b\u4ee5\u4e0a\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "validators", "ja");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "{{ limit }}\u500b\u4ee5\u5185\u3067\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "validators", "ja");
    Translator.add("One or more of the given values is invalid.", "\u7121\u52b9\u306a\u9078\u629e\u80a2\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002", "validators", "ja");
    Translator.add("This field was not expected.", "\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u4e88\u671f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002", "validators", "ja");
    Translator.add("This field is missing.", "\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001\u6b20\u843d\u3057\u3066\u3044\u307e\u3059\u3002", "validators", "ja");
    Translator.add("This value is not a valid date.", "\u6709\u52b9\u306a\u65e5\u4ed8\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is not a valid datetime.", "\u6709\u52b9\u306a\u65e5\u6642\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is not a valid email address.", "\u6709\u52b9\u306a\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The file could not be found.", "\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The file is not readable.", "\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3081\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3059\u304e\u307e\u3059({{ size }} {{ suffix }})\u3002\u6709\u52b9\u306a\u6700\u5927\u30b5\u30a4\u30ba\u306f{{ limit }} {{ suffix }}\u3067\u3059\u3002", "validators", "ja");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "\u30d5\u30a1\u30a4\u30eb\u306eMIME\u30bf\u30a4\u30d7\u304c\u7121\u52b9\u3067\u3059({{ type }})\u3002\u6709\u52b9\u306aMIME\u30bf\u30a4\u30d7\u306f{{ types }}\u3067\u3059\u3002", "validators", "ja");
    Translator.add("This value should be {{ limit }} or less.", "{{ limit }}\u4ee5\u4e0b\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u5024\u304c\u9577\u3059\u304e\u307e\u3059\u3002{{ limit }}\u6587\u5b57\u4ee5\u5185\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should be {{ limit }} or more.", "{{ limit }}\u4ee5\u4e0a\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u5024\u304c\u77ed\u3059\u304e\u307e\u3059\u3002{{ limit }}\u6587\u5b57\u4ee5\u4e0a\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should not be blank.", "\u7a7a\u3067\u3042\u3063\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should not be null.", "null\u3067\u3042\u3063\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should be null.", "null\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is not valid.", "\u6709\u52b9\u306a\u5024\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is not a valid time.", "\u6709\u52b9\u306a\u6642\u523b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is not a valid URL.", "\u6709\u52b9\u306aURL\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The two values should be equal.", "2\u3064\u306e\u5024\u304c\u540c\u3058\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3059\u304e\u307e\u3059\u3002\u6709\u52b9\u306a\u6700\u5927\u30b5\u30a4\u30ba\u306f{{ limit }} {{ suffix }}\u3067\u3059\u3002", "validators", "ja");
    Translator.add("The file is too large.", "\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3059\u304e\u307e\u3059\u3002", "validators", "ja");
    Translator.add("The file could not be uploaded.", "\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002", "validators", "ja");
    Translator.add("This value should be a valid number.", "\u6709\u52b9\u306a\u6570\u5b57\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This file is not a valid image.", "\u30d5\u30a1\u30a4\u30eb\u304c\u753b\u50cf\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This is not a valid IP address.", "\u6709\u52b9\u306aIP\u30a2\u30c9\u30ec\u30b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is not a valid language.", "\u6709\u52b9\u306a\u8a00\u8a9e\u540d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is not a valid locale.", "\u6709\u52b9\u306a\u30ed\u30b1\u30fc\u30eb\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is not a valid country.", "\u6709\u52b9\u306a\u56fd\u540d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is already used.", "\u65e2\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002", "validators", "ja");
    Translator.add("The size of the image could not be detected.", "\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u304c\u691c\u51fa\u3067\u304d\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u753b\u50cf\u306e\u5e45\u304c\u5927\u304d\u3059\u304e\u307e\u3059({{ width }}\u30d4\u30af\u30bb\u30eb)\u3002{{ max_width }}\u30d4\u30af\u30bb\u30eb\u307e\u3067\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "validators", "ja");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u753b\u50cf\u306e\u5e45\u304c\u5c0f\u3055\u3059\u304e\u307e\u3059({{ width }}\u30d4\u30af\u30bb\u30eb)\u3002{{ min_width }}\u30d4\u30af\u30bb\u30eb\u4ee5\u4e0a\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "validators", "ja");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u753b\u50cf\u306e\u9ad8\u3055\u304c\u5927\u304d\u3059\u304e\u307e\u3059({{ height }}\u30d4\u30af\u30bb\u30eb)\u3002{{ max_height }}\u30d4\u30af\u30bb\u30eb\u307e\u3067\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "validators", "ja");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u753b\u50cf\u306e\u9ad8\u3055\u304c\u5c0f\u3055\u3059\u304e\u307e\u3059({{ height }}\u30d4\u30af\u30bb\u30eb)\u3002{{ min_height }}\u30d4\u30af\u30bb\u30eb\u4ee5\u4e0a\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "validators", "ja");
    Translator.add("This value should be the user's current password.", "\u30e6\u30fc\u30b6\u30fc\u306e\u73fe\u5728\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u3061\u3087\u3046\u3069{{ limit }}\u6587\u5b57\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The file was only partially uploaded.", "\u30d5\u30a1\u30a4\u30eb\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306f\u5b8c\u5168\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("No file was uploaded.", "\u30d5\u30a1\u30a4\u30eb\u304c\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("No temporary folder was configured in php.ini.", "php.ini\u3067\u4e00\u6642\u30d5\u30a9\u30eb\u30c0\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("Cannot write temporary file to disk.", "\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u30c7\u30a3\u30b9\u30af\u306b\u66f8\u304d\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("A PHP extension caused the upload to fail.", "PHP\u62e1\u5f35\u306b\u3088\u3063\u3066\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002", "validators", "ja");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "{{ limit }}\u500b\u4ee5\u4e0a\u306e\u8981\u7d20\u3092\u542b\u3093\u3067\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u8981\u7d20\u306f{{ limit }}\u500b\u307e\u3067\u3067\u3059\u3002", "validators", "ja");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u8981\u7d20\u306f\u3061\u3087\u3046\u3069{{ limit }}\u500b\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("Invalid card number.", "\u7121\u52b9\u306a\u30ab\u30fc\u30c9\u756a\u53f7\u3067\u3059\u3002", "validators", "ja");
    Translator.add("Unsupported card type or invalid card number.", "\u672a\u5bfe\u5fdc\u306e\u30ab\u30fc\u30c9\u7a2e\u985e\u53c8\u306f\u7121\u52b9\u306a\u30ab\u30fc\u30c9\u756a\u53f7\u3067\u3059\u3002", "validators", "ja");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u6709\u52b9\u306aIBAN\u30b3\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is not a valid ISBN-10.", "\u6709\u52b9\u306aISBN-10\u30b3\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is not a valid ISBN-13.", "\u6709\u52b9\u306aISBN-13\u30b3\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u6709\u52b9\u306aISBN-10\u30b3\u30fc\u30c9\u53c8\u306fISBN-13\u30b3\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is not a valid ISSN.", "\u6709\u52b9\u306aISSN\u30b3\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value is not a valid currency.", "\u6709\u52b9\u306a\u8ca8\u5e63\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should be equal to {{ compared_value }}.", "{{ compared_value }}\u3068\u7b49\u3057\u304f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should be greater than {{ compared_value }}.", "{{ compared_value }}\u3088\u308a\u5927\u304d\u304f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "{{ compared_value }}\u4ee5\u4e0a\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "{{ compared_value_type }}\u3068\u3057\u3066\u306e{{ compared_value }}\u3068\u7b49\u3057\u304f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should be less than {{ compared_value }}.", "{{ compared_value }}\u672a\u6e80\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "{{ compared_value }}\u4ee5\u4e0b\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should not be equal to {{ compared_value }}.", "{{ compared_value }}\u3068\u7b49\u3057\u304f\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "{{ compared_value_type }}\u3068\u3057\u3066\u306e{{ compared_value }}\u3068\u7b49\u3057\u304f\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "\u753b\u50cf\u306e\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u304c\u5927\u304d\u3059\u304e\u307e\u3059({{ ratio }})\u3002{{ max_ratio }}\u307e\u3067\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "validators", "ja");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "\u753b\u50cf\u306e\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u304c\u5c0f\u3055\u3059\u304e\u307e\u3059({{ ratio }})\u3002{{ min_ratio }}\u4ee5\u4e0a\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "validators", "ja");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "\u753b\u50cf\u304c\u6b63\u65b9\u5f62\u306b\u306a\u3063\u3066\u3044\u307e\u3059({{ width }}x{{ height }}\u30d4\u30af\u30bb\u30eb)\u3002\u6b63\u65b9\u5f62\u306e\u753b\u50cf\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "\u753b\u50cf\u304c\u6a2a\u5411\u304d\u306b\u306a\u3063\u3066\u3044\u307e\u3059({{ width }}x{{ height }}\u30d4\u30af\u30bb\u30eb)\u3002\u6a2a\u5411\u304d\u306e\u753b\u50cf\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "\u753b\u50cf\u304c\u7e26\u5411\u304d\u306b\u306a\u3063\u3066\u3044\u307e\u3059({{ width }}x{{ height }}\u30d4\u30af\u30bb\u30eb)\u3002\u7e26\u5411\u304d\u306e\u753b\u50cf\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("An empty file is not allowed.", "\u7a7a\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The host could not be resolved.", "\u30db\u30b9\u30c8\u3092\u89e3\u6c7a\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002", "validators", "ja");
    Translator.add("This value does not match the expected {{ charset }} charset.", "\u3053\u306e\u5024\u306f\u4e88\u671f\u3055\u308c\u308b\u6587\u5b57\u30b3\u30fc\u30c9\uff08{{ charset }}\uff09\u3068\u7570\u306a\u308a\u307e\u3059\u3002", "validators", "ja");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "\u6709\u52b9\u306aSWIFT\u30b3\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("This form should not contain extra fields.", "\u30d5\u30a3\u30fc\u30eb\u30c9\u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u542b\u3093\u3067\u306f\u306a\u308a\u307e\u305b\u3093\u3002", "validators", "ja");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u5927\u304d\u3059\u304e\u307e\u3059\u3002\u5c0f\u3055\u306a\u30d5\u30a1\u30a4\u30eb\u3067\u518d\u5ea6\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "validators", "ja");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF\u30c8\u30fc\u30af\u30f3\u304c\u7121\u52b9\u3067\u3059\u3001\u518d\u9001\u4fe1\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "validators", "ja");
})(Translator);

(function (Translator) {
    // lb
    Translator.add("This value should be false.", "D\u00ebse W\u00e4ert sollt falsch sinn.", "validators", "lb");
    Translator.add("This value should be true.", "D\u00ebse W\u00e4ert sollt wouer sinn.", "validators", "lb");
    Translator.add("This value should be of type {{ type }}.", "D\u00ebse W\u00e4ert sollt vum Typ {{ type }} sinn.", "validators", "lb");
    Translator.add("This value should be blank.", "D\u00ebse W\u00e4ert sollt eidel sinn.", "validators", "lb");
    Translator.add("The value you selected is not a valid choice.", "D\u00ebse W\u00e4ert sollt enger vun de Wielm\u00e9iglechkeeten entspriechen.", "validators", "lb");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Et muss mindestens {{ limit }} M\u00e9iglechkeet ausgewielt ginn.|Et musse mindestens {{ limit }} M\u00e9iglechkeeten ausgewielt ginn.", "validators", "lb");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Et dierf h\u00e9chstens {{ limit }} M\u00e9iglechkeet ausgewielt ginn.|Et dierfen h\u00e9chstens {{ limit }} M\u00e9iglechkeeten ausgewielt ginn.", "validators", "lb");
    Translator.add("One or more of the given values is invalid.", "Een oder m\u00e9i vun de W\u00e4erter ass ong\u00eblteg.", "validators", "lb");
    Translator.add("The fields {{ fields }} were not expected.", "D'Felder {{ fields }} goufen net erwaart.", "validators", "lb");
    Translator.add("The fields {{ fields }} are missing.", "D'Felder {{ fields }} feelen.", "validators", "lb");
    Translator.add("This value is not a valid date.", "D\u00ebse W\u00e4ert entspr\u00e9cht kenger g\u00eblteger Datumsangab.", "validators", "lb");
    Translator.add("This value is not a valid datetime.", "D\u00ebse W\u00e4ert entspr\u00e9cht kenger g\u00eblteger Datums- an Z\u00e4itangab.", "validators", "lb");
    Translator.add("This value is not a valid email address.", "D\u00ebse W\u00e4ert ass keng g\u00eblteg Email-Adress.", "validators", "lb");
    Translator.add("The file could not be found.", "De Fichier gouf net fonnt.", "validators", "lb");
    Translator.add("The file is not readable.", "De Fichier ass net liesbar.", "validators", "lb");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "De Fichier ass ze grouss ({{ size }} {{ suffix }}). D\u00e9i zougeloosse Maximalgr\u00e9isst bedr\u00e9it {{ limit }} {{ suffix }}.", "validators", "lb");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Den Typ vum Fichier ass ong\u00eblteg ({{ type }}). Erlaabten Type sinn {{ types }}.", "validators", "lb");
    Translator.add("This value should be {{ limit }} or less.", "D\u00ebse W\u00e4ert soll m\u00e9i kleng oder gl\u00e4ich {{ limit }} sinn.", "validators", "lb");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "D\u00ebs Zeecheketten ass ze laang. Se sollt h\u00e9chstens {{ limit }} Zeechen hunn.", "validators", "lb");
    Translator.add("This value should be {{ limit }} or more.", "D\u00ebse W\u00e4ert sollt m\u00e9i grouss oder gl\u00e4ich {{ limit }} sinn.", "validators", "lb");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "D\u00ebs Zeecheketten ass ze kuerz. Se sollt mindestens {{ limit }} Zeechen hunn.", "validators", "lb");
    Translator.add("This value should not be blank.", "D\u00ebse W\u00e4ert sollt net eidel sinn.", "validators", "lb");
    Translator.add("This value should not be null.", "D\u00ebst sollt keen Null-W\u00e4ert sinn.", "validators", "lb");
    Translator.add("This value should be null.", "D\u00ebst sollt keen Null-W\u00e4ert sinn.", "validators", "lb");
    Translator.add("This value is not valid.", "D\u00ebse W\u00e4ert ass net g\u00eblteg.", "validators", "lb");
    Translator.add("This value is not a valid time.", "D\u00ebse W\u00e4ert entspr\u00e9cht kenger g\u00eblteger Z\u00e4itangab.", "validators", "lb");
    Translator.add("This value is not a valid URL.", "D\u00ebse W\u00e4ert ass keng g\u00eblteg URL.", "validators", "lb");
    Translator.add("The two values should be equal.", "B\u00e9id W\u00e4erter sollten identesch sinn.", "validators", "lb");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "De fichier ass ze grouss. D\u00e9i maximal Gr\u00e9isst dierf {{ limit }} {{ suffix }} net depass\u00e9ieren.", "validators", "lb");
    Translator.add("The file is too large.", "De Fichier ass ze grouss.", "validators", "lb");
    Translator.add("The file could not be uploaded.", "De Fichier konnt net eropgeluede ginn.", "validators", "lb");
    Translator.add("This value should be a valid number.", "D\u00ebse W\u00e4ert sollt eng g\u00eblteg Zuel sinn.", "validators", "lb");
    Translator.add("This file is not a valid image.", "D\u00ebse Fichier ass kee g\u00ebltegt Bild.", "validators", "lb");
    Translator.add("This is not a valid IP address.", "D\u00ebst ass keng g\u00eblteg IP-Adress.", "validators", "lb");
    Translator.add("This value is not a valid language.", "D\u00ebse W\u00e4ert aentspr\u00e9cht kenger g\u00eblteger Sprooch.", "validators", "lb");
    Translator.add("This value is not a valid locale.", "D\u00ebse W\u00e4ert entspr\u00e9cht kengem g\u00ebltege Gebittsschema.", "validators", "lb");
    Translator.add("This value is not a valid country.", "D\u00ebse W\u00e4ert entspr\u00e9cht kengem g\u00ebltege Land.", "validators", "lb");
    Translator.add("This value is already used.", "D\u00ebse W\u00e4ert g\u00ebtt scho benotzt.", "validators", "lb");
    Translator.add("The size of the image could not be detected.", "D'Gr\u00e9isst vum Bild konnt net detekt\u00e9iert ginn.", "validators", "lb");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "D'Breet vum Bild ass ze grouss ({{ width }}px). D\u00e9i erlaabte maximal Breet ass {{ max_width }}px.", "validators", "lb");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "D'Breet vum Bild ass ze kleng ({{ width }}px). D\u00e9i minimal Breet ass {{ min_width }}px.", "validators", "lb");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "D'H\u00e9icht vum Bild ass ze grouss ({{ height }}px). D\u00e9i erlaabte maximal H\u00e9icht ass {{ max_height }}px.", "validators", "lb");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "D'H\u00e9icht vum Bild ass ze kleng ({{ height }}px). D\u00e9i minimal H\u00e9icht ass {{ min_height }}px.", "validators", "lb");
    Translator.add("This value should be the user's current password.", "D\u00ebse W\u00e4ert sollt dem aktuelle Benotzerpasswuert entspriechen.", "validators", "lb");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "D\u00ebse W\u00e4ert sollt exactly {{ limit }} Buschtaf hunn.|D\u00ebse W\u00e4ert sollt exakt {{ limit }} Buschtawen hunn.", "validators", "lb");
    Translator.add("The file was only partially uploaded.", "De Fichier gouf just deelweis eropgelueden.", "validators", "lb");
    Translator.add("No file was uploaded.", "Et gouf kee Fichier eropgelueden.", "validators", "lb");
    Translator.add("No temporary folder was configured in php.ini.", "Et gouf keen tempor\u00e4ren Dossier an der php.ini konfigur\u00e9iert.", "validators", "lb");
    Translator.add("Cannot write temporary file to disk.", "Den tempor\u00e4re Fichier kann net gesp\u00e4ichert ginn.", "validators", "lb");
    Translator.add("A PHP extension caused the upload to fail.", "Eng PHP-Erweiderung huet den Upload verh\u00ebnnert.", "validators", "lb");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "D\u00ebs Sammlung sollt {{ limit }} oder m\u00e9i Elementer hunn.", "validators", "lb");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "D\u00ebs Sammlung sollt {{ limit }} oder manner Elementer hunn.", "validators", "lb");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "D\u00ebs Sammlung sollt exakt {{ limit }} Element hunn.|D\u00ebs Sammlung sollt exakt {{ limit }} Elementer hunn.", "validators", "lb");
    Translator.add("Invalid card number.", "Ong\u00eblteg Kaartennummer.", "validators", "lb");
    Translator.add("Unsupported card type or invalid card number.", "Net \u00ebnnerst\u00ebtzte Kaartentyp oder ong\u00eblteg Kaartennummer.", "validators", "lb");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "D\u00ebst ass keng g\u00eblteg IBAN-Kontonummer.", "validators", "lb");
    Translator.add("This value is not a valid ISBN-10.", "D\u00ebse W\u00e4ert ass keng g\u00eblteg ISBN-10.", "validators", "lb");
    Translator.add("This value is not a valid ISBN-13.", "D\u00ebse W\u00e4ert ass keng g\u00eblteg ISBN-13.", "validators", "lb");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "D\u00ebse W\u00e4ert ass weder eng g\u00eblteg ISBN-10 nach eng g\u00eblteg ISBN-13.", "validators", "lb");
    Translator.add("This value is not a valid ISSN.", "D\u00ebse W\u00e4ert ass keng g\u00eblteg ISSN.", "validators", "lb");
    Translator.add("This value is not a valid currency.", "D\u00ebse W\u00e4ert ass keng g\u00eblteg W\u00e4hrung.", "validators", "lb");
    Translator.add("This value should be equal to {{ compared_value }}.", "D\u00ebse W\u00e4ert sollt {{ compared_value }} sinn.", "validators", "lb");
    Translator.add("This value should be greater than {{ compared_value }}.", "D\u00ebse W\u00e4ert sollt m\u00e9i grouss w\u00e9i {{ compared_value }} sinn.", "validators", "lb");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "D\u00ebse W\u00e4ert sollt m\u00e9i grouss w\u00e9i oder gl\u00e4ich {{ compared_value }} sinn.", "validators", "lb");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "D\u00ebse W\u00e4ert sollt identesch si mat {{ compared_value_type }} {{ compared_value }}.", "validators", "lb");
    Translator.add("This value should be less than {{ compared_value }}.", "D\u00ebse W\u00e4ert sollt m\u00e9i kleng w\u00e9i {{ compared_value }} sinn.", "validators", "lb");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "D\u00ebse W\u00e4ert sollt m\u00e9i kleng w\u00e9i oder gl\u00e4ich {{ compared_value }} sinn.", "validators", "lb");
    Translator.add("This value should not be equal to {{ compared_value }}.", "D\u00ebse W\u00e4ert sollt net {{ compared_value }} sinn.", "validators", "lb");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "D\u00ebse W\u00e4ert sollt net identesch si mat {{ compared_value_type }} {{ compared_value }}.", "validators", "lb");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "D'S\u00e4iteverh\u00e4ltnis vum Bild ass ze grouss ({{ ratio }}). Den erlaabte Maximalw\u00e4ert ass {{ max_ratio }}.", "validators", "lb");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "D'S\u00e4iteverh\u00e4ltnis vum Bild ass ze kleng ({{ ratio }}). Den erwaarte Minimalw\u00e4ert ass {{ min_ratio }}.", "validators", "lb");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "D'Bild ass quadratesch ({{ width }}x{{ height }}px). Quadratesch Biller sinn net erlaabt.", "validators", "lb");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "D'Bild ass am Queeschformat ({{ width }}x{{ height }}px). Biller am Queeschformat sinn net erlaabt.", "validators", "lb");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "D'Bild ass am H\u00e9ichformat ({{ width }}x{{ height }}px). Biller am H\u00e9ichformat sinn net erlaabt.", "validators", "lb");
    Translator.add("An empty file is not allowed.", "En eidele Fichier ass net erlaabt.", "validators", "lb");
    Translator.add("The host could not be resolved.", "Den Domain-Numm konnt net opgel\u00e9ist ginn.", "validators", "lb");
    Translator.add("This value does not match the expected {{ charset }} charset.", "D\u00ebse W\u00e4ert entspr\u00e9cht net dem erwaarten Zeechesaz {{ charset }}.", "validators", "lb");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "D\u00ebst ass kee g\u00ebltege \"Business Identifier Code\" (BIC).", "validators", "lb");
    Translator.add("This form should not contain extra fields.", "D\u00ebs Feldergrupp sollt keng zous\u00e4tzlech Felder enthalen.", "validators", "lb");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "De gesch\u00e9cktene Fichier ass ze grouss. Versicht wann ech gelift ee m\u00e9i klenge Fichier eropzelueden.", "validators", "lb");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "Den CSRF-Token ass ong\u00eblteg. Versicht wann ech gelift de Formulaire nach eng K\u00e9ier ze sch\u00e9cken.", "validators", "lb");
})(Translator);

(function (Translator) {
    // lt
    Translator.add("This value should be false.", "Reik\u0161m\u0117 turi b\u016bti neigiama.", "validators", "lt");
    Translator.add("This value should be true.", "Reik\u0161m\u0117 turi b\u016bti teigiama.", "validators", "lt");
    Translator.add("This value should be of type {{ type }}.", "\u0160ios reik\u0161m\u0117s tipas turi b\u016bti {{ type }}.", "validators", "lt");
    Translator.add("This value should be blank.", "\u0160i reik\u0161m\u0117 turi b\u016bti tu\u0161\u010dia.", "validators", "lt");
    Translator.add("The value you selected is not a valid choice.", "Neteisingas pasirinkimas.", "validators", "lt");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Turite pasirinkti bent {{ limit }} variant\u0105.|Turite pasirinkti bent {{ limit }} variantus.|Turite pasirinkti bent {{ limit }} variant\u0173.", "validators", "lt");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Turite pasirinkti ne daugiau kaip {{ limit }} variant\u0105.|Turite pasirinkti ne daugiau kaip {{ limit }} variantus.|Turite pasirinkti ne daugiau kaip {{ limit }} variant\u0173.", "validators", "lt");
    Translator.add("One or more of the given values is invalid.", "Viena ar daugiau \u012fvest\u0173 reik\u0161mi\u0173 yra netinkamos.", "validators", "lt");
    Translator.add("This field was not expected.", "Nebuvo tikimasi \u0160is laukas.", "validators", "lt");
    Translator.add("This field is missing.", "\u0160iame lauke yra ding\u0119s.", "validators", "lt");
    Translator.add("This value is not a valid date.", "\u0160i reik\u0161m\u0117 n\u0117ra data.", "validators", "lt");
    Translator.add("This value is not a valid datetime.", "\u0160i reik\u0161m\u0117 nera data ir laikas.", "validators", "lt");
    Translator.add("This value is not a valid email address.", "\u0160i reik\u0161m\u0117 n\u0117ra tinkamas el. pa\u0161to adresas.", "validators", "lt");
    Translator.add("The file could not be found.", "Byla nerasta.", "validators", "lt");
    Translator.add("The file is not readable.", "Negalima nuskaityti bylos.", "validators", "lt");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Byla yra per didel\u0117 ({{ size }} {{ suffix }}). Maksimalus dydis {{ limit }} {{ suffix }}.", "validators", "lt");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Netinkamas bylos tipas (mime type) ({{ type }}). Galimi byl\u0173 tipai {{ types }}.", "validators", "lt");
    Translator.add("This value should be {{ limit }} or less.", "Reik\u0161m\u0117 turi b\u016bti {{ limit }} arba ma\u017eiau.", "validators", "lt");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Per didelis simboli\u0173 skai\u010dius. Turi susidaryti i\u0161 {{ limit }} arba ma\u017eiau simboli\u0173.|Per didelis simboli\u0173 skai\u010dius. Turi susidaryti i\u0161 {{ limit }} arba ma\u017eiau simboli\u0173.|Per didelis simboli\u0173 skai\u010dius. Turi susidaryti i\u0161 {{ limit }} arba ma\u017eiau simboli\u0173.", "validators", "lt");
    Translator.add("This value should be {{ limit }} or more.", "Reik\u0161m\u0117 turi b\u016bti {{ limit }} arba daugiau.", "validators", "lt");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Per ma\u017eas simboli\u0173 skai\u010dius. Turi susidaryti i\u0161 {{ limit }} arba daugiau simboli\u0173.|Per ma\u017eas simboli\u0173 skai\u010dius. Turi susidaryti i\u0161 {{ limit }} arba daugiau simboli\u0173.|Per ma\u017eas simboli\u0173 skai\u010dius. Turi susidaryti i\u0161 {{ limit }} arba daugiau simboli\u0173.", "validators", "lt");
    Translator.add("This value should not be blank.", "\u0160i reik\u0161m\u0117 negali b\u016bti tu\u0161\u010dia.", "validators", "lt");
    Translator.add("This value should not be null.", "\u0160i reik\u0161m\u0117 negali b\u016bti null.", "validators", "lt");
    Translator.add("This value should be null.", "\u0160i reik\u0161m\u0117 turi b\u016bti null.", "validators", "lt");
    Translator.add("This value is not valid.", "Netinkama reik\u0161m\u0117.", "validators", "lt");
    Translator.add("This value is not a valid time.", "\u0160i reik\u0161m\u0117 n\u0117ra laikas.", "validators", "lt");
    Translator.add("This value is not a valid URL.", "\u0160i reik\u0161m\u0117 n\u0117ra tinkamas interneto adresas.", "validators", "lt");
    Translator.add("The two values should be equal.", "Abi reik\u0161m\u0117s turi b\u016bti identi\u0161kos.", "validators", "lt");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Byla yra per didel\u0117. Maksimalus dydis yra {{ limit }} {{ suffix }}.", "validators", "lt");
    Translator.add("The file is too large.", "Byla per didel\u0117.", "validators", "lt");
    Translator.add("The file could not be uploaded.", "Byla negali b\u016bti \u012fkelta.", "validators", "lt");
    Translator.add("This value should be a valid number.", "\u0160i reik\u0161m\u0117 turi b\u016bti skai\u010dius.", "validators", "lt");
    Translator.add("This value is not a valid country.", "\u0160i reik\u0161m\u0117 n\u0117ra tinkama \u0161alis.", "validators", "lt");
    Translator.add("This file is not a valid image.", "Byla n\u0117ra paveiksl\u0117lis.", "validators", "lt");
    Translator.add("This is not a valid IP address.", "\u0160i reik\u0161m\u0117 n\u0117ra tinkamas IP adresas.", "validators", "lt");
    Translator.add("This value is not a valid language.", "\u0160i reik\u0161m\u0117 n\u0117ra tinkama kalba.", "validators", "lt");
    Translator.add("This value is not a valid locale.", "\u0160i reik\u0161m\u0117 n\u0117ra tinkama lokal\u0117.", "validators", "lt");
    Translator.add("This value is already used.", "\u0160i reik\u0161m\u0117 jau yra naudojama.", "validators", "lt");
    Translator.add("The size of the image could not be detected.", "Nepavyko nustatyti nuotraukos dyd\u017eio.", "validators", "lt");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Nuotraukos plotis per didelis ({{ width }}px). Maksimalus leid\u017eiamas plotis yra {{ max_width }}px.", "validators", "lt");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Nuotraukos plotis per ma\u017eas ({{ width }}px). Minimalus leid\u017eiamas plotis yra {{ min_width }}px.", "validators", "lt");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Nuotraukos auk\u0161tis per didelis ({{ height }}px). Maksimalus leid\u017eiamas auk\u0161tis yra {{ max_height }}px.", "validators", "lt");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Nuotraukos auk\u0161tis per ma\u017eas ({{ height }}px). Minimalus leid\u017eiamas auk\u0161tis yra {{ min_height }}px.", "validators", "lt");
    Translator.add("This value should be the user's current password.", "\u0160i reik\u0161m\u0117 turi sutapti su dabartiniu naudotojo slapta\u017eod\u017eiu.", "validators", "lt");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u0160i reik\u0161m\u0117 turi tur\u0117ti lygiai {{ limit }} simbol\u012f.|\u0160i reik\u0161m\u0117 turi tur\u0117ti lygiai {{ limit }} simbolius.|\u0160i reik\u0161m\u0117 turi tur\u0117ti lygiai {{ limit }} simboli\u0173.", "validators", "lt");
    Translator.add("The file was only partially uploaded.", "Failas buvo tik dalinai \u012fkeltas.", "validators", "lt");
    Translator.add("No file was uploaded.", "Nebuvo \u012fkelta joki\u0173 fail\u0173.", "validators", "lt");
    Translator.add("No temporary folder was configured in php.ini.", "N\u0117ra sukonfiguruoto jokio laikino katalogo php.ini faile.", "validators", "lt");
    Translator.add("Cannot write temporary file to disk.", "Nepavyko i\u0161saugoti laikino failo.", "validators", "lt");
    Translator.add("A PHP extension caused the upload to fail.", "PHP pl\u0117tinys sutrukd\u0117 failo \u012fk\u0117lim\u0105 ir jis nepavyko.", "validators", "lt");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "S\u0105ra\u0161e turi b\u016bti {{ limit }} arba daugiau \u012fra\u0161\u0173.|S\u0105ra\u0161e turi b\u016bti {{ limit }} arba daugiau \u012fra\u0161\u0173.|S\u0105ra\u0161e turi b\u016bti {{ limit }} arba daugiau \u012fra\u0161\u0173.", "validators", "lt");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "S\u0105ra\u0161e turi b\u016bti {{ limit }} arba ma\u017eiau \u012fra\u0161\u0173.|S\u0105ra\u0161e turi b\u016bti {{ limit }} arba ma\u017eiau \u012fra\u0161\u0173.|S\u0105ra\u0161e turi b\u016bti {{ limit }} arba ma\u017eiau \u012fra\u0161\u0173.", "validators", "lt");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "S\u0105ra\u0161e turi b\u016bti lygiai {{ limit }} \u012fra\u0161as.|S\u0105ra\u0161e turi b\u016bti lygiai {{ limit }} \u012fra\u0161ai.|S\u0105ra\u0161e turi b\u016bti lygiai {{ limit }} \u012fra\u0161\u0173.", "validators", "lt");
    Translator.add("Invalid card number.", "Klaidingas kortel\u0117s numeris.", "validators", "lt");
    Translator.add("Unsupported card type or invalid card number.", "Kortel\u0117s tipas nepalaikomas arba klaidingas kortel\u0117s numeris.", "validators", "lt");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u0160i rei\u0161m\u0117 neatitinka tarptautinio banko s\u0105skaitos numerio formato (IBAN).", "validators", "lt");
    Translator.add("This value is not a valid ISBN-10.", "\u0160i reik\u0161m\u0117 neatitinka ISBN-10 formato.", "validators", "lt");
    Translator.add("This value is not a valid ISBN-13.", "\u0160i reik\u0161m\u0117 neatitinka ISBN-13 formato.", "validators", "lt");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u0160i reik\u0161m\u0117 neatitinka nei ISBN-10, nei ISBN-13 formato.", "validators", "lt");
    Translator.add("This value is not a valid ISSN.", "\u0160i rei\u0161m\u0117 neatitinka ISSN formato.", "validators", "lt");
    Translator.add("This value is not a valid currency.", "Netinkamas valiutos formatas.", "validators", "lt");
    Translator.add("This value should be equal to {{ compared_value }}.", "\u0160i reik\u0161m\u0117 turi b\u016bti lygi {{ compared_value }}.", "validators", "lt");
    Translator.add("This value should be greater than {{ compared_value }}.", "\u0160i reik\u0161m\u0117 turi b\u016bti didesn\u0117 u\u017e {{ compared_value }}.", "validators", "lt");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "\u0160i reik\u0161m\u0117 turi b\u016bti didesn\u0117 u\u017e arba lygi {{ compared_value }}.", "validators", "lt");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0160i reik\u0161m\u0117 turi b\u016bti identi\u0161ka {{ compared_value_type }} {{ compared_value }}.", "validators", "lt");
    Translator.add("This value should be less than {{ compared_value }}.", "\u0160i reik\u0161m\u0117 turi b\u016bti ma\u017eesn\u0117 u\u017e {{ compared_value }}.", "validators", "lt");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "\u0160i reik\u0161m\u0117 turi b\u016bti ma\u017eesn\u0117 u\u017e arba lygi {{ compared_value }}.", "validators", "lt");
    Translator.add("This value should not be equal to {{ compared_value }}.", "\u0160i reik\u0161m\u0117 neturi b\u016bti lygi {{ compared_value }}.", "validators", "lt");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0160i reik\u0161m\u0117 neturi b\u016bti identi\u0161ka {{ compared_value_type }} {{ compared_value }}.", "validators", "lt");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "Nuotraukos santykis yra per didelis ({{ ratio }}). Did\u017eiausias leistinas santykis yra {{ max_ratio }}.", "validators", "lt");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "Nuotraukos santykis yra per ma\u017eas ({{ ratio }}). Ma\u017eiausias leistinas santykis yra {{ min_ratio }}.", "validators", "lt");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "Nuotrauka yra kvadratin\u0117 ({{ width }}x{{ height }}px). Kvadratin\u0117s nuotraukos n\u0117ra leistinos.", "validators", "lt");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "Nuotrauka orientuota \u012f plot\u012f ({{ width }}x{{ height }}px). Nuotraukos orientuotos \u012f plot\u012f n\u0117ra leistinos.", "validators", "lt");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "Nuotrauka orientuota \u012f auk\u0161t\u012f ({{ width }}x{{ height }}px). Nuotraukos orientuotos \u012f auk\u0161t\u012f n\u0117ra leistinos.", "validators", "lt");
    Translator.add("An empty file is not allowed.", "Failas negali b\u016bti tu\u0161\u010dias.", "validators", "lt");
    Translator.add("This form should not contain extra fields.", "Forma negali tur\u0117ti papildom\u0173 lauk\u0173.", "validators", "lt");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u012ekelta byla yra per didel\u0117. bandykite \u012fkelti ma\u017eesn\u0119.", "validators", "lt");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF kodas nepriimtinas. Bandykite si\u0173sti formos u\u017eklaus\u0105 dar kart\u0105.", "validators", "lt");
})(Translator);

(function (Translator) {
    // lv
    Translator.add("This form should not contain extra fields.", "\u0160aj\u0101 veidlap\u0101 nevajadz\u0113tu b\u016bt papildus ievades laukiem.", "validators", "lv");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Aug\u0161upiel\u0101d\u0113t\u0101 faila izm\u0113rs bija par lielu. L\u016bdzu m\u0113\u0123iniet aug\u0161upiel\u0101d\u0113t maz\u0101ka izm\u0113ra failu.", "validators", "lv");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "Dotais CSRF talons nav der\u012bgs. L\u016bdzu m\u0113\u0123iniet v\u0113lreiz iesniegt veidlapu.", "validators", "lv");
})(Translator);

(function (Translator) {
    // mn
    Translator.add("This value should be false.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043e\u0439.", "validators", "mn");
    Translator.add("This value should be true.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u04af\u043d\u044d\u043d \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043e\u0439.", "validators", "mn");
    Translator.add("This value should be of type {{ type }}.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430  {{ type }} -\u043d \u0442\u04e9\u0440\u04e9\u043b \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043e\u0439.", "validators", "mn");
    Translator.add("This value should be blank.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u0445\u043e\u043e\u0441\u043e\u043d \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043e\u0439.", "validators", "mn");
    Translator.add("The value you selected is not a valid choice.", "\u0421\u043e\u043d\u0433\u043e\u0441\u043e\u043d \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u0425\u0430\u043c\u0433\u0438\u0439\u043d \u0431\u0430\u0433\u0430\u0434\u0430\u0430 {{ limit }} \u0443\u0442\u0433\u0430 \u0441\u043e\u043d\u0433\u043e\u0433\u0434\u0441\u043e\u043d \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043e\u0439.", "validators", "mn");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u0425\u0430\u043c\u0433\u0438\u0439\u043d \u0438\u0445\u0434\u044d\u044d {{ limit }} \u0443\u0442\u0433\u0430 \u0441\u043e\u043d\u0433\u043e\u0433\u0434\u043e\u0445 \u0431\u043e\u043b\u043e\u043c\u0436\u0442\u043e\u0439.", "validators", "mn");
    Translator.add("One or more of the given values is invalid.", "\u04e8\u0433\u04e9\u0433\u0434\u0441\u04e9\u043d \u043d\u044d\u0433 \u044d\u0441\u0432\u044d\u043b \u043d\u044d\u0433\u044d\u044d\u0441 \u043e\u043b\u043e\u043d \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This field was not expected.", "\u042d\u043d\u044d \u0442\u0430\u043b\u0431\u0430\u0440 \u043d\u044c \u0445\u04af\u043b\u044d\u044d\u0433\u0434\u044d\u0436 \u0431\u0430\u0439\u0441\u0430\u043d \u044e\u043c.", "validators", "mn");
    Translator.add("This field is missing.", "\u042d\u043d\u044d \u0442\u0430\u043b\u0431\u0430\u0440 \u043d\u044c \u0430\u043b\u0433\u0430 \u0431\u043e\u043b\u0441\u043e\u043d \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This value is not a valid date.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 date \u0442\u04e9\u0440\u04e9\u043b \u0431\u0430\u0439\u043d\u0430 .", "validators", "mn");
    Translator.add("This value is not a valid datetime.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0446\u0430\u0433 \u0442\u04e9\u0440\u04e9\u043b \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This value is not a valid email address.", "\u0418-\u043c\u0430\u0439\u043b \u0445\u0430\u044f\u0433 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("The file could not be found.", "\u0424\u0430\u0439\u043b \u043e\u043b\u0434\u0441\u043e\u043d\u0433\u04af\u0439.", "validators", "mn");
    Translator.add("The file is not readable.", "\u0424\u0430\u0439\u043b \u0443\u043d\u0448\u0438\u0433\u0434\u0430\u0445\u0443\u0439\u0446 \u0431\u0438\u0448 \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0424\u0430\u0439\u043b \u0445\u044d\u0442\u044d\u0440\u0445\u0438\u0439 \u0442\u043e\u043c \u0431\u0430\u0439\u043d\u0430 ({{ size }} {{ suffix }}). \u0417\u04e9\u0432\u0448\u04e9\u04e9\u0440\u04e9\u0433\u0434\u04e9\u0445 \u0434\u044d\u044d\u0434 \u0445\u044d\u043c\u0436\u044d\u044d  {{ limit }} {{ suffix }} \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "\u0424\u0430\u0439\u043b\u044b\u043d MIME-\u0442\u04e9\u0440\u04e9\u043b \u043d\u044c \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043d\u0430 ({{ type }}). \u0417\u04e9\u0432\u0448\u04e9\u04e9\u0440\u04e9\u0433\u0434\u04e9\u0445 MIME-\u0442\u04e9\u0440\u043b\u04af\u04af\u0434 {{ types }}.", "validators", "mn");
    Translator.add("This value should be {{ limit }} or less.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430  {{ limit }} \u044e\u043c\u0443\u0443 \u044d\u0441\u0432\u044d\u043b \u0431\u0430\u0433\u0430 \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u0445\u044d\u0442\u044d\u0440\u0445\u0438\u0439 \u0443\u0440\u0442 \u0431\u0430\u0439\u043d\u0430. {{ limit }} \u0442\u044d\u043c\u0434\u044d\u0433\u0442\u0438\u0439\u043d \u0443\u0440\u0442\u0442\u0430\u0439 \u044e\u043c\u0443\u0443 \u044d\u0441\u0432\u044d\u043b \u0431\u0430\u0433\u0430 \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This value should be {{ limit }} or more.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 {{ limit }} \u044e\u043c\u0443\u0443 \u044d\u0441\u0432\u044d\u043b \u0438\u0445 \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u0445\u044d\u0442\u044d\u0440\u0445\u0438\u0439 \u0431\u043e\u0433\u0438\u043d\u043e \u0431\u0430\u0439\u043d\u0430. {{ limit }} \u0442\u044d\u043c\u0434\u044d\u0433\u0442 \u044d\u0441\u0432\u044d\u043b \u0438\u0445 \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This value should not be blank.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u0445\u043e\u043e\u0441\u043e\u043d \u0431\u0430\u0439\u0436 \u0431\u043e\u043b\u043e\u0445\u0433\u04af\u0439.", "validators", "mn");
    Translator.add("This value should not be null.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 null \u0431\u0430\u0439\u0436 \u0431\u043e\u043b\u043e\u0445\u0433\u04af\u0439.", "validators", "mn");
    Translator.add("This value should be null.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 null \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This value is not valid.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This value is not a valid time.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0446\u0430\u0433 \u0442\u04e9\u0440\u04e9\u043b \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This value is not a valid URL.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 URL \u0431\u0430\u0439\u043d\u0430 .", "validators", "mn");
    Translator.add("The two values should be equal.", "\u0425\u043e\u0451\u0440 \u0443\u0442\u0433\u0443\u0443\u0434 \u0438\u0436\u0438\u043b \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043e\u0439.", "validators", "mn");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0424\u0430\u0439\u043b \u0445\u044d\u0442\u044d\u0440\u0445\u0438\u0439 \u0442\u043e\u043c \u0431\u0430\u0439\u043d\u0430. \u0417\u04e9\u0432\u0448\u04e9\u04e9\u0440\u04e9\u0433\u0434\u04e9\u0445 \u0434\u044d\u044d\u0434 \u0445\u044d\u043c\u0436\u044d\u044d \u043d\u044c {{ limit }} {{ suffix }} \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("The file is too large.", "\u0424\u0430\u0439\u043b \u0445\u044d\u0442\u044d\u0440\u0445\u0438\u0439 \u0442\u043e\u043c \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("The file could not be uploaded.", "\u0424\u0430\u0439\u043b upload \u0445\u0438\u0439\u0433\u0434\u0441\u044d\u043d\u0433\u04af\u0439.", "validators", "mn");
    Translator.add("This value should be a valid number.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u0437\u04e9\u0432\u0445\u04e9\u043d \u0442\u043e\u043e \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This value is not a valid country.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u04af\u043d\u044d\u043d \u0431\u043e\u0434\u0438\u0442 \u0443\u043b\u0441 \u0431\u0438\u0448 \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This file is not a valid image.", "\u0424\u0430\u0439\u043b \u0437\u0443\u0440\u0430\u0433 \u0431\u0438\u0448 \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This is not a valid IP address.", "IP \u0445\u0430\u044f\u0433 \u0437\u04e9\u0432 \u0431\u0438\u0448 \u0431\u0430\u0439\u043d\u0430.", "validators", "mn");
    Translator.add("This value is not a valid language.", "\u042d\u043d\u044d \u0443\u0442\u0433\u0430 \u04af\u043d\u044d\u043d \u0437\u04e9\u0432 \u0445\u044d\u043b \u0431\u0438\u0448 \u0431\u0430\u0439\u043d\u0430 .", "validators", "mn");
    Translator.add("This form should not contain extra fields.", "\u0424\u043e\u0440\u043c \u043d\u044d\u043c\u044d\u043b\u0442 \u0442\u0430\u043b\u0431\u0430\u0440 \u0431\u0430\u0433\u0442\u0430\u0430\u0445 \u0431\u043e\u043b\u043e\u043c\u0436\u0433\u04af\u0439.", "validators", "mn");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Upload \u0445\u0438\u0439\u0441\u044d\u043d \u0444\u0430\u0439\u043b \u0445\u044d\u0442\u044d\u0440\u0445\u0438\u0439 \u0442\u043e\u043c \u0431\u0430\u0439\u043d\u0430. \u0411\u0430\u0433\u0430 \u0445\u044d\u043c\u0436\u044d\u044d\u0442\u044d\u0439 \u0444\u0430\u0439\u043b \u043e\u0440\u0443\u0443\u043b\u043d\u0430 \u0443\u0443.", "validators", "mn");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF token \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043d\u0430. \u0424\u043e\u0440\u043c\u043e\u043e \u0434\u0430\u0445\u0438\u043d \u0438\u043b\u0433\u044d\u044d\u043d\u044d \u04af\u04af.", "validators", "mn");
})(Translator);

(function (Translator) {
    // nl
    Translator.add("This value should be false.", "Deze waarde mag niet waar zijn.", "validators", "nl");
    Translator.add("This value should be true.", "Deze waarde moet waar zijn.", "validators", "nl");
    Translator.add("This value should be of type {{ type }}.", "Deze waarde moet van het type {{ type }} zijn.", "validators", "nl");
    Translator.add("This value should be blank.", "Deze waarde moet leeg zijn.", "validators", "nl");
    Translator.add("The value you selected is not a valid choice.", "De geselecteerde waarde is geen geldige optie.", "validators", "nl");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Selecteer ten minste {{ limit }} optie.|Selecteer ten minste {{ limit }} opties.", "validators", "nl");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Selecteer maximaal {{ limit }} optie.|Selecteer maximaal {{ limit }} opties.", "validators", "nl");
    Translator.add("One or more of the given values is invalid.", "E\u00e9n of meer van de ingegeven waarden zijn ongeldig.", "validators", "nl");
    Translator.add("This field was not expected.", "Dit veld was niet verwacht.", "validators", "nl");
    Translator.add("This field is missing.", "Dit veld ontbreekt.", "validators", "nl");
    Translator.add("This value is not a valid date.", "Deze waarde is geen geldige datum.", "validators", "nl");
    Translator.add("This value is not a valid datetime.", "Deze waarde is geen geldige datum en tijd.", "validators", "nl");
    Translator.add("This value is not a valid email address.", "Deze waarde is geen geldig e-mailadres.", "validators", "nl");
    Translator.add("The file could not be found.", "Het bestand is niet gevonden.", "validators", "nl");
    Translator.add("The file is not readable.", "Het bestand is niet leesbaar.", "validators", "nl");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Het bestand is te groot ({{ size }} {{ suffix }}). Toegestane maximum grootte is {{ limit }} {{ suffix }}.", "validators", "nl");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Het mime type van het bestand is ongeldig ({{ type }}). Toegestane mime types zijn {{ types }}.", "validators", "nl");
    Translator.add("This value should be {{ limit }} or less.", "Deze waarde moet {{ limit }} of minder zijn.", "validators", "nl");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Deze waarde is te lang. Hij mag maximaal {{ limit }} teken bevatten.|Deze waarde is te lang. Hij mag maximaal {{ limit }} tekens bevatten.", "validators", "nl");
    Translator.add("This value should be {{ limit }} or more.", "Deze waarde moet {{ limit }} of meer zijn.", "validators", "nl");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Deze waarde is te kort. Hij moet tenminste {{ limit }} teken bevatten.|Deze waarde is te kort. Hij moet tenminste {{ limit }} tekens bevatten.", "validators", "nl");
    Translator.add("This value should not be blank.", "Deze waarde mag niet leeg zijn.", "validators", "nl");
    Translator.add("This value should not be null.", "Deze waarde mag niet null zijn.", "validators", "nl");
    Translator.add("This value should be null.", "Deze waarde moet null zijn.", "validators", "nl");
    Translator.add("This value is not valid.", "Deze waarde is ongeldig.", "validators", "nl");
    Translator.add("This value is not a valid time.", "Deze waarde is geen geldige tijd.", "validators", "nl");
    Translator.add("This value is not a valid URL.", "Deze waarde is geen geldige URL.", "validators", "nl");
    Translator.add("The two values should be equal.", "De twee waarden moeten gelijk zijn.", "validators", "nl");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Het bestand is te groot. Toegestane maximum grootte is {{ limit }} {{ suffix }}.", "validators", "nl");
    Translator.add("The file is too large.", "Het bestand is te groot.", "validators", "nl");
    Translator.add("The file could not be uploaded.", "Het bestand kon niet ge\u00fcpload worden.", "validators", "nl");
    Translator.add("This value should be a valid number.", "Deze waarde moet een geldig getal zijn.", "validators", "nl");
    Translator.add("This file is not a valid image.", "Dit bestand is geen geldige afbeelding.", "validators", "nl");
    Translator.add("This is not a valid IP address.", "Dit is geen geldig IP-adres.", "validators", "nl");
    Translator.add("This value is not a valid language.", "Deze waarde representeert geen geldige taal.", "validators", "nl");
    Translator.add("This value is not a valid locale.", "Deze waarde representeert geen geldige lokalisering.", "validators", "nl");
    Translator.add("This value is not a valid country.", "Deze waarde representeert geen geldig land.", "validators", "nl");
    Translator.add("This value is already used.", "Deze waarde wordt al gebruikt.", "validators", "nl");
    Translator.add("The size of the image could not be detected.", "De grootte van de afbeelding kon niet bepaald worden.", "validators", "nl");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "De afbeelding is te breed ({{ width }}px). De maximaal toegestane breedte is {{ max_width }}px.", "validators", "nl");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "De afbeelding is niet breed genoeg ({{ width }}px). De minimaal verwachte breedte is {{ min_width }}px.", "validators", "nl");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "De afbeelding is te hoog ({{ height }}px). De maximaal toegestane hoogte is {{ max_height }}px.", "validators", "nl");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "De afbeelding is niet hoog genoeg ({{ height }}px). De minimaal verwachte hoogte is {{ min_height }}px.", "validators", "nl");
    Translator.add("This value should be the user's current password.", "Deze waarde moet het huidige wachtwoord van de gebruiker zijn.", "validators", "nl");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Deze waarde moet exact {{ limit }} teken lang zijn.|Deze waarde moet exact {{ limit }} tekens lang zijn.", "validators", "nl");
    Translator.add("The file was only partially uploaded.", "Het bestand is niet geheel ge\u00fcpload.", "validators", "nl");
    Translator.add("No file was uploaded.", "Er is geen bestand ge\u00fcpload.", "validators", "nl");
    Translator.add("No temporary folder was configured in php.ini.", "Er is geen tijdelijke map geconfigureerd in php.ini.", "validators", "nl");
    Translator.add("Cannot write temporary file to disk.", "Kan het tijdelijke bestand niet wegschrijven op disk.", "validators", "nl");
    Translator.add("A PHP extension caused the upload to fail.", "De upload is mislukt vanwege een PHP-extensie.", "validators", "nl");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Deze collectie moet {{ limit }} element of meer bevatten.|Deze collectie moet {{ limit }} elementen of meer bevatten.", "validators", "nl");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Deze collectie moet {{ limit }} element of minder bevatten.|Deze collectie moet {{ limit }} elementen of minder bevatten.", "validators", "nl");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Deze collectie moet exact {{ limit }} element bevatten.|Deze collectie moet exact {{ limit }} elementen bevatten.", "validators", "nl");
    Translator.add("Invalid card number.", "Ongeldig creditcardnummer.", "validators", "nl");
    Translator.add("Unsupported card type or invalid card number.", "Niet-ondersteund type creditcard of ongeldig nummer.", "validators", "nl");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Dit is geen geldig internationaal bankrekeningnummer (IBAN).", "validators", "nl");
    Translator.add("This value is not a valid ISBN-10.", "Deze waarde is geen geldige ISBN-10.", "validators", "nl");
    Translator.add("This value is not a valid ISBN-13.", "Deze waarde is geen geldige ISBN-13.", "validators", "nl");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Deze waarde is geen geldige ISBN-10 of ISBN-13 waarde.", "validators", "nl");
    Translator.add("This value is not a valid ISSN.", "Deze waarde is geen geldige ISSN waarde.", "validators", "nl");
    Translator.add("This value is not a valid currency.", "Deze waarde is geen geldige valuta.", "validators", "nl");
    Translator.add("This value should be equal to {{ compared_value }}.", "Deze waarde moet gelijk zijn aan {{ compared_value }}.", "validators", "nl");
    Translator.add("This value should be greater than {{ compared_value }}.", "Deze waarde moet groter zijn dan {{ compared_value }}.", "validators", "nl");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Deze waarde moet groter dan of gelijk aan {{ compared_value }} zijn.", "validators", "nl");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Deze waarde moet identiek zijn aan {{ compared_value_type }} {{ compared_value }}.", "validators", "nl");
    Translator.add("This value should be less than {{ compared_value }}.", "Deze waarde moet minder zijn dan {{ compared_value }}.", "validators", "nl");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Deze waarde moet minder dan of gelijk aan {{ compared_value }} zijn.", "validators", "nl");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Deze waarde mag niet gelijk zijn aan {{ compared_value }}.", "validators", "nl");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Deze waarde mag niet identiek zijn aan {{ compared_value_type }} {{ compared_value }}.", "validators", "nl");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "De afbeeldingsverhouding is te groot ({{ ratio }}). Maximale verhouding is {{ max_ratio }}.", "validators", "nl");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "De afbeeldingsverhouding is te klein ({{ ratio }}). Minimale verhouding is {{ min_ratio }}.", "validators", "nl");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "De afbeelding is vierkant ({{ width }}x{{ height }}px). Vierkante afbeeldingen zijn niet toegestaan.", "validators", "nl");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "De afbeelding is liggend ({{ width }}x{{ height }}px). Liggende afbeeldingen zijn niet toegestaan.", "validators", "nl");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "De afbeelding is staand ({{ width }}x{{ height }}px). Staande afbeeldingen zijn niet toegestaan.", "validators", "nl");
    Translator.add("An empty file is not allowed.", "Lege bestanden zijn niet toegestaan.", "validators", "nl");
    Translator.add("This value does not match the expected {{ charset }} charset.", "Deze waarde is niet in de verwachte tekencodering {{ charset }}.", "validators", "nl");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "Dit is geen geldige bedrijfsidentificatiecode (BIC\/SWIFT).", "validators", "nl");
    Translator.add("This form should not contain extra fields.", "Dit formulier mag geen extra velden bevatten.", "validators", "nl");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Het ge\u00fcploade bestand is te groot. Probeer een kleiner bestand te uploaden.", "validators", "nl");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "De CSRF-token is ongeldig. Probeer het formulier opnieuw te versturen.", "validators", "nl");
})(Translator);

(function (Translator) {
    // nn
    Translator.add("This value should be false.", "Verdien skulle ha vore tom\/nei.", "validators", "nn");
    Translator.add("This value should be true.", "Verdien skulla ha vore satt\/ja.", "validators", "nn");
    Translator.add("This value should be of type {{ type }}.", "Verdien m\u00e5 vere av typen {{ type }}.", "validators", "nn");
    Translator.add("This value should be blank.", "Verdien skal vere blank.", "validators", "nn");
    Translator.add("The value you selected is not a valid choice.", "Verdien du valgte er ikkje gyldig.", "validators", "nn");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Du m\u00e5 velge minst {{ limit }} valg.", "validators", "nn");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Du kan maksimalt gjere {{ limit }} valg.", "validators", "nn");
    Translator.add("One or more of the given values is invalid.", "Ein eller fleire av dei opplyste verdiane er ugyldige.", "validators", "nn");
    Translator.add("This field was not expected.", "Dette feltet var ikke forventet.", "validators", "nn");
    Translator.add("This field is missing.", "Dette feltet mangler.", "validators", "nn");
    Translator.add("This value is not a valid date.", "Verdien er ikkje ein gyldig dato.", "validators", "nn");
    Translator.add("This value is not a valid datetime.", "Verdien er ikkje ein gyldig dato og tid.", "validators", "nn");
    Translator.add("This value is not a valid email address.", "Verdien er ikkje ei gyldig e-postadresse.", "validators", "nn");
    Translator.add("The file could not be found.", "Fila kunne ikkje finnes.", "validators", "nn");
    Translator.add("The file is not readable.", "Fila kan ikkje lesast.", "validators", "nn");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Fila er for stor ({{ size }} {{ suffix }}). Tillatt maksimal st\u00f8rrelse er {{ limit }} {{ suffix }}.", "validators", "nn");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Mime-typen av fila er ugyldig ({{ type }}). Tillatte mime-typar er {{ types }}.", "validators", "nn");
    Translator.add("This value should be {{ limit }} or less.", "Verdien m\u00e5 vere {{ limit }} eller mindre.", "validators", "nn");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Verdien er for lang. Den m\u00e5 vere {{ limit }} bokstavar eller mindre.", "validators", "nn");
    Translator.add("This value should be {{ limit }} or more.", "Verdien m\u00e5 vere {{ limit }} eller meir.", "validators", "nn");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Verdien er for kort. Den m\u00e5 ha {{ limit }} teikn eller fleire.", "validators", "nn");
    Translator.add("This value should not be blank.", "Verdien m\u00e5 ikkje vere blank.", "validators", "nn");
    Translator.add("This value should not be null.", "Verdien m\u00e5 ikkje vere tom (null).", "validators", "nn");
    Translator.add("This value should be null.", "Verdien m\u00e5 vere tom (null).", "validators", "nn");
    Translator.add("This value is not valid.", "Verdien er ikkje gyldig.", "validators", "nn");
    Translator.add("This value is not a valid time.", "Verdien er ikkje gyldig tidseining.", "validators", "nn");
    Translator.add("This value is not a valid URL.", "Verdien er ikkje ein gyldig URL.", "validators", "nn");
    Translator.add("The two values should be equal.", "Dei to verdiane m\u00e5 vere like.", "validators", "nn");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Fila er for stor. Den maksimale storleik er {{ limit }} {{ suffix }}.", "validators", "nn");
    Translator.add("The file is too large.", "Fila er for stor.", "validators", "nn");
    Translator.add("The file could not be uploaded.", "Fila kunne ikkje bli lasta opp.", "validators", "nn");
    Translator.add("This value should be a valid number.", "Verdien m\u00e5 vere eit gyldig tal.", "validators", "nn");
    Translator.add("This file is not a valid image.", "Fila er ikkje eit gyldig bilete.", "validators", "nn");
    Translator.add("This is not a valid IP address.", "Dette er ikkje ei gyldig IP-adresse.", "validators", "nn");
    Translator.add("This value is not a valid language.", "Verdien er ikkje eit gyldig spr\u00e5k.", "validators", "nn");
    Translator.add("This value is not a valid locale.", "Verdien er ikkje ein gyldig lokalitet (spr\u00e5k\/region).", "validators", "nn");
    Translator.add("This value is not a valid country.", "Verdien er ikkje eit gyldig land.", "validators", "nn");
    Translator.add("This value is already used.", "Verdien er allereie i bruk.", "validators", "nn");
    Translator.add("The size of the image could not be detected.", "Storleiken p\u00e5 biletet kunne ikkje oppdagast.", "validators", "nn");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Biletbreidda er for stor, ({{ width }} pikslar). Tillatt maksimumsbreidde er {{ max_width }} pikslar.", "validators", "nn");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Biletbreidda er for liten, ({{ width }} pikslar). Forventa minimumsbreidde er {{ min_width }} pikslar.", "validators", "nn");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Bileth\u00f8gda er for stor, ({{ height }} pikslar). Tillatt maksimumsh\u00f8gde er {{ max_height }} pikslar.", "validators", "nn");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Billeth\u00f8gda er for l\u00e5g, ({{ height }} pikslar). Forventa minimumsh\u00f8gde er {{ min_height }} pikslar.", "validators", "nn");
    Translator.add("This value should be the user's current password.", "Verdien m\u00e5 vere brukaren sitt noverande passord.", "validators", "nn");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Verdien m\u00e5 vere n\u00f8yaktig {{ limit }} teikn.", "validators", "nn");
    Translator.add("The file was only partially uploaded.", "Fila vart kun delvis opplasta.", "validators", "nn");
    Translator.add("No file was uploaded.", "Inga fil vart lasta opp.", "validators", "nn");
    Translator.add("No temporary folder was configured in php.ini.", "F\u00f8rebels mappe (tmp) er ikkje konfigurert i php.ini.", "validators", "nn");
    Translator.add("Cannot write temporary file to disk.", "Kan ikkje skrive f\u00f8rebels fil til disk.", "validators", "nn");
    Translator.add("A PHP extension caused the upload to fail.", "Ei PHP-udviding for\u00e5rsaka feil under opplasting.", "validators", "nn");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Denne samlinga m\u00e5 innehalde {{ limit }} element eller meir.|Denne samlinga m\u00e5 innehalde {{ limit }} element eller meir.", "validators", "nn");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Denne samlinga m\u00e5 innehalde {{ limit }} element eller f\u00e6rre.|Denne samlinga m\u00e5 innehalde {{ limit }} element eller f\u00e6rre.", "validators", "nn");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Denne samlinga m\u00e5 innehalde n\u00f8yaktig {{ limit }} element.|Denne samlinga m\u00e5 innehalde n\u00f8yaktig {{ limit }} element.", "validators", "nn");
    Translator.add("Invalid card number.", "Ugyldig kortnummer.", "validators", "nn");
    Translator.add("Unsupported card type or invalid card number.", "Korttypen er ikkje st\u00f8tta eller ugyldig kortnummer.", "validators", "nn");
})(Translator);

(function (Translator) {
    // no
    Translator.add("This value should be false.", "Verdien m\u00e5 v\u00e6re usann.", "validators", "no");
    Translator.add("This value should be true.", "Verdien m\u00e5 v\u00e6re sann.", "validators", "no");
    Translator.add("This value should be of type {{ type }}.", "Verdien m\u00e5 v\u00e6re av typen {{ type }}.", "validators", "no");
    Translator.add("This value should be blank.", "Verdien m\u00e5 v\u00e6re blank.", "validators", "no");
    Translator.add("The value you selected is not a valid choice.", "Den valgte verdien er ikke gyldig.", "validators", "no");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Du m\u00e5 velge minst {{ limit }} valg.", "validators", "no");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Du kan maks velge {{ limit }} valg.", "validators", "no");
    Translator.add("One or more of the given values is invalid.", "En eller flere av de oppgitte verdiene er ugyldige.", "validators", "no");
    Translator.add("This field was not expected.", "Dette feltet var ikke forventet.", "validators", "no");
    Translator.add("This field is missing.", "Dette feltet mangler.", "validators", "no");
    Translator.add("This value is not a valid date.", "Verdien er ikke en gyldig dato.", "validators", "no");
    Translator.add("This value is not a valid datetime.", "Verdien er ikke en gyldig dato\/tid.", "validators", "no");
    Translator.add("This value is not a valid email address.", "Verdien er ikke en gyldig e-postadresse.", "validators", "no");
    Translator.add("The file could not be found.", "Filen kunne ikke finnes.", "validators", "no");
    Translator.add("The file is not readable.", "Filen er ikke lesbar.", "validators", "no");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Filen er for stor ({{ size }} {{ suffix }}). Tilatte maksimale st\u00f8rrelse {{ limit }} {{ suffix }}.", "validators", "no");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Mimetypen av filen er ugyldig ({{ type }}). Tilatte mimetyper er {{ types }}.", "validators", "no");
    Translator.add("This value should be {{ limit }} or less.", "Verdien m\u00e5 v\u00e6re {{ limit }} tegn lang eller mindre.", "validators", "no");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Verdien er for lang. Den m\u00e5 ha {{ limit }} tegn eller mindre.", "validators", "no");
    Translator.add("This value should be {{ limit }} or more.", "Verdien m\u00e5 v\u00e6re {{ limit }} eller mer.", "validators", "no");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Verdien er for kort. Den m\u00e5 ha {{ limit }} tegn eller flere.", "validators", "no");
    Translator.add("This value should not be blank.", "Verdien m\u00e5 ikke v\u00e6re blank.", "validators", "no");
    Translator.add("This value should not be null.", "Verdien m\u00e5 ikke v\u00e6re tom (null).", "validators", "no");
    Translator.add("This value should be null.", "Verdien m\u00e5 v\u00e6re tom (null).", "validators", "no");
    Translator.add("This value is not valid.", "Verdien er ikke gyldig.", "validators", "no");
    Translator.add("This value is not a valid time.", "Verdien er ikke en gyldig tid.", "validators", "no");
    Translator.add("This value is not a valid URL.", "Verdien er ikke en gyldig URL.", "validators", "no");
    Translator.add("The two values should be equal.", "Verdiene m\u00e5 v\u00e6re identiske.", "validators", "no");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Filen er for stor. Den maksimale st\u00f8rrelsen er {{ limit }} {{ suffix }}.", "validators", "no");
    Translator.add("The file is too large.", "Filen er for stor.", "validators", "no");
    Translator.add("The file could not be uploaded.", "Filen kunne ikke lastes opp.", "validators", "no");
    Translator.add("This value should be a valid number.", "Verdien m\u00e5 v\u00e6re et gyldig tall.", "validators", "no");
    Translator.add("This file is not a valid image.", "Denne filen er ikke et gyldig bilde.", "validators", "no");
    Translator.add("This is not a valid IP address.", "Dette er ikke en gyldig IP adresse.", "validators", "no");
    Translator.add("This value is not a valid language.", "Verdien er ikke et gyldig spr\u00e5k.", "validators", "no");
    Translator.add("This value is not a valid locale.", "Verdien er ikke en gyldig lokalitet.", "validators", "no");
    Translator.add("This value is not a valid country.", "Verdien er ikke et gyldig navn p\u00e5 land.", "validators", "no");
    Translator.add("This value is already used.", "Verdien er allerede brukt.", "validators", "no");
    Translator.add("The size of the image could not be detected.", "Bildest\u00f8rrelsen kunne ikke oppdages.", "validators", "no");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Bildebredden er for stor ({{ width }} piksler). Tillatt maksimumsbredde er {{ max_width }} piksler.", "validators", "no");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Bildebredden er for liten ({{ width }} piksler). Forventet minimumsbredde er {{ min_width }} piksler.", "validators", "no");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Bildeh\u00f8yden er for stor ({{ height }} piksler). Tillatt maksimumsh\u00f8yde er {{ max_height }} piksler.", "validators", "no");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Bildeh\u00f8yden er for liten ({{ height }} piksler). Forventet minimumsh\u00f8yde er {{ min_height }} piksler.", "validators", "no");
    Translator.add("This value should be the user's current password.", "Verdien m\u00e5 v\u00e6re brukerens sitt n\u00e5v\u00e6rende passord.", "validators", "no");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Verdien m\u00e5 v\u00e6re n\u00f8yaktig {{ limit }} tegn.", "validators", "no");
    Translator.add("The file was only partially uploaded.", "Filen var kun delvis opplastet.", "validators", "no");
    Translator.add("No file was uploaded.", "Ingen fil var lastet opp.", "validators", "no");
    Translator.add("No temporary folder was configured in php.ini.", "Den midlertidige mappen (tmp) er ikke konfigurert i php.ini.", "validators", "no");
    Translator.add("Cannot write temporary file to disk.", "Kan ikke skrive midlertidig fil til disk.", "validators", "no");
    Translator.add("A PHP extension caused the upload to fail.", "En PHP-utvidelse for\u00e5rsaket en feil under opplasting.", "validators", "no");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Denne samlingen m\u00e5 inneholde {{ limit }} element eller flere.|Denne samlingen m\u00e5 inneholde {{ limit }} elementer eller flere.", "validators", "no");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Denne samlingen m\u00e5 inneholde {{ limit }} element eller f\u00e6rre.|Denne samlingen m\u00e5 inneholde {{ limit }} elementer eller f\u00e6rre.", "validators", "no");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Denne samlingen m\u00e5 inneholde n\u00f8yaktig {{ limit }} element.|Denne samlingen m\u00e5 inneholde n\u00f8yaktig {{ limit }} elementer.", "validators", "no");
    Translator.add("Invalid card number.", "Ugyldig kortnummer.", "validators", "no");
    Translator.add("Unsupported card type or invalid card number.", "Korttypen er ikke st\u00f8ttet eller ugyldig kortnummer.", "validators", "no");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Dette er ikke en gyldig IBAN.", "validators", "no");
    Translator.add("This value is not a valid ISBN-10.", "Verdien er ikke en gyldig ISBN-10.", "validators", "no");
    Translator.add("This value is not a valid ISBN-13.", "Verdien er ikke en gyldig ISBN-13.", "validators", "no");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Verdien er hverken en gyldig ISBN-10 eller ISBN-13.", "validators", "no");
    Translator.add("This value is not a valid ISSN.", "Verdien er ikke en gyldig ISSN.", "validators", "no");
    Translator.add("This value is not a valid currency.", "Verdien er ikke gyldig valuta.", "validators", "no");
    Translator.add("This value should be equal to {{ compared_value }}.", "Verdien m\u00e5 v\u00e6re lik {{ compared_value }}.", "validators", "no");
    Translator.add("This value should be greater than {{ compared_value }}.", "Verdien m\u00e5 v\u00e6re st\u00f8rre enn {{ compared_value }}.", "validators", "no");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Verdien m\u00e5 v\u00e6re st\u00f8rre enn eller lik {{ compared_value }}.", "validators", "no");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Verdien m\u00e5 v\u00e6re identisk med {{ compared_value_type }} {{ compared_value }}.", "validators", "no");
    Translator.add("This value should be less than {{ compared_value }}.", "Verdien m\u00e5 v\u00e6re mindre enn {{ compared_value }}.", "validators", "no");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Verdien m\u00e5 v\u00e6re mindre enn eller lik {{ compared_value }}.", "validators", "no");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Verdien m\u00e5 ikke v\u00e6re lik {{ compared_value }}.", "validators", "no");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Verdien m\u00e5 ikke v\u00e6re identisk med {{ compared_value_type }} {{ compared_value }}.", "validators", "no");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "Bildeforholdet er for stort ({{ ratio }}). Tillatt maksimumsbildeforhold er {{ max_ratio }}.", "validators", "no");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "Bildeforholdet er for lite ({{ ratio }}). Forventet maksimumsbildeforhold er {{ min_ratio }}.", "validators", "no");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "Bildet er en kvadrat ({{ width }}x{{ height }}px). Kvadratiske bilder er ikke tillatt.", "validators", "no");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "Bildet er i liggende retning ({{ width }}x{{ height }}px). Bilder i liggende retning er ikke tillatt.", "validators", "no");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "Bildet er i st\u00e5ende retning ({{ width }}x{{ height }}px). Bilder i st\u00e5ende retning er ikke tillatt.", "validators", "no");
    Translator.add("An empty file is not allowed.", "Tomme filer er ikke tilatt.", "validators", "no");
    Translator.add("The host could not be resolved.", "Vertsnavn kunne ikke l\u00f8ses.", "validators", "no");
    Translator.add("This value does not match the expected {{ charset }} charset.", "Verdien samsvarer ikke med forventet tegnsett {{ charset }}.", "validators", "no");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "Dette er ikke en gyldig BIC.", "validators", "no");
    Translator.add("This form should not contain extra fields.", "Feltgruppen m\u00e5 ikke inneholde ekstra felter.", "validators", "no");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Den opplastede filen var for stor. Vennligst last opp en mindre fil.", "validators", "no");
    Translator.add("The CSRF token is invalid.", "CSRF n\u00f8kkelen er ugyldig.", "validators", "no");
})(Translator);

(function (Translator) {
    // pl
    Translator.add("This value should be false.", "Ta warto\u015b\u0107 powinna by\u0107 fa\u0142szem.", "validators", "pl");
    Translator.add("This value should be true.", "Ta warto\u015b\u0107 powinna by\u0107 prawd\u0105.", "validators", "pl");
    Translator.add("This value should be of type {{ type }}.", "Ta warto\u015b\u0107 powinna by\u0107 typu {{ type }}.", "validators", "pl");
    Translator.add("This value should be blank.", "Ta warto\u015b\u0107 powinna by\u0107 pusta.", "validators", "pl");
    Translator.add("The value you selected is not a valid choice.", "Ta warto\u015b\u0107 powinna by\u0107 jedn\u0105 z podanych opcji.", "validators", "pl");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Powiniene\u015b wybra\u0107 co najmniej {{ limit }} opcj\u0119.|Powiniene\u015b wybra\u0107 co najmniej {{ limit }} opcje.|Powiniene\u015b wybra\u0107 co najmniej {{ limit }} opcji.", "validators", "pl");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Powiniene\u015b wybra\u0107 maksymalnie {{ limit }} opcj\u0119.|Powiniene\u015b wybra\u0107 maksymalnie {{ limit }} opcje.|Powiniene\u015b wybra\u0107 maksymalnie {{ limit }} opcji.", "validators", "pl");
    Translator.add("One or more of the given values is invalid.", "Jedna lub wi\u0119cej z podanych warto\u015bci jest nieprawid\u0142owa.", "validators", "pl");
    Translator.add("This field was not expected.", "To pole nie spodziewano.", "validators", "pl");
    Translator.add("This field is missing.", "To pole jest chybianie.", "validators", "pl");
    Translator.add("This value is not a valid date.", "Ta warto\u015b\u0107 nie jest prawid\u0142ow\u0105 dat\u0105.", "validators", "pl");
    Translator.add("This value is not a valid datetime.", "Ta warto\u015b\u0107 nie jest prawid\u0142ow\u0105 dat\u0105 i czasem.", "validators", "pl");
    Translator.add("This value is not a valid email address.", "Ta warto\u015b\u0107 nie jest prawid\u0142owym adresem email.", "validators", "pl");
    Translator.add("The file could not be found.", "Plik nie m\u00f3g\u0142 zosta\u0107 odnaleziony.", "validators", "pl");
    Translator.add("The file is not readable.", "Nie mo\u017cna odczyta\u0107 pliku.", "validators", "pl");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Plik jest za du\u017cy ({{ size }} {{ suffix }}). Maksymalny dozwolony rozmiar to {{ limit }} {{ suffix }}.", "validators", "pl");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Nieprawid\u0142owy typ mime pliku ({{ type }}). Dozwolone typy mime to {{ types }}.", "validators", "pl");
    Translator.add("This value should be {{ limit }} or less.", "Ta warto\u015b\u0107 powinna wynosi\u0107 {{ limit }} lub mniej.", "validators", "pl");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Ta warto\u015b\u0107 jest zbyt d\u0142uga. Powinna mie\u0107 {{ limit }} lub mniej znak\u00f3w.|Ta warto\u015b\u0107 jest zbyt d\u0142uga. Powinna mie\u0107 {{ limit }} lub mniej znak\u00f3w.|Ta warto\u015b\u0107 jest zbyt d\u0142uga. Powinna mie\u0107 {{ limit }} lub mniej znak\u00f3w.", "validators", "pl");
    Translator.add("This value should be {{ limit }} or more.", "Ta warto\u015b\u0107 powinna wynosi\u0107 {{ limit }} lub wi\u0119cej.", "validators", "pl");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Ta warto\u015b\u0107 jest zbyt kr\u00f3tka. Powinna mie\u0107 {{ limit }} lub wi\u0119cej znak\u00f3w.|Ta warto\u015b\u0107 jest zbyt kr\u00f3tka. Powinna mie\u0107 {{ limit }} lub wi\u0119cej znak\u00f3w.|Ta warto\u015b\u0107 jest zbyt kr\u00f3tka. Powinna mie\u0107 {{ limit }} lub wi\u0119cej znak\u00f3w.", "validators", "pl");
    Translator.add("This value should not be blank.", "Ta warto\u015b\u0107 nie powinna by\u0107 pusta.", "validators", "pl");
    Translator.add("This value should not be null.", "Ta warto\u015b\u0107 nie powinna by\u0107 nullem.", "validators", "pl");
    Translator.add("This value should be null.", "Ta warto\u015b\u0107 powinna by\u0107 nullem.", "validators", "pl");
    Translator.add("This value is not valid.", "Ta warto\u015b\u0107 jest nieprawid\u0142owa.", "validators", "pl");
    Translator.add("This value is not a valid time.", "Ta warto\u015b\u0107 nie jest prawid\u0142owym czasem.", "validators", "pl");
    Translator.add("This value is not a valid URL.", "Ta warto\u015b\u0107 nie jest prawid\u0142owym adresem URL.", "validators", "pl");
    Translator.add("The two values should be equal.", "Obie warto\u015bci powinny by\u0107 r\u00f3wne.", "validators", "pl");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Plik jest za du\u017cy. Maksymalny dozwolony rozmiar to {{ limit }} {{ suffix }}.", "validators", "pl");
    Translator.add("The file is too large.", "Plik jest za du\u017cy.", "validators", "pl");
    Translator.add("The file could not be uploaded.", "Plik nie m\u00f3g\u0142 by\u0107 wgrany.", "validators", "pl");
    Translator.add("This value should be a valid number.", "Ta warto\u015b\u0107 powinna by\u0107 prawid\u0142ow\u0105 liczb\u0105.", "validators", "pl");
    Translator.add("This file is not a valid image.", "Ten plik nie jest obrazem.", "validators", "pl");
    Translator.add("This is not a valid IP address.", "To nie jest prawid\u0142owy adres IP.", "validators", "pl");
    Translator.add("This value is not a valid language.", "Ta warto\u015b\u0107 nie jest prawid\u0142owym j\u0119zykiem.", "validators", "pl");
    Translator.add("This value is not a valid locale.", "Ta warto\u015b\u0107 nie jest prawid\u0142ow\u0105 lokalizacj\u0105.", "validators", "pl");
    Translator.add("This value is not a valid country.", "Ta warto\u015b\u0107 nie jest prawid\u0142ow\u0105 nazw\u0105 kraju.", "validators", "pl");
    Translator.add("This value is already used.", "Ta warto\u015b\u0107 jest ju\u017c wykorzystywana.", "validators", "pl");
    Translator.add("The size of the image could not be detected.", "Nie mo\u017cna wykry\u0107 rozmiaru obrazka.", "validators", "pl");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Szeroko\u015b\u0107 obrazka jest zbyt du\u017ca ({{ width }}px). Maksymalna dopuszczalna szeroko\u015b\u0107 to {{ max_width }}px.", "validators", "pl");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Szeroko\u015b\u0107 obrazka jest zbyt ma\u0142a ({{ width }}px). Oczekiwana minimalna szeroko\u015b\u0107 to {{ min_width }}px.", "validators", "pl");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Wysoko\u015b\u0107 obrazka jest zbyt du\u017ca ({{ height }}px). Maksymalna dopuszczalna wysoko\u015b\u0107 to {{ max_height }}px.", "validators", "pl");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Wysoko\u015b\u0107 obrazka jest zbyt ma\u0142a ({{ height }}px). Oczekiwana minimalna wysoko\u015b\u0107 to {{ min_height }}px.", "validators", "pl");
    Translator.add("This value should be the user's current password.", "Ta warto\u015b\u0107 powinna by\u0107 aktualnym has\u0142em u\u017cytkownika.", "validators", "pl");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Ta warto\u015b\u0107 powinna mie\u0107 dok\u0142adnie {{ limit }} znak.|Ta warto\u015b\u0107 powinna mie\u0107 dok\u0142adnie {{ limit }} znaki.|Ta warto\u015b\u0107 powinna mie\u0107 dok\u0142adnie {{ limit }} znak\u00f3w.", "validators", "pl");
    Translator.add("The file was only partially uploaded.", "Plik zosta\u0142 wgrany tylko cz\u0119\u015bciowo.", "validators", "pl");
    Translator.add("No file was uploaded.", "\u017baden plik nie zosta\u0142 wgrany.", "validators", "pl");
    Translator.add("No temporary folder was configured in php.ini.", "Nie skonfigurowano folderu tymczasowego w php.ini.", "validators", "pl");
    Translator.add("Cannot write temporary file to disk.", "Nie mo\u017cna zapisa\u0107 pliku tymczasowego na dysku.", "validators", "pl");
    Translator.add("A PHP extension caused the upload to fail.", "Rozszerzenie PHP spowodowa\u0142o b\u0142\u0105d podczas wgrywania.", "validators", "pl");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Ten zbi\u00f3r powinien zawiera\u0107 {{ limit }} lub wi\u0119cej element\u00f3w.", "validators", "pl");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Ten zbi\u00f3r powinien zawiera\u0107 {{ limit }} lub mniej element\u00f3w.", "validators", "pl");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Ten zbi\u00f3r powinien zawiera\u0107 dok\u0142adnie {{ limit }} element.|Ten zbi\u00f3r powinien zawiera\u0107 dok\u0142adnie {{ limit }} elementy.|Ten zbi\u00f3r powinien zawiera\u0107 dok\u0142adnie {{ limit }} element\u00f3w.", "validators", "pl");
    Translator.add("Invalid card number.", "Nieprawid\u0142owy numer karty.", "validators", "pl");
    Translator.add("Unsupported card type or invalid card number.", "Nieobs\u0142ugiwany rodzaj karty lub nieprawid\u0142owy numer karty.", "validators", "pl");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Nieprawid\u0142owy mi\u0119dzynarodowy numer rachunku bankowego (IBAN).", "validators", "pl");
    Translator.add("This value is not a valid ISBN-10.", "Ta warto\u015b\u0107 nie jest prawid\u0142owym numerem ISBN-10.", "validators", "pl");
    Translator.add("This value is not a valid ISBN-13.", "Ta warto\u015b\u0107 nie jest prawid\u0142owym numerem ISBN-13.", "validators", "pl");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Ta warto\u015b\u0107 nie jest prawid\u0142owym numerem ISBN-10 ani ISBN-13.", "validators", "pl");
    Translator.add("This value is not a valid ISSN.", "Ta warto\u015b\u0107 nie jest prawid\u0142owym numerem ISSN.", "validators", "pl");
    Translator.add("This value is not a valid currency.", "Ta warto\u015b\u0107 nie jest prawid\u0142ow\u0105 walut\u0105.", "validators", "pl");
    Translator.add("This value should be equal to {{ compared_value }}.", "Ta warto\u015b\u0107 powinna by\u0107 r\u00f3wna {{ compared_value }}.", "validators", "pl");
    Translator.add("This value should be greater than {{ compared_value }}.", "Ta warto\u015b\u0107 powinna by\u0107 wi\u0119ksza ni\u017c {{ compared_value }}.", "validators", "pl");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Ta warto\u015b\u0107 powinna by\u0107 wi\u0119ksza b\u0105d\u017a r\u00f3wna {{ compared_value }}.", "validators", "pl");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Ta warto\u015b\u0107 powinna by\u0107 identycznego typu {{ compared_value_type }} oraz warto\u015bci {{ compared_value }}.", "validators", "pl");
    Translator.add("This value should be less than {{ compared_value }}.", "Ta warto\u015b\u0107 powinna by\u0107 mniejsza ni\u017c {{ compared_value }}.", "validators", "pl");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Ta warto\u015b\u0107 powinna by\u0107 mniejsza b\u0105d\u017a r\u00f3wna {{ compared_value }}.", "validators", "pl");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Ta warto\u015b\u0107 nie powinna by\u0107 r\u00f3wna {{ compared_value }}.", "validators", "pl");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Ta warto\u015b\u0107 nie powinna by\u0107 identycznego typu {{ compared_value_type }} oraz warto\u015bci {{ compared_value }}.", "validators", "pl");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "Proporcje obrazu s\u0105 zbyt du\u017ce ({{ ratio }}). Maksymalne proporcje to {{ max_ratio }}.", "validators", "pl");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "Proporcje obrazu s\u0105 zbyt ma\u0142e ({{ ratio }}). Minimalne proporcje to {{ min_ratio }}.", "validators", "pl");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "Obraz jest kwadratem ({{ width }}x{{ height }}px). Kwadratowe obrazy nie s\u0105 akceptowane.", "validators", "pl");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "Obraz jest panoramiczny ({{ width }}x{{ height }}px). Panoramiczne zdj\u0119cia nie s\u0105 akceptowane.", "validators", "pl");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "Obraz jest portretowy ({{ width }}x{{ height }}px). Portretowe zdj\u0119cia nie s\u0105 akceptowane.", "validators", "pl");
    Translator.add("An empty file is not allowed.", "Plik nie mo\u017ce by\u0107 pusty.", "validators", "pl");
    Translator.add("The host could not be resolved.", "Nazwa hosta nie zosta\u0142a rozpoznana.", "validators", "pl");
    Translator.add("This value does not match the expected {{ charset }} charset.", "Ta warto\u015b\u0107 nie pasuje do oczekiwanego zestawu znak\u00f3w {{ charset }}.", "validators", "pl");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "Ta warto\u015b\u0107 nie jest poprawnym kodem BIC (Business Identifier Code).", "validators", "pl");
    Translator.add("This form should not contain extra fields.", "Ten formularz nie powinien zawiera\u0107 dodatkowych p\u00f3l.", "validators", "pl");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Wgrany plik by\u0142 za du\u017cy. Prosz\u0119 spr\u00f3bowa\u0107 wgra\u0107 mniejszy plik.", "validators", "pl");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "Token CSRF jest nieprawid\u0142owy. Prosz\u0119 spr\u00f3bowa\u0107 wys\u0142a\u0107 formularz ponownie.", "validators", "pl");
    Translator.add("client.conditions_not_accepted", "Musisz zaakceptowa\u0107 regulamin sklepu", "validators", "pl");
    Translator.add("client.email_not_unique", "Posiadasz ju\u017c konto w naszym sklepie. Zaloguj si\u0119 lub przypomnij has\u0142o.", "validators", "pl");
})(Translator);

(function (Translator) {
    // pt
    Translator.add("This value should be false.", "Este valor deveria ser falso.", "validators", "pt");
    Translator.add("This value should be true.", "Este valor deveria ser verdadeiro.", "validators", "pt");
    Translator.add("This value should be of type {{ type }}.", "Este valor deveria ser do tipo {{ type }}.", "validators", "pt");
    Translator.add("This value should be blank.", "Este valor deveria ser vazio.", "validators", "pt");
    Translator.add("The value you selected is not a valid choice.", "O valor selecionado n\u00e3o \u00e9 uma op\u00e7\u00e3o v\u00e1lida.", "validators", "pt");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Voc\u00ea deveria selecionar {{ limit }} op\u00e7\u00e3o no m\u00ednimo.|Voc\u00ea deveria selecionar {{ limit }} op\u00e7\u00f5es no m\u00ednimo.", "validators", "pt");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Voc\u00ea deve selecionar, no m\u00e1ximo {{ limit }} op\u00e7\u00e3o.|Voc\u00ea deve selecionar, no m\u00e1ximo {{ limit }} op\u00e7\u00f5es.", "validators", "pt");
    Translator.add("One or more of the given values is invalid.", "Um ou mais dos valores introduzidos n\u00e3o s\u00e3o v\u00e1lidos.", "validators", "pt");
    Translator.add("This field was not expected.", "Este campo n\u00e3o era esperado.", "validators", "pt");
    Translator.add("This field is missing.", "Este campo est\u00e1 faltando.", "validators", "pt");
    Translator.add("This value is not a valid date.", "Este valor n\u00e3o \u00e9 uma data v\u00e1lida.", "validators", "pt");
    Translator.add("This value is not a valid datetime.", "Este valor n\u00e3o \u00e9 uma data-hora v\u00e1lida.", "validators", "pt");
    Translator.add("This value is not a valid email address.", "Este valor n\u00e3o \u00e9 um endere\u00e7o de e-mail v\u00e1lido.", "validators", "pt");
    Translator.add("The file could not be found.", "O arquivo n\u00e3o p\u00f4de ser encontrado.", "validators", "pt");
    Translator.add("The file is not readable.", "O arquivo n\u00e3o p\u00f4de ser lido.", "validators", "pt");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "O arquivo \u00e9 muito grande ({{ size }} {{ suffix }}). O tamanho m\u00e1ximo permitido \u00e9 de {{ limit }} {{ suffix }}.", "validators", "pt");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "O tipo mime do arquivo \u00e9 inv\u00e1lido ({{ type }}). Os tipos mime permitidos s\u00e3o {{ types }}.", "validators", "pt");
    Translator.add("This value should be {{ limit }} or less.", "Este valor deveria ser {{ limit }} ou menor.", "validators", "pt");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "O valor \u00e9 muito longo. Deveria ter {{ limit }} caracteres ou menos.", "validators", "pt");
    Translator.add("This value should be {{ limit }} or more.", "Este valor deveria ser {{ limit }} ou mais.", "validators", "pt");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "O valor \u00e9 muito curto. Deveria de ter {{ limit }} caractere ou mais.|O valor \u00e9 muito curto. Deveria de ter {{ limit }} caracteres ou mais.", "validators", "pt");
    Translator.add("This value should not be blank.", "Este valor n\u00e3o deveria ser branco\/vazio.", "validators", "pt");
    Translator.add("This value should not be null.", "Este valor n\u00e3o deveria ser nulo.", "validators", "pt");
    Translator.add("This value should be null.", "Este valor deveria ser nulo.", "validators", "pt");
    Translator.add("This value is not valid.", "Este valor n\u00e3o \u00e9 v\u00e1lido.", "validators", "pt");
    Translator.add("This value is not a valid time.", "Este valor n\u00e3o \u00e9 uma hora v\u00e1lida.", "validators", "pt");
    Translator.add("This value is not a valid URL.", "Este valor n\u00e3o \u00e9 um URL v\u00e1lido.", "validators", "pt");
    Translator.add("The two values should be equal.", "Os dois valores deveriam ser iguais.", "validators", "pt");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "O arquivo \u00e9 muito grande. O tamanho m\u00e1ximo permitido \u00e9 de {{ limit }} {{ suffix }}.", "validators", "pt");
    Translator.add("The file is too large.", "O ficheiro \u00e9 muito grande.", "validators", "pt");
    Translator.add("The file could not be uploaded.", "N\u00e3o foi poss\u00edvel carregar o ficheiro.", "validators", "pt");
    Translator.add("This value should be a valid number.", "Este valor deveria de ser um n\u00famero v\u00e1lido.", "validators", "pt");
    Translator.add("This file is not a valid image.", "Este ficheiro n\u00e3o \u00e9 uma imagem.", "validators", "pt");
    Translator.add("This is not a valid IP address.", "Este endere\u00e7o de IP n\u00e3o \u00e9 v\u00e1lido.", "validators", "pt");
    Translator.add("This value is not a valid language.", "Este valor n\u00e3o \u00e9 uma linguagem v\u00e1lida.", "validators", "pt");
    Translator.add("This value is not a valid locale.", "Este valor n\u00e3o \u00e9 um 'locale' v\u00e1lido.", "validators", "pt");
    Translator.add("This value is not a valid country.", "Este valor n\u00e3o \u00e9 um Pa\u00eds v\u00e1lido.", "validators", "pt");
    Translator.add("This value is already used.", "Este valor j\u00e1 est\u00e1 a ser usado.", "validators", "pt");
    Translator.add("The size of the image could not be detected.", "O tamanho da imagem n\u00e3o foi detetado.", "validators", "pt");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "A largura da imagem ({{ width }}px) \u00e9 muito grande. A largura m\u00e1xima da imagem \u00e9: {{ max_width }}px.", "validators", "pt");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "A largura da imagem ({{ width }}px) \u00e9 muito pequena. A largura min\u00edma da imagem \u00e9 de: {{ min_width }}px.", "validators", "pt");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "A altura da imagem ({{ height }}px) \u00e9 muito grande. A altura m\u00e1xima da imagem \u00e9 de: {{ max_height }}px.", "validators", "pt");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "A altura da imagem ({{ height }}px) \u00e9 muito pequena. A altura min\u00edma da imagem \u00e9 de: {{ min_height }}px.", "validators", "pt");
    Translator.add("This value should be the user's current password.", "Este valor deveria de ser a password atual do utilizador.", "validators", "pt");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Este valor tem de ter exatamente {{ limit }} carateres.", "validators", "pt");
    Translator.add("The file was only partially uploaded.", "S\u00f3 foi enviado parte do ficheiro.", "validators", "pt");
    Translator.add("No file was uploaded.", "Nenhum ficheiro foi enviado.", "validators", "pt");
    Translator.add("No temporary folder was configured in php.ini.", "N\u00e3o existe nenhum direct\u00f3rio tempor\u00e1ria configurado no ficheiro php.ini.", "validators", "pt");
    Translator.add("Cannot write temporary file to disk.", "N\u00e3o foi poss\u00edvel escrever ficheiros tempor\u00e1rios no disco.", "validators", "pt");
    Translator.add("A PHP extension caused the upload to fail.", "Uma extens\u00e3o PHP causou a falha no envio.", "validators", "pt");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Esta cole\u00e7\u00e3o deve conter {{ limit }} elemento ou mais.|Esta cole\u00e7\u00e3o deve conter {{ limit }} elementos ou mais.", "validators", "pt");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Esta cole\u00e7\u00e3o deve conter {{ limit }} elemento ou menos.|Esta cole\u00e7\u00e3o deve conter {{ limit }} elementos ou menos.", "validators", "pt");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Esta cole\u00e7\u00e3o deve conter exatamente {{ limit }} elemento.|Esta cole\u00e7\u00e3o deve conter exatamente {{ limit }} elementos.", "validators", "pt");
    Translator.add("Invalid card number.", "N\u00famero de cart\u00e3o inv\u00e1lido.", "validators", "pt");
    Translator.add("Unsupported card type or invalid card number.", "Tipo de cart\u00e3o n\u00e3o suportado ou n\u00famero de cart\u00e3o inv\u00e1lido.", "validators", "pt");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Este n\u00e3o \u00e9 um N\u00famero Internacional de Conta Banc\u00e1ria (IBAN) v\u00e1lido.", "validators", "pt");
    Translator.add("This value is not a valid ISBN-10.", "Este valor n\u00e3o \u00e9 um ISBN-10 v\u00e1lido.", "validators", "pt");
    Translator.add("This value is not a valid ISBN-13.", "Este valor n\u00e3o \u00e9 um ISBN-13 v\u00e1lido.", "validators", "pt");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Este valor n\u00e3o \u00e9 um ISBN-10 ou ISBN-13 v\u00e1lido.", "validators", "pt");
    Translator.add("This value is not a valid ISSN.", "Este valor n\u00e3o \u00e9 um ISSN v\u00e1lido.", "validators", "pt");
    Translator.add("This value is not a valid currency.", "Este n\u00e3o \u00e9 um valor monet\u00e1rio v\u00e1lido.", "validators", "pt");
    Translator.add("This value should be equal to {{ compared_value }}.", "Este valor deve ser igual a {{ compared_value }}.", "validators", "pt");
    Translator.add("This value should be greater than {{ compared_value }}.", "Este valor deve ser superior a {{ compared_value }}.", "validators", "pt");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Este valor deve ser igual ou superior a {{ compared_value }}.", "validators", "pt");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Este valor deve ser id\u00eantico a {{ compared_value_type }} {{ compared_value }}.", "validators", "pt");
    Translator.add("This value should be less than {{ compared_value }}.", "Este valor deve ser inferior a {{ compared_value }}.", "validators", "pt");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Este valor deve ser igual ou inferior a {{ compared_value }}.", "validators", "pt");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Este valor n\u00e3o deve ser igual a {{ compared_value }}.", "validators", "pt");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Este valor n\u00e3o deve ser id\u00eantico a {{ compared_value_type }} {{ compared_value }}.", "validators", "pt");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "O formato da imagem \u00e9 muito grande ({{ ratio }}). O formato m\u00e1ximo \u00e9 {{ max_ratio }}.", "validators", "pt");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "O formato da imagem \u00e9 muito pequeno ({{ ratio }}). O formato m\u00ednimo esperado \u00e9 {{ min_ratio }}.", "validators", "pt");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "A imagem \u00e9 um quadrado ({{ width }}x{{ height }}px). Imagens quadradas n\u00e3o s\u00e3o permitidas.", "validators", "pt");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "A imagem est\u00e1 orientada \u00e0 paisagem ({{ width }}x{{ height }}px). Imagens orientadas \u00e0 paisagem n\u00e3o s\u00e3o permitidas.", "validators", "pt");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "A imagem est\u00e1 orientada ao retrato ({{ width }}x{{ height }}px). Imagens orientadas ao retrato n\u00e3o s\u00e3o permitidas.", "validators", "pt");
    Translator.add("An empty file is not allowed.", "Ficheiro vazio n\u00e3o \u00e9 permitido.", "validators", "pt");
    Translator.add("This form should not contain extra fields.", "Este formul\u00e1rio n\u00e3o deveria conter campos extra.", "validators", "pt");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "O arquivo enviado \u00e9 muito grande. Por favor, tente enviar um ficheiro mais pequeno.", "validators", "pt");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "O token CSRF \u00e9 inv\u00e1lido. Por favor submeta o formul\u00e1rio novamente.", "validators", "pt");
})(Translator);

(function (Translator) {
    // pt_BR
    Translator.add("This value should be false.", "Este valor deve ser falso.", "validators", "pt_BR");
    Translator.add("This value should be true.", "Este valor deve ser verdadeiro.", "validators", "pt_BR");
    Translator.add("This value should be of type {{ type }}.", "Este valor deve ser do tipo {{ type }}.", "validators", "pt_BR");
    Translator.add("This value should be blank.", "Este valor deve ser vazio.", "validators", "pt_BR");
    Translator.add("The value you selected is not a valid choice.", "O valor selecionado n\u00e3o \u00e9 uma op\u00e7\u00e3o v\u00e1lida.", "validators", "pt_BR");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Voc\u00ea deve selecionar, no m\u00ednimo, {{ limit }} op\u00e7\u00e3o.|Voc\u00ea deve selecionar, no m\u00ednimo, {{ limit }} op\u00e7\u00f5es.", "validators", "pt_BR");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Voc\u00ea deve selecionar, no m\u00e1ximo, {{ limit }} op\u00e7\u00e3o.|Voc\u00ea deve selecionar, no m\u00e1ximo, {{ limit }} op\u00e7\u00f5es.", "validators", "pt_BR");
    Translator.add("One or more of the given values is invalid.", "Um ou mais valores informados s\u00e3o inv\u00e1lidos.", "validators", "pt_BR");
    Translator.add("This field was not expected.", "Este campo n\u00e3o era esperado.", "validators", "pt_BR");
    Translator.add("This field is missing.", "Este campo est\u00e1 ausente.", "validators", "pt_BR");
    Translator.add("This value is not a valid date.", "Este valor n\u00e3o \u00e9 uma data v\u00e1lida.", "validators", "pt_BR");
    Translator.add("This value is not a valid datetime.", "Este valor n\u00e3o \u00e9 uma data e hora v\u00e1lida.", "validators", "pt_BR");
    Translator.add("This value is not a valid email address.", "Este valor n\u00e3o \u00e9 um endere\u00e7o de e-mail v\u00e1lido.", "validators", "pt_BR");
    Translator.add("The file could not be found.", "O arquivo n\u00e3o foi encontrado.", "validators", "pt_BR");
    Translator.add("The file is not readable.", "O arquivo n\u00e3o pode ser lido.", "validators", "pt_BR");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "O arquivo \u00e9 muito grande ({{ size }} {{ suffix }}). O tamanho m\u00e1ximo permitido \u00e9 {{ limit }} {{ suffix }}.", "validators", "pt_BR");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "O tipo mime do arquivo \u00e9 inv\u00e1lido ({{ type }}). Os tipos mime permitidos s\u00e3o {{ types }}.", "validators", "pt_BR");
    Translator.add("This value should be {{ limit }} or less.", "Este valor deve ser {{ limit }} ou menos.", "validators", "pt_BR");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Este valor \u00e9 muito longo. Deve ter {{ limit }} caractere ou menos.|Este valor \u00e9 muito longo. Deve ter {{ limit }} caracteres ou menos.", "validators", "pt_BR");
    Translator.add("This value should be {{ limit }} or more.", "Este valor deve ser {{ limit }} ou mais.", "validators", "pt_BR");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Este valor \u00e9 muito curto. Deve ter {{ limit }} caractere ou mais.|Este valor \u00e9 muito curto. Deve ter {{ limit }} caracteres ou mais.", "validators", "pt_BR");
    Translator.add("This value should not be blank.", "Este valor n\u00e3o deve ser vazio.", "validators", "pt_BR");
    Translator.add("This value should not be null.", "Este valor n\u00e3o deve ser nulo.", "validators", "pt_BR");
    Translator.add("This value should be null.", "Este valor deve ser nulo.", "validators", "pt_BR");
    Translator.add("This value is not valid.", "Este valor n\u00e3o \u00e9 v\u00e1lido.", "validators", "pt_BR");
    Translator.add("This value is not a valid time.", "Este valor n\u00e3o \u00e9 uma hora v\u00e1lida.", "validators", "pt_BR");
    Translator.add("This value is not a valid URL.", "Este valor n\u00e3o \u00e9 uma URL v\u00e1lida.", "validators", "pt_BR");
    Translator.add("The two values should be equal.", "Os dois valores devem ser iguais.", "validators", "pt_BR");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "O arquivo \u00e9 muito grande. O tamanho m\u00e1ximo permitido \u00e9 de {{ limit }} {{ suffix }}.", "validators", "pt_BR");
    Translator.add("The file is too large.", "O arquivo \u00e9 muito grande.", "validators", "pt_BR");
    Translator.add("The file could not be uploaded.", "O arquivo n\u00e3o pode ser enviado.", "validators", "pt_BR");
    Translator.add("This value should be a valid number.", "Este valor deve ser um n\u00famero v\u00e1lido.", "validators", "pt_BR");
    Translator.add("This file is not a valid image.", "Este arquivo n\u00e3o \u00e9 uma imagem v\u00e1lida.", "validators", "pt_BR");
    Translator.add("This is not a valid IP address.", "Este n\u00e3o \u00e9 um endere\u00e7o de IP v\u00e1lido.", "validators", "pt_BR");
    Translator.add("This value is not a valid language.", "Este valor n\u00e3o \u00e9 um idioma v\u00e1lido.", "validators", "pt_BR");
    Translator.add("This value is not a valid locale.", "Este valor n\u00e3o \u00e9 uma localidade v\u00e1lida.", "validators", "pt_BR");
    Translator.add("This value is not a valid country.", "Este valor n\u00e3o \u00e9 um pa\u00eds v\u00e1lido.", "validators", "pt_BR");
    Translator.add("This value is already used.", "Este valor j\u00e1 est\u00e1 sendo usado.", "validators", "pt_BR");
    Translator.add("The size of the image could not be detected.", "O tamanho da imagem n\u00e3o pode ser detectado.", "validators", "pt_BR");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "A largura da imagem \u00e9 muito grande ({{ width }}px). A largura m\u00e1xima permitida \u00e9 de {{ max_width }}px.", "validators", "pt_BR");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "A largura da imagem \u00e9 muito pequena ({{ width }}px). A largura m\u00ednima esperada \u00e9 de {{ min_width }}px.", "validators", "pt_BR");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "A altura da imagem \u00e9 muito grande ({{ height }}px). A altura m\u00e1xima permitida \u00e9 de {{ max_height }}px.", "validators", "pt_BR");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "A altura da imagem \u00e9 muito pequena ({{ height }}px). A altura m\u00ednima esperada \u00e9 de {{ min_height }}px.", "validators", "pt_BR");
    Translator.add("This value should be the user's current password.", "Este valor deve ser a senha atual do usu\u00e1rio.", "validators", "pt_BR");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Este valor deve ter exatamente {{ limit }} caractere.|Este valor deve ter exatamente {{ limit }} caracteres.", "validators", "pt_BR");
    Translator.add("The file was only partially uploaded.", "O arquivo foi enviado apenas parcialmente.", "validators", "pt_BR");
    Translator.add("No file was uploaded.", "Nenhum arquivo foi enviado.", "validators", "pt_BR");
    Translator.add("No temporary folder was configured in php.ini.", "Nenhum diret\u00f3rio tempor\u00e1rio foi configurado no php.ini.", "validators", "pt_BR");
    Translator.add("Cannot write temporary file to disk.", "N\u00e3o foi poss\u00edvel escrever o arquivo tempor\u00e1rio no disco.", "validators", "pt_BR");
    Translator.add("A PHP extension caused the upload to fail.", "Uma extens\u00e3o PHP fez com que o envio falhasse.", "validators", "pt_BR");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Esta cole\u00e7\u00e3o deve conter {{ limit }} elemento ou mais.|Esta cole\u00e7\u00e3o deve conter {{ limit }} elementos ou mais.", "validators", "pt_BR");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Esta cole\u00e7\u00e3o deve conter {{ limit }} elemento ou menos.|Esta cole\u00e7\u00e3o deve conter {{ limit }} elementos ou menos.", "validators", "pt_BR");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Esta cole\u00e7\u00e3o deve conter exatamente {{ limit }} elemento.|Esta cole\u00e7\u00e3o deve conter exatamente {{ limit }} elementos.", "validators", "pt_BR");
    Translator.add("Invalid card number.", "N\u00famero de cart\u00e3o inv\u00e1lido.", "validators", "pt_BR");
    Translator.add("Unsupported card type or invalid card number.", "Tipo de cart\u00e3o n\u00e3o suportado ou n\u00famero de cart\u00e3o inv\u00e1lido.", "validators", "pt_BR");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Este n\u00e3o \u00e9 um N\u00famero Internacional de Conta Banc\u00e1ria (IBAN) v\u00e1lido.", "validators", "pt_BR");
    Translator.add("This value is not a valid ISBN-10.", "Este valor n\u00e3o \u00e9 um ISBN-10 v\u00e1lido.", "validators", "pt_BR");
    Translator.add("This value is not a valid ISBN-13.", "Este valor n\u00e3o \u00e9 um ISBN-13 v\u00e1lido.", "validators", "pt_BR");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Este valor n\u00e3o \u00e9 um ISBN-10 e nem um ISBN-13 v\u00e1lido.", "validators", "pt_BR");
    Translator.add("This value is not a valid ISSN.", "Este valor n\u00e3o \u00e9 um ISSN v\u00e1lido.", "validators", "pt_BR");
    Translator.add("This value is not a valid currency.", "Este n\u00e3o \u00e9 um valor monet\u00e1rio v\u00e1lido.", "validators", "pt_BR");
    Translator.add("This value should be equal to {{ compared_value }}.", "Este valor deve ser igual a {{ compared_value }}.", "validators", "pt_BR");
    Translator.add("This value should be greater than {{ compared_value }}.", "Este valor deve ser maior que {{ compared_value }}.", "validators", "pt_BR");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Este valor deve ser maior ou igual a {{ compared_value }}.", "validators", "pt_BR");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Este valor deve ser id\u00eantico a {{ compared_value_type }} {{ compared_value }}.", "validators", "pt_BR");
    Translator.add("This value should be less than {{ compared_value }}.", "Este valor deve ser menor que {{ compared_value }}.", "validators", "pt_BR");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Este valor deve ser menor ou igual a {{ compared_value }}.", "validators", "pt_BR");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Este valor n\u00e3o deve ser igual a {{ compared_value }}.", "validators", "pt_BR");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Este valor n\u00e3o deve ser id\u00eantico a {{ compared_value_type }} {{ compared_value }}.", "validators", "pt_BR");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "A propor\u00e7\u00e3o da imagem \u00e9 muito grande ({{ ratio }}). A propor\u00e7\u00e3o m\u00e1xima permitida \u00e9 {{ max_ratio }}.", "validators", "pt_BR");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "A propor\u00e7\u00e3o da imagem \u00e9 muito pequena ({{ ratio }}). A propor\u00e7\u00e3o m\u00ednima esperada \u00e9 {{ min_ratio }}.", "validators", "pt_BR");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "A imagem est\u00e1 num formato quadrado ({{ width }}x{{ height }}px). Imagens com formato quadrado n\u00e3o s\u00e3o permitidas.", "validators", "pt_BR");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "A imagem est\u00e1 orientada \u00e0 paisagem ({{ width }}x{{ height }}px). Imagens orientadas \u00e0 paisagem n\u00e3o s\u00e3o permitidas.", "validators", "pt_BR");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "A imagem est\u00e1 orientada ao retrato ({{ width }}x{{ height }}px). Imagens orientadas ao retrato n\u00e3o s\u00e3o permitidas.", "validators", "pt_BR");
    Translator.add("An empty file is not allowed.", "Arquivo vazio n\u00e3o \u00e9 permitido.", "validators", "pt_BR");
    Translator.add("The host could not be resolved.", "O host n\u00e3o p\u00f4de ser resolvido.", "validators", "pt_BR");
    Translator.add("This value does not match the expected {{ charset }} charset.", "Este valor n\u00e3o corresponde ao charset {{ charset }} esperado.", "validators", "pt_BR");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "Este n\u00e3o \u00e9 um C\u00f3digo Identificador Banc\u00e1rio (BIC) v\u00e1lido.", "validators", "pt_BR");
    Translator.add("This form should not contain extra fields.", "Este formul\u00e1rio n\u00e3o deve conter campos adicionais.", "validators", "pt_BR");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "O arquivo enviado \u00e9 muito grande. Por favor, tente enviar um arquivo menor.", "validators", "pt_BR");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "O token CSRF \u00e9 inv\u00e1lido. Por favor, tente reenviar o formul\u00e1rio.", "validators", "pt_BR");
})(Translator);

(function (Translator) {
    // ro
    Translator.add("This value should be false.", "Aceast\u0103 valoare ar trebui s\u0103 fie fals\u0103 (false).", "validators", "ro");
    Translator.add("This value should be true.", "Aceast\u0103 valoare ar trebui s\u0103 fie adev\u0103rat\u0103 (true).", "validators", "ro");
    Translator.add("This value should be of type {{ type }}.", "Aceast\u0103 valoare ar trebui s\u0103 fie de tipul {{ type }}.", "validators", "ro");
    Translator.add("This value should be blank.", "Aceast\u0103 valoare ar trebui sa fie goal\u0103.", "validators", "ro");
    Translator.add("The value you selected is not a valid choice.", "Valoarea selectat\u0103 nu este o op\u021biune valid\u0103.", "validators", "ro");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Trebuie s\u0103 selecta\u021bi cel pu\u021bin {{ limit }} op\u021biune.|Trebuie s\u0103 selecta\u021bi cel pu\u021bin {{ limit }} op\u021biuni.|Trebuie s\u0103 selecta\u021bi cel pu\u021bin {{ limit }} de op\u021biuni", "validators", "ro");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Trebuie s\u0103 selecta\u021bi cel mult {{ limit }} op\u021biune.|Trebuie s\u0103 selecta\u021bi cel mult {{ limit }} op\u021biuni.|Trebuie s\u0103 selecta\u021bi cel mult {{ limit }} de op\u021biuni.", "validators", "ro");
    Translator.add("One or more of the given values is invalid.", "Una sau mai multe dintre valorile furnizate sunt invalide.", "validators", "ro");
    Translator.add("This field was not expected.", "Acest c\u00e2mp nu era de a\u015fteptat.", "validators", "ro");
    Translator.add("This field is missing.", "Acest c\u00e2mp este lips\u0103.", "validators", "ro");
    Translator.add("This value is not a valid date.", "Aceast\u0103 valoare nu reprezint\u0103 o dat\u0103 valid\u0103.", "validators", "ro");
    Translator.add("This value is not a valid datetime.", "Aceast\u0103 valoare nu reprezint\u0103 o dat\u0103 \u0219i or\u0103 valid\u0103.", "validators", "ro");
    Translator.add("This value is not a valid email address.", "Aceast\u0103 valoare nu reprezint\u0103 o adres\u0103 de e-mail valid\u0103.", "validators", "ro");
    Translator.add("The file could not be found.", "Fi\u0219ierul nu a putut fi g\u0103sit.", "validators", "ro");
    Translator.add("The file is not readable.", "Fi\u0219ierul nu poate fi citit.", "validators", "ro");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Fi\u0219ierul este prea mare ({{ size }} {{ suffix }}). Dimensiunea maxim\u0103 permis\u0103 este {{ limit }} {{ suffix }}.", "validators", "ro");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Tipul fi\u0219ierului este invalid ({{ type }}). Tipurile permise de fi\u0219iere sunt ({{ types }}).", "validators", "ro");
    Translator.add("This value should be {{ limit }} or less.", "Aceast\u0103 valoare ar trebui s\u0103 fie cel mult {{ limit }}.", "validators", "ro");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Aceast\u0103 valoare este prea lung\u0103. Ar trebui s\u0103 aib\u0103 maxim {{ limit }} caracter.|Aceast\u0103 valoare este prea lung\u0103. Ar trebui s\u0103 aib\u0103 maxim {{ limit }} caractere.|Aceast\u0103 valoare este prea lung\u0103. Ar trebui s\u0103 aib\u0103 maxim {{ limit }} de caractere.", "validators", "ro");
    Translator.add("This value should be {{ limit }} or more.", "Aceast\u0103 valoare ar trebui s\u0103 fie cel pu\u021bin {{ limit }}.", "validators", "ro");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Aceast\u0103 valoare este prea scurt\u0103. Ar trebui s\u0103 aib\u0103 minim {{ limit }} caracter.|Aceast\u0103 valoare este prea scurt\u0103. Ar trebui s\u0103 aib\u0103 minim {{ limit }} caractere.|Aceast\u0103 valoare este prea scurt\u0103. Ar trebui s\u0103 aib\u0103 minim {{ limit }} de caractere.", "validators", "ro");
    Translator.add("This value should not be blank.", "Aceast\u0103 valoare nu ar trebui s\u0103 fie goal\u0103.", "validators", "ro");
    Translator.add("This value should not be null.", "Aceast\u0103 valoare nu ar trebui s\u0103 fie nul\u0103 (null).", "validators", "ro");
    Translator.add("This value should be null.", "Aceast\u0103 valoare ar trebui s\u0103 fie nul\u0103 (null).", "validators", "ro");
    Translator.add("This value is not valid.", "Aceast\u0103 valoare nu este valid\u0103.", "validators", "ro");
    Translator.add("This value is not a valid time.", "Aceast\u0103 valoare nu reprezint\u0103 o or\u0103 valid\u0103.", "validators", "ro");
    Translator.add("This value is not a valid URL.", "Aceast\u0103 valoare nu reprezint\u0103 un URL (link) valid.", "validators", "ro");
    Translator.add("The two values should be equal.", "Cele dou\u0103 valori ar trebui s\u0103 fie egale.", "validators", "ro");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Fi\u0219ierul este prea mare. M\u0103rimea maxim\u0103 permis\u0103 este {{ limit }} {{ suffix }}.", "validators", "ro");
    Translator.add("The file is too large.", "Fi\u0219ierul este prea mare.", "validators", "ro");
    Translator.add("The file could not be uploaded.", "Fi\u0219ierul nu a putut fi \u00eenc\u0103rcat.", "validators", "ro");
    Translator.add("This value should be a valid number.", "Aceast\u0103 valoare nu reprezint\u0103 un num\u0103r valid.", "validators", "ro");
    Translator.add("This file is not a valid image.", "Acest fi\u0219ier nu este o imagine valid\u0103.", "validators", "ro");
    Translator.add("This is not a valid IP address.", "Aceast\u0103 valoare nu este o adres\u0103 IP valid\u0103.", "validators", "ro");
    Translator.add("This value is not a valid language.", "Aceast\u0103 valoare nu reprezint\u0103 o limb\u0103 corect\u0103.", "validators", "ro");
    Translator.add("This value is not a valid locale.", "Aceast\u0103 valoare nu reprezint\u0103 un dialect (o limb\u0103) corect.", "validators", "ro");
    Translator.add("This value is not a valid country.", "Aceast\u0103 valoare nu este o \u021bar\u0103 valid\u0103.", "validators", "ro");
    Translator.add("This value is already used.", "Aceast\u0103 valoare este folosit\u0103 deja.", "validators", "ro");
    Translator.add("The size of the image could not be detected.", "M\u0103rimea imaginii nu a putut fi detectat\u0103.", "validators", "ro");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "L\u0103\u021bimea imaginii este prea mare ({{ width }}px). L\u0103\u021bimea maxim\u0103 permis\u0103 este de {{ max_width }}px.", "validators", "ro");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "L\u0103\u021bimea imaginii este prea mic\u0103 ({{ width }}px). L\u0103\u021bimea minim\u0103 permis\u0103 este de {{ min_width }}px.", "validators", "ro");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u00cen\u0103l\u021bimea imaginii este prea mare ({{ height }}px). \u00cen\u0103l\u021bimea maxim\u0103 permis\u0103 este de {{ max_height }}px.", "validators", "ro");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u00cen\u0103l\u021bimea imaginii este prea mic\u0103 ({{ height }}px). \u00cen\u0103l\u021bimea minim\u0103 permis\u0103 este de {{ min_height }}px.", "validators", "ro");
    Translator.add("This value should be the user's current password.", "Aceast\u0103 valoare trebuie s\u0103 fie parola curent\u0103 a utilizatorului.", "validators", "ro");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Aceast\u0103 valoare trebuie s\u0103 con\u021bin\u0103 exact {{ limit }} caracter.|Aceast\u0103 valoare trebuie s\u0103 con\u021bin\u0103 exact {{ limit }} caractere.|Aceast\u0103 valoare trebuie s\u0103 con\u021bin\u0103 exact {{ limit }} de caractere.", "validators", "ro");
    Translator.add("The file was only partially uploaded.", "Fi\u0219ierul a fost \u00eenc\u0103rcat par\u021bial.", "validators", "ro");
    Translator.add("No file was uploaded.", "Nu a fost \u00eenc\u0103rcat nici un fi\u0219ier.", "validators", "ro");
    Translator.add("No temporary folder was configured in php.ini.", "Nu este configurat nici un director temporar in php.ini.", "validators", "ro");
    Translator.add("Cannot write temporary file to disk.", "Nu a fost posibil\u0103 scrierea fi\u0219ierului temporar pe disk.", "validators", "ro");
    Translator.add("A PHP extension caused the upload to fail.", "O extensie PHP a prevenit \u00eenc\u0103rcarea cu succes a fi\u0219ierului.", "validators", "ro");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Aceast\u0103 colec\u021bie trebuie s\u0103 con\u021bin\u0103 cel pu\u021bin {{ limit }} element.|Aceast\u0103 colec\u021bie trebuie s\u0103 con\u021bin\u0103 cel pu\u021bin {{ limit }} elemente.|Aceast\u0103 colec\u021bie trebuie s\u0103 con\u021bin\u0103 cel pu\u021bin {{ limit }} de elemente.", "validators", "ro");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Aceast\u0103 colec\u021bie trebuie s\u0103 con\u021bin\u0103 cel mult {{ limit }} element.|Aceast\u0103 colec\u021bie trebuie s\u0103 con\u021bin\u0103 cel mult {{ limit }} elemente.|Aceast\u0103 colec\u021bie trebuie s\u0103 con\u021bin\u0103 cel mult {{ limit }} de elemente.", "validators", "ro");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Aceast\u0103 colec\u021bie trebuie s\u0103 con\u021bin\u0103 {{ limit }} element.|Aceast\u0103 colec\u021bie trebuie s\u0103 con\u021bin\u0103 {{ limit }} elemente.|Aceast\u0103 colec\u021bie trebuie s\u0103 con\u021bin\u0103 {{ limit }} de elemente.", "validators", "ro");
    Translator.add("Invalid card number.", "Num\u0103rul card invalid.", "validators", "ro");
    Translator.add("Unsupported card type or invalid card number.", "Tipul sau num\u0103rul cardului nu sunt valide.", "validators", "ro");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Acesta nu este un cod IBAN (International Bank Account Number) valid.", "validators", "ro");
    Translator.add("This value is not a valid ISBN-10.", "Aceast\u0103 valoare nu este un cod ISBN-10 valid.", "validators", "ro");
    Translator.add("This value is not a valid ISBN-13.", "Aceast\u0103 valoare nu este un cod ISBN-13 valid.", "validators", "ro");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Aceast\u0103 valoare nu este un cod ISBN-10 sau ISBN-13 valid.", "validators", "ro");
    Translator.add("This value is not a valid ISSN.", "Aceast\u0103 valoare nu este un cod ISSN valid.", "validators", "ro");
    Translator.add("This value is not a valid currency.", "Aceast\u0103 valoare nu este o moned\u0103 valid\u0103.", "validators", "ro");
    Translator.add("This value should be equal to {{ compared_value }}.", "Aceast\u0103 valoare trebuie s\u0103 fie egal\u0103 cu {{ compared_value }}.", "validators", "ro");
    Translator.add("This value should be greater than {{ compared_value }}.", "Aceast\u0103 valoare trebuie s\u0103 fie mai mare de {{ compared_value }}.", "validators", "ro");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Aceast\u0103 valoare trebuie s\u0103 fie mai mare sau egal\u0103 cu {{ compared_value }}.", "validators", "ro");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Aceast\u0103 valoare trebuie identic\u0103 cu {{ compared_value_type }} {{ compared_value }}.", "validators", "ro");
    Translator.add("This value should be less than {{ compared_value }}.", "Aceast\u0103 valoare trebuie s\u0103 fie mai mic\u0103 de {{ compared_value }}.", "validators", "ro");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Aceast\u0103 valoare trebuie s\u0103 fie mai mic\u0103 sau egal\u0103 cu {{ compared_value }}.", "validators", "ro");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Aceast\u0103 valoare nu trebuie s\u0103 fie egal\u0103 cu {{ compared_value }}.", "validators", "ro");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Aceast\u0103 valoare nu trebuie s\u0103 fie identic\u0103 cu {{ compared_value_type }} {{ compared_value }}.", "validators", "ro");
    Translator.add("This form should not contain extra fields.", "Aceast formular nu ar trebui s\u0103 con\u021bin\u0103 c\u00e2mpuri suplimentare.", "validators", "ro");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Fi\u0219ierul \u00eenc\u0103rcat a fost prea mare. V\u0103 rug\u0103m sa \u00eenc\u0103rca\u021bi un fi\u0219ier mai mic.", "validators", "ro");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "Token-ul CSRF este invalid. V\u0103 rug\u0103m s\u0103 trimite\u021bi formularul inc\u0103 o dat\u0103.", "validators", "ro");
})(Translator);

(function (Translator) {
    // ru
    Translator.add("This value should be false.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043b\u043e\u0436\u043d\u044b\u043c.", "validators", "ru");
    Translator.add("This value should be true.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u043c.", "validators", "ru");
    Translator.add("This value should be of type {{ type }}.", "\u0422\u0438\u043f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c {{ type }}.", "validators", "ru");
    Translator.add("This value should be blank.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c.", "validators", "ru");
    Translator.add("The value you selected is not a valid choice.", "\u0412\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0435 \u0412\u0430\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e.", "validators", "ru");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0445\u043e\u0442\u044f \u0431\u044b {{ limit }} \u0432\u0430\u0440\u0438\u0430\u043d\u0442.|\u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0445\u043e\u0442\u044f \u0431\u044b {{ limit }} \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430.|\u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0445\u043e\u0442\u044f \u0431\u044b {{ limit }} \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432.", "validators", "ru");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u0447\u0435\u043c {{ limit }} \u0432\u0430\u0440\u0438\u0430\u043d\u0442.|\u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u0447\u0435\u043c {{ limit }} \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430.|\u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u0447\u0435\u043c {{ limit }} \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432.", "validators", "ru");
    Translator.add("One or more of the given values is invalid.", "\u041e\u0434\u043d\u043e \u0438\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e.", "validators", "ru");
    Translator.add("This field was not expected.", "\u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435 \u043e\u0436\u0438\u0434\u0430\u043b\u043e\u0441\u044c.", "validators", "ru");
    Translator.add("This field is missing.", "\u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442.", "validators", "ru");
    Translator.add("This value is not a valid date.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0439 \u0434\u0430\u0442\u043e\u0439.", "validators", "ru");
    Translator.add("This value is not a valid datetime.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u0442\u044b \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e.", "validators", "ru");
    Translator.add("This value is not a valid email address.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0430\u0434\u0440\u0435\u0441\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e.", "validators", "ru");
    Translator.add("The file could not be found.", "\u0424\u0430\u0439\u043b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0430\u0439\u0434\u0435\u043d.", "validators", "ru");
    Translator.add("The file is not readable.", "\u0424\u0430\u0439\u043b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d.", "validators", "ru");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0424\u0430\u0439\u043b \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u043e\u0439 ({{ size }} {{ suffix }}). \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 {{ limit }} {{ suffix }}.", "validators", "ru");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "MIME-\u0442\u0438\u043f \u0444\u0430\u0439\u043b\u0430 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c ({{ type }}). \u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b MIME-\u0442\u0438\u043f\u044b \u0444\u0430\u0439\u043b\u043e\u0432 {{ types }}.", "validators", "ru");
    Translator.add("This value should be {{ limit }} or less.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c {{ limit }} \u0438\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435.", "validators", "ru");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0434\u043b\u0438\u043d\u043d\u043e\u0435. \u0414\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0443 \u0438\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435.|\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0434\u043b\u0438\u043d\u043d\u043e\u0435. \u0414\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0438\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435.|\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0434\u043b\u0438\u043d\u043d\u043e\u0435. \u0414\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0438\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435.", "validators", "ru");
    Translator.add("This value should be {{ limit }} or more.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c {{ limit }} \u0438\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435.", "validators", "ru");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0435. \u0414\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0443 \u0438\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435.|\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0435. \u0414\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0438\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435.|\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0435. \u0414\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0438\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435.", "validators", "ru");
    Translator.add("This value should not be blank.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c.", "validators", "ru");
    Translator.add("This value should not be null.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c null.", "validators", "ru");
    Translator.add("This value should be null.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c null.", "validators", "ru");
    Translator.add("This value is not valid.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e.", "validators", "ru");
    Translator.add("This value is not a valid time.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e.", "validators", "ru");
    Translator.add("This value is not a valid URL.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c URL.", "validators", "ru");
    Translator.add("The two values should be equal.", "\u041e\u0431\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c\u0438.", "validators", "ru");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0424\u0430\u0439\u043b \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u043e\u0439. \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 {{ limit }} {{ suffix }}.", "validators", "ru");
    Translator.add("The file is too large.", "\u0424\u0430\u0439\u043b \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u043e\u0439.", "validators", "ru");
    Translator.add("The file could not be uploaded.", "\u0424\u0430\u0439\u043b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d.", "validators", "ru");
    Translator.add("This value should be a valid number.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0447\u0438\u0441\u043b\u043e\u043c.", "validators", "ru");
    Translator.add("This value is not a valid country.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u043e\u0439.", "validators", "ru");
    Translator.add("This file is not a valid image.", "\u0424\u0430\u0439\u043b \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u043c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.", "validators", "ru");
    Translator.add("This is not a valid IP address.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c IP \u0430\u0434\u0440\u0435\u0441\u043e\u043c.", "validators", "ru");
    Translator.add("This value is not a valid language.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u044f\u0437\u044b\u043a\u043e\u043c.", "validators", "ru");
    Translator.add("This value is not a valid locale.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0439 \u043b\u043e\u043a\u0430\u043b\u044c\u044e.", "validators", "ru");
    Translator.add("This value is already used.", "\u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0443\u0436\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f.", "validators", "ru");
    Translator.add("The size of the image could not be detected.", "\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.", "validators", "ru");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u0428\u0438\u0440\u0438\u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0432\u0435\u043b\u0438\u043a\u0430 ({{ width }}px). \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430\u044f \u0448\u0438\u0440\u0438\u043d\u0430 {{ max_width }}px.", "validators", "ru");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u0428\u0438\u0440\u0438\u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u0430\u043b\u0430 ({{ width }}px). \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430\u044f \u0448\u0438\u0440\u0438\u043d\u0430 {{ min_width }}px.", "validators", "ru");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u0412\u044b\u0441\u043e\u0442\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0432\u0435\u043b\u0438\u043a\u0430 ({{ height }}px). \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430\u044f \u0432\u044b\u0441\u043e\u0442\u0430 {{ max_height }}px.", "validators", "ru");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u0412\u044b\u0441\u043e\u0442\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u0430\u043b\u0430 ({{ height }}px). \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430\u044f \u0432\u044b\u0441\u043e\u0442\u0430 {{ min_height }}px.", "validators", "ru");
    Translator.add("This value should be the user's current password.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u043f\u0430\u0440\u043e\u043b\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.", "validators", "ru");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0443.|\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c.|\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c.", "validators", "ru");
    Translator.add("The file was only partially uploaded.", "\u0424\u0430\u0439\u043b \u0431\u044b\u043b \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e.", "validators", "ru");
    Translator.add("No file was uploaded.", "\u0424\u0430\u0439\u043b \u043d\u0435 \u0431\u044b\u043b \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d.", "validators", "ru");
    Translator.add("No temporary folder was configured in php.ini.", "\u041d\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u0432 php.ini.", "validators", "ru");
    Translator.add("Cannot write temporary file to disk.", "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u043d\u0430 \u0434\u0438\u0441\u043a.", "validators", "ru");
    Translator.add("A PHP extension caused the upload to fail.", "\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 PHP \u0432\u044b\u0437\u0432\u0430\u043b\u043e \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435.", "validators", "ru");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "\u042d\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c {{ limit }} \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435.|\u042d\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c {{ limit }} \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435.|\u042d\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c {{ limit }} \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435.", "validators", "ru");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u042d\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c {{ limit }} \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435.|\u042d\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c {{ limit }} \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435.|\u042d\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c {{ limit }} \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435.", "validators", "ru");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u042d\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0440\u043e\u0432\u043d\u043e {{ limit }} \u044d\u043b\u0435\u043c\u0435\u043d\u0442.|\u042d\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0440\u043e\u0432\u043d\u043e {{ limit }} \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430.|\u042d\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0440\u043e\u0432\u043d\u043e {{ limit }} \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.", "validators", "ru");
    Translator.add("Invalid card number.", "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u043a\u0430\u0440\u0442\u044b.", "validators", "ru");
    Translator.add("Unsupported card type or invalid card number.", "\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0442\u0438\u043f \u0438\u043b\u0438 \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u043a\u0430\u0440\u0442\u044b.", "validators", "ru");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u044b\u043c \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0441\u0447\u0435\u0442\u0430 (IBAN).", "validators", "ru");
    Translator.add("This value is not a valid ISBN-10.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u043c\u0435\u0435\u0442 \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 ISBN-10.", "validators", "ru");
    Translator.add("This value is not a valid ISBN-13.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u043c\u0435\u0435\u0442 \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 ISBN-13.", "validators", "ru");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u043c ISBN-10 \u0438 ISBN-13.", "validators", "ru");
    Translator.add("This value is not a valid ISSN.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0444\u043e\u0440\u043c\u0430\u0442\u0443 ISSN.", "validators", "ru");
    Translator.add("This value is not a valid currency.", "\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0432\u0430\u043b\u044e\u0442\u044b.", "validators", "ru");
    Translator.add("This value should be equal to {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e {{ compared_value }}.", "validators", "ru");
    Translator.add("This value should be greater than {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0447\u0435\u043c {{ compared_value }}.", "validators", "ru");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e {{ compared_value }}.", "validators", "ru");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u044b\u043c {{ compared_value_type }} {{ compared_value }}.", "validators", "ru");
    Translator.add("This value should be less than {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043c\u0435\u043d\u044c\u0448\u0435 \u0447\u0435\u043c {{ compared_value }}.", "validators", "ru");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043c\u0435\u043d\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e {{ compared_value }}.", "validators", "ru");
    Translator.add("This value should not be equal to {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e {{ compared_value }}.", "validators", "ru");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u044b\u043c {{ compared_value_type }} {{ compared_value }}.", "validators", "ru");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "\u0421\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u0441\u0442\u043e\u0440\u043e\u043d \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0432\u0435\u043b\u0438\u043a\u043e ({{ ratio }}). \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u0441\u0442\u043e\u0440\u043e\u043d {{ max_ratio }}.", "validators", "ru");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "\u0421\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u0441\u0442\u043e\u0440\u043e\u043d \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u0430\u043b\u043e ({{ ratio }}). \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u0441\u0442\u043e\u0440\u043e\u043d {{ min_ratio }}.", "validators", "ru");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0435 ({{ width }}x{{ height }}px). \u041a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u044b.", "validators", "ru");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 \u0430\u043b\u044c\u0431\u043e\u043c\u043d\u043e\u0439 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u0438 ({{ width }}x{{ height }}px). \u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u0430\u043b\u044c\u0431\u043e\u043c\u043d\u043e\u0439 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u044b.", "validators", "ru");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 \u043f\u043e\u0440\u0442\u0440\u0435\u0442\u043d\u043e\u0439 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u0438 ({{ width }}x{{ height }}px). \u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u043f\u043e\u0440\u0442\u0440\u0435\u0442\u043d\u043e\u0439 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u044b.", "validators", "ru");
    Translator.add("An empty file is not allowed.", "\u041f\u0443\u0441\u0442\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u044b.", "validators", "ru");
    Translator.add("The host could not be resolved.", "\u0418\u043c\u044f \u0445\u043e\u0441\u0442\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e.", "validators", "ru");
    Translator.add("This value does not match the expected {{ charset }} charset.", "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442 \u0441 \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0439 {{ charset }} \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u043e\u0439.", "validators", "ru");
    Translator.add("This form should not contain extra fields.", "\u042d\u0442\u0430 \u0444\u043e\u0440\u043c\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u043b\u0435\u0439.", "validators", "ru");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u0417\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u043e\u0439. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0430\u0439\u043b \u043c\u0435\u043d\u044c\u0448\u0435\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430.", "validators", "ru");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0444\u043e\u0440\u043c\u044b.", "validators", "ru");
})(Translator);

(function (Translator) {
    // sk
    Translator.add("This value should be false.", "T\u00e1to hodnota by mala by\u0165 nastaven\u00e1 na false.", "validators", "sk");
    Translator.add("This value should be true.", "T\u00e1to hodnota by mala by\u0165 nastaven\u00e1 na true.", "validators", "sk");
    Translator.add("This value should be of type {{ type }}.", "T\u00e1to hodnota by mala by\u0165 typu {{ type }}.", "validators", "sk");
    Translator.add("This value should be blank.", "T\u00e1to hodnota by mala by\u0165 pr\u00e1zdna.", "validators", "sk");
    Translator.add("The value you selected is not a valid choice.", "T\u00e1to hodnota by mala by\u0165 jednou z poskytnut\u00fdch mo\u017enost\u00ed.", "validators", "sk");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Mali by ste vybra\u0165 minim\u00e1lne {{ limit }} mo\u017enos\u0165.|Mali by ste vybra\u0165 minim\u00e1lne {{ limit }} mo\u017enosti.|Mali by ste vybra\u0165 minim\u00e1lne {{ limit }} mo\u017enost\u00ed.", "validators", "sk");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Mali by ste vybra\u0165 najviac {{ limit }} mo\u017enos\u0165.|Mali by ste vybra\u0165 najviac {{ limit }} mo\u017enosti.|Mali by ste vybra\u0165 najviac {{ limit }} mo\u017enost\u00ed.", "validators", "sk");
    Translator.add("One or more of the given values is invalid.", "Niektor\u00e9 z uveden\u00fdch hodn\u00f4t s\u00fa neplatn\u00e9.", "validators", "sk");
    Translator.add("This field was not expected.", "Toto pole sa neo\u010dak\u00e1va.", "validators", "sk");
    Translator.add("This field is missing.", "Toto pole ch\u00fdba.", "validators", "sk");
    Translator.add("This value is not a valid date.", "Tato hodnota nem\u00e1 platn\u00fd form\u00e1t d\u00e1tumu.", "validators", "sk");
    Translator.add("This value is not a valid datetime.", "T\u00e1to hodnota nem\u00e1 platn\u00fd form\u00e1t d\u00e1tumu a \u010dasu.", "validators", "sk");
    Translator.add("This value is not a valid email address.", "T\u00e1to hodnota nie je platn\u00e1 emailov\u00e1 adresa.", "validators", "sk");
    Translator.add("The file could not be found.", "S\u00fabor sa nena\u0161iel.", "validators", "sk");
    Translator.add("The file is not readable.", "S\u00fabor nie je \u010ditate\u013en\u00fd.", "validators", "sk");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "S\u00fabor je pr\u00edli\u0161 ve\u013ek\u00fd ({{ size }} {{ suffix }}). Maxim\u00e1lna povolen\u00e1 ve\u013ekos\u0165 je {{ limit }} {{ suffix }}.", "validators", "sk");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "S\u00fabor typu ({{ type }}) nie je podporovan\u00fd. Podporovan\u00e9 typy s\u00fa {{ types }}.", "validators", "sk");
    Translator.add("This value should be {{ limit }} or less.", "T\u00e1to hodnota by mala by\u0165 {{ limit }} alebo menej.", "validators", "sk");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "T\u00e1to hodnota obsahuje viac znakov ako je povolen\u00e9. Mala by obsahova\u0165 najviac {{ limit }} znak.|T\u00e1to hodnota obsahuje viac znakov ako je povolen\u00e9. Mala by obsahova\u0165 najviac {{ limit }} znaky.|T\u00e1to hodnota obsahuje viac znakov ako je povolen\u00e9. Mala by obsahova\u0165 najviac {{ limit }} znakov.", "validators", "sk");
    Translator.add("This value should be {{ limit }} or more.", "T\u00e1to hodnota by mala by\u0165 viac ako {{ limit }}.", "validators", "sk");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "T\u00e1to hodnota je pr\u00edli\u0161 kr\u00e1tka. Mus\u00ed obsahova\u0165 minim\u00e1lne {{ limit }} znak.|T\u00e1to hodnota je pr\u00edli\u0161 kr\u00e1tka. Mus\u00ed obsahova\u0165 minim\u00e1lne {{ limit }} znaky.|T\u00e1to hodnota je pr\u00edli\u0161 kr\u00e1tka. Minim\u00e1lny po\u010det znakov je {{ limit }}.", "validators", "sk");
    Translator.add("This value should not be blank.", "T\u00e1to hodnota by mala by\u0165 vyplnen\u00e1.", "validators", "sk");
    Translator.add("This value should not be null.", "T\u00e1to hodnota by nemala by\u0165 null.", "validators", "sk");
    Translator.add("This value should be null.", "T\u00e1to hodnota by mala by\u0165 null.", "validators", "sk");
    Translator.add("This value is not valid.", "T\u00e1to hodnota nie je platn\u00e1.", "validators", "sk");
    Translator.add("This value is not a valid time.", "Tato hodnota nem\u00e1 spr\u00e1vny form\u00e1t \u010dasu.", "validators", "sk");
    Translator.add("This value is not a valid URL.", "T\u00e1to hodnota nie je platnou URL adresou.", "validators", "sk");
    Translator.add("The two values should be equal.", "Tieto dve hodnoty by mali by\u0165 rovnak\u00e9.", "validators", "sk");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "S\u00fabor je pr\u00edli\u0161 ve\u013ek\u00fd. Maxim\u00e1lna povolen\u00e1 ve\u013ekos\u0165 je {{ limit }} {{ suffix }}.", "validators", "sk");
    Translator.add("The file is too large.", "S\u00fabor je pr\u00edli\u0161 ve\u013ek\u00fd.", "validators", "sk");
    Translator.add("The file could not be uploaded.", "S\u00fabor sa nepodarilo nahra\u0165.", "validators", "sk");
    Translator.add("This value should be a valid number.", "T\u00e1to hodnota by mala by\u0165 \u010d\u00edslo.", "validators", "sk");
    Translator.add("This file is not a valid image.", "Tento s\u00fabor nie je obr\u00e1zok.", "validators", "sk");
    Translator.add("This is not a valid IP address.", "Toto nie je platn\u00e1 IP adresa.", "validators", "sk");
    Translator.add("This value is not a valid language.", "Tento jazyk neexistuje.", "validators", "sk");
    Translator.add("This value is not a valid locale.", "T\u00e1to lokaliz\u00e1cia neexistuje.", "validators", "sk");
    Translator.add("This value is not a valid country.", "T\u00e1to krajina neexistuje.", "validators", "sk");
    Translator.add("This value is already used.", "T\u00e1to hodnota sa u\u017e pou\u017e\u00edva.", "validators", "sk");
    Translator.add("The size of the image could not be detected.", "Nepodarilo sa zisti\u0165 rozmery obr\u00e1zku.", "validators", "sk");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Obr\u00e1zok je pr\u00edli\u0161 \u0161irok\u00fd ({{ width }}px). Maxim\u00e1lna povolen\u00e1 \u0161\u00edrka obr\u00e1zku je {{ max_width }}px.", "validators", "sk");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Obr\u00e1zok je pr\u00edli\u0161 \u00fazky ({{ width }}px). Minim\u00e1lna \u0161\u00edrka obr\u00e1zku by mala by\u0165 {{ min_width }}px.", "validators", "sk");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", ">Obr\u00e1zok je pr\u00edli\u0161 vysok\u00fd ({{ height }}px). Maxim\u00e1lna povolen\u00e1 v\u00fd\u0161ka obr\u00e1zku je {{ max_height }}px.", "validators", "sk");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Obr\u00e1zok je pr\u00edli\u0161 n\u00edzky ({{ height }}px). Minim\u00e1lna v\u00fd\u0161ka obr\u00e1zku by mala by\u0165 {{ min_height }}px.", "validators", "sk");
    Translator.add("This value should be the user's current password.", "T\u00e1to hodnota by mala by\u0165 aktu\u00e1lne heslo pou\u017e\u00edvate\u013ea.", "validators", "sk");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "T\u00e1to hodnota by mala ma\u0165 presne {{ limit }} znak.|T\u00e1to hodnota by mala ma\u0165 presne {{ limit }} znaky.|T\u00e1to hodnota by mala ma\u0165 presne {{ limit }} znakov.", "validators", "sk");
    Translator.add("The file was only partially uploaded.", "Bola nahran\u00e1 len \u010das\u0165 s\u00faboru.", "validators", "sk");
    Translator.add("No file was uploaded.", "\u017diadny s\u00fabor nebol nahran\u00fd.", "validators", "sk");
    Translator.add("No temporary folder was configured in php.ini.", "V php.ini nie je nastaven\u00e1 cesta k adres\u00e1ru pre do\u010dasn\u00e9 s\u00fabory.", "validators", "sk");
    Translator.add("Cannot write temporary file to disk.", "Do\u010dasn\u00fd s\u00fabor sa nepodarilo zap\u00edsa\u0165 na disk.", "validators", "sk");
    Translator.add("A PHP extension caused the upload to fail.", "Roz\u0161\u00edrenie PHP zabr\u00e1nilo nahraniu s\u00faboru.", "validators", "sk");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "T\u00e1to kolekcia by mala obsahova\u0165 aspo\u0148 {{ limit }} prvok alebo viac.|T\u00e1to kolekcia by mala obsahova\u0165 aspo\u0148 {{ limit }} prvky alebo viac.|T\u00e1to kolekcia by mala obsahova\u0165 aspo\u0148 {{ limit }} prvkov alebo viac.", "validators", "sk");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "T\u00e1to kolekcia by mala maxim\u00e1lne {{ limit }} prvok.|T\u00e1to kolekcia by mala obsahova\u0165 maxim\u00e1lne {{ limit }} prvky.|T\u00e1to kolekcia by mala obsahova\u0165 maxim\u00e1lne {{ limit }} prvkov.", "validators", "sk");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "T\u00e1to kolekcia by mala obsahova\u0165 presne {{ limit }} prvok.|T\u00e1to kolekcia by mala obsahova\u0165 presne {{ limit }} prvky.|T\u00e1to kolekcia by mala obsahova\u0165 presne {{ limit }} prvkov.", "validators", "sk");
    Translator.add("Invalid card number.", "Neplatn\u00e9 \u010d\u00edslo karty.", "validators", "sk");
    Translator.add("Unsupported card type or invalid card number.", "Nepodporovan\u00fd typ karty alebo neplatn\u00e9 \u010d\u00edslo karty.", "validators", "sk");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Toto je neplatn\u00fd IBAN.", "validators", "sk");
    Translator.add("This value is not a valid ISBN-10.", "T\u00e1to hodnota je neplatn\u00e9 ISBN-10.", "validators", "sk");
    Translator.add("This value is not a valid ISBN-13.", "T\u00e1to hodnota je neplatn\u00e9 ISBN-13.", "validators", "sk");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "T\u00e1to hodnota nie je platn\u00e9 ISBN-10 ani ISBN-13.", "validators", "sk");
    Translator.add("This value is not a valid ISSN.", "T\u00e1to hodnota nie je platn\u00e9 ISSN.", "validators", "sk");
    Translator.add("This value is not a valid currency.", "T\u00e1to hodnota nie je platn\u00e1 mena.", "validators", "sk");
    Translator.add("This value should be equal to {{ compared_value }}.", "T\u00e1to hodnota by mala by\u0165 rovn\u00e1 {{ compared_value }}.", "validators", "sk");
    Translator.add("This value should be greater than {{ compared_value }}.", "T\u00e1to hodnota by mala by\u0165 v\u00e4\u010d\u0161ia ako {{ compared_value }}.", "validators", "sk");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "T\u00e1to hodnota by mala by\u0165 v\u00e4\u010d\u0161ia alebo rovn\u00e1 {{ compared_value }}.", "validators", "sk");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "T\u00e1to hodnota by mala by\u0165 typu {{ compared_value_type }} a z\u00e1rove\u0148 by mala by\u0165 rovn\u00e1 {{ compared_value }}.", "validators", "sk");
    Translator.add("This value should be less than {{ compared_value }}.", "T\u00e1to hodnota by mala by\u0165 men\u0161ia ako {{ compared_value }}.", "validators", "sk");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "T\u00e1to hodnota by mala by\u0165 men\u0161ia alebo rovn\u00e1 {{ compared_value }}.", "validators", "sk");
    Translator.add("This value should not be equal to {{ compared_value }}.", "T\u00e1to hodnota by nemala by\u0165 rovn\u00e1 {{ compared_value }}.", "validators", "sk");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "T\u00e1to hodnota by nemala by\u0165 typu {{ compared_value_type }} a z\u00e1rove\u0148 by nemala by\u0165 rovn\u00e1 {{ compared_value }}.", "validators", "sk");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "Pomer str\u00e1n obr\u00e1zku je pr\u00edli\u0161 ve\u013ek\u00fd ({{ ratio }}). Maxim\u00e1lny povolen\u00fd pomer str\u00e1n obr\u00e1zku je {{ max_ratio }}.", "validators", "sk");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "Pomer str\u00e1n obr\u00e1zku je pr\u00edli\u0161 mal\u00fd ({{ ratio }}). Minim\u00e1lny povolen\u00fd pomer str\u00e1n obr\u00e1zku je {{ min_ratio }}.", "validators", "sk");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "Strany obr\u00e1zku s\u00fa \u0161tvorcov\u00e9 ({{ width }}x{{ height }}px). \u0160tvorcov\u00e9 obr\u00e1zky nie s\u00fa povolen\u00e9.", "validators", "sk");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "Obr\u00e1zok je orientovan\u00fd na \u0161\u00edrku ({{ width }}x{{ height }}px). Obr\u00e1zky orientovan\u00e9 na \u0161\u00edrku nie s\u00fa povolen\u00e9.", "validators", "sk");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "Obr\u00e1zok je orientovan\u00fd na v\u00fd\u0161ku ({{ width }}x{{ height }}px). Obr\u00e1zky orientovan\u00e9 na v\u00fd\u0161ku nie s\u00fa povolen\u00e9.", "validators", "sk");
    Translator.add("An empty file is not allowed.", "S\u00fabor nesmie by\u0165 pr\u00e1zdny.", "validators", "sk");
    Translator.add("This form should not contain extra fields.", "Polia by nemali obsahova\u0165 \u010fal\u0161ie prvky.", "validators", "sk");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Odoslan\u00fd s\u00fabor je pr\u00edli\u0161 ve\u013ek\u00fd. Pros\u00edm odo\u0161lite s\u00fabor s men\u0161ou ve\u013ekos\u0165ou.", "validators", "sk");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF token je neplatn\u00fd. Pros\u00edm sk\u00faste znovu odosla\u0165 formul\u00e1r.", "validators", "sk");
})(Translator);

(function (Translator) {
    // sl
    Translator.add("This value should be false.", "Vrednost bi morala biti nepravilna (false).", "validators", "sl");
    Translator.add("This value should be true.", "Vrednost bi morala biti pravilna (true).", "validators", "sl");
    Translator.add("This value should be of type {{ type }}.", "Vrednost mora biti naslednjega tipa {{ type }}.", "validators", "sl");
    Translator.add("This value should be blank.", "Vrednost mora biti prazna.", "validators", "sl");
    Translator.add("The value you selected is not a valid choice.", "Vrednost, ki ste jo izbrali, ni veljavna mo\u017enost.", "validators", "sl");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Izbrati morate vsaj {{ limit }} mo\u017enost.|Izbrati morate vsaj {{ limit }} mo\u017enosti.|Izbrati morate vsaj {{ limit }} mo\u017enosti.|Izbrati morate vsaj {{ limit }} mo\u017enosti.", "validators", "sl");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Izberete lahko najve\u010d {{ limit }} mo\u017enost.|Izberete lahko najve\u010d {{ limit }} mo\u017enosti.|Izberete lahko najve\u010d {{ limit }} mo\u017enosti.|Izberete lahko najve\u010d {{ limit }} mo\u017enosti.", "validators", "sl");
    Translator.add("One or more of the given values is invalid.", "Ena ali ve\u010d podanih vrednosti ni veljavnih.", "validators", "sl");
    Translator.add("This field was not expected.", "To polje ni bilo pri\u010dakovati.", "validators", "sl");
    Translator.add("This field is missing.", "To polje manjka.", "validators", "sl");
    Translator.add("This value is not a valid date.", "Ta vrednost ni veljaven datum.", "validators", "sl");
    Translator.add("This value is not a valid datetime.", "Ta vrednost ni veljaven datum in \u010das.", "validators", "sl");
    Translator.add("This value is not a valid email address.", "Ta vrednost ni veljaven e-po\u0161tni naslov.", "validators", "sl");
    Translator.add("The file could not be found.", "Datoteke ni mogo\u010de najti.", "validators", "sl");
    Translator.add("The file is not readable.", "Datoteke ni mogo\u010de prebrati.", "validators", "sl");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Datoteka je prevelika ({{ size }} {{ suffix }}). Najve\u010dja dovoljena velikost je {{ limit }} {{ suffix }}.", "validators", "sl");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Mime tip datoteke je neveljaven ({{ type }}). Dovoljeni mime tipi so {{ types }}.", "validators", "sl");
    Translator.add("This value should be {{ limit }} or less.", "Ta vrednost bi morala biti {{ limit }} ali manj.", "validators", "sl");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Ta vrednost je predolga. Morala bi imeti {{ limit }} znak ali manj.|Ta vrednost je predolga. Morala bi imeti {{ limit }} znaka ali manj.|Ta vrednost je predolga. Morala bi imeti {{ limit }} znake ali manj.|Ta vrednost je predolga. Morala bi imeti {{ limit }} znakov ali manj.", "validators", "sl");
    Translator.add("This value should be {{ limit }} or more.", "Ta vrednost bi morala biti {{ limit }} ali ve\u010d.", "validators", "sl");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Ta vrednost je prekratka. Morala bi imeti {{ limit }} znak ali ve\u010d.|Ta vrednost je prekratka. Morala bi imeti {{ limit }} znaka ali ve\u010d.|Ta vrednost je prekratka. Morala bi imeti {{ limit }} znake ali ve\u010d.|Ta vrednost je prekratka. Morala bi imeti {{ limit }} znakov ali ve\u010d.", "validators", "sl");
    Translator.add("This value should not be blank.", "Ta vrednost ne bi smela biti prazna.", "validators", "sl");
    Translator.add("This value should not be null.", "Ta vrednost ne bi smela biti nedefinirana (null).", "validators", "sl");
    Translator.add("This value should be null.", "Ta vrednost bi morala biti nedefinirana (null).", "validators", "sl");
    Translator.add("This value is not valid.", "Ta vrednost ni veljavna.", "validators", "sl");
    Translator.add("This value is not a valid time.", "Ta vrednost ni veljaven \u010das.", "validators", "sl");
    Translator.add("This value is not a valid URL.", "Ta vrednost ni veljaven URL.", "validators", "sl");
    Translator.add("The two values should be equal.", "Ti dve vrednosti bi morali biti enaki.", "validators", "sl");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Datoteka je prevelika. Najve\u010dja dovoljena velikost je {{ limit }} {{ suffix }}.", "validators", "sl");
    Translator.add("The file is too large.", "Datoteka je prevelika.", "validators", "sl");
    Translator.add("The file could not be uploaded.", "Datoteke ni bilo mogo\u010de nalo\u017eiti.", "validators", "sl");
    Translator.add("This value should be a valid number.", "Ta vrednost bi morala biti veljavna \u0161tevilka.", "validators", "sl");
    Translator.add("This file is not a valid image.", "Ta datoteka ni veljavna slika.", "validators", "sl");
    Translator.add("This is not a valid IP address.", "To ni veljaven IP naslov.", "validators", "sl");
    Translator.add("This value is not a valid language.", "Ta vrednost ni veljaven jezik.", "validators", "sl");
    Translator.add("This value is not a valid locale.", "Ta vrednost ni veljavna lokalnost.", "validators", "sl");
    Translator.add("This value is not a valid country.", "Ta vrednost ni veljavna dr\u017eava.", "validators", "sl");
    Translator.add("This value is already used.", "Ta vrednost je \u017ee uporabljena.", "validators", "sl");
    Translator.add("The size of the image could not be detected.", "Velikosti slike ni bilo mogo\u010de zaznati.", "validators", "sl");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u0160irina slike je pre\u0161iroka ({{ width }}px). Najve\u010dja dovoljena \u0161irina je {{ max_width }}px.", "validators", "sl");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u0160irina slike je premajhna ({{ width }}px). Najmanj\u0161a predvidena \u0161irina je {{ min_width }}px.", "validators", "sl");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Vi\u0161ina slike je prevelika ({{ height }}px). Najve\u010dja dovoljena vi\u0161ina je {{ max_height }}px.", "validators", "sl");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Vi\u0161ina slike je premajhna ({{ height }}px). Najmanj\u0161a predvidena vi\u0161ina je {{ min_height }}px.", "validators", "sl");
    Translator.add("This value should be the user's current password.", "Ta vrednost bi morala biti trenutno uporabnikovo geslo.", "validators", "sl");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Ta vrednost bi morala imeti to\u010dno {{ limit }} znak.|Ta vrednost bi morala imeti to\u010dno {{ limit }} znaka.|Ta vrednost bi morala imeti to\u010dno {{ limit }} znake.|Ta vrednost bi morala imeti to\u010dno {{ limit }} znakov.", "validators", "sl");
    Translator.add("The file was only partially uploaded.", "Datoteka je bila le delno nalo\u017eena.", "validators", "sl");
    Translator.add("No file was uploaded.", "Nobena datoteka ni bila nalo\u017eena.", "validators", "sl");
    Translator.add("No temporary folder was configured in php.ini.", "Za\u010dasna mapa ni nastavljena v php.ini.", "validators", "sl");
    Translator.add("Cannot write temporary file to disk.", "Za\u010dasne datoteke ni bilo mogo\u010de zapisati na disk.", "validators", "sl");
    Translator.add("A PHP extension caused the upload to fail.", "PHP raz\u0161iritev je vzrok, da nalaganje ni uspelo.", "validators", "sl");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Ta zbirka bi morala vsebovati {{ limit }} element ali ve\u010d.|Ta zbirka bi morala vsebovati {{ limit }} elementa ali ve\u010d.|Ta zbirka bi morala vsebovati {{ limit }} elemente ali ve\u010d.|Ta zbirka bi morala vsebovati {{ limit }} elementov ali ve\u010d.", "validators", "sl");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Ta zbirka bi morala vsebovati {{ limit }} element ali manj.|Ta zbirka bi morala vsebovati {{ limit }} elementa ali manj.|Ta zbirka bi morala vsebovati {{ limit }} elemente ali manj.|Ta zbirka bi morala vsebovati {{ limit }} elementov ali manj.", "validators", "sl");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Ta zbirka bi morala vsebovati to\u010dno {{ limit }} element.|Ta zbirka bi morala vsebovati to\u010dno {{ limit }} elementa.|Ta zbirka bi morala vsebovati to\u010dno {{ limit }} elemente.|Ta zbirka bi morala vsebovati to\u010dno {{ limit }} elementov.", "validators", "sl");
    Translator.add("Invalid card number.", "Neveljavna \u0161tevilka kartice.", "validators", "sl");
    Translator.add("Unsupported card type or invalid card number.", "Nepodprti tip kartice ali neveljavna \u0161tevilka kartice.", "validators", "sl");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "To ni veljavna mednarodna \u0161tevilka ban\u010dnega ra\u010duna (IBAN).", "validators", "sl");
    Translator.add("This value is not a valid ISBN-10.", "Neveljavna vrednost po ISBN-10.", "validators", "sl");
    Translator.add("This value is not a valid ISBN-13.", "Neveljavna vrednost po ISBN-13.", "validators", "sl");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Neveljavna vrednost po ISBN-10 ali po ISBN-13.", "validators", "sl");
    Translator.add("This value is not a valid ISSN.", "Neveljavna vrednost ISSN.", "validators", "sl");
    Translator.add("This value is not a valid currency.", "Ta vrednost ni veljavna valuta.", "validators", "sl");
    Translator.add("This value should be equal to {{ compared_value }}.", "Ta vrednost bi morala biti enaka {{ compared_value }}.", "validators", "sl");
    Translator.add("This value should be greater than {{ compared_value }}.", "Ta vrednost bi morala biti ve\u010dja od {{ compared_value }}.", "validators", "sl");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Ta vrednost bi morala biti ve\u010dja ali enaka {{ compared_value }}.", "validators", "sl");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Ta vrednost bi morala biti identi\u010dna {{ compared_value_type }} {{ compared_value }}.", "validators", "sl");
    Translator.add("This value should be less than {{ compared_value }}.", "Ta vrednost bi morala biti manj\u0161a od {{ compared_value }}.", "validators", "sl");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Ta vrednost bi morala biti manj\u0161a ali enaka {{ compared_value }}.", "validators", "sl");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Ta vrednost ne bi smela biti enaka {{ compared_value }}.", "validators", "sl");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Ta vrednost ne bi smela biti identi\u010dna {{ compared_value_type }} {{ compared_value }}.", "validators", "sl");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "Razmerje slike je preveliko ({{ ratio }}). Najve\u010dje dovoljeno razmerje je {{ max_ratio }}.", "validators", "sl");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "Razmerje slike je premajhno ({{ ratio }}). Najmanj\u0161e pri\u010dakovano razmerje je {{ min_ratio }}.", "validators", "sl");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "Slika je kvadrat ({{ width }}x{{ height }}px). Kvadratne slike niso dovoljene.", "validators", "sl");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "Slika je le\u017ee\u010de usmerjena ({{ width }}x{{ height }}px). Le\u017ee\u010de usmerjene slike niso dovoljene.", "validators", "sl");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "Slika je pokon\u010dno usmerjena ({{ width }}x{{ height }}px). Pokon\u010dno usmerjene slike niso dovoljene.", "validators", "sl");
    Translator.add("An empty file is not allowed.", "Prazna datoteka ni dovoljena.", "validators", "sl");
    Translator.add("The host could not be resolved.", "Gostitelja ni bilo mogo\u010de prepoznati.", "validators", "sl");
    Translator.add("This value does not match the expected {{ charset }} charset.", "Ta vrednost se ne ujema s pri\u010dakovanim naborom znakov {{ charset }}.", "validators", "sl");
    Translator.add("This is not a valid Business Identifier Code (BIC).", "To ni veljavna identifikacijska koda podjetja (BIC).", "validators", "sl");
    Translator.add("This form should not contain extra fields.", "Ta obrazec ne sme vsebovati dodatnih polj.", "validators", "sl");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Nalo\u017eena datoteka je prevelika. Prosimo, poizkusite nalo\u017eiti manj\u0161o.", "validators", "sl");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF vrednost je napa\u010dna. Prosimo, ponovno po\u0161ljite obrazec.", "validators", "sl");
})(Translator);

(function (Translator) {
    // sq
    Translator.add("This value should be false.", "Kjo vler\u00eb duhet t\u00eb jet\u00eb e pav\u00ebrtet\u00eb (false).", "validators", "sq");
    Translator.add("This value should be true.", "Kjo vler\u00eb duhet t\u00eb jet\u00eb e v\u00ebrtet\u00eb (true).", "validators", "sq");
    Translator.add("This value should be of type {{ type }}.", "Kjo vler\u00eb duhet t\u00eb jet\u00eb e llojit {{ type }}.", "validators", "sq");
    Translator.add("This value should be blank.", "Kjo vler\u00eb duhet t\u00eb jet\u00eb e zbraz\u00ebt.", "validators", "sq");
    Translator.add("The value you selected is not a valid choice.", "Vlera q\u00eb keni zgjedhur nuk \u00ebsht\u00eb alternativ\u00eb e vlefshme.", "validators", "sq");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Duhet t\u00eb zgjedhni s\u00eb paku {{ limit }} alternativa.|Duhet t\u00eb zgjedhni s\u00eb paku {{ limit }} alternativa.", "validators", "sq");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Duhet t\u00eb zgjedhni m\u00eb s\u00eb shumti {{ limit }} alternativa.|Duhet t\u00eb zgjedhni m\u00eb s\u00eb shumti {{ limit }} alternativa.", "validators", "sq");
    Translator.add("One or more of the given values is invalid.", "Nj\u00eb apo m\u00eb shum\u00eb nga vlerat e dh\u00ebna nuk jan\u00eb t\u00eb sakta.", "validators", "sq");
    Translator.add("This field was not expected.", "Kjo fush\u00eb nuk pritej.", "validators", "sq");
    Translator.add("This field is missing.", "Kjo fush\u00eb \u00ebsht\u00eb zhdukur.", "validators", "sq");
    Translator.add("This value is not a valid date.", "Kjo vler\u00eb nuk \u00ebsht\u00eb dat\u00eb e vlefshme.", "validators", "sq");
    Translator.add("This value is not a valid datetime.", "Kjo vler\u00eb nuk \u00ebsht\u00eb dat\u00eb-koh\u00eb e vlefshme.", "validators", "sq");
    Translator.add("This value is not a valid email address.", "Kjo vler\u00eb nuk \u00ebsht\u00eb e-mail adres\u00eb e vlefshme.", "validators", "sq");
    Translator.add("The file could not be found.", "File nuk mund t\u00eb gjindej.", "validators", "sq");
    Translator.add("The file is not readable.", "File nuk \u00ebsht\u00eb i lexuesh\u00ebm.", "validators", "sq");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "File \u00ebsht\u00eb shum\u00eb i madh ({{ size }} {{ suffix }}). Madh\u00ebsia m\u00eb e madhe e lejuar \u00ebsht\u00eb {{ limit }} {{ suffix }}.", "validators", "sq");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Lloji mime i files nuk \u00ebsht\u00eb i vlefsh\u00ebm ({{ type }}). Llojet mime t\u00eb lejuara jan\u00eb {{ types }}.", "validators", "sq");
    Translator.add("This value should be {{ limit }} or less.", "Kjo vler\u00eb duhet t\u00eb jet\u00eb {{ limit }} ose m\u00eb pak.", "validators", "sq");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Kjo vler\u00eb \u00ebsht\u00eb shum\u00eb e gjat\u00eb. Duhet t'i ket\u00eb {{ limit }} ose m\u00eb pak karaktere.|Kjo vler\u00eb \u00ebsht\u00eb shum\u00eb e gjat\u00eb. Duhet t'i ket\u00eb {{ limit }} ose m\u00eb pak karaktere.", "validators", "sq");
    Translator.add("This value should be {{ limit }} or more.", "Kjo vler\u00eb duhet t\u00eb jet\u00eb {{ limit }} ose m\u00eb shum\u00eb.", "validators", "sq");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Kjo vler\u00eb \u00ebsht\u00eb shum\u00eb e shkurt\u00ebr. Duhet t'i ket\u00eb {{ limit }} ose m\u00eb shum\u00eb karaktere.|Kjo vler\u00eb \u00ebsht\u00eb shum\u00eb e shkurt\u00ebr. Duhet t'i ket\u00eb {{ limit }} ose m\u00eb shum\u00eb karaktere.", "validators", "sq");
    Translator.add("This value should not be blank.", "Kjo vler\u00eb nuk duhet t\u00eb jet\u00eb e zbraz\u00ebt.", "validators", "sq");
    Translator.add("This value should not be null.", "Kjo vler\u00eb nuk duhet t\u00eb jet\u00eb null.", "validators", "sq");
    Translator.add("This value should be null.", "Kjo vler\u00eb duhet t\u00eb jet\u00eb null.", "validators", "sq");
    Translator.add("This value is not valid.", "Kjo vler\u00eb nuk \u00ebsht\u00eb e vlefshme.", "validators", "sq");
    Translator.add("This value is not a valid time.", "Kjo vler\u00eb nuk \u00ebsht\u00eb koh\u00eb e vlefshme.", "validators", "sq");
    Translator.add("This value is not a valid URL.", "Kjo vler\u00eb nuk \u00ebsht\u00eb URL e vlefshme.", "validators", "sq");
    Translator.add("The two values should be equal.", "K\u00ebto dy vlera duhet t\u00eb jen\u00eb t\u00eb barabarta.", "validators", "sq");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Ky file \u00ebsht\u00eb shum\u00eb i madh. Madh\u00ebsia maksimale e lejuar \u00ebsht\u00eb {{ limit }} {{ suffix }}.", "validators", "sq");
    Translator.add("The file is too large.", "Ky file \u00ebsht\u00eb shum\u00eb i madh.", "validators", "sq");
    Translator.add("The file could not be uploaded.", "Ky file nuk mund t\u00eb ngarkohet.", "validators", "sq");
    Translator.add("This value should be a valid number.", "Kjo vler\u00eb duhet t\u00eb jet\u00eb num\u00ebr i vlefsh\u00ebm.", "validators", "sq");
    Translator.add("This file is not a valid image.", "Ky file nuk \u00ebsht\u00eb imazh i vlefsh\u00ebm.", "validators", "sq");
    Translator.add("This is not a valid IP address.", "Kjo vler\u00eb nuk \u00ebsht\u00eb IP adres\u00eb e vlefshme.", "validators", "sq");
    Translator.add("This value is not a valid language.", "Kjo vler\u00eb nuk \u00ebsht\u00eb gjuh\u00eb e vlefshme.", "validators", "sq");
    Translator.add("This value is not a valid locale.", "Kjo vler\u00eb nuk \u00ebsht\u00eb p\u00ebrcaktim rajonal i vlefsh\u00ebm.", "validators", "sq");
    Translator.add("This value is not a valid country.", "Kjo vler\u00eb nuk \u00ebsht\u00eb shtet i vlefsh\u00ebm.", "validators", "sq");
    Translator.add("This value is already used.", "Kjo vler\u00eb \u00ebsht\u00eb tashm\u00eb n\u00eb p\u00ebrdorim.", "validators", "sq");
    Translator.add("The size of the image could not be detected.", "Madh\u00ebsia e k\u00ebtij imazhi nuk mund t\u00eb zbulohet.", "validators", "sq");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Gjer\u00ebsia e imazhit \u00ebsht\u00eb shum\u00eb e madhe ({{ width }}px). Gjer\u00ebsia maksimale e lejuar \u00ebsht\u00eb {{ max_width }}px.", "validators", "sq");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Gjer\u00ebsia e imazhit \u00ebsht\u00eb shum\u00eb e vog\u00ebl ({{ width }}px). Gjer\u00ebsia minimale e pritur \u00ebsht\u00eb {{ min_width }}px.", "validators", "sq");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Gjat\u00ebsia e imazhit \u00ebsht\u00eb shum\u00eb e madhe ({{ height }}px). Gjat\u00ebsia maksimale e lejuar \u00ebsht\u00eb {{ max_height }}px.", "validators", "sq");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Gjat\u00ebsia e imazhit \u00ebsht\u00eb shum\u00eb e vog\u00ebl ({{ height }}px). Gjat\u00ebsia minimale e pritur \u00ebsht\u00eb {{ min_height }}px.", "validators", "sq");
    Translator.add("This value should be the user's current password.", "Kjo vler\u00eb duhet t\u00eb jet\u00eb fjal\u00ebkalimi aktual i p\u00ebrdoruesit.", "validators", "sq");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Kjo vler\u00eb duhet t\u00eb ket\u00eb sakt\u00ebsisht {{ limit }} karaktere.|Kjo vler\u00eb duhet t\u00eb ket\u00eb sakt\u00ebsisht {{ limit }} karaktere.", "validators", "sq");
    Translator.add("The file was only partially uploaded.", "Ky file \u00ebsht\u00eb ngarkuar pjes\u00ebrisht.", "validators", "sq");
    Translator.add("No file was uploaded.", "Nuk \u00ebsht\u00eb ngarkuar ndonj\u00eb file.", "validators", "sq");
    Translator.add("No temporary folder was configured in php.ini.", "Asnj\u00eb folder i p\u00ebrkohsh\u00ebm nuk \u00ebsht\u00eb konfiguruar n\u00eb php.ini.", "validators", "sq");
    Translator.add("Cannot write temporary file to disk.", "Nuk mund t\u00eb shkruhet file i p\u00ebrkohsh\u00ebm n\u00eb disk.", "validators", "sq");
    Translator.add("A PHP extension caused the upload to fail.", "Nj\u00eb ekstenzion i PHP-s\u00eb b\u00ebri t\u00eb d\u00ebshtoj\u00eb ngarkimi i files.", "validators", "sq");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Ky kolekcion duhet t\u00eb p\u00ebrmbaj\u00eb {{ limit }} ose m\u00eb shum\u00eb elemente.|Ky kolekcion duhet t\u00eb p\u00ebrmbaj\u00eb {{ limit }} ose m\u00eb shum\u00eb elemente.", "validators", "sq");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Ky kolekcion duhet t\u00eb p\u00ebrmbaj\u00eb {{ limit }} ose m\u00eb shum\u00eb elemente.|Ky kolekcion duhet t\u00eb p\u00ebrmbaj\u00eb {{ limit }} ose m\u00eb shum\u00eb elemente.", "validators", "sq");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Ky kolekcion duhet t\u00eb p\u00ebrmbaj\u00eb sakt\u00ebsisht {{ limit }} elemente.|Ky kolekcion duhet t\u00eb p\u00ebrmbaj\u00eb sakt\u00ebsisht {{ limit }} elemente.", "validators", "sq");
    Translator.add("Invalid card number.", "Num\u00ebr kartele i pavlefsh\u00ebm.", "validators", "sq");
    Translator.add("Unsupported card type or invalid card number.", "Lloj kartele i pamb\u00ebshtetur ose num\u00ebr kartele i pavlefsh\u00ebm.", "validators", "sq");
})(Translator);

(function (Translator) {
    // sr_Cyrl
    Translator.add("This value should be false.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u043d\u0435\u0442\u0430\u0447\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("This value should be true.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0442\u0430\u0447\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("This value should be of type {{ type }}.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0442\u0438\u043f\u0430 {{ type }}.", "validators", "sr_Cyrl");
    Translator.add("This value should be blank.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u0430\u0437\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("The value you selected is not a valid choice.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0458\u0435\u0434\u043d\u0430 \u043e\u0434 \u043f\u043e\u043d\u0443\u0452\u0435\u043d\u0438\u0445.", "validators", "sr_Cyrl");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0431\u0430\u0440 {{ limit }} \u043c\u043e\u0433\u0443\u045b\u043d\u043e\u0441\u0442.|\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0431\u0430\u0440 {{ limit }} \u043c\u043e\u0433\u0443\u045b\u043d\u043e\u0441\u0442\u0438.|\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0431\u0430\u0440 {{ limit }} \u043c\u043e\u0433\u0443\u045b\u043d\u043e\u0441\u0442\u0438.", "validators", "sr_Cyrl");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u043d\u0430\u0458\u0432\u0438\u0448\u0435 {{ limit }} \u043c\u043e\u0433\u0443\u045b\u043d\u043e\u0441\u0442.|\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u043d\u0430\u0458\u0432\u0438\u0448\u0435 {{ limit }} \u043c\u043e\u0433\u0443\u045b\u043d\u043e\u0441\u0442\u0438.|\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u043d\u0430\u0458\u0432\u0438\u0448\u0435 {{ limit }} \u043c\u043e\u0433\u0443\u045b\u043d\u043e\u0441\u0442\u0438.", "validators", "sr_Cyrl");
    Translator.add("One or more of the given values is invalid.", "\u0408\u0435\u0434\u043d\u0430 \u0438\u043b\u0438 \u0432\u0438\u0448\u0435 \u0432\u0440\u0435\u0434\u043d\u043e\u0441\u0442\u0438 \u0458\u0435 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("This field was not expected.", "\u041e\u0432\u043e \u043f\u043e\u0459\u0435 \u043d\u0435 \u043e\u0447\u0435\u043a\u0443\u0458\u0435.", "validators", "sr_Cyrl");
    Translator.add("This field is missing.", "\u041e\u0432\u043e \u043f\u043e\u0459\u0435 \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0458\u0435.", "validators", "sr_Cyrl");
    Translator.add("This value is not a valid date.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u043d \u0434\u0430\u0442\u0443\u043c.", "validators", "sr_Cyrl");
    Translator.add("This value is not a valid datetime.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u043d \u0434\u0430\u0442\u0443\u043c-\u0432\u0440\u0435\u043c\u0435.", "validators", "sr_Cyrl");
    Translator.add("This value is not a valid email address.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0430 \u0435\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u0441\u043a\u0435 \u043f\u043e\u0448\u0442\u0435.", "validators", "sr_Cyrl");
    Translator.add("The file could not be found.", "\u0414\u0430\u0442\u043e\u0442\u0435\u043a\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0431\u0438\u0442\u0438 \u043f\u0440\u043e\u043d\u0430\u0452\u0435\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("The file is not readable.", "\u0414\u0430\u0442\u043e\u0442\u0435\u043a\u0430 \u043d\u0438\u0458\u0435 \u0447\u0438\u0442\u0459\u0438\u0432\u0430.", "validators", "sr_Cyrl");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0414\u0430\u0442\u043e\u0442\u0435\u043a\u0430 \u0458\u0435 \u043f\u0440\u0435\u0432\u0435\u043b\u0438\u043a\u0430 ({{ size }} {{ suffix }}). \u041d\u0430\u0458\u0432\u0435\u045b\u0430 \u0434\u043e\u0437\u0432\u043e\u0459\u0435\u043d\u0430 \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0430 \u0458\u0435 {{ limit }} {{ suffix }}.", "validators", "sr_Cyrl");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "\u041c\u0438\u043c\u0435 \u0442\u0438\u043f \u0434\u0430\u0442\u043e\u0442\u0435\u043a\u0435 \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u043d ({{ type }}). \u0414\u043e\u0437\u0432\u043e\u0459\u0435\u043d\u0438 \u043c\u0438\u043c\u0435 \u0442\u0438\u043f\u043e\u0432\u0438 \u0441\u0443 {{ types }}.", "validators", "sr_Cyrl");
    Translator.add("This value should be {{ limit }} or less.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 {{ limit }} \u0438\u043b\u0438 \u043c\u0430\u045a\u0435.", "validators", "sr_Cyrl");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0458\u0435 \u043f\u0440\u0435\u0434\u0443\u0433\u0430\u0447\u043a\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043c\u0430 {{ limit }} \u043a\u0430\u0440\u0430\u043a\u0442\u0435\u0440 \u0438\u043b\u0438 \u043c\u0430\u045a\u0435.|\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0458\u0435 \u043f\u0440\u0435\u0434\u0443\u0433\u0430\u0447\u043a\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043c\u0430 {{ limit }} \u043a\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0430 \u0438\u043b\u0438 \u043c\u0430\u045a\u0435.|\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0458\u0435 \u043f\u0440\u0435\u0434\u0443\u0433\u0430\u0447\u043a\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043c\u0430 {{ limit }} \u043a\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0430 \u0438\u043b\u0438 \u043c\u0430\u045a\u0435.", "validators", "sr_Cyrl");
    Translator.add("This value should be {{ limit }} or more.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 {{ limit }} \u0438\u043b\u0438 \u0432\u0438\u0448\u0435.", "validators", "sr_Cyrl");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0458\u0435 \u043f\u0440\u0435\u043a\u0440\u0430\u0442\u043a\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043c\u0430 {{ limit }} \u043a\u0430\u0440\u0430\u043a\u0442\u0435\u0440 \u0438\u043b\u0438 \u0432\u0438\u0448\u0435.|\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0458\u0435 \u043f\u0440\u0435\u043a\u0440\u0430\u0442\u043a\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043c\u0430 {{ limit }} \u043a\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0430 \u0438\u043b\u0438 \u0432\u0438\u0448\u0435.|\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0458\u0435 \u043f\u0440\u0435\u043a\u0440\u0430\u0442\u043a\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043c\u0430 {{ limit }} \u043a\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0430 \u0438\u043b\u0438 \u0432\u0438\u0448\u0435.", "validators", "sr_Cyrl");
    Translator.add("This value should not be blank.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u0430\u0437\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("This value should not be null.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 null.", "validators", "sr_Cyrl");
    Translator.add("This value should be null.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 null.", "validators", "sr_Cyrl");
    Translator.add("This value is not valid.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0458\u0435 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("This value is not a valid time.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u043e \u0432\u0440\u0435\u043c\u0435.", "validators", "sr_Cyrl");
    Translator.add("This value is not a valid URL.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u043d URL.", "validators", "sr_Cyrl");
    Translator.add("The two values should be equal.", "\u041e\u0431\u0435 \u0432\u0440\u0435\u0434\u043d\u043e\u0441\u0442\u0438 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0443 \u0458\u0435\u0434\u043d\u0430\u043a\u0435.", "validators", "sr_Cyrl");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0414\u0430\u0442\u043e\u0442\u0435\u043a\u0430 \u0458\u0435 \u043f\u0440\u0435\u0432\u0435\u043b\u0438\u043a\u0430. \u041d\u0430\u0458\u0432\u0435\u045b\u0430 \u0434\u043e\u0437\u0432\u043e\u0459\u0435\u043d\u0430 \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0430 \u0458\u0435 {{ limit }} {{ suffix }}.", "validators", "sr_Cyrl");
    Translator.add("The file is too large.", "\u0414\u0430\u0442\u043e\u0442\u0435\u043a\u0430 \u0458\u0435 \u043f\u0440\u0435\u0432\u0435\u043b\u0438\u043a\u0430.", "validators", "sr_Cyrl");
    Translator.add("The file could not be uploaded.", "\u0414\u0430\u0442\u043e\u0442\u0435\u043a\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0431\u0438\u0442\u0438 \u043e\u0442\u043f\u0440\u0435\u043c\u0459\u0435\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("This value should be a valid number.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u043d \u0431\u0440\u043e\u0458.", "validators", "sr_Cyrl");
    Translator.add("This file is not a valid image.", "\u041e\u0432\u0430 \u0434\u0430\u0442\u043e\u0442\u0435\u043a\u0430 \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u0441\u043b\u0438\u043a\u0430.", "validators", "sr_Cyrl");
    Translator.add("This is not a valid IP address.", "\u041e\u0432\u043e \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u0418\u041f \u0430\u0434\u0440\u0435\u0441\u0430.", "validators", "sr_Cyrl");
    Translator.add("This value is not a valid language.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u043d \u0458\u0435\u0437\u0438\u043a.", "validators", "sr_Cyrl");
    Translator.add("This value is not a valid locale.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u043d \u043b\u043e\u043a\u0430\u043b.", "validators", "sr_Cyrl");
    Translator.add("This value is not a valid country.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u0437\u0435\u043c\u0459\u0430.", "validators", "sr_Cyrl");
    Translator.add("This value is already used.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0458\u0435 \u0432\u0435\u045b \u0438\u0441\u043a\u043e\u0440\u0438\u0448\u045b\u0435\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("The size of the image could not be detected.", "\u0412\u0435\u043b\u0438\u0447\u0438\u043d\u0430 \u0441\u043b\u0438\u043a\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0431\u0438\u0442\u0438 \u043e\u0434\u0440\u0435\u0452\u0435\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u0428\u0438\u0440\u0438\u043d\u0430 \u0441\u043b\u0438\u043a\u0435 \u0458\u0435 \u043f\u0440\u0435\u0432\u0435\u043b\u0438\u043a\u0430 ({{ width }}px). \u041d\u0430\u0458\u0435\u045b\u0430 \u0434\u043e\u0437\u0432\u043e\u0459\u0435\u043d\u0430 \u0448\u0438\u0440\u0438\u043d\u0430 \u0458\u0435 {{ max_width }}px.", "validators", "sr_Cyrl");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u0428\u0438\u0440\u0438\u043d\u0430 \u0441\u043b\u0438\u043a\u0435 \u0458\u0435 \u043f\u0440\u0435\u043c\u0430\u043b\u0430 ({{ width }}px). \u041d\u0430\u0458\u043c\u0430\u045a\u0430 \u0434\u043e\u0437\u0432\u043e\u0459\u0435\u043d\u0430 \u0448\u0438\u0440\u0438\u043d\u0430 \u0458\u0435 {{ min_width }}px.", "validators", "sr_Cyrl");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u0412\u0438\u0441\u0438\u043d\u0430 \u0441\u043b\u0438\u043a\u0435 \u0458\u0435 \u043f\u0440\u0435\u0432\u0435\u043b\u0438\u043a\u0430 ({{ height }}px). \u041d\u0430\u0458\u0435\u045b\u0430 \u0434\u043e\u0437\u0432\u043e\u0459\u0435\u043d\u0430 \u0432\u0438\u0441\u0438\u043d\u0430 \u0458\u0435 {{ max_height }}px.", "validators", "sr_Cyrl");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u0412\u0438\u0441\u0438\u043d\u0430 \u0441\u043b\u0438\u043a\u0435 \u0458\u0435 \u043f\u0440\u0435\u043c\u0430\u043b\u0430 ({{ height }}px). \u041d\u0430\u0458\u043c\u0430\u045a\u0430 \u0434\u043e\u0437\u0432\u043e\u0459\u0435\u043d\u0430 \u0432\u0438\u0441\u0438\u043d\u0430 \u0458\u0435 {{ min_height }}px.", "validators", "sr_Cyrl");
    Translator.add("This value should be the user's current password.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0442\u0440\u0435\u043d\u0443\u0442\u043d\u0430 \u043a\u043e\u0440\u0438\u0441\u043d\u0438\u0447\u043a\u0430 \u043b\u043e\u0437\u0438\u043d\u043a\u0430.", "validators", "sr_Cyrl");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043c\u0430 \u0442\u0430\u0447\u043d\u043e {{ limit }} \u043a\u0430\u0440\u0430\u043a\u0442\u0435\u0440.|\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043c\u0430 \u0442\u0430\u0447\u043d\u043e {{ limit }} \u043a\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0430.|\u0412\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043c\u0430 \u0442\u0430\u0447\u043d\u043e {{ limit }} \u043a\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0430.", "validators", "sr_Cyrl");
    Translator.add("The file was only partially uploaded.", "\u0414\u0430\u0442\u043e\u0442\u0435\u043a\u0430 \u0458\u0435 \u0441\u0430\u043c\u043e \u043f\u0430\u0440\u0446\u0438\u0458\u0430\u043b\u043d\u043e \u043e\u0442\u043f\u0440\u0435\u043c\u0459\u0435\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("No file was uploaded.", "\u0414\u0430\u0442\u043e\u0442\u0435\u043a\u0430 \u043d\u0438\u0458\u0435 \u043e\u0442\u043f\u0440\u0435\u043c\u0459\u0435\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("No temporary folder was configured in php.ini.", "\u041f\u0440\u0438\u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0458\u0443\u043c \u043d\u0438\u0458\u0435 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0438\u0441\u0430\u043d \u0443 php.ini.", "validators", "sr_Cyrl");
    Translator.add("Cannot write temporary file to disk.", "\u041d\u0435\u043c\u043e\u0433\u0443\u045b\u0435 \u043f\u0438\u0441\u0430\u045a\u0435 \u043f\u0440\u0438\u0432\u0440\u0435\u043c\u0435\u043d\u0435 \u0434\u0430\u0442\u043e\u0442\u0435\u043a\u0435 \u043d\u0430 \u0434\u0438\u0441\u043a.", "validators", "sr_Cyrl");
    Translator.add("A PHP extension caused the upload to fail.", "PHP \u0435\u043a\u0441\u0442\u0435\u043d\u0437\u0438\u0458\u0430 \u0458\u0435 \u043f\u0440\u043e\u0443\u0437\u0440\u043e\u043a\u043e\u0432\u0430\u043b\u0430 \u043d\u0435\u0443\u0441\u043f\u0435\u0445 \u043e\u0442\u043f\u0440\u0435\u043c\u0430\u045a\u0430 \u0434\u0430\u0442\u043e\u0442\u0435\u043a\u0435.", "validators", "sr_Cyrl");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "\u041e\u0432\u0430 \u043a\u043e\u043b\u0435\u043a\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 {{ limit }} \u0438\u043b\u0438 \u0432\u0438\u0448\u0435 \u0435\u043b\u0435\u043c\u0435\u043d\u0430\u0442\u0430.|\u041e\u0432\u0430 \u043a\u043e\u043b\u0435\u043a\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 {{ limit }} \u0438\u043b\u0438 \u0432\u0438\u0448\u0435 \u0435\u043b\u0435\u043c\u0435\u043d\u0430\u0442\u0430.|\u041e\u0432\u0430 \u043a\u043e\u043b\u0435\u043a\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 {{ limit }} \u0438\u043b\u0438 \u0432\u0438\u0448\u0435 \u0435\u043b\u0435\u043c\u0435\u043d\u0430\u0442\u0430.", "validators", "sr_Cyrl");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u041e\u0432\u0430 \u043a\u043e\u043b\u0435\u043a\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 {{ limit }} \u0438\u043b\u0438 \u043c\u0430\u045a\u0435 \u0435\u043b\u0435\u043c\u0435\u043d\u0430\u0442\u0430.|\u041e\u0432\u0430 \u043a\u043e\u043b\u0435\u043a\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 {{ limit }} \u0438\u043b\u0438 \u043c\u0430\u045a\u0435 \u0435\u043b\u0435\u043c\u0435\u043d\u0430\u0442\u0430.|\u041e\u0432\u0430 \u043a\u043e\u043b\u0435\u043a\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 {{ limit }} \u0438\u043b\u0438 \u043c\u0430\u045a\u0435 \u0435\u043b\u0435\u043c\u0435\u043d\u0430\u0442\u0430.", "validators", "sr_Cyrl");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u041e\u0432\u0430 \u043a\u043e\u043b\u0435\u043a\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 \u0442\u0430\u0447\u043d\u043e {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442.|\u041e\u0432\u0430 \u043a\u043e\u043b\u0435\u043a\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 \u0442\u0430\u0447\u043d\u043e {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430.|\u041e\u0432\u0430 \u043a\u043e\u043b\u0435\u043a\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 \u0442\u0430\u0447\u043d\u043e {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0430\u0442\u0430.", "validators", "sr_Cyrl");
    Translator.add("Invalid card number.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0430\u043d \u0431\u0440\u043e\u0458 \u043a\u0430\u0440\u0442\u0438\u0446\u0435.", "validators", "sr_Cyrl");
    Translator.add("Unsupported card type or invalid card number.", "\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0430\u043d \u0431\u0440\u043e\u0458 \u043a\u0430\u0440\u0442\u0438\u0446\u0435 \u0438\u043b\u0438 \u0442\u0438\u043f \u043a\u0430\u0440\u0442\u0438\u0446\u0435 \u043d\u0438\u0458\u0435 \u043f\u043e\u0434\u0440\u0436\u0430\u043d.", "validators", "sr_Cyrl");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u041e\u0432\u043e \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u043d \u043c\u0435\u0452\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u0438 \u0431\u0440\u043e\u0458 \u0431\u0430\u043d\u043a\u043e\u0432\u043d\u043e\u0433 \u0440\u0430\u0447\u0443\u043d\u0430 (IBAN).", "validators", "sr_Cyrl");
    Translator.add("This value is not a valid ISBN-10.", "\u041e\u0432\u043e \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u043d ISBN-10.", "validators", "sr_Cyrl");
    Translator.add("This value is not a valid ISBN-13.", "\u041e\u0432\u043e \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u043d ISBN-13.", "validators", "sr_Cyrl");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u041e\u0432\u043e \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u043d ISBN-10 \u0438\u043b\u0438 ISBN-13.", "validators", "sr_Cyrl");
    Translator.add("This value is not a valid ISSN.", "\u041e\u0432\u043e \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u043d ISSN.", "validators", "sr_Cyrl");
    Translator.add("This value is not a valid currency.", "\u041e\u0432\u043e \u043d\u0438\u0458\u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u0432\u0430\u043b\u0443\u0442\u0430.", "validators", "sr_Cyrl");
    Translator.add("This value should be equal to {{ compared_value }}.", "\u041e\u0432\u0430 \u0432\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 {{ compared_value }}.", "validators", "sr_Cyrl");
    Translator.add("This value should be greater than {{ compared_value }}.", "\u041e\u0432\u0430 \u0432\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0432\u0435\u045b\u0430 \u043e\u0434 {{ compared_value }}.", "validators", "sr_Cyrl");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "\u041e\u0432\u0430 \u0432\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0432\u0435\u045b\u0430 \u0438\u043b\u0438 \u0458\u0435\u0434\u043d\u0430\u043a\u0430 {{ compared_value }}.", "validators", "sr_Cyrl");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "\u041e\u0432\u0430 \u0432\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u0441\u0430 {{ compared_value_type }} {{ compared_value }}.", "validators", "sr_Cyrl");
    Translator.add("This value should be less than {{ compared_value }}.", "\u041e\u0432\u0430 \u0432\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u043c\u0430\u045a\u0430 \u043e\u0434 {{ compared_value }}.", "validators", "sr_Cyrl");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "\u041e\u0432\u0430 \u0432\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u043c\u0430\u045a\u0430 \u0438\u043b\u0438 \u0458\u0435\u0434\u043d\u0430\u043a\u0430 {{ compared_value }}.", "validators", "sr_Cyrl");
    Translator.add("This value should not be equal to {{ compared_value }}.", "\u041e\u0432\u0430 \u0432\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0458\u0435\u0434\u043d\u0430\u043a\u0430 {{ compared_value }}.", "validators", "sr_Cyrl");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "\u041e\u0432\u0430 \u0432\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u0441\u0430 {{ compared_value_type }} {{ compared_value }}.", "validators", "sr_Cyrl");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "\u0420\u0430\u0437\u043c\u0435\u0440\u0430 \u043e\u0432\u0435 \u0441\u043b\u0438\u043a\u0435 \u0458\u0435 \u043f\u0440\u0435\u0432\u0435\u043b\u0438\u043a\u0430 ({{ ratio }}). \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u043d\u0430 \u0434\u043e\u0437\u0432\u043e\u0459\u0435\u043d\u0430 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0458\u0435 {{ max_ratio }}.", "validators", "sr_Cyrl");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "\u0420\u0430\u0437\u043c\u0435\u0440\u0430 \u043e\u0432\u0435 \u0441\u043b\u0438\u043a\u0435 \u0458\u0435 \u043f\u0440\u0435\u043c\u0430\u043b\u0430 ({{ ratio }}). \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u043d\u0430 \u043e\u0447\u0435\u043a\u0438\u0432\u0430\u043d\u0430 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0458\u0435 {{ min_ratio }}.", "validators", "sr_Cyrl");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "\u0421\u043b\u0438\u043a\u0430 \u0458\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u0430 ({{ width }}x{{ height }}px). \u041a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u0435 \u0441\u043b\u0438\u043a\u0435 \u043d\u0438\u0441\u0443 \u0434\u043e\u0437\u0432\u043e\u0459\u0435\u043d\u0435.", "validators", "sr_Cyrl");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "\u0421\u043b\u0438\u043a\u0430 \u0458\u0435 \u043e\u0440\u0438\u0458\u0435\u043d\u0442\u0430\u0446\u0438\u0458\u0435 \u043f\u0435\u0458\u0437\u0430\u0436\u0430 ({{ width }}x{{ height }}px). \u041f\u0435\u0458\u0437\u0430\u0436\u043d\u0430 \u043e\u0440\u0438\u0458\u0435\u043d\u0442\u0430\u0446\u0438\u0458\u0430 \u0441\u043b\u0438\u043a\u0430 \u043d\u0438\u0458\u0435 \u0434\u043e\u0437\u0432\u043e\u0459\u0435\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "\u0421\u043b\u0438\u043a\u0430 \u0458\u0435 \u043e\u0440\u0438\u0458\u0430\u043d\u0442\u0430\u0446\u0438\u0458\u0435 \u043f\u043e\u0440\u0442\u0440\u0435\u0442\u0430 ({{ width }}x{{ height }}px). \u041f\u043e\u0440\u0442\u0440\u0435\u0442\u043d\u0430 \u043e\u0440\u0438\u0458\u0435\u043d\u0442\u0430\u0446\u0438\u0458\u0430 \u0441\u043b\u0438\u043a\u0430 \u043d\u0438\u0458\u0435 \u0434\u043e\u0437\u0432\u043e\u0459\u0435\u043d\u0430.", "validators", "sr_Cyrl");
    Translator.add("This form should not contain extra fields.", "\u041e\u0432\u0430\u0458 \u0444\u043e\u0440\u043c\u0443\u043b\u0430\u0440 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 \u0434\u043e\u0434\u0430\u0442\u043d\u0430 \u043f\u043e\u0459\u0430.", "validators", "sr_Cyrl");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u041e\u0442\u043f\u0440\u0435\u043c\u0459\u0435\u043d\u0430 \u0434\u0430\u0442\u043e\u0442\u0435\u043a\u0430 \u0458\u0435 \u0431\u0438\u043b\u0430 \u043f\u0440\u0435\u0432\u0435\u043b\u0438\u043a\u0430. \u041c\u043e\u043b\u0438\u043c \u043f\u043e\u043a\u0443\u0448\u0430\u0458\u0442\u0435 \u043e\u0442\u043f\u0440\u0435\u043c\u0430\u045a\u0435 \u043c\u0430\u045a\u0435 \u0434\u0430\u0442\u043e\u0442\u0435\u043a\u0435.", "validators", "sr_Cyrl");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF \u0432\u0440\u0435\u0434\u043d\u043e\u0441\u0442 \u0458\u0435 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u0430. \u041f\u043e\u043a\u0443\u0448\u0430\u0458\u0442\u0435 \u043f\u043e\u043d\u043e\u0432\u043e.", "validators", "sr_Cyrl");
})(Translator);

(function (Translator) {
    // sr_Latn
    Translator.add("This value should be false.", "Vrednost treba da bude neta\u010dna.", "validators", "sr_Latn");
    Translator.add("This value should be true.", "Vrednost treba da bude ta\u010dna.", "validators", "sr_Latn");
    Translator.add("This value should be of type {{ type }}.", "Vrednost treba da bude tipa {{ type }}.", "validators", "sr_Latn");
    Translator.add("This value should be blank.", "Vrednost treba da bude prazna.", "validators", "sr_Latn");
    Translator.add("The value you selected is not a valid choice.", "Vrednost treba da bude jedna od ponu\u0111enih.", "validators", "sr_Latn");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Izaberite bar {{ limit }} mogu\u0107nost.|Izaberite bar {{ limit }} mogu\u0107nosti.|Izaberite bar {{ limit }} mogu\u0107nosti.", "validators", "sr_Latn");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Izaberite najvi\u0161e {{ limit }} mogu\u0107nost.|Izaberite najvi\u0161e {{ limit }} mogu\u0107nosti.|Izaberite najvi\u0161e {{ limit }} mogu\u0107nosti.", "validators", "sr_Latn");
    Translator.add("One or more of the given values is invalid.", "Jedna ili vi\u0161e vrednosti je nevalidna.", "validators", "sr_Latn");
    Translator.add("This field was not expected.", "Ovo polje ne o\u010dekuje.", "validators", "sr_Latn");
    Translator.add("This field is missing.", "Ovo polje nedostaje.", "validators", "sr_Latn");
    Translator.add("This value is not a valid date.", "Vrednost nije validan datum.", "validators", "sr_Latn");
    Translator.add("This value is not a valid datetime.", "Vrednost nije validan datum-vreme.", "validators", "sr_Latn");
    Translator.add("This value is not a valid email address.", "Vrednost nije validna adresa elektronske po\u0161te.", "validators", "sr_Latn");
    Translator.add("The file could not be found.", "Datoteka ne mo\u017ee biti prona\u0111ena.", "validators", "sr_Latn");
    Translator.add("The file is not readable.", "Datoteka nije \u010ditljiva.", "validators", "sr_Latn");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Datoteka je prevelika ({{ size }} {{ suffix }}). Najve\u0107a dozvoljena veli\u010dina je {{ limit }} {{ suffix }}.", "validators", "sr_Latn");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Mime tip datoteke nije validan ({{ type }}). Dozvoljeni mime tipovi su {{ types }}.", "validators", "sr_Latn");
    Translator.add("This value should be {{ limit }} or less.", "Vrednost treba da bude {{ limit }} ili manje.", "validators", "sr_Latn");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Vrednost je preduga\u010dka. Treba da ima {{ limit }} karakter ili manje.|Vrednost je preduga\u010dka. Treba da ima {{ limit }} karaktera ili manje.|Vrednost je preduga\u010dka. Treba da ima {{ limit }} karaktera ili manje.", "validators", "sr_Latn");
    Translator.add("This value should be {{ limit }} or more.", "Vrednost treba da bude {{ limit }} ili vi\u0161e.", "validators", "sr_Latn");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Vrednost je prekratka. Treba da ima {{ limit }} karakter ili vi\u0161e.|Vrednost je prekratka. Treba da ima {{ limit }} karaktera ili vi\u0161e.|Vrednost je prekratka. Treba da ima {{ limit }} karaktera ili vi\u0161e.", "validators", "sr_Latn");
    Translator.add("This value should not be blank.", "Vrednost ne treba da bude prazna.", "validators", "sr_Latn");
    Translator.add("This value should not be null.", "Vrednost ne treba da bude null.", "validators", "sr_Latn");
    Translator.add("This value should be null.", "Vrednost treba da bude null.", "validators", "sr_Latn");
    Translator.add("This value is not valid.", "Vrednost je nevalidna.", "validators", "sr_Latn");
    Translator.add("This value is not a valid time.", "Vrednost nije validno vreme.", "validators", "sr_Latn");
    Translator.add("This value is not a valid URL.", "Vrednost nije validan URL.", "validators", "sr_Latn");
    Translator.add("The two values should be equal.", "Obe vrednosti treba da budu jednake.", "validators", "sr_Latn");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Datoteka je prevelika. Najve\u0107a dozvoljena veli\u010dina je {{ limit }} {{ suffix }}.", "validators", "sr_Latn");
    Translator.add("The file is too large.", "Datoteka je prevelika.", "validators", "sr_Latn");
    Translator.add("The file could not be uploaded.", "Datoteka ne mo\u017ee biti otpremljena.", "validators", "sr_Latn");
    Translator.add("This value should be a valid number.", "Vrednost treba da bude validan broj.", "validators", "sr_Latn");
    Translator.add("This file is not a valid image.", "Ova datoteka nije validna slika.", "validators", "sr_Latn");
    Translator.add("This is not a valid IP address.", "Ovo nije validna IP adresa.", "validators", "sr_Latn");
    Translator.add("This value is not a valid language.", "Vrednost nije validan jezik.", "validators", "sr_Latn");
    Translator.add("This value is not a valid locale.", "Vrednost nije validan lokal.", "validators", "sr_Latn");
    Translator.add("This value is not a valid country.", "Vrednost nije validna zemlja.", "validators", "sr_Latn");
    Translator.add("This value is already used.", "Vrednost je ve\u0107 iskori\u0161\u0107ena.", "validators", "sr_Latn");
    Translator.add("The size of the image could not be detected.", "Veli\u010dina slike ne mo\u017ee biti odre\u0111ena.", "validators", "sr_Latn");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u0160irina slike je prevelika ({{ width }}px). Naje\u0107a dozvoljena \u0161irina je {{ max_width }}px.", "validators", "sr_Latn");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u0160irina slike je premala ({{ width }}px). Najmanja dozvoljena \u0161irina je {{ min_width }}px.", "validators", "sr_Latn");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Visina slike je prevelika ({{ height }}px). Naje\u0107a dozvoljena visina je {{ max_height }}px.", "validators", "sr_Latn");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Visina slike je premala ({{ height }}px). Najmanja dozvoljena visina je {{ min_height }}px.", "validators", "sr_Latn");
    Translator.add("This value should be the user's current password.", "Vrednost treba da bude trenutna korisni\u010dka lozinka.", "validators", "sr_Latn");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Vrednost treba da ima ta\u010dno {{ limit }} karakter.|Vrednost treba da ima ta\u010dno {{ limit }} karaktera.|Vrednost treba da ima ta\u010dno {{ limit }} karaktera.", "validators", "sr_Latn");
    Translator.add("The file was only partially uploaded.", "Datoteka je samo parcijalno otpremljena.", "validators", "sr_Latn");
    Translator.add("No file was uploaded.", "Datoteka nije otpremljena.", "validators", "sr_Latn");
    Translator.add("No temporary folder was configured in php.ini.", "Privremeni direktorijum nije konfigurisan u php.ini.", "validators", "sr_Latn");
    Translator.add("Cannot write temporary file to disk.", "Nemogu\u0107e pisanje privremene datoteke na disk.", "validators", "sr_Latn");
    Translator.add("A PHP extension caused the upload to fail.", "PHP ekstenzija je prouzrokovala neuspeh otpremanja datoteke.", "validators", "sr_Latn");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Ova kolekcija treba da sadr\u017ei {{ limit }} ili vi\u0161e elemenata.|Ova kolekcija treba da sadr\u017ei {{ limit }} ili vi\u0161e elemenata.|Ova kolekcija treba da sadr\u017ei {{ limit }} ili vi\u0161e elemenata.", "validators", "sr_Latn");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Ova kolekcija treba da sadr\u017ei {{ limit }} ili manje elemenata.|Ova kolekcija treba da sadr\u017ei {{ limit }} ili manje elemenata.|Ova kolekcija treba da sadr\u017ei {{ limit }} ili manje elemenata.", "validators", "sr_Latn");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Ova kolekcija treba da sadr\u017ei ta\u010dno {{ limit }} element.|Ova kolekcija treba da sadr\u017ei ta\u010dno {{ limit }} elementa.|Ova kolekcija treba da sadr\u017ei ta\u010dno {{ limit }} elemenata.", "validators", "sr_Latn");
    Translator.add("Invalid card number.", "Nevalidan broj kartice.", "validators", "sr_Latn");
    Translator.add("Unsupported card type or invalid card number.", "Nevalidan broj kartice ili tip kartice nije podr\u017ean.", "validators", "sr_Latn");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Ovo nije validan me\u0111unarodni broj bankovnog ra\u010duna (IBAN).", "validators", "sr_Latn");
    Translator.add("This value is not a valid ISBN-10.", "Ovo nije validan ISBN-10.", "validators", "sr_Latn");
    Translator.add("This value is not a valid ISBN-13.", "Ovo nije validan ISBN-13.", "validators", "sr_Latn");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Ovo nije validan ISBN-10 ili ISBN-13.", "validators", "sr_Latn");
    Translator.add("This value is not a valid ISSN.", "Ovo nije validan ISSN.", "validators", "sr_Latn");
    Translator.add("This value is not a valid currency.", "Ovo nije validna valuta.", "validators", "sr_Latn");
    Translator.add("This value should be equal to {{ compared_value }}.", "Ova vrednost treba da bude {{ compared_value }}.", "validators", "sr_Latn");
    Translator.add("This value should be greater than {{ compared_value }}.", "Ova vrednost treba da bude ve\u0107a od {{ compared_value }}.", "validators", "sr_Latn");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Ova vrednost treba da bude ve\u0107a ili jednaka {{ compared_value }}.", "validators", "sr_Latn");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Ova vrednost treba da bude identi\u010dna sa {{ compared_value_type }} {{ compared_value }}.", "validators", "sr_Latn");
    Translator.add("This value should be less than {{ compared_value }}.", "Ova vrednost treba da bude manja od {{ compared_value }}.", "validators", "sr_Latn");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Ova vrednost treba da bude manja ili jednaka {{ compared_value }}.", "validators", "sr_Latn");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Ova vrednost ne treba da bude jednaka {{ compared_value }}.", "validators", "sr_Latn");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Ova vrednost ne treba da bude identi\u010dna sa {{ compared_value_type }} {{ compared_value }}.", "validators", "sr_Latn");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "Razmera ove slike je prevelika ({{ ratio }}). Maksimalna dozvoljena razmera je {{ max_ratio }}.", "validators", "sr_Latn");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "Razmera ove slike je premala ({{ ratio }}). Minimalna o\u010dekivana razmera je {{ min_ratio }}.", "validators", "sr_Latn");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "Slika je kvadratna ({{ width }}x{{ height }}px). Kvadratne slike nisu dozvoljene.", "validators", "sr_Latn");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "Slika je orijentacije pejza\u017ea ({{ width }}x{{ height }}px). Pejza\u017ena orijentacija slika nije dozvoljena.", "validators", "sr_Latn");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "Slika je orijantacije portreta ({{ width }}x{{ height }}px). Portretna orijentacija slika nije dozvoljena.", "validators", "sr_Latn");
    Translator.add("This form should not contain extra fields.", "Ovaj formular ne treba da sadr\u017ei dodatna polja.", "validators", "sr_Latn");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Otpremljena datoteka je bila prevelika. Molim poku\u0161ajte otpremanje manje datoteke.", "validators", "sr_Latn");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF vrednost je nevalidna. Poku\u0161ajte ponovo.", "validators", "sr_Latn");
})(Translator);

(function (Translator) {
    // sv
    Translator.add("This value should be false.", "V\u00e4rdet ska vara falskt.", "validators", "sv");
    Translator.add("This value should be true.", "V\u00e4rdet ska vara sant.", "validators", "sv");
    Translator.add("This value should be of type {{ type }}.", "V\u00e4rdet ska vara av typen {{ type }}.", "validators", "sv");
    Translator.add("This value should be blank.", "V\u00e4rdet ska vara tomt.", "validators", "sv");
    Translator.add("The value you selected is not a valid choice.", "V\u00e4rdet ska vara ett av de givna valen.", "validators", "sv");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "Du m\u00e5ste v\u00e4lja minst {{ limit }} val.|Du m\u00e5ste v\u00e4lja minst {{ limit }} val.", "validators", "sv");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "Du kan som mest v\u00e4lja {{ limit }} val.|Du kan som mest v\u00e4lja {{ limit }} val.", "validators", "sv");
    Translator.add("One or more of the given values is invalid.", "Ett eller fler av de angivna v\u00e4rdena \u00e4r ogiltigt.", "validators", "sv");
    Translator.add("This field was not expected.", "Det h\u00e4r f\u00e4ltet f\u00f6rv\u00e4ntades inte.", "validators", "sv");
    Translator.add("This field is missing.", "Det h\u00e4r f\u00e4ltet saknas.", "validators", "sv");
    Translator.add("This value is not a valid date.", "V\u00e4rdet \u00e4r inte ett giltigt datum.", "validators", "sv");
    Translator.add("This value is not a valid datetime.", "V\u00e4rdet \u00e4r inte ett giltigt datum med tid.", "validators", "sv");
    Translator.add("This value is not a valid email address.", "V\u00e4rdet \u00e4r inte en giltig epost-adress.", "validators", "sv");
    Translator.add("The file could not be found.", "Filen kunde inte hittas.", "validators", "sv");
    Translator.add("The file is not readable.", "Filen \u00e4r inte l\u00e4sbar.", "validators", "sv");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Filen \u00e4r f\u00f6r stor ({{ size }} {{ suffix }}). St\u00f6rsta till\u00e5tna storlek \u00e4r {{ limit }} {{ suffix }}.", "validators", "sv");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Filens MIME-typ ({{ type }}) \u00e4r ogiltig. De till\u00e5tna typerna \u00e4r {{ types }}.", "validators", "sv");
    Translator.add("This value should be {{ limit }} or less.", "V\u00e4rdet ska vara {{ limit }} eller mindre.", "validators", "sv");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "V\u00e4rdet \u00e4r f\u00f6r l\u00e5ngt. Det ska ha {{ limit }} tecken eller f\u00e4rre.|V\u00e4rdet \u00e4r f\u00f6r l\u00e5ngt. Det ska ha {{ limit }} tecken eller f\u00e4rre.", "validators", "sv");
    Translator.add("This value should be {{ limit }} or more.", "V\u00e4rdet ska vara {{ limit }} eller mer.", "validators", "sv");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "V\u00e4rdet \u00e4r f\u00f6r kort. Det ska ha {{ limit }} tecken eller mer.|V\u00e4rdet \u00e4r f\u00f6r kort. Det ska ha {{ limit }} tecken eller mer.", "validators", "sv");
    Translator.add("This value should not be blank.", "V\u00e4rdet kan inte vara tomt.", "validators", "sv");
    Translator.add("This value should not be null.", "V\u00e4rdet kan inte vara null.", "validators", "sv");
    Translator.add("This value should be null.", "V\u00e4rdet ska vara null.", "validators", "sv");
    Translator.add("This value is not valid.", "V\u00e4rdet \u00e4r inte giltigt.", "validators", "sv");
    Translator.add("This value is not a valid time.", "V\u00e4rdet \u00e4r inte en giltig tid.", "validators", "sv");
    Translator.add("This value is not a valid URL.", "V\u00e4rdet \u00e4r inte en giltig URL.", "validators", "sv");
    Translator.add("The two values should be equal.", "De tv\u00e5 v\u00e4rdena m\u00e5ste vara lika.", "validators", "sv");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Filen \u00e4r f\u00f6r stor. Till\u00e5ten maximal storlek \u00e4r {{ limit }} {{ suffix }}.", "validators", "sv");
    Translator.add("The file is too large.", "Filen \u00e4r f\u00f6r stor.", "validators", "sv");
    Translator.add("The file could not be uploaded.", "Filen kunde inte laddas upp.", "validators", "sv");
    Translator.add("This value should be a valid number.", "V\u00e4rdet ska vara ett giltigt nummer.", "validators", "sv");
    Translator.add("This file is not a valid image.", "Filen \u00e4r ingen giltig bild.", "validators", "sv");
    Translator.add("This is not a valid IP address.", "Det h\u00e4r \u00e4r inte en giltig IP-adress.", "validators", "sv");
    Translator.add("This value is not a valid language.", "V\u00e4rdet \u00e4r inte ett giltigt spr\u00e5k.", "validators", "sv");
    Translator.add("This value is not a valid locale.", "V\u00e4rdet \u00e4r inte en giltig plats.", "validators", "sv");
    Translator.add("This value is not a valid country.", "V\u00e4rdet \u00e4r inte ett giltigt land.", "validators", "sv");
    Translator.add("This value is already used.", "V\u00e4rdet anv\u00e4nds redan.", "validators", "sv");
    Translator.add("The size of the image could not be detected.", "Det gick inte att fastst\u00e4lla storleken p\u00e5 bilden.", "validators", "sv");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Bildens bredd \u00e4r f\u00f6r stor ({{ width }}px). Till\u00e5ten maximal bredd \u00e4r {{ max_width }}px.", "validators", "sv");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Bildens bredd \u00e4r f\u00f6r liten ({{ width }}px). Minsta f\u00f6rv\u00e4ntade bredd \u00e4r {{ min_width }}px.", "validators", "sv");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Bildens h\u00f6jd \u00e4r f\u00f6r stor ({{ height }}px). Till\u00e5ten maximal bredd \u00e4r {{ max_height }}px.", "validators", "sv");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Bildens h\u00f6jd \u00e4r f\u00f6r liten ({{ height }}px). Minsta f\u00f6rv\u00e4ntade h\u00f6jd \u00e4r {{ min_height }}px.", "validators", "sv");
    Translator.add("This value should be the user's current password.", "V\u00e4rdet ska vara anv\u00e4ndarens nuvarande l\u00f6senord.", "validators", "sv");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "V\u00e4rdet ska ha exakt {{ limit }} tecken.|V\u00e4rdet ska ha exakt {{ limit }} tecken.", "validators", "sv");
    Translator.add("The file was only partially uploaded.", "Filen laddades bara upp delvis.", "validators", "sv");
    Translator.add("No file was uploaded.", "Ingen fil laddades upp.", "validators", "sv");
    Translator.add("No temporary folder was configured in php.ini.", "Det finns ingen tempor\u00e4r mapp konfigurerad i php.ini.", "validators", "sv");
    Translator.add("Cannot write temporary file to disk.", "Kan inte skriva tempor\u00e4r fil till disken.", "validators", "sv");
    Translator.add("A PHP extension caused the upload to fail.", "En PHP extension gjorde att uppladdningen misslyckades.", "validators", "sv");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Den h\u00e4r samlingen ska inneh\u00e5lla {{ limit }} element eller mer.|Den h\u00e4r samlingen ska inneh\u00e5lla {{ limit }} element eller mer.", "validators", "sv");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Den h\u00e4r samlingen ska inneh\u00e5lla {{ limit }} element eller mindre.|Den h\u00e4r samlingen ska inneh\u00e5lla {{ limit }} element eller mindre.", "validators", "sv");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Den h\u00e4r samlingen ska inneh\u00e5lla exakt {{ limit }} element.|Den h\u00e4r samlingen ska inneh\u00e5lla exakt {{ limit }} element.", "validators", "sv");
    Translator.add("Invalid card number.", "Ogiltigt kortnummer.", "validators", "sv");
    Translator.add("Unsupported card type or invalid card number.", "Ok\u00e4nd korttyp eller ogiltigt kortnummer.", "validators", "sv");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Det h\u00e4r \u00e4r inte en giltig International Bank Account Number (IBANK).", "validators", "sv");
    Translator.add("This value is not a valid ISBN-10.", "V\u00e4rdet \u00e4r inte en giltig ISBN-10.", "validators", "sv");
    Translator.add("This value is not a valid ISBN-13.", "V\u00e4rdet \u00e4r inte en giltig ISBN-13.", "validators", "sv");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "V\u00e4rdet \u00e4r varken en giltig ISBN-10 eller en giltig ISBN-13.", "validators", "sv");
    Translator.add("This value is not a valid ISSN.", "V\u00e4rdet \u00e4r inte en giltig ISSN.", "validators", "sv");
    Translator.add("This value is not a valid currency.", "V\u00e4rdet \u00e4r inte en giltig valuta.", "validators", "sv");
    Translator.add("This value should be equal to {{ compared_value }}.", "V\u00e4rdet ska vara detsamma som {{ compared_value }}.", "validators", "sv");
    Translator.add("This value should be greater than {{ compared_value }}.", "V\u00e4rdet ska vara st\u00f6rre \u00e4n {{ compared_value }}.", "validators", "sv");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "V\u00e4rdet ska bara st\u00f6rre \u00e4n eller detsamma som {{ compared_value }}.", "validators", "sv");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "V\u00e4rdet ska vara identiskt till {{ compared_value_type }} {{ compared_value }}.", "validators", "sv");
    Translator.add("This value should be less than {{ compared_value }}.", "V\u00e4rdet ska vara mindre \u00e4n {{ compared_value }}.", "validators", "sv");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "V\u00e4rdet ska vara mindre \u00e4n eller detsamma som {{ compared_value }}.", "validators", "sv");
    Translator.add("This value should not be equal to {{ compared_value }}.", "V\u00e4rdet ska inte vara detsamma som {{ compared_value }}.", "validators", "sv");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "V\u00e4rdet ska inte vara identiskt med {{ compared_value_type }} {{ compared_value }}.", "validators", "sv");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "F\u00f6rh\u00e5llandet mellan bildens bredd och h\u00f6jd \u00e4r f\u00f6r stort ({{ ratio }}). H\u00f6gsta till\u00e5tna f\u00f6rh\u00e5llande \u00e4r {{ max_ratio }}.", "validators", "sv");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "F\u00f6rh\u00e5llandet mellan bildens bredd och h\u00f6jd \u00e4r f\u00f6r litet ({{ ratio }}). Minsta till\u00e5tna f\u00f6rh\u00e5llande \u00e4r {{ min_ratio }}.", "validators", "sv");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "Bilden \u00e4r kvadratisk ({{ width }}x{{ height }}px). Kvadratiska bilder till\u00e5ts inte.", "validators", "sv");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "Bilden \u00e4r landskapsorienterad ({{ width }}x{{ height }}px). Landskapsorienterade bilder till\u00e5ts inte.", "validators", "sv");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "Bilden \u00e4r portr\u00e4ttsorienterad ({{ width }}x{{ height }}px). Portr\u00e4ttsorienterade bilder till\u00e5ts inte.", "validators", "sv");
    Translator.add("An empty file is not allowed.", "En tom fil \u00e4r inte till\u00e5ten.", "validators", "sv");
    Translator.add("The host could not be resolved.", "V\u00e4rddatorn kunde inte hittas.", "validators", "sv");
    Translator.add("This value does not match the expected {{ charset }} charset.", "Detta v\u00e4rde har inte den f\u00f6rv\u00e4ntade teckenkodningen {{ charset }}.", "validators", "sv");
    Translator.add("This form should not contain extra fields.", "Formul\u00e4ret kan inte inneh\u00e5lla extra f\u00e4lt.", "validators", "sv");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "Den uppladdade filen var f\u00f6r stor. F\u00f6rs\u00f6k ladda upp en mindre fil.", "validators", "sv");
    Translator.add("The CSRF token is invalid.", "CSRF-symbolen \u00e4r inte giltig.", "validators", "sv");
})(Translator);

(function (Translator) {
    // th
    Translator.add("This value should be false.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 false", "validators", "th");
    Translator.add("This value should be true.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 true", "validators", "th");
    Translator.add("This value should be of type {{ type }}.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e0a\u0e19\u0e34\u0e14 {{ type }}", "validators", "th");
    Translator.add("This value should be blank.", "\u0e04\u0e27\u0e23\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e48\u0e32\u0e27\u0e48\u0e32\u0e07", "validators", "th");
    Translator.add("The value you selected is not a valid choice.", "\u0e04\u0e38\u0e13\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e15\u0e23\u0e07\u0e01\u0e31\u0e1a\u0e15\u0e31\u0e27\u0e40\u0e25\u0e37\u0e2d\u0e01", "validators", "th");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u0e04\u0e38\u0e13\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e19\u0e49\u0e2d\u0e22 {{ limit }} \u0e15\u0e31\u0e27\u0e40\u0e25\u0e37\u0e2d\u0e01", "validators", "th");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u0e04\u0e38\u0e13\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e44\u0e14\u0e49\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 {{ limit }} \u0e15\u0e31\u0e27\u0e40\u0e25\u0e37\u0e2d\u0e01", "validators", "th");
    Translator.add("One or more of the given values is invalid.", "\u0e21\u0e35\u0e1a\u0e32\u0e07\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e2a\u0e48\u0e07\u0e21\u0e32\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("This field was not expected.", "\u0e1f\u0e34\u0e25\u0e14\u0e4c\u0e19\u0e35\u0e49\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e04\u0e32\u0e14\u0e2b\u0e27\u0e31\u0e07", "validators", "th");
    Translator.add("This field is missing.", "\u0e1f\u0e34\u0e25\u0e14\u0e4c\u0e19\u0e35\u0e49\u0e08\u0e30\u0e2b\u0e32\u0e22\u0e44\u0e1b", "validators", "th");
    Translator.add("This value is not a valid date.", "\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("This value is not a valid datetime.", "\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e41\u0e25\u0e30\u0e40\u0e27\u0e25\u0e32\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("This value is not a valid email address.", "\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e2d\u0e35\u0e40\u0e21\u0e25\u0e4c\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("The file could not be found.", "\u0e44\u0e21\u0e48\u0e1e\u0e1a\u0e44\u0e1f\u0e25\u0e4c", "validators", "th");
    Translator.add("The file is not readable.", "\u0e44\u0e1f\u0e25\u0e4c\u0e44\u0e21\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e2a\u0e16\u0e32\u0e19\u0e30\u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e48\u0e32\u0e19\u0e44\u0e14\u0e49", "validators", "th");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0e44\u0e1f\u0e25\u0e4c\u0e43\u0e2b\u0e0d\u0e48\u0e40\u0e01\u0e34\u0e19 ({{ size }} {{ suffix }}) \u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e43\u0e2b\u0e49\u0e43\u0e2b\u0e0d\u0e48\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e44\u0e14\u0e49\u0e44\u0e21\u0e48\u0e40\u0e01\u0e34\u0e19 {{ limit }} {{ suffix }}", "validators", "th");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Mime type \u0e02\u0e2d\u0e07\u0e44\u0e1f\u0e25\u0e4c\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07 ({{ type }}) Mime types \u0e17\u0e35\u0e48\u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e04\u0e37\u0e2d {{ types }}", "validators", "th");
    Translator.add("This value should be {{ limit }} or less.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 {{ limit }} \u0e2b\u0e23\u0e37\u0e2d\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19", "validators", "th");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e22\u0e32\u0e27\u0e40\u0e01\u0e34\u0e19\u0e44\u0e1b \u0e04\u0e27\u0e23\u0e08\u0e30\u0e21\u0e35\u0e41\u0e04\u0e48 {{ limit }} \u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e2b\u0e23\u0e37\u0e2d\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19", "validators", "th");
    Translator.add("This value should be {{ limit }} or more.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e21\u0e35 {{ limit }} \u0e2b\u0e23\u0e37\u0e2d\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19", "validators", "th");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e2a\u0e31\u0e49\u0e19\u0e40\u0e01\u0e34\u0e19\u0e44\u0e1b \u0e04\u0e27\u0e23\u0e08\u0e30\u0e21\u0e35 {{ limit }} \u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e2b\u0e23\u0e37\u0e2d\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19", "validators", "th");
    Translator.add("This value should not be blank.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e04\u0e27\u0e23\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e48\u0e32\u0e27\u0e48\u0e32\u0e07", "validators", "th");
    Translator.add("This value should not be null.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e04\u0e27\u0e23\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e48\u0e32 null", "validators", "th");
    Translator.add("This value should be null.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e48\u0e32 null", "validators", "th");
    Translator.add("This value is not valid.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("This value is not a valid time.", "\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e40\u0e27\u0e25\u0e32\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("This value is not a valid URL.", "\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07 URL \u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("The two values should be equal.", "\u0e04\u0e48\u0e32\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e2d\u0e07\u0e04\u0e48\u0e32\u0e04\u0e27\u0e23\u0e08\u0e30\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e19", "validators", "th");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0e02\u0e19\u0e32\u0e14\u0e44\u0e1f\u0e25\u0e4c\u0e43\u0e2b\u0e0d\u0e48\u0e40\u0e01\u0e34\u0e19\u0e44\u0e1b \u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e43\u0e2b\u0e49\u0e44\u0e1f\u0e25\u0e4c\u0e02\u0e19\u0e32\u0e14\u0e43\u0e2b\u0e0d\u0e48\u0e44\u0e14\u0e49\u0e44\u0e21\u0e48\u0e40\u0e01\u0e34\u0e19 {{ limit }} {{ suffix }}", "validators", "th");
    Translator.add("The file is too large.", "\u0e02\u0e19\u0e32\u0e14\u0e44\u0e1f\u0e25\u0e4c\u0e43\u0e2b\u0e0d\u0e48\u0e40\u0e01\u0e34\u0e19\u0e44\u0e1b", "validators", "th");
    Translator.add("The file could not be uploaded.", "\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e31\u0e1b\u0e42\u0e2b\u0e25\u0e14\u0e44\u0e1f\u0e25\u0e4c\u0e44\u0e14\u0e49", "validators", "th");
    Translator.add("This value should be a valid number.", "\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("This file is not a valid image.", "\u0e44\u0e1f\u0e25\u0e4c\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e48\u0e44\u0e1f\u0e25\u0e4c\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e", "validators", "th");
    Translator.add("This is not a valid IP address.", "\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07 IP \u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("This value is not a valid language.", "\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e20\u0e32\u0e29\u0e32\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("This value is not a valid locale.", "\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e20\u0e39\u0e21\u0e34\u0e20\u0e32\u0e04 (Locale) \u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("This value is not a valid country.", "\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("This value is already used.", "T\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e16\u0e39\u0e01\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e44\u0e1b\u0e41\u0e25\u0e49\u0e27", "validators", "th");
    Translator.add("The size of the image could not be detected.", "\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e02\u0e19\u0e32\u0e14\u0e44\u0e1f\u0e25\u0e4c\u0e02\u0e2d\u0e07\u0e20\u0e32\u0e1e\u0e44\u0e14\u0e49", "validators", "th");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u0e04\u0e27\u0e32\u0e21\u0e01\u0e27\u0e49\u0e32\u0e07\u0e02\u0e2d\u0e07\u0e20\u0e32\u0e1e\u0e40\u0e01\u0e34\u0e19\u0e02\u0e19\u0e32\u0e14 ({{ width }}px) \u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e43\u0e2b\u0e49\u0e01\u0e27\u0e49\u0e32\u0e07\u0e44\u0e14\u0e49\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 {{ max_width }}px", "validators", "th");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u0e04\u0e27\u0e32\u0e21\u0e01\u0e27\u0e49\u0e32\u0e07\u0e02\u0e2d\u0e07\u0e20\u0e32\u0e1e\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e02\u0e19\u0e32\u0e14 ({{ width }}px) \u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e43\u0e2b\u0e49\u0e2a\u0e31\u0e49\u0e19\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 {{ min_width }}px", "validators", "th");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07\u0e02\u0e2d\u0e07\u0e20\u0e32\u0e1e\u0e40\u0e01\u0e34\u0e19\u0e02\u0e19\u0e32\u0e14 ({{ height }}px) \u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e43\u0e2b\u0e49\u0e2a\u0e39\u0e07\u0e44\u0e14\u0e49\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 {{ max_height }}px", "validators", "th");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07\u0e02\u0e2d\u0e07\u0e20\u0e32\u0e1e\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e02\u0e19\u0e32\u0e14 ({{ height }}px) \u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e43\u0e2b\u0e49\u0e2a\u0e39\u0e07\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e19\u0e49\u0e2d\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 {{ min_height }}px", "validators", "th");
    Translator.add("This value should be the user's current password.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e23\u0e2b\u0e31\u0e2a\u0e1c\u0e48\u0e32\u0e19\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19\u0e02\u0e2d\u0e07\u0e1c\u0e39\u0e49\u0e43\u0e0a\u0e49", "validators", "th");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e22\u0e32\u0e27 {{ limit }} \u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23", "validators", "th");
    Translator.add("The file was only partially uploaded.", "\u0e2d\u0e31\u0e1b\u0e42\u0e2b\u0e25\u0e14\u0e44\u0e1f\u0e25\u0e4c\u0e44\u0e14\u0e49\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e1a\u0e32\u0e07\u0e2a\u0e48\u0e27\u0e19\u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19", "validators", "th");
    Translator.add("No file was uploaded.", "\u0e44\u0e21\u0e48\u0e21\u0e35\u0e44\u0e1f\u0e25\u0e4c\u0e43\u0e14\u0e16\u0e39\u0e01\u0e2d\u0e31\u0e1b\u0e42\u0e2b\u0e25\u0e14", "validators", "th");
    Translator.add("No temporary folder was configured in php.ini.", "\u0e44\u0e21\u0e48\u0e1e\u0e1a\u0e44\u0e1f\u0e25\u0e4c temp \u0e04\u0e27\u0e23\u0e08\u0e30\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e43\u0e19 php.ini", "validators", "th");
    Translator.add("Cannot write temporary file to disk.", "\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e02\u0e35\u0e22\u0e19 temp \u0e44\u0e1f\u0e25\u0e4c\u0e25\u0e07\u0e14\u0e34\u0e2a\u0e01\u0e4c\u0e44\u0e14\u0e49", "validators", "th");
    Translator.add("A PHP extension caused the upload to fail.", "PHP extension \u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2d\u0e31\u0e1b\u0e42\u0e2b\u0e25\u0e14\u0e21\u0e35\u0e1b\u0e31\u0e0d\u0e2b\u0e32", "validators", "th");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "\u0e04\u0e2d\u0e40\u0e25\u0e47\u0e01\u0e0a\u0e31\u0e48\u0e19\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e44\u0e1b\u0e14\u0e49\u0e27\u0e22\u0e2d\u0e48\u0e32\u0e07\u0e19\u0e49\u0e2d\u0e22 {{ limit }} \u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01", "validators", "th");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u0e04\u0e2d\u0e40\u0e25\u0e47\u0e01\u0e0a\u0e31\u0e48\u0e19\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e04\u0e27\u0e23\u0e21\u0e35\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e40\u0e01\u0e34\u0e19 {{ limit }}", "validators", "th");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u0e04\u0e2d\u0e40\u0e25\u0e47\u0e01\u0e0a\u0e31\u0e48\u0e19\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e21\u0e35\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01 {{ limit }} \u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19", "validators", "th");
    Translator.add("Invalid card number.", "\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e25\u0e02\u0e1a\u0e31\u0e15\u0e23\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("Unsupported card type or invalid card number.", "\u0e44\u0e21\u0e48\u0e23\u0e39\u0e49\u0e08\u0e31\u0e01\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e02\u0e2d\u0e07\u0e1a\u0e31\u0e15\u0e23 \u0e2b\u0e23\u0e37\u0e2d\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e25\u0e02\u0e1a\u0e31\u0e15\u0e23\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07", "validators", "th");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u0e19\u0e35\u0e48\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07\u0e15\u0e32\u0e21 International Bank Account Number (IBAN)", "validators", "th");
    Translator.add("This value is not a valid ISBN-10.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07\u0e15\u0e32\u0e21 ISBN-10", "validators", "th");
    Translator.add("This value is not a valid ISBN-13.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07\u0e15\u0e32\u0e21 ISBN-13", "validators", "th");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07\u0e15\u0e32\u0e21\u0e17\u0e31\u0e49\u0e07 ISBN-10 \u0e41\u0e25\u0e30 ISBN-13", "validators", "th");
    Translator.add("This value is not a valid ISSN.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e16\u0e38\u0e01\u0e15\u0e49\u0e2d\u0e07\u0e15\u0e32\u0e21 ISSN", "validators", "th");
    Translator.add("This value is not a valid currency.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07\u0e15\u0e32\u0e21\u0e2a\u0e01\u0e38\u0e25\u0e40\u0e07\u0e34\u0e19", "validators", "th");
    Translator.add("This value should be equal to {{ compared_value }}.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e15\u0e23\u0e07\u0e01\u0e31\u0e1a {{ compared_value }}", "validators", "th");
    Translator.add("This value should be greater than {{ compared_value }}.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32 {{ compared_value }}", "validators", "th");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32\u0e2b\u0e23\u0e37\u0e2d\u0e15\u0e23\u0e07\u0e01\u0e31\u0e1a {{ compared_value }}", "validators", "th");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e19\u0e01\u0e31\u0e1a {{ compared_value_type }} {{ compared_value }}", "validators", "th");
    Translator.add("This value should be less than {{ compared_value }}.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32 {{ compared_value }}", "validators", "th");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e04\u0e27\u0e23\u0e08\u0e30\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32\u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a {{ compared_value }}", "validators", "th");
    Translator.add("This value should not be equal to {{ compared_value }}.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e04\u0e27\u0e23\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e19\u0e01\u0e31\u0e1a {{ compared_value }}", "validators", "th");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e04\u0e27\u0e23\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e19\u0e01\u0e31\u0e1a {{ compared_value_type }} {{ compared_value }}", "validators", "th");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "\u0e2a\u0e31\u0e14\u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07\u0e20\u0e32\u0e1e\u0e43\u0e2b\u0e0d\u0e48\u0e40\u0e01\u0e34\u0e19 ({{ ratio }}) \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e21\u0e35\u0e02\u0e19\u0e32\u0e14\u0e43\u0e2b\u0e0d\u0e48\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e44\u0e14\u0e49 {{ max_ratio }}", "validators", "th");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "\u0e2a\u0e31\u0e14\u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07\u0e20\u0e32\u0e1e\u0e40\u0e25\u0e47\u0e01\u0e40\u0e01\u0e34\u0e19 ({{ ratio }}) \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e21\u0e35\u0e02\u0e19\u0e32\u0e14\u0e40\u0e25\u0e47\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e44\u0e14\u0e49 {{ min_ratio }}", "validators", "th");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e\u0e40\u0e1b\u0e47\u0e19\u0e08\u0e38\u0e15\u0e23\u0e31\u0e2a ({{ width }}x{{ height }}px) \u0e44\u0e21\u0e48\u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e20\u0e32\u0e1e\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e35\u0e48\u0e40\u0e2b\u0e25\u0e35\u0e48\u0e22\u0e21\u0e08\u0e15\u0e38\u0e23\u0e31\u0e2a", "validators", "th");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "\u0e20\u0e32\u0e1e\u0e19\u0e35\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e41\u0e19\u0e27\u0e19\u0e2d\u0e19 ({{ width }}x{{ height }}px) \u0e44\u0e21\u0e48\u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e20\u0e32\u0e1e\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e41\u0e19\u0e27\u0e19\u0e2d\u0e19", "validators", "th");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "\u0e20\u0e32\u0e1e\u0e19\u0e35\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e41\u0e19\u0e27\u0e15\u0e31\u0e49\u0e07 ({{ width }}x{{ height }}px) \u0e44\u0e21\u0e48\u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e20\u0e32\u0e1e\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e41\u0e19\u0e27\u0e15\u0e31\u0e49\u0e07", "validators", "th");
})(Translator);

(function (Translator) {
    // tr
    Translator.add("This value should be false.", "Bu de\u011fer olumsuz olmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("This value should be true.", "Bu de\u011fer olumlu olmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("This value should be of type {{ type }}.", "Bu de\u011ferin tipi {{ type }} olmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("This value should be blank.", "Bu de\u011fer bo\u015f olmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("The value you selected is not a valid choice.", "Se\u00e7ti\u011finiz de\u011fer ge\u00e7erli bir se\u00e7enek de\u011fil.", "validators", "tr");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "En az {{ limit }} se\u00e7enek belirtmelisiniz.", "validators", "tr");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "En \u00e7ok {{ limit }} se\u00e7enek belirtmelisiniz.", "validators", "tr");
    Translator.add("One or more of the given values is invalid.", "Verilen de\u011ferlerden bir veya daha fazlas\u0131 ge\u00e7ersiz.", "validators", "tr");
    Translator.add("This field was not expected.", "Bu alan beklenen olmad\u0131.", "validators", "tr");
    Translator.add("This field is missing.", "Bu alan, eksik", "validators", "tr");
    Translator.add("This value is not a valid date.", "Bu de\u011fer do\u011fru bir tarih bi\u00e7imi de\u011fildir.", "validators", "tr");
    Translator.add("This value is not a valid datetime.", "Bu de\u011fer do\u011fru bir tarihsaat bi\u00e7imi de\u011fildir.", "validators", "tr");
    Translator.add("This value is not a valid email address.", "Bu de\u011fer do\u011fru bir e-mail adresi de\u011fildir.", "validators", "tr");
    Translator.add("The file could not be found.", "Dosya bulunamad\u0131.", "validators", "tr");
    Translator.add("The file is not readable.", "Dosya okunabilir de\u011fil.", "validators", "tr");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "Dosya \u00e7ok b\u00fcy\u00fck ({{ size }} {{ suffix }}). \u0130zin verilen en b\u00fcy\u00fck dosya boyutu {{ limit }} {{ suffix }}.", "validators", "tr");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Dosyan\u0131n mime tipi ge\u00e7ersiz ({{ type }}). \u0130zin verilen mime tipleri {{ types }}.", "validators", "tr");
    Translator.add("This value should be {{ limit }} or less.", "Bu de\u011fer {{ limit }} ve alt\u0131nda olmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Bu de\u011fer \u00e7ok uzun. {{ limit }} karakter veya daha az olmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("This value should be {{ limit }} or more.", "Bu de\u011fer {{ limit }} veya daha fazla olmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Bu de\u011fer \u00e7ok k\u0131sa. {{ limit }} karakter veya daha fazla olmald\u0131r.", "validators", "tr");
    Translator.add("This value should not be blank.", "Bu de\u011fer bo\u015f b\u0131rak\u0131lmamal\u0131d\u0131r.", "validators", "tr");
    Translator.add("This value should not be null.", "Bu de\u011fer bo\u015f b\u0131rak\u0131lmamal\u0131d\u0131r.", "validators", "tr");
    Translator.add("This value should be null.", "Bu de\u011fer bo\u015f b\u0131rak\u0131lmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("This value is not valid.", "Bu de\u011fer ge\u00e7erli de\u011fil.", "validators", "tr");
    Translator.add("This value is not a valid time.", "Bu de\u011fer do\u011fru bir saat de\u011fil.", "validators", "tr");
    Translator.add("This value is not a valid URL.", "Bu de\u011fer do\u011fru bir URL de\u011fil.", "validators", "tr");
    Translator.add("The two values should be equal.", "\u0130ki de\u011fer e\u015fit olmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "Dosya \u00e7ok b\u00fcy\u00fck. \u0130zin verilen en b\u00fcy\u00fck dosya boyutu {{ limit }} {{ suffix }}.", "validators", "tr");
    Translator.add("The file is too large.", "Dosya \u00e7ok b\u00fcy\u00fck.", "validators", "tr");
    Translator.add("The file could not be uploaded.", "Dosya y\u00fcklenemiyor.", "validators", "tr");
    Translator.add("This value should be a valid number.", "Bu de\u011fer ge\u00e7erli bir rakam olmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("This file is not a valid image.", "Bu dosya ge\u00e7erli bir resim de\u011fildir.", "validators", "tr");
    Translator.add("This is not a valid IP address.", "Bu ge\u00e7erli bir IP adresi de\u011fildir.", "validators", "tr");
    Translator.add("This value is not a valid language.", "Bu de\u011fer ge\u00e7erli bir lisan de\u011fil.", "validators", "tr");
    Translator.add("This value is not a valid locale.", "Bu de\u011fer ge\u00e7erli bir yer de\u011fildir.", "validators", "tr");
    Translator.add("This value is not a valid country.", "Bu de\u011fer ge\u00e7erli bir \u00fclke de\u011fildir.", "validators", "tr");
    Translator.add("This value is already used.", "Bu de\u011fer \u015fu anda kullan\u0131mda.", "validators", "tr");
    Translator.add("The size of the image could not be detected.", "Resmin boyutu saptanam\u0131yor.", "validators", "tr");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Resmin geni\u015fli\u011fi \u00e7ok b\u00fcy\u00fck ({{ width }}px). \u0130zin verilen en b\u00fcy\u00fck geni\u015flik {{ max_width }}px.", "validators", "tr");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Resmin geni\u015fli\u011fi \u00e7ok k\u00fc\u00e7\u00fck ({{ width }}px). En az {{ min_width }}px olmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Resmin y\u00fcksekli\u011fi \u00e7ok b\u00fcy\u00fck ({{ height }}px). \u0130zin verilen en b\u00fcy\u00fck y\u00fckseklik {{ max_height }}px.", "validators", "tr");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Resmin y\u00fcksekli\u011fi \u00e7ok k\u00fc\u00e7\u00fck ({{ height }}px). En az {{ min_height }}px olmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("This value should be the user's current password.", "Bu de\u011fer kullan\u0131c\u0131n\u0131n \u015fu anki \u015fifresi olmal\u0131d\u0131r.", "validators", "tr");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Bu de\u011fer tam olarak {{ limit }} karakter olmald\u0131r.", "validators", "tr");
    Translator.add("The file was only partially uploaded.", "Dosya sadece k\u0131smen y\u00fcklendi.", "validators", "tr");
    Translator.add("No file was uploaded.", "Hi\u00e7bir dosya y\u00fcklenmedi.", "validators", "tr");
    Translator.add("No temporary folder was configured in php.ini.", "php.ini i\u00e7erisinde ge\u00e7ici dizin tan\u0131mlanmad\u0131.", "validators", "tr");
    Translator.add("Cannot write temporary file to disk.", "Ge\u00e7ici dosya diske yaz\u0131lam\u0131yor.", "validators", "tr");
    Translator.add("A PHP extension caused the upload to fail.", "Bir PHP eklentisi dosyan\u0131n y\u00fcklemesini ba\u015far\u0131s\u0131z k\u0131ld\u0131.", "validators", "tr");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Bu derlem {{ limit }} veya daha \u00e7ok eleman i\u00e7ermelidir.", "validators", "tr");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Bu derlem {{ limit }} veya daha az eleman i\u00e7ermelidir.", "validators", "tr");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Bu derlem {{ limit }} eleman i\u00e7ermelidir.", "validators", "tr");
    Translator.add("Invalid card number.", "Ge\u00e7ersiz kart numaras\u0131.", "validators", "tr");
    Translator.add("Unsupported card type or invalid card number.", "Desteklenmeyen kart tipi veya ge\u00e7ersiz kart numaras\u0131.", "validators", "tr");
})(Translator);

(function (Translator) {
    // uk
    Translator.add("This value should be false.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u041d\u0456.", "validators", "uk");
    Translator.add("This value should be true.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0422\u0430\u043a.", "validators", "uk");
    Translator.add("This value should be of type {{ type }}.", "\u0422\u0438\u043f \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u0431\u0443\u0442\u0438 {{ type }}.", "validators", "uk");
    Translator.add("This value should be blank.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u043f\u0443\u0441\u0442\u0438\u043c.", "validators", "uk");
    Translator.add("The value you selected is not a valid choice.", "\u041e\u0431\u0440\u0430\u043d\u0435 \u0432\u0430\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0435.", "validators", "uk");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u0412\u0438 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043e\u0431\u0440\u0430\u0442\u0438 \u0445\u043e\u0447\u0430 \u0431 {{ limit }} \u0432\u0430\u0440\u0456\u0430\u043d\u0442.|\u0412\u0438 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043e\u0431\u0440\u0430\u0442\u0438 \u0445\u043e\u0447\u0430 \u0431 {{ limit }} \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438.|\u0412\u0438 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043e\u0431\u0440\u0430\u0442\u0438 \u0445\u043e\u0447\u0430 \u0431 {{ limit }} \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0456\u0432.", "validators", "uk");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u0412\u0438 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043e\u0431\u0440\u0430\u0442\u0438 \u043d\u0435 \u0431\u0456\u043b\u044c\u0448\u0435 \u043d\u0456\u0436 {{ limit }} \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0456\u0432.", "validators", "uk");
    Translator.add("One or more of the given values is invalid.", "\u041e\u0434\u043d\u0435 \u0430\u0431\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u0437\u0430\u0434\u0430\u043d\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u044c \u0454 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0456.", "validators", "uk");
    Translator.add("This field was not expected.", "\u0426\u0435 \u043f\u043e\u043b\u0435 \u043d\u0435 \u043e\u0447\u0456\u043a\u0443\u0454\u0442\u044c\u0441\u044f.", "validators", "uk");
    Translator.add("This field is missing.", "\u0426\u0435 \u043f\u043e\u043b\u0435 \u043d\u0435 \u0432\u0438\u0441\u0442\u0430\u0447\u0430\u0454.", "validators", "uk");
    Translator.add("This value is not a valid date.", "\u0414\u0430\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043d\u0435 \u0454 \u0432\u0456\u0440\u043d\u043e\u044e \u0434\u0430\u0442\u043e\u044e.", "validators", "uk");
    Translator.add("This value is not a valid datetime.", "\u0414\u0430\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0434\u0430\u0442\u0438 \u0442\u0430 \u0447\u0430\u0441\u0443 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0435.", "validators", "uk");
    Translator.add("This value is not a valid email address.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0430\u0434\u0440\u0435\u0441\u0438 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0457 \u043f\u043e\u0448\u0442\u0438 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0435.", "validators", "uk");
    Translator.add("The file could not be found.", "\u0424\u0430\u0439\u043b \u043d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e.", "validators", "uk");
    Translator.add("The file is not readable.", "\u0424\u0430\u0439\u043b \u043d\u0435 \u0447\u0438\u0442\u0430\u0454\u0442\u044c\u0441\u044f.", "validators", "uk");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0424\u0430\u0439\u043b \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0432\u0435\u043b\u0438\u043a\u0438\u0439 ({{ size }} {{ suffix }}). \u0414\u043e\u0437\u0432\u043e\u043b\u0435\u043d\u0438\u0439 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 {{ limit }} {{ suffix }}.", "validators", "uk");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "MIME-\u0442\u0438\u043f \u0444\u0430\u0439\u043b\u0443 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0438\u0439 ({{ type }}). \u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0456 MIME-\u0442\u0438\u043f\u0438 \u0444\u0430\u0439\u043b\u0456\u0432 {{ types }}.", "validators", "uk");
    Translator.add("This value should be {{ limit }} or less.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 {{ limit }} \u0430\u0431\u043e \u043c\u0435\u043d\u0448\u0435.", "validators", "uk");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0434\u043e\u0432\u0433\u0435. \u041f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043d\u0435 {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0443 \u0430\u0431\u043e \u043c\u0435\u043d\u0448\u0435.|\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0434\u043e\u0432\u0433\u0435. \u041f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043d\u0435 {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0430\u0431\u043e \u043c\u0435\u043d\u0448\u0435.|\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0434\u043e\u0432\u0433\u0435. \u041f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043d\u0435 {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0430\u0431\u043e \u043c\u0435\u043d\u0448\u0435.", "validators", "uk");
    Translator.add("This value should be {{ limit }} or more.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 {{ limit }} \u0430\u0431\u043e \u0431\u0456\u043b\u044c\u0448\u0435.", "validators", "uk");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u043a\u043e\u0440\u043e\u0442\u043a\u0435. \u041f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043d\u0435 {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0443 \u0430\u0431\u043e \u0431\u0456\u043b\u044c\u0448\u0435.|\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u043a\u043e\u0440\u043e\u0442\u043a\u0435. \u041f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043d\u0435 {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0430\u0431\u043e \u0431\u0456\u043b\u044c\u0448\u0435.|\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u043a\u043e\u0440\u043e\u0442\u043a\u0435. \u041f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043d\u0435 {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0430\u0431\u043e \u0431\u0456\u043b\u044c\u0448\u0435.", "validators", "uk");
    Translator.add("This value should not be blank.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043d\u0435 \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u043f\u0443\u0441\u0442\u0438\u043c.", "validators", "uk");
    Translator.add("This value should not be null.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043d\u0435 \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 null.", "validators", "uk");
    Translator.add("This value should be null.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 null.", "validators", "uk");
    Translator.add("This value is not valid.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0435.", "validators", "uk");
    Translator.add("This value is not a valid time.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0447\u0430\u0441\u0443 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0435.", "validators", "uk");
    Translator.add("This value is not a valid URL.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f URL \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0435.", "validators", "uk");
    Translator.add("The two values should be equal.", "\u041e\u0431\u0438\u0434\u0432\u0430 \u0437\u0430\u043d\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u0431\u0443\u0442\u0438 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u0438\u043c\u0438.", "validators", "uk");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u0424\u0430\u0439\u043b \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0432\u0435\u043b\u0438\u043a\u0438\u0439. \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438\u0439 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 {{ limit }} {{ suffix }}.", "validators", "uk");
    Translator.add("The file is too large.", "\u0424\u0430\u0439\u043b \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0432\u0435\u043b\u0438\u043a\u0438\u0439.", "validators", "uk");
    Translator.add("The file could not be uploaded.", "\u0424\u0430\u0439\u043b \u043d\u0435 \u043c\u043e\u0436\u043b\u0438\u0432\u043e \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0438\u0442\u0438.", "validators", "uk");
    Translator.add("This value should be a valid number.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0438\u043c \u0447\u0438\u0441\u043b\u043e\u043c.", "validators", "uk");
    Translator.add("This file is not a valid image.", "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b \u043d\u0435 \u0454 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0438\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u043c \u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f.", "validators", "uk");
    Translator.add("This is not a valid IP address.", "\u0426\u0435 \u043d\u0435\u043a\u043e\u0440\u0435\u043a\u0442\u043d\u0430 IP \u0430\u0434\u0440\u0435\u0441\u0430.", "validators", "uk");
    Translator.add("This value is not a valid language.", "\u0426\u0435 \u043d\u0435\u043a\u043e\u0440\u0435\u043a\u0442\u043d\u0430 \u043c\u043e\u0432\u0430.", "validators", "uk");
    Translator.add("This value is not a valid locale.", "\u0426\u0435 \u043d\u0435\u043a\u043e\u0440\u0435\u043a\u0442\u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f.", "validators", "uk");
    Translator.add("This value is not a valid country.", "\u0426\u0435 \u043d\u0435\u043a\u043e\u0440\u0435\u043a\u0442\u043d\u0430 \u043a\u0440\u0430\u0457\u043d\u0430.", "validators", "uk");
    Translator.add("This value is already used.", "\u0426\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0432\u0436\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f.", "validators", "uk");
    Translator.add("The size of the image could not be detected.", "\u041d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f \u0432\u0438\u0437\u043d\u0430\u0447\u0438\u0442\u0438 \u0440\u043e\u0437\u043c\u0456\u0440 \u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f.", "validators", "uk");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u0428\u0438\u0440\u0438\u043d\u0430 \u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0432\u0435\u043b\u0438\u043a\u0430 ({{ width }}px). \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430 \u0448\u0438\u0440\u0438\u043d\u0430 {{ max_width }}px.", "validators", "uk");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u0428\u0438\u0440\u0438\u043d\u0430 \u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u043c\u0430\u043b\u0430 ({{ width }}px). \u041c\u0456\u043d\u0456\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430 \u0448\u0438\u0440\u0438\u043d\u0430 {{ min_width }}px.", "validators", "uk");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u0412\u0438\u0441\u043e\u0442\u0430 \u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0432\u0435\u043b\u0438\u043a\u0430 ({{ height }}px). \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430 \u0432\u0438\u0441\u043e\u0442\u0430 {{ max_height }}px.", "validators", "uk");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u0412\u0438\u0441\u043e\u0442\u0430 \u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u043c\u0430\u043b\u0430 ({{ height }}px). \u041c\u0456\u043d\u0456\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430 \u0432\u0438\u0441\u043e\u0442\u0430 {{ min_height }}px.", "validators", "uk");
    Translator.add("This value should be the user's current password.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 \u043f\u043e\u0442\u043e\u0447\u043d\u0438\u043c \u043f\u0430\u0440\u043e\u043b\u0435\u043c \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430.", "validators", "uk");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u0438\u043d\u043e \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043d\u0438\u043c {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0443.|\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u0438\u043d\u043e \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043d\u0438\u043c {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c.|\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u0438\u043d\u043e \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043d\u0438\u043c {{ limit }} \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c.", "validators", "uk");
    Translator.add("The file was only partially uploaded.", "\u0424\u0430\u0439\u043b \u0431\u0443\u0432 \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u0438\u0439 \u043b\u0438\u0448\u0435 \u0447\u0430\u0441\u0442\u043a\u043e\u0432\u043e.", "validators", "uk");
    Translator.add("No file was uploaded.", "\u0424\u0430\u0439\u043b \u043d\u0435 \u0431\u0443\u0432 \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u0438\u0439.", "validators", "uk");
    Translator.add("No temporary folder was configured in php.ini.", "\u041d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u043e\u0432\u0430\u043d\u0430 \u0442\u0438\u043c\u0447\u0430\u0441\u043e\u0432\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0456\u044f \u0432 php.ini.", "validators", "uk");
    Translator.add("Cannot write temporary file to disk.", "\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u0438 \u0442\u0438\u043c\u0447\u0430\u0441\u043e\u0432\u0438\u0439 \u0444\u0430\u0439\u043b \u043d\u0430 \u0434\u0438\u0441\u043a.", "validators", "uk");
    Translator.add("A PHP extension caused the upload to fail.", "\u0420\u043e\u0437\u0448\u0438\u0440\u0435\u043d\u043d\u044f PHP \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u043b\u043e \u043f\u043e\u043c\u0438\u043b\u043a\u0443 \u043f\u0440\u0438 \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u0456.", "validators", "uk");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "\u0426\u044f \u043a\u043e\u043b\u0435\u043a\u0446\u0456\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442 \u0447\u0438 \u0431\u0456\u043b\u044c\u0448\u0435.|\u0426\u044f \u043a\u043e\u043b\u0435\u043a\u0446\u0456\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0447\u0438 \u0431\u0456\u043b\u044c\u0448\u0435.|\u0426\u044f \u043a\u043e\u043b\u0435\u043a\u0446\u0456\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0456\u0432 \u0447\u0438 \u0431\u0456\u043b\u044c\u0448\u0435.", "validators", "uk");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u0426\u044f \u043a\u043e\u043b\u0435\u043a\u0446\u0456\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442 \u0447\u0438 \u043c\u0435\u043d\u0448\u0435.|\u0426\u044f \u043a\u043e\u043b\u0435\u043a\u0446\u0456\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0447\u0438 \u043c\u0435\u043d\u0448\u0435.|\u0426\u044f \u043a\u043e\u043b\u0435\u043a\u0446\u0456\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0447\u0438 \u043c\u0435\u043d\u0448\u0435.", "validators", "uk");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u0426\u044f \u043a\u043e\u043b\u0435\u043a\u0446\u0456\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0440\u0456\u0432\u043d\u043e {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442.|\u0426\u044f \u043a\u043e\u043b\u0435\u043a\u0446\u0456\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0440\u0456\u0432\u043d\u043e {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430.|\u0426\u044f \u043a\u043e\u043b\u0435\u043a\u0446\u0456\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0440\u0456\u0432\u043d\u043e {{ limit }} \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0456\u0432.", "validators", "uk");
    Translator.add("Invalid card number.", "\u041d\u0435\u0432\u0456\u0440\u043d\u0438\u0439 \u043d\u043e\u043c\u0435\u0440 \u043a\u0430\u0440\u0442\u0438.", "validators", "uk");
    Translator.add("Unsupported card type or invalid card number.", "\u041d\u0435\u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u043d\u0438\u0439 \u0442\u0438\u043f \u043a\u0430\u0440\u0442\u0438 \u0430\u0431\u043e \u043d\u0435\u0432\u0456\u0440\u043d\u0438\u0439 \u043d\u043e\u043c\u0435\u0440 \u043a\u0430\u0440\u0442\u0438.", "validators", "uk");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u0426\u0435 \u043d\u0435 \u0434\u0456\u0439\u0441\u043d\u0438\u0439 \u043c\u0456\u0436\u043d\u0430\u0440\u043e\u0434\u043d\u0438\u0439 \u043d\u043e\u043c\u0435\u0440 \u0431\u0430\u043d\u043a\u0456\u0432\u0441\u044c\u043a\u043e\u0433\u043e \u0440\u0430\u0445\u0443\u043d\u043a\u0443 (IBAN).", "validators", "uk");
    Translator.add("This value is not a valid ISBN-10.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043d\u0435 \u0443 \u0444\u043e\u0440\u043c\u0430\u0442\u0456 ISBN-10.", "validators", "uk");
    Translator.add("This value is not a valid ISBN-13.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043d\u0435 \u0443 \u0444\u043e\u0440\u043c\u0430\u0442\u0456 ISBN-13.", "validators", "uk");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043d\u0435 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u043c ISBN-10 \u0442\u0430 ISBN-13.", "validators", "uk");
    Translator.add("This value is not a valid ISSN.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043c\u0430\u0454 \u043d\u0435\u0432\u0456\u0440\u043d\u0438\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 ISSN.", "validators", "uk");
    Translator.add("This value is not a valid currency.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043c\u0430\u0454 \u043d\u0435\u0432\u0456\u0440\u043d\u0438\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0432\u0430\u043b\u044e\u0442\u0438.", "validators", "uk");
    Translator.add("This value should be equal to {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0432\u0430\u0442\u0438 {{ compared_value }}.", "validators", "uk");
    Translator.add("This value should be greater than {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 \u0431\u0456\u043b\u044c\u0448\u0435 \u043d\u0456\u0436 {{ compared_value }}.", "validators", "uk");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 \u0431\u0456\u043b\u044c\u0448\u0435 \u0430\u0431\u043e \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0432\u0430\u0442\u0438 {{ compared_value }}.", "validators", "uk");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 \u0456\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0438\u043c {{ compared_value_type }} {{ compared_value }}.", "validators", "uk");
    Translator.add("This value should be less than {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u043c\u0435\u043d\u0448\u0435 \u043d\u0456\u0436 {{ compared_value }}.", "validators", "uk");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u043c\u0435\u043d\u0448\u0435 \u0430\u0431\u043e \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0432\u0430\u0442\u0438 {{ compared_value }}.", "validators", "uk");
    Translator.add("This value should not be equal to {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043d\u0435 \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0432\u0430\u0442\u0438  {{ compared_value }}.", "validators", "uk");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043d\u0435 \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0456\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0438\u043c {{ compared_value_type }} {{ compared_value }}.", "validators", "uk");
    Translator.add("This form should not contain extra fields.", "\u0426\u044f \u0444\u043e\u0440\u043c\u0430 \u043d\u0435 \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0434\u043e\u0434\u0430\u0442\u043a\u043e\u0432\u0438\u0445 \u043f\u043e\u043b\u0456\u0432.", "validators", "uk");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u0417\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u0438\u0439 \u0444\u0430\u0439\u043b \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0432\u0435\u043b\u0438\u043a\u0438\u0439. \u0411\u0443\u0434\u044c-\u043b\u0430\u0441\u043a\u0430, \u0441\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0438\u0442\u0438 \u0444\u0430\u0439\u043b \u043c\u0435\u043d\u0448\u043e\u0433\u043e \u0440\u043e\u0437\u043c\u0456\u0440\u0443.", "validators", "uk");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0435. \u0411\u0443\u0434\u044c-\u043b\u0430\u0441\u043a\u0430, \u0441\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u0438\u0442\u0438 \u0444\u043e\u0440\u043c\u0443 \u0437\u043d\u043e\u0432\u0443.", "validators", "uk");
})(Translator);

(function (Translator) {
    // vi
    Translator.add("This value should be false.", "Gi\u00e1 tr\u1ecb n\u00e0y ph\u1ea3i l\u00e0 sai.", "validators", "vi");
    Translator.add("This value should be true.", "Gi\u00e1 tr\u1ecb n\u00e0y ph\u1ea3i l\u00e0 \u0111\u00fang.", "validators", "vi");
    Translator.add("This value should be of type {{ type }}.", "Gi\u00e1 tr\u1ecb n\u00e0y ph\u1ea3i l\u00e0 ki\u1ec3u  {{ type }}.", "validators", "vi");
    Translator.add("This value should be blank.", "Gi\u00e1 tr\u1ecb n\u00e0y ph\u1ea3i r\u1ed7ng.", "validators", "vi");
    Translator.add("The value you selected is not a valid choice.", "Gi\u00e1 tr\u1ecb b\u1ea1n v\u1eeba ch\u1ecdn kh\u00f4ng h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "B\u1ea1n ph\u1ea3i ch\u1ecdn \u00edt nh\u1ea5t {{ limit }} l\u1ef1a ch\u1ecdn.|B\u1ea1n ph\u1ea3i ch\u1ecdn \u00edt nh\u1ea5t {{ limit }} l\u1ef1a ch\u1ecdn.", "validators", "vi");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "B\u1ea1n ph\u1ea3i ch\u1ecdn nhi\u1ec1u nh\u1ea5t {{ limit }} l\u1ef1a ch\u1ecdn.|B\u1ea1n ph\u1ea3i ch\u1ecdn nhi\u1ec1u  nh\u1ea5t {{ limit }} l\u1ef1a ch\u1ecdn.", "validators", "vi");
    Translator.add("One or more of the given values is invalid.", "M\u1ed9t ho\u1eb7c nhi\u1ec1u gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c ch\u1ecdn kh\u00f4ng h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This field was not expected.", "L\u0129nh v\u1ef1c n\u00e0y kh\u00f4ng \u0111\u01b0\u1ee3c d\u1ef1 ki\u1ebfn.", "validators", "vi");
    Translator.add("This field is missing.", "L\u0129nh v\u1ef1c n\u00e0y l\u00e0 m\u1ea5t t\u00edch.", "validators", "vi");
    Translator.add("This value is not a valid date.", "Gi\u00e1 tr\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 ng\u00e0y h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is not a valid datetime.", "Gi\u00e1 tr\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 ng\u00e0y th\u00e1ng h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is not a valid email address.", "Gi\u00e1 tr\u1ecb n\u00e0y kh\u00f4ng ph\u1ea3i l\u00e0 email h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("The file could not be found.", "T\u1eadp tin kh\u00f4ng t\u00ecm th\u1ea5y.", "validators", "vi");
    Translator.add("The file is not readable.", "T\u1eadp tin kh\u00f4ng th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c.", "validators", "vi");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "T\u1eadp tin qu\u00e1 l\u1edbn ({{ size }} {{ suffix }}). K\u00edch th\u01b0\u1edbc t\u1ed1i \u0111a cho ph\u00e9p {{ limit }} {{ suffix }}.", "validators", "vi");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "Ki\u1ec3u mime c\u1ee7a t\u1eadp tin kh\u00f4ng h\u1ee3p l\u1ec7 ({{ type }}). Ki\u1ec3u h\u1ee3p l\u1ec7 l\u00e0 {{ types }}.", "validators", "vi");
    Translator.add("This value should be {{ limit }} or less.", "Gi\u00e1 tr\u1ecb ph\u1ea3i b\u1eb1ng ho\u1eb7c nh\u1ecf h\u01a1n {{ limit }}.", "validators", "vi");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "Gi\u00e1 tr\u1ecb qu\u00e1 d\u00e0i. Ph\u1ea3i b\u1eb1ng ho\u1eb7c \u00edt h\u01a1n {{ limit }} k\u00ed t\u1ef1.|Gi\u00e1 tr\u1ecb qu\u00e1 d\u00e0i. Ph\u1ea3i b\u1eb1ng ho\u1eb7c \u00edt h\u01a1n {{ limit }} k\u00ed t\u1ef1.", "validators", "vi");
    Translator.add("This value should be {{ limit }} or more.", "Gi\u00e1 tr\u1ecb ph\u1ea3i l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng {{ limit }}.", "validators", "vi");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "Gi\u00e1 tr\u1ecb qu\u00e1 ng\u1eafn. Ph\u1ea3i h\u01a1n ho\u1eb7c b\u1eb1ng {{ limit }} k\u00ed t\u1ef1.|Gi\u00e1 tr\u1ecb qu\u00e1 ng\u1eafn. Ph\u1ea3i h\u01a1n ho\u1eb7c b\u1eb1ng {{ limit }} k\u00ed t\u1ef1.", "validators", "vi");
    Translator.add("This value should not be blank.", "Gi\u00e1 tr\u1ecb kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p \u0111\u1ec3 tr\u1ed1ng.", "validators", "vi");
    Translator.add("This value should not be null.", "Gi\u00e1 tr\u1ecb kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p r\u1ed7ng.", "validators", "vi");
    Translator.add("This value should be null.", "Gi\u00e1 tr\u1ecb ph\u1ea3i r\u1ed7ng.", "validators", "vi");
    Translator.add("This value is not valid.", "Gi\u00e1 tr\u1ecb kh\u00f4ng h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is not a valid time.", "Gi\u00e1 tr\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 th\u1eddi gian h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is not a valid URL.", "Gi\u00e1 tr\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 \u0111\u1ecba ch\u1ec9 URL h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("The two values should be equal.", "Hai gi\u00e1 tr\u1ecb ph\u1ea3i b\u1eb1ng nhau.", "validators", "vi");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "T\u1eadp tin qu\u00e1 l\u1edbn. K\u00edch th\u01b0\u1edbc t\u1ed1i \u0111a cho ph\u00e9p l\u00e0 {{ limit }} {{ suffix }}.", "validators", "vi");
    Translator.add("The file is too large.", "T\u1eadp tin qu\u00e1 l\u1edbn.", "validators", "vi");
    Translator.add("The file could not be uploaded.", "T\u1eadp tin kh\u00f4ng th\u1ec3 t\u1ea3i l\u00ean.", "validators", "vi");
    Translator.add("This value should be a valid number.", "Gi\u00e1 tr\u1ecb ph\u1ea3i l\u00e0 con s\u1ed1.", "validators", "vi");
    Translator.add("This file is not a valid image.", "T\u1eadp tin kh\u00f4ng ph\u1ea3i l\u00e0 h\u00ecnh \u1ea3nh.", "validators", "vi");
    Translator.add("This is not a valid IP address.", "\u0110\u1ecba ch\u1ec9 IP kh\u00f4ng h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is not a valid language.", "Gi\u00e1 tr\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 ng\u00f4n ng\u1eef h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is not a valid locale.", "Gi\u00e1 tr\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t b\u1ea3n \u0111\u1ecba \u0111\u1ecba ph\u01b0\u01a1ng h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is not a valid country.", "Gi\u00e1 tr\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 n\u01b0\u1edbc h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is already used.", "Gi\u00e1 tr\u1ecb \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng.", "validators", "vi");
    Translator.add("The size of the image could not be detected.", "K\u00edch th\u01b0\u1edbc c\u1ee7a h\u00ecnh \u1ea3nh kh\u00f4ng th\u1ec3 x\u00e1c \u0111\u1ecbnh.", "validators", "vi");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "Chi\u1ec1u r\u1ed9ng c\u1ee7a h\u00ecnh qu\u00e1 l\u1edbn ({{ width }}px). Chi\u1ec1u r\u1ed9ng t\u1ed1i \u0111a ph\u1ea3i l\u00e0 {{ max_width }}px.", "validators", "vi");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "Chi\u1ec1u r\u1ed9ng c\u1ee7a h\u00ecnh qu\u00e1 th\u1ea5p ({{ width }}px). Chi\u1ec1u r\u1ed9ng t\u1ed1i thi\u1ec3u ph\u1ea3i l\u00e0 {{ min_width }}px.", "validators", "vi");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "Chi\u1ec1u cao c\u1ee7a h\u00ecnh qu\u00e1 cao ({{ height }}px). Chi\u1ec1u cao t\u1ed1i \u0111a ph\u1ea3i l\u00e0 {{ max_height }}px.", "validators", "vi");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "Chi\u1ec1u cao c\u1ee7a h\u00ecnh qu\u00e1 th\u1ea5p ({{ height }}px). Chi\u1ec1u cao t\u1ed1i thi\u1ec3u ph\u1ea3i l\u00e0 {{ min_height }}px.", "validators", "vi");
    Translator.add("This value should be the user's current password.", "Gi\u00e1 tr\u1ecb n\u00e0y ph\u1ea3i l\u00e0 m\u1eadt kh\u1ea9u hi\u1ec7n t\u1ea1i c\u1ee7a ng\u01b0\u1eddi d\u00f9ng.", "validators", "vi");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "Gi\u00e1 tr\u1ecb ph\u1ea3i c\u00f3 ch\u00ednh x\u00e1c {{ limit }} k\u00ed t\u1ef1.|Gi\u00e1 tr\u1ecb ph\u1ea3i c\u00f3 ch\u00ednh x\u00e1c {{ limit }} k\u00ed t\u1ef1.", "validators", "vi");
    Translator.add("The file was only partially uploaded.", "T\u1eadp tin ch\u1ec9 \u0111\u01b0\u1ee3c t\u1ea3i l\u00ean m\u1ed9t ph\u1ea7n.", "validators", "vi");
    Translator.add("No file was uploaded.", "T\u1eadp tin kh\u00f4ng \u0111\u01b0\u1ee3c t\u1ea3i l\u00ean.", "validators", "vi");
    Translator.add("No temporary folder was configured in php.ini.", "Th\u01b0 m\u1ee5c t\u1ea1m kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a trong php.ini.", "validators", "vi");
    Translator.add("Cannot write temporary file to disk.", "Kh\u00f4ng th\u1ec3 ghi t\u1eadp tin t\u1ea1m ra \u0111\u0129a.", "validators", "vi");
    Translator.add("A PHP extension caused the upload to fail.", "M\u1ed9t PHP extension \u0111\u00e3 ph\u00e1 h\u1ecfng qu\u00e1 tr\u00ecnh t\u1ea3i l\u00ean c\u1ee7a t\u1eadp tin.", "validators", "vi");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "Danh s\u00e1ch ph\u1ea3i ch\u1ee9a {{ limit }} ho\u1eb7c nhi\u1ec1u h\u01a1n th\u00e0nh ph\u1ea7n.|Danh s\u00e1ch ph\u1ea3i ch\u1ee9a {{ limit }} ho\u1eb7c nhi\u1ec1u h\u01a1n th\u00e0nh ph\u1ea7n.", "validators", "vi");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "Danh s\u00e1ch ph\u1ea3i ch\u1ee9a {{ limit }} ho\u1eb7c \u00edt h\u01a1n th\u00e0nh ph\u1ea7n.|Danh s\u00e1ch ph\u1ea3i ch\u1ee9a {{ limit }} ho\u1eb7c \u00edt h\u01a1n th\u00e0nh ph\u1ea7n.", "validators", "vi");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "Danh s\u00e1ch ph\u1ea3i ch\u1ee9a ch\u00ednh x\u00e1c {{ limit }} th\u00e0nh ph\u1ea7n.|Danh s\u00e1ch ph\u1ea3i ch\u1ee9a ch\u00ednh x\u00e1c {{ limit }} th\u00e0nh ph\u1ea7n.", "validators", "vi");
    Translator.add("Invalid card number.", "S\u1ed1 th\u1ebb kh\u00f4ng h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("Unsupported card type or invalid card number.", "Th\u1ebb kh\u00f4ng \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 ho\u1eb7c s\u1ed1 th\u1ebb kh\u00f4ng h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "Gi\u00e1 tr\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 International Bank Account Number (IBAN) h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is not a valid ISBN-10.", "Gi\u00e1 tr\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 ISBN-10 h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is not a valid ISBN-13.", "Gi\u00e1 tr\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 ISBN-13 h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "Gi\u00e1 tr\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 ISBN-10 ho\u1eb7c ISBN-13 h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is not a valid ISSN.", "Gi\u00e1 tr\u1ecb kh\u00f4ng l\u00e0 ISSN h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value is not a valid currency.", "Gi\u00e1 tr\u1ecb kh\u00f4ng ph\u1ea3i l\u00e0 \u0111\u01a1n vi ti\u1ec1n t\u1ec7 h\u1ee3p l\u1ec7.", "validators", "vi");
    Translator.add("This value should be equal to {{ compared_value }}.", "Gi\u00e1 tr\u1ecb ph\u1ea3i b\u1eb1ng {{ compared_value }}.", "validators", "vi");
    Translator.add("This value should be greater than {{ compared_value }}.", "Gi\u00e1 tr\u1ecb ph\u1ea3i l\u1edbn h\u01a1n {{ compared_value }}.", "validators", "vi");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "Gi\u00e1 tr\u1ecb ph\u1ea3i l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng {{ compared_value }}.", "validators", "vi");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "Gi\u00e1 tr\u1ecb ph\u1ea3i gi\u1ed1ng  {{ compared_value_type }} {{ compared_value }}.", "validators", "vi");
    Translator.add("This value should be less than {{ compared_value }}.", "Gi\u00e1 tr\u1ecb ph\u1ea3i b\u00e9 h\u01a1n {{ compared_value }}.", "validators", "vi");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "Gi\u00e1 tr\u1ecb kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng {{ compared_value }}.", "validators", "vi");
    Translator.add("This value should not be equal to {{ compared_value }}.", "Gi\u00e1 tr\u1ecb kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p b\u1eb1ng {{ compared_value }}.", "validators", "vi");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "Gi\u00e1 tr\u1ecb kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p gi\u1ed1ng nh\u01b0 {{ compared_value_type }} {{ compared_value }}.", "validators", "vi");
})(Translator);

(function (Translator) {
    // zh_CN
    Translator.add("This value should be false.", "\u8be5\u53d8\u91cf\u7684\u503c\u5e94\u4e3a false \u3002", "validators", "zh_CN");
    Translator.add("This value should be true.", "\u8be5\u53d8\u91cf\u7684\u503c\u5e94\u4e3a true \u3002", "validators", "zh_CN");
    Translator.add("This value should be of type {{ type }}.", "\u8be5\u53d8\u91cf\u7684\u7c7b\u578b\u5e94\u4e3a {{ type }} \u3002", "validators", "zh_CN");
    Translator.add("This value should be blank.", "\u8be5\u53d8\u91cf\u503c\u5e94\u4e3a\u7a7a\u3002", "validators", "zh_CN");
    Translator.add("The value you selected is not a valid choice.", "\u9009\u5b9a\u53d8\u91cf\u7684\u503c\u4e0d\u662f\u6709\u6548\u7684\u9009\u9879\u3002", "validators", "zh_CN");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u60a8\u81f3\u5c11\u8981\u9009\u62e9 {{ limit }} \u4e2a\u9009\u9879\u3002", "validators", "zh_CN");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u60a8\u6700\u591a\u80fd\u9009\u62e9 {{ limit }} \u4e2a\u9009\u9879\u3002", "validators", "zh_CN");
    Translator.add("One or more of the given values is invalid.", "\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u7ed9\u5b9a\u7684\u503c\u65e0\u6548\u3002", "validators", "zh_CN");
    Translator.add("This field was not expected.", "\u6b64\u5b57\u6bb5\u662f\u591a\u4f59\u7684\u3002", "validators", "zh_CN");
    Translator.add("This field is missing.", "\u6b64\u5b57\u6bb5\u7f3a\u5931\u3002", "validators", "zh_CN");
    Translator.add("This value is not a valid date.", "\u8be5\u503c\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u65e5\u671f\uff08date\uff09\u3002", "validators", "zh_CN");
    Translator.add("This value is not a valid datetime.", "\u8be5\u503c\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u65e5\u671f\u65f6\u95f4\uff08datetime\uff09\u3002", "validators", "zh_CN");
    Translator.add("This value is not a valid email address.", "\u8be5\u503c\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u90ae\u4ef6\u5730\u5740\u3002", "validators", "zh_CN");
    Translator.add("The file could not be found.", "\u6587\u4ef6\u672a\u627e\u5230\u3002", "validators", "zh_CN");
    Translator.add("The file is not readable.", "\u6587\u4ef6\u4e0d\u53ef\u8bfb\u3002", "validators", "zh_CN");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u6587\u4ef6\u592a\u5927 ({{ size }} {{ suffix }})\u3002\u6587\u4ef6\u5927\u5c0f\u4e0d\u53ef\u4ee5\u8d85\u8fc7 {{ limit }} {{ suffix }} \u3002", "validators", "zh_CN");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "\u65e0\u6548\u7684\u6587\u4ef6\u7c7b\u578b ({{ type }}) \u3002\u5141\u8bb8\u7684\u6587\u4ef6\u7c7b\u578b\u6709 {{ types }} \u3002", "validators", "zh_CN");
    Translator.add("This value should be {{ limit }} or less.", "\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u5e94\u8be5\u5c0f\u4e8e\u6216\u7b49\u4e8e {{ limit }}\u3002", "validators", "zh_CN");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u5b57\u7b26\u4e32\u592a\u957f\uff0c\u957f\u5ea6\u4e0d\u53ef\u8d85\u8fc7 {{ limit }} \u4e2a\u5b57\u7b26\u3002", "validators", "zh_CN");
    Translator.add("This value should be {{ limit }} or more.", "\u8be5\u53d8\u91cf\u7684\u503c\u5e94\u8be5\u5927\u4e8e\u6216\u7b49\u4e8e {{ limit }}\u3002", "validators", "zh_CN");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u5b57\u7b26\u4e32\u592a\u77ed\uff0c\u957f\u5ea6\u4e0d\u53ef\u5c11\u4e8e {{ limit }} \u4e2a\u5b57\u7b26\u3002", "validators", "zh_CN");
    Translator.add("This value should not be blank.", "\u8be5\u53d8\u91cf\u4e0d\u5e94\u4e3a\u7a7a\u3002", "validators", "zh_CN");
    Translator.add("This value should not be null.", "\u8be5\u53d8\u91cf\u4e0d\u5e94\u4e3a null \u3002", "validators", "zh_CN");
    Translator.add("This value should be null.", "\u8be5\u53d8\u91cf\u5e94\u4e3a\u7a7a null \u3002", "validators", "zh_CN");
    Translator.add("This value is not valid.", "\u8be5\u53d8\u91cf\u503c\u65e0\u6548 \u3002", "validators", "zh_CN");
    Translator.add("This value is not a valid time.", "\u8be5\u503c\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u65f6\u95f4\u3002", "validators", "zh_CN");
    Translator.add("This value is not a valid URL.", "\u8be5\u503c\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684 URL \u3002", "validators", "zh_CN");
    Translator.add("The two values should be equal.", "\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\u5e94\u8be5\u76f8\u7b49\u3002", "validators", "zh_CN");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u6587\u4ef6\u592a\u5927\uff0c\u6587\u4ef6\u5927\u5c0f\u4e0d\u53ef\u4ee5\u8d85\u8fc7 {{ limit }} {{ suffix }}\u3002 ", "validators", "zh_CN");
    Translator.add("The file is too large.", "\u6587\u4ef6\u592a\u5927\u3002", "validators", "zh_CN");
    Translator.add("The file could not be uploaded.", "\u65e0\u6cd5\u4e0a\u4f20\u6b64\u6587\u4ef6\u3002", "validators", "zh_CN");
    Translator.add("This value should be a valid number.", "\u8be5\u503c\u5e94\u8be5\u4e3a\u6709\u6548\u7684\u6570\u5b57\u3002", "validators", "zh_CN");
    Translator.add("This value is not a valid country.", "\u8be5\u503c\u4e0d\u662f\u6709\u6548\u7684\u56fd\u5bb6\u540d\u3002", "validators", "zh_CN");
    Translator.add("This file is not a valid image.", "\u8be5\u6587\u4ef6\u4e0d\u662f\u6709\u6548\u7684\u56fe\u7247\u3002", "validators", "zh_CN");
    Translator.add("This is not a valid IP address.", "\u8be5\u503c\u4e0d\u662f\u6709\u6548\u7684IP\u5730\u5740\u3002", "validators", "zh_CN");
    Translator.add("This value is not a valid language.", "\u8be5\u503c\u4e0d\u662f\u6709\u6548\u7684\u8bed\u8a00\u540d\u3002", "validators", "zh_CN");
    Translator.add("This value is not a valid locale.", "\u8be5\u503c\u4e0d\u662f\u6709\u6548\u7684\u533a\u57df\u503c\uff08locale\uff09\u3002", "validators", "zh_CN");
    Translator.add("This value is already used.", "\u8be5\u503c\u5df2\u7ecf\u88ab\u4f7f\u7528\u3002", "validators", "zh_CN");
    Translator.add("The size of the image could not be detected.", "\u4e0d\u80fd\u89e3\u6790\u56fe\u7247\u5927\u5c0f\u3002", "validators", "zh_CN");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u56fe\u7247\u592a\u5bbd ({{ width }}px)\uff0c\u6700\u5927\u5bbd\u5ea6\u4e3a {{ max_width }}px \u3002", "validators", "zh_CN");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u56fe\u7247\u5bbd\u5ea6\u4e0d\u591f ({{ width }}px)\uff0c\u6700\u5c0f\u5bbd\u5ea6\u4e3a {{ min_width }}px \u3002", "validators", "zh_CN");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u56fe\u7247\u592a\u9ad8 ({{ height }}px)\uff0c\u6700\u5927\u9ad8\u5ea6\u4e3a {{ max_height }}px \u3002", "validators", "zh_CN");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u56fe\u7247\u9ad8\u5ea6\u4e0d\u591f ({{ height }}px)\uff0c\u6700\u5c0f\u9ad8\u5ea6\u4e3a {{ min_height }}px \u3002", "validators", "zh_CN");
    Translator.add("This value should be the user's current password.", "\u8be5\u53d8\u91cf\u7684\u503c\u5e94\u4e3a\u7528\u6237\u5f53\u524d\u7684\u5bc6\u7801\u3002", "validators", "zh_CN");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u8be5\u53d8\u91cf\u5e94\u4e3a {{ limit }} \u4e2a\u5b57\u7b26\u3002", "validators", "zh_CN");
    Translator.add("The file was only partially uploaded.", "\u8be5\u6587\u4ef6\u7684\u4e0a\u4f20\u4e0d\u5b8c\u6574\u3002", "validators", "zh_CN");
    Translator.add("No file was uploaded.", "\u6ca1\u6709\u4e0a\u4f20\u4efb\u4f55\u6587\u4ef6\u3002", "validators", "zh_CN");
    Translator.add("No temporary folder was configured in php.ini.", "php.ini \u91cc\u6ca1\u6709\u914d\u7f6e\u4e34\u65f6\u6587\u4ef6\u76ee\u5f55\u3002", "validators", "zh_CN");
    Translator.add("Cannot write temporary file to disk.", "\u4e34\u65f6\u6587\u4ef6\u5199\u5165\u78c1\u76d8\u5931\u8d25\u3002", "validators", "zh_CN");
    Translator.add("A PHP extension caused the upload to fail.", "\u67d0\u4e2a PHP \u6269\u5c55\u9020\u6210\u4e0a\u4f20\u5931\u8d25\u3002", "validators", "zh_CN");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "\u8be5\u96c6\u5408\u6700\u5c11\u5e94\u5305\u542b {{ limit }} \u4e2a\u5143\u7d20\u3002", "validators", "zh_CN");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u8be5\u96c6\u5408\u6700\u591a\u5305\u542b {{ limit }} \u4e2a\u5143\u7d20\u3002", "validators", "zh_CN");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u8be5\u96c6\u5408\u5e94\u5305\u542b {{ limit }} \u4e2a\u5143\u7d20 element \u3002", "validators", "zh_CN");
    Translator.add("Invalid card number.", "\u65e0\u6548\u7684\u4fe1\u7528\u5361\u53f7\u3002", "validators", "zh_CN");
    Translator.add("Unsupported card type or invalid card number.", "\u4e0d\u652f\u6301\u7684\u4fe1\u7528\u5361\u7c7b\u578b\u6216\u65e0\u6548\u7684\u4fe1\u7528\u5361\u53f7\u3002", "validators", "zh_CN");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u8be5\u503c\u4e0d\u662f\u6709\u6548\u7684\u56fd\u9645\u94f6\u884c\u5e10\u53f7\uff08IBAN\uff09\u3002", "validators", "zh_CN");
    Translator.add("This value is not a valid ISBN-10.", "\u8be5\u503c\u4e0d\u662f\u6709\u6548\u768410\u4f4d\u56fd\u9645\u6807\u51c6\u4e66\u53f7\uff08ISBN-10\uff09\u3002", "validators", "zh_CN");
    Translator.add("This value is not a valid ISBN-13.", "\u8be5\u503c\u4e0d\u662f\u6709\u6548\u768413\u4f4d\u56fd\u9645\u6807\u51c6\u4e66\u53f7\uff08ISBN-13\uff09\u3002", "validators", "zh_CN");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u8be5\u503c\u4e0d\u662f\u6709\u6548\u7684\u56fd\u9645\u6807\u51c6\u4e66\u53f7\uff08ISBN-10 \u6216 ISBN-13\uff09\u3002", "validators", "zh_CN");
    Translator.add("This value is not a valid ISSN.", "\u8be5\u503c\u4e0d\u662f\u6709\u6548\u7684\u56fd\u9645\u6807\u51c6\u671f\u520a\u53f7\uff08ISSN\uff09\u3002", "validators", "zh_CN");
    Translator.add("This value is not a valid currency.", "\u8be5\u503c\u4e0d\u662f\u6709\u6548\u7684\u8d27\u5e01\u540d\uff08currency\uff09\u3002", "validators", "zh_CN");
    Translator.add("This value should be equal to {{ compared_value }}.", "\u8be5\u503c\u5e94\u7b49\u4e8e {{ compared_value }} \u3002", "validators", "zh_CN");
    Translator.add("This value should be greater than {{ compared_value }}.", "\u8be5\u503c\u5e94\u5927\u4e8e {{ compared_value }} \u3002", "validators", "zh_CN");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "\u8be5\u503c\u5e94\u5927\u4e8e\u6216\u7b49\u4e8e {{ compared_value }} \u3002", "validators", "zh_CN");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "\u8be5\u503c\u5e94\u4e0e {{ compared_value_type }} {{ compared_value }} \u76f8\u540c\u3002", "validators", "zh_CN");
    Translator.add("This value should be less than {{ compared_value }}.", "\u8be5\u503c\u5e94\u5c0f\u4e8e {{ compared_value }} \u3002", "validators", "zh_CN");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "\u8be5\u503c\u5e94\u5c0f\u4e8e\u6216\u7b49\u4e8e {{ compared_value }} \u3002", "validators", "zh_CN");
    Translator.add("This value should not be equal to {{ compared_value }}.", "\u8be5\u503c\u4e0d\u5e94\u5148\u7b49\u4e8e {{ compared_value }} \u3002", "validators", "zh_CN");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "\u8be5\u503c\u4e0d\u5e94\u4e0e {{ compared_value_type }} {{ compared_value }} \u76f8\u540c\u3002", "validators", "zh_CN");
    Translator.add("The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.", "\u56fe\u7247\u5bbd\u9ad8\u6bd4\u592a\u5927 ({{ ratio }})\u3002\u5141\u8bb8\u7684\u6700\u5927\u5bbd\u9ad8\u6bd4\u4e3a {{ max_ratio }}\u3002", "validators", "zh_CN");
    Translator.add("The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.", "\u56fe\u7247\u5bbd\u9ad8\u6bd4\u592a\u5c0f ({{ ratio }})\u3002\u5141\u8bb8\u7684\u6700\u5927\u5bbd\u9ad8\u6bd4\u4e3a {{ min_ratio }}\u3002", "validators", "zh_CN");
    Translator.add("The image is square ({{ width }}x{{ height }}px). Square images are not allowed.", "\u56fe\u7247\u662f\u65b9\u5f62\u7684 ({{ width }}x{{ height }}px)\u3002\u4e0d\u5141\u8bb8\u4f7f\u7528\u65b9\u5f62\u7684\u56fe\u7247\u3002", "validators", "zh_CN");
    Translator.add("The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.", "\u56fe\u7247\u662f\u6a2a\u5411\u7684 ({{ width }}x{{ height }}px)\u3002\u4e0d\u5141\u8bb8\u4f7f\u7528\u6a2a\u5411\u7684\u56fe\u7247\u3002", "validators", "zh_CN");
    Translator.add("The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.", "\u56fe\u7247\u662f\u7eb5\u5411\u7684 ({{ width }}x{{ height }}px)\u3002\u4e0d\u5141\u8bb8\u4f7f\u7528\u7eb5\u5411\u7684\u56fe\u7247\u3002", "validators", "zh_CN");
    Translator.add("An empty file is not allowed.", "\u4e0d\u5141\u8bb8\u4f7f\u7528\u7a7a\u6587\u4ef6\u3002", "validators", "zh_CN");
    Translator.add("The host could not be resolved.", "\u4e3b\u673a\u540d\u65e0\u6cd5\u89e3\u6790\u3002", "validators", "zh_CN");
    Translator.add("This value does not match the expected {{ charset }} charset.", "\u8be5\u503c\u4e0d\u7b26\u5408 {{ charset }} \u7f16\u7801\u3002", "validators", "zh_CN");
    Translator.add("This form should not contain extra fields.", "\u8be5\u8868\u5355\u4e2d\u4e0d\u53ef\u6709\u989d\u5916\u5b57\u6bb5.", "validators", "zh_CN");
    Translator.add("The uploaded file was too large. Please try to upload a smaller file.", "\u4e0a\u4f20\u6587\u4ef6\u592a\u5927\uff0c \u8bf7\u91cd\u65b0\u5c1d\u8bd5\u4e0a\u4f20\u4e00\u4e2a\u8f83\u5c0f\u7684\u6587\u4ef6.", "validators", "zh_CN");
    Translator.add("The CSRF token is invalid. Please try to resubmit the form.", "CSRF \u9a8c\u8bc1\u7b26\u65e0\u6548\uff0c \u8bf7\u91cd\u65b0\u63d0\u4ea4.", "validators", "zh_CN");
})(Translator);

(function (Translator) {
    // zh_TW
    Translator.add("This value should be false.", "\u8a72\u8b8a\u6578\u7684\u503c\u61c9\u70ba false \u3002", "validators", "zh_TW");
    Translator.add("This value should be true.", "\u8a72\u8b8a\u6578\u7684\u503c\u61c9\u70ba true \u3002", "validators", "zh_TW");
    Translator.add("This value should be of type {{ type }}.", "\u8a72\u8b8a\u6578\u7684\u985e\u578b\u61c9\u70ba {{ type }} \u3002", "validators", "zh_TW");
    Translator.add("This value should be blank.", "\u8a72\u8b8a\u6578\u61c9\u70ba\u7a7a\u3002", "validators", "zh_TW");
    Translator.add("The value you selected is not a valid choice.", "\u9078\u5b9a\u8b8a\u6578\u7684\u503c\u4e0d\u662f\u6709\u6548\u7684\u9078\u9805\u3002", "validators", "zh_TW");
    Translator.add("You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.", "\u60a8\u81f3\u5c11\u8981\u9078\u64c7 {{ limit }} \u500b\u9078\u9805\u3002", "validators", "zh_TW");
    Translator.add("You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.", "\u60a8\u6700\u591a\u80fd\u9078\u64c7 {{ limit }} \u500b\u9078\u9805\u3002", "validators", "zh_TW");
    Translator.add("One or more of the given values is invalid.", "\u4e00\u500b\u6216\u8005\u591a\u500b\u7d66\u5b9a\u7684\u503c\u7121\u6548\u3002", "validators", "zh_TW");
    Translator.add("This field was not expected.", "\u6b64\u5b57\u6bb5\u662f\u6c92\u6709\u9810\u6599\u5230\u3002", "validators", "zh_TW");
    Translator.add("This field is missing.", "\u6b64\u5b57\u6bb5\u7f3a\u5931\u3002", "validators", "zh_TW");
    Translator.add("This value is not a valid date.", "\u8a72\u503c\u4e0d\u662f\u4e00\u500b\u6709\u6548\u7684\u65e5\u671f\uff08date\uff09\u3002", "validators", "zh_TW");
    Translator.add("This value is not a valid datetime.", "\u8a72\u503c\u4e0d\u662f\u4e00\u500b\u6709\u6548\u7684\u65e5\u671f\u6642\u9593\uff08datetime\uff09\u3002", "validators", "zh_TW");
    Translator.add("This value is not a valid email address.", "\u8a72\u503c\u4e0d\u662f\u4e00\u500b\u6709\u6548\u7684\u90f5\u4ef6\u5730\u5740\u3002", "validators", "zh_TW");
    Translator.add("The file could not be found.", "\u627e\u4e0d\u5230\u6a94\u6848\u3002", "validators", "zh_TW");
    Translator.add("The file is not readable.", "\u7121\u6cd5\u8b80\u53d6\u6a94\u6848\u3002", "validators", "zh_TW");
    Translator.add("The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.", "\u6a94\u6848\u592a\u5927 ({{ size }} {{ suffix }})\u3002\u6a94\u6848\u5927\u5c0f\u4e0d\u53ef\u4ee5\u8d85\u904e {{ limit }} {{ suffix }} \u3002", "validators", "zh_TW");
    Translator.add("The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.", "\u7121\u6548\u7684\u6a94\u6848\u985e\u578b ({{ type }}) \u3002\u5141\u8a31\u7684\u6a94\u6848\u985e\u578b\u6709 {{ types }} \u3002", "validators", "zh_TW");
    Translator.add("This value should be {{ limit }} or less.", "\u9019\u500b\u8b8a\u6578\u7684\u503c\u61c9\u8a72\u5c0f\u65bc\u6216\u7b49\u65bc {{ limit }}\u3002", "validators", "zh_TW");
    Translator.add("This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.", "\u5b57\u4e32\u592a\u9577\uff0c\u9577\u5ea6\u4e0d\u53ef\u8d85\u904e {{ limit }} \u500b\u5b57\u5143\u3002", "validators", "zh_TW");
    Translator.add("This value should be {{ limit }} or more.", "\u8a72\u8b8a\u6578\u7684\u503c\u61c9\u8a72\u5927\u65bc\u6216\u7b49\u65bc {{ limit }}\u3002", "validators", "zh_TW");
    Translator.add("This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.", "\u5b57\u4e32\u592a\u77ed\uff0c\u9577\u5ea6\u4e0d\u53ef\u5c11\u65bc {{ limit }} \u500b\u5b57\u5143\u3002", "validators", "zh_TW");
    Translator.add("This value should not be blank.", "\u8a72\u8b8a\u6578\u4e0d\u61c9\u70ba\u7a7a\u767d\u3002", "validators", "zh_TW");
    Translator.add("This value should not be null.", "\u8a72\u503c\u4e0d\u61c9\u70ba null \u3002", "validators", "zh_TW");
    Translator.add("This value should be null.", "\u8a72\u503c\u61c9\u70ba null \u3002", "validators", "zh_TW");
    Translator.add("This value is not valid.", "\u7121\u6548\u7684\u6578\u503c \u3002", "validators", "zh_TW");
    Translator.add("This value is not a valid time.", "\u8a72\u503c\u4e0d\u662f\u4e00\u500b\u6709\u6548\u7684\u6642\u9593\u3002", "validators", "zh_TW");
    Translator.add("This value is not a valid URL.", "\u8a72\u503c\u4e0d\u662f\u4e00\u500b\u6709\u6548\u7684 URL \u3002", "validators", "zh_TW");
    Translator.add("The two values should be equal.", "\u9019\u5169\u500b\u8b8a\u6578\u7684\u503c\u61c9\u8a72\u76f8\u7b49\u3002", "validators", "zh_TW");
    Translator.add("The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.", "\u6a94\u6848\u592a\u5927\uff0c\u6a94\u6848\u5927\u5c0f\u4e0d\u53ef\u4ee5\u8d85\u904e {{ limit }} {{ suffix }}\u3002 ", "validators", "zh_TW");
    Translator.add("The file is too large.", "\u6a94\u6848\u592a\u5927\u3002", "validators", "zh_TW");
    Translator.add("The file could not be uploaded.", "\u7121\u6cd5\u4e0a\u50b3\u6b64\u6a94\u6848\u3002", "validators", "zh_TW");
    Translator.add("This value should be a valid number.", "\u8a72\u503c\u61c9\u8a72\u70ba\u6709\u6548\u7684\u6578\u5b57\u3002", "validators", "zh_TW");
    Translator.add("This value is not a valid country.", "\u8a72\u503c\u4e0d\u662f\u6709\u6548\u7684\u570b\u5bb6\u540d\u3002", "validators", "zh_TW");
    Translator.add("This file is not a valid image.", "\u8a72\u6a94\u6848\u4e0d\u662f\u6709\u6548\u7684\u5716\u7247\u3002", "validators", "zh_TW");
    Translator.add("This is not a valid IP address.", "\u8a72\u503c\u4e0d\u662f\u6709\u6548\u7684IP\u5730\u5740\u3002", "validators", "zh_TW");
    Translator.add("This value is not a valid language.", "\u8a72\u503c\u4e0d\u662f\u6709\u6548\u7684\u8a9e\u8a00\u540d\u3002", "validators", "zh_TW");
    Translator.add("This value is not a valid locale.", "\u8a72\u503c\u4e0d\u662f\u6709\u6548\u7684\u5340\u57df\u503c\uff08locale\uff09\u3002", "validators", "zh_TW");
    Translator.add("This value is already used.", "\u8a72\u503c\u5df2\u7d93\u88ab\u4f7f\u7528\u3002", "validators", "zh_TW");
    Translator.add("The size of the image could not be detected.", "\u4e0d\u80fd\u89e3\u6790\u5716\u7247\u5927\u5c0f\u3002", "validators", "zh_TW");
    Translator.add("The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.", "\u5716\u7247\u592a\u5bec ({{ width }}px)\uff0c\u6700\u5927\u5bec\u5ea6\u70ba {{ max_width }}px \u3002", "validators", "zh_TW");
    Translator.add("The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.", "\u5716\u7247\u5bec\u5ea6\u4e0d\u5920 ({{ width }}px)\uff0c\u6700\u5c0f\u5bec\u5ea6\u70ba {{ min_width }}px \u3002", "validators", "zh_TW");
    Translator.add("The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.", "\u5716\u7247\u592a\u9ad8 ({{ height }}px)\uff0c\u6700\u5927\u9ad8\u5ea6\u70ba {{ max_height }}px \u3002", "validators", "zh_TW");
    Translator.add("The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.", "\u5716\u7247\u9ad8\u5ea6\u4e0d\u5920 ({{ height }}px)\uff0c\u6700\u5c0f\u9ad8\u5ea6\u70ba {{ min_height }}px \u3002", "validators", "zh_TW");
    Translator.add("This value should be the user's current password.", "\u8a72\u8b8a\u6578\u7684\u503c\u61c9\u70ba\u7528\u6236\u76ee\u524d\u7684\u5bc6\u78bc\u3002", "validators", "zh_TW");
    Translator.add("This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.", "\u8a72\u8b8a\u6578\u61c9\u70ba {{ limit }} \u500b\u5b57\u5143\u3002", "validators", "zh_TW");
    Translator.add("The file was only partially uploaded.", "\u8a72\u6a94\u6848\u7684\u4e0a\u50b3\u4e0d\u5b8c\u6574\u3002", "validators", "zh_TW");
    Translator.add("No file was uploaded.", "\u6c92\u6709\u4e0a\u50b3\u4efb\u4f55\u6a94\u6848\u3002", "validators", "zh_TW");
    Translator.add("No temporary folder was configured in php.ini.", "php.ini \u88e1\u6c92\u6709\u914d\u7f6e\u81e8\u6642\u76ee\u9304\u3002", "validators", "zh_TW");
    Translator.add("Cannot write temporary file to disk.", "\u66ab\u5b58\u6a94\u5beb\u5165\u78c1\u789f\u5931\u6557\u3002", "validators", "zh_TW");
    Translator.add("A PHP extension caused the upload to fail.", "\u67d0\u500b PHP \u64f4\u5c55\u9020\u6210\u4e0a\u50b3\u5931\u6557\u3002", "validators", "zh_TW");
    Translator.add("This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.", "\u8a72\u96c6\u5408\u6700\u5c11\u61c9\u5305\u542b {{ limit }} \u500b\u5143\u7d20\u3002", "validators", "zh_TW");
    Translator.add("This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.", "\u8a72\u96c6\u5408\u6700\u591a\u5305\u542b {{ limit }} \u500b\u5143\u7d20\u3002", "validators", "zh_TW");
    Translator.add("This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.", "\u8a72\u96c6\u5408\u61c9\u5305\u542b {{ limit }} \u500b\u5143\u7d20 element \u3002", "validators", "zh_TW");
    Translator.add("Invalid card number.", "\u7121\u6548\u7684\u4fe1\u7528\u5361\u865f\u3002", "validators", "zh_TW");
    Translator.add("Unsupported card type or invalid card number.", "\u4e0d\u652f\u63f4\u7684\u4fe1\u7528\u5361\u985e\u578b\u6216\u7121\u6548\u7684\u4fe1\u7528\u5361\u865f\u3002", "validators", "zh_TW");
    Translator.add("This is not a valid International Bank Account Number (IBAN).", "\u8a72\u503c\u4e0d\u662f\u6709\u6548\u7684\u570b\u969b\u9280\u884c\u5e33\u865f\uff08IBAN\uff09\u3002", "validators", "zh_TW");
    Translator.add("This value is not a valid ISBN-10.", "\u8a72\u503c\u4e0d\u662f\u6709\u6548\u768410\u4f4d\u570b\u969b\u6a19\u6e96\u66f8\u865f\uff08ISBN-10\uff09\u3002", "validators", "zh_TW");
    Translator.add("This value is not a valid ISBN-13.", "\u8a72\u503c\u4e0d\u662f\u6709\u6548\u768413\u4f4d\u570b\u969b\u6a19\u6e96\u66f8\u865f\uff08ISBN-13\uff09\u3002", "validators", "zh_TW");
    Translator.add("This value is neither a valid ISBN-10 nor a valid ISBN-13.", "\u8a72\u503c\u4e0d\u662f\u6709\u6548\u7684\u570b\u969b\u6a19\u6e96\u66f8\u865f\uff08ISBN-10 \u6216 ISBN-13\uff09\u3002", "validators", "zh_TW");
    Translator.add("This value is not a valid ISSN.", "\u8a72\u503c\u4e0d\u662f\u6709\u6548\u7684\u570b\u969b\u6a19\u6e96\u671f\u520a\u865f\uff08ISSN\uff09\u3002", "validators", "zh_TW");
    Translator.add("This value is not a valid currency.", "\u8a72\u503c\u4e0d\u662f\u6709\u6548\u7684\u8ca8\u5e63\u540d\uff08currency\uff09\u3002", "validators", "zh_TW");
    Translator.add("This value should be equal to {{ compared_value }}.", "\u8a72\u503c\u61c9\u7b49\u65bc {{ compared_value }} \u3002", "validators", "zh_TW");
    Translator.add("This value should be greater than {{ compared_value }}.", "\u8a72\u503c\u61c9\u5927\u65bc {{ compared_value }} \u3002", "validators", "zh_TW");
    Translator.add("This value should be greater than or equal to {{ compared_value }}.", "\u8a72\u503c\u61c9\u5927\u65bc\u6216\u7b49\u65bc {{ compared_value }} \u3002", "validators", "zh_TW");
    Translator.add("This value should be identical to {{ compared_value_type }} {{ compared_value }}.", "\u8a72\u503c\u61c9\u8207 {{ compared_value_type }} {{ compared_value }} \u76f8\u540c\u3002", "validators", "zh_TW");
    Translator.add("This value should be less than {{ compared_value }}.", "\u8a72\u503c\u61c9\u5c0f\u65bc {{ compared_value }} \u3002", "validators", "zh_TW");
    Translator.add("This value should be less than or equal to {{ compared_value }}.", "\u8a72\u503c\u61c9\u5c0f\u65bc\u6216\u7b49\u65bc {{ compared_value }} \u3002", "validators", "zh_TW");
    Translator.add("This value should not be equal to {{ compared_value }}.", "\u8a72\u503c\u61c9\u4e0d\u7b49\u65bc {{ compared_value }} \u3002", "validators", "zh_TW");
    Translator.add("This value should not be identical to {{ compared_value_type }} {{ compared_value }}.", "\u8a72\u503c\u4e0d\u61c9\u8207 {{ compared_value_type }} {{ compared_value }} \u76f8\u540c\u3002", "validators", "zh_TW");
})(Translator);

(function (Translator) {
    // en
    Translator.add("form.help.required_fields", "* required fields", "wellcommerce", "en");
    Translator.add("form.media_data.image_id", "Image ID", "wellcommerce", "en");
    Translator.add("common.button.add", "Add", "wellcommerce", "en");
    Translator.add("common.button.save", "Save changes", "wellcommerce", "en");
    Translator.add("common.button.save_and_finish", "Save and finish", "wellcommerce", "en");
    Translator.add("common.button.save_and_continue", "Save and continue", "wellcommerce", "en");
    Translator.add("common.button.save_and_add_another", "Save and add another", "wellcommerce", "en");
    Translator.add("common.button.back", "Return", "wellcommerce", "en");
    Translator.add("common.help.required_fields", "* required fields", "wellcommerce", "en");
    Translator.add("common.fieldset.required_data", "General settings", "wellcommerce", "en");
    Translator.add("common.fieldset.general_settings", "General settings", "wellcommerce", "en");
    Translator.add("common.fieldset.translations", "Translations", "wellcommerce", "en");
    Translator.add("common.fieldset.shops", "Shops", "wellcommerce", "en");
    Translator.add("common.fieldset.prices", "Prices", "wellcommerce", "en");
    Translator.add("common.fieldset.discount_settings", "Discount settings", "wellcommerce", "en");
    Translator.add("common.fieldset.general", "General", "wellcommerce", "en");
    Translator.add("common.fieldset.photos", "Photos", "wellcommerce", "en");
    Translator.add("common.fieldset.meta", "Meta", "wellcommerce", "en");
    Translator.add("common.fieldset.categories", "Categories", "wellcommerce", "en");
    Translator.add("common.fieldset.description", "Description", "wellcommerce", "en");
    Translator.add("common.label.id", "ID", "wellcommerce", "en");
    Translator.add("common.label.name", "Name", "wellcommerce", "en");
    Translator.add("common.label.currency", "Currency", "wellcommerce", "en");
    Translator.add("common.label.short_description", "Short description", "wellcommerce", "en");
    Translator.add("common.label.description", "Description", "wellcommerce", "en");
    Translator.add("common.label.code", "Code", "wellcommerce", "en");
    Translator.add("common.label.slug", "Slug", "wellcommerce", "en");
    Translator.add("common.label.group", "Group", "wellcommerce", "en");
    Translator.add("common.label.discount", "Discount", "wellcommerce", "en");
    Translator.add("common.label.created_at", "Created at", "wellcommerce", "en");
    Translator.add("common.label.updated_at", "Updated at", "wellcommerce", "en");
    Translator.add("common.label.valid_from", "Valid from", "wellcommerce", "en");
    Translator.add("common.label.valid_to", "Valid to", "wellcommerce", "en");
    Translator.add("common.label.enabled", "Enabled", "wellcommerce", "en");
    Translator.add("common.label.preview", "Preview", "wellcommerce", "en");
    Translator.add("common.label.extension", "Extension", "wellcommerce", "en");
    Translator.add("common.label.mime", "MIME", "wellcommerce", "en");
    Translator.add("common.label.size", "Size", "wellcommerce", "en");
    Translator.add("common.label.publish", "Published", "wellcommerce", "en");
    Translator.add("common.label.hierarchy", "Hierarchy", "wellcommerce", "en");
    Translator.add("common.label.password", "Password", "wellcommerce", "en");
    Translator.add("common.label.producer", "Producer", "wellcommerce", "en");
    Translator.add("common.label.tax", "Tax", "wellcommerce", "en");
    Translator.add("common.label.stock", "Stock", "wellcommerce", "en");
    Translator.add("common.label.categories", "Categories", "wellcommerce", "en");
    Translator.add("common.label.sku", "SKU", "wellcommerce", "en");
    Translator.add("common.label.default_order_status", "Default order status", "wellcommerce", "en");
    Translator.add("common.label.url", "URL address", "wellcommerce", "en");
    Translator.add("common.label.shops", "Available in shops", "wellcommerce", "en");
    Translator.add("common.label.meta.title", "Meta title", "wellcommerce", "en");
    Translator.add("common.label.meta.keywords", "Meta keywords", "wellcommerce", "en");
    Translator.add("common.label.meta.description", "Meta description", "wellcommerce", "en");
    Translator.add("common.label.dimension.width", "Width", "wellcommerce", "en");
    Translator.add("common.label.dimension.height", "Height", "wellcommerce", "en");
    Translator.add("common.label.dimension.depth", "Depth", "wellcommerce", "en");
    Translator.add("common.label.dimension.length", "Length", "wellcommerce", "en");
    Translator.add("common.label.dimension.weight", "Weight", "wellcommerce", "en");
    Translator.add("common.label.phone", "Phone", "wellcommerce", "en");
    Translator.add("common.label.secondary_phone", "Secondary phone", "wellcommerce", "en");
    Translator.add("common.label.email", "E-mail", "wellcommerce", "en");
    Translator.add("common.label.price", "Price", "wellcommerce", "en");
    Translator.add("common.label.discounted_price", "Discounted price", "wellcommerce", "en");
    Translator.add("common.label.gross_price", "Gross price", "wellcommerce", "en");
    Translator.add("common.label.net_price", "Net price", "wellcommerce", "en");
    Translator.add("common.label.first_name", "First name", "wellcommerce", "en");
    Translator.add("common.label.last_name", "Last name", "wellcommerce", "en");
    Translator.add("common.label.client_group", "Client group", "wellcommerce", "en");
    Translator.add("common.label.address", "Address", "wellcommerce", "en");
    Translator.add("common.label.street", "Street", "wellcommerce", "en");
    Translator.add("common.label.street_no", "Street no.", "wellcommerce", "en");
    Translator.add("common.label.flat_no", "Flat no.", "wellcommerce", "en");
    Translator.add("common.label.province", "Province", "wellcommerce", "en");
    Translator.add("common.label.post_code", "Post code", "wellcommerce", "en");
    Translator.add("common.label.country", "Country", "wellcommerce", "en");
    Translator.add("common.label.meta_title", "Meta title", "wellcommerce", "en");
    Translator.add("common.label.meta_description", "Meta description", "wellcommerce", "en");
    Translator.add("common.label.meta_keywords", "Meta keywords", "wellcommerce", "en");
    Translator.add("common.flashes.success", "Success!", "wellcommerce", "en");
    Translator.add("price.sell_price.net", "Sell price net", "wellcommerce", "en");
    Translator.add("price.sell_price.gross", "Sell price gross", "wellcommerce", "en");
    Translator.add("price.buy_price.net", "Buy price net", "wellcommerce", "en");
    Translator.add("price.buy_price.gross", "Buy price gross", "wellcommerce", "en");
    Translator.add("price.discounted_price.net", "Discounted price net", "wellcommerce", "en");
    Translator.add("price.discounted_price.gross", "Discounted price gross", "wellcommerce", "en");
    Translator.add("price.discounted_price.discount", "Discount", "wellcommerce", "en");
    Translator.add("dataset.label.delete", "Delete", "wellcommerce", "en");
    Translator.add("dataset.label.confirm_delete", "Are you sure to delete", "wellcommerce", "en");
    Translator.add("user.heading.index", "Users", "wellcommerce", "en");
    Translator.add("user.heading.add", "Add user", "wellcommerce", "en");
    Translator.add("user.heading.edit", "Edit user", "wellcommerce", "en");
    Translator.add("user.button.add", "Add", "wellcommerce", "en");
    Translator.add("user.button.log_in", "Log in", "wellcommerce", "en");
    Translator.add("user.button.reset_password", "Reset password", "wellcommerce", "en");
    Translator.add("user.label.id", "ID", "wellcommerce", "en");
    Translator.add("user.label.username", "Username", "wellcommerce", "en");
    Translator.add("user.label.password", "Password", "wellcommerce", "en");
    Translator.add("user.label.email", "E-mail", "wellcommerce", "en");
    Translator.add("user.label.first_name", "First name", "wellcommerce", "en");
    Translator.add("user.label.last_name", "Last name", "wellcommerce", "en");
    Translator.add("user.label.enabled", "Enabled", "wellcommerce", "en");
    Translator.add("user.label.user_group", "Group", "wellcommerce", "en");
    Translator.add("user.label.api_key", "API key", "wellcommerce", "en");
    Translator.add("user.fieldset.api_access", "API access", "wellcommerce", "en");
    Translator.add("user.flash.success.reset_password", "Your new password has been sent by e-mail", "wellcommerce", "en");
    Translator.add("user.flash.error.wrong_username", "Wrong username given", "wellcommerce", "en");
    Translator.add("user.flash.error.blocked_account", "Account is blocked", "wellcommerce", "en");
    Translator.add("user.email.title.register", "User credentials", "wellcommerce", "en");
    Translator.add("user.email.title.reset_password", "New login credentials", "wellcommerce", "en");
    Translator.add("user_group.heading.index", "Users groups", "wellcommerce", "en");
    Translator.add("user_group.heading.add", "Add an user group", "wellcommerce", "en");
    Translator.add("user_group.heading.edit", "Edit users group", "wellcommerce", "en");
    Translator.add("user_group.label.permissions", "Permissions", "wellcommerce", "en");
    Translator.add("admin.heading.last_opinions", "Last opinions", "wellcommerce", "en");
    Translator.add("admin.heading.last_orders", "Last orders", "wellcommerce", "en");
    Translator.add("admin.heading.new_customers", "New customers", "wellcommerce", "en");
    Translator.add("admin.heading.bestsellers", "Bestsellers", "wellcommerce", "en");
    Translator.add("admin.heading.customers_online", "Customers online", "wellcommerce", "en");
    Translator.add("admin.heading.dashboard", "Dashboard", "wellcommerce", "en");
    Translator.add("admin.label.content", "Content", "wellcommerce", "en");
    Translator.add("admin.label.customer", "Customer", "wellcommerce", "en");
    Translator.add("admin.label.sum", "Sum", "wellcommerce", "en");
    Translator.add("admin.label.firstname", "First Name", "wellcommerce", "en");
    Translator.add("admin.label.lastname", "Last Name", "wellcommerce", "en");
    Translator.add("admin.label.product", "Product", "wellcommerce", "en");
    Translator.add("admin.label.quantity", "Sold amount", "wellcommerce", "en");
    Translator.add("admin.label.client", "Client", "wellcommerce", "en");
    Translator.add("admin.label.cart", "Cart", "wellcommerce", "en");
    Translator.add("admin.label.global_context", "Global", "wellcommerce", "en");
    Translator.add("admin.user.logout", "Logout", "wellcommerce", "en");
    Translator.add("admin.user.help", "Help", "wellcommerce", "en");
    Translator.add("admin.button.show_all", "Show all", "wellcommerce", "en");
    Translator.add("admin.button.show_raports", "Show raports", "wellcommerce", "en");
    Translator.add("attribute.heading.index", "Attributes", "wellcommerce", "en");
    Translator.add("attribute.heading.add", "Add attribute", "wellcommerce", "en");
    Translator.add("attribute.heading.edit", "Edit attribute", "wellcommerce", "en");
    Translator.add("attribute_group.heading.index", "Attribute groups", "wellcommerce", "en");
    Translator.add("attribute_group.heading.add", "Add group", "wellcommerce", "en");
    Translator.add("attribute_group.heading.edit", "Edit group", "wellcommerce", "en");
    Translator.add("attribute_group.flash.empty_group", "Empty group", "wellcommerce", "en");
    Translator.add("attribute_group.flash.new_group", "New group", "wellcommerce", "en");
    Translator.add("attribute_group.label.attributes", "Attributes", "wellcommerce", "en");
    Translator.add("attribute_group.label.group", "Group", "wellcommerce", "en");
    Translator.add("attribute_value.heading.index", "Attribute values", "wellcommerce", "en");
    Translator.add("attribute_value.heading.add", "Add values", "wellcommerce", "en");
    Translator.add("attribute_value.heading.edit", "Edit values", "wellcommerce", "en");
    Translator.add("availability.heading.index", "Availability statuses", "wellcommerce", "en");
    Translator.add("availability.heading.add", "Add a status", "wellcommerce", "en");
    Translator.add("availability.heading.edit", "Edit a status", "wellcommerce", "en");
    Translator.add("cart.flash.added", "was added to cart", "wellcommerce", "en");
    Translator.add("cart.flash.empty", "Cart is empty.", "wellcommerce", "en");
    Translator.add("cart.button.add", "Add to cart", "wellcommerce", "en");
    Translator.add("cart.button.go_to_cart", "Go to cart", "wellcommerce", "en");
    Translator.add("cart.button.back_to_shopping", "Back to shopping", "wellcommerce", "en");
    Translator.add("cart.link.checkout", "Go to checkout", "wellcommerce", "en");
    Translator.add("cart.heading.index", "Cart", "wellcommerce", "en");
    Translator.add("cart.heading.recommendations", "You might also like", "wellcommerce", "en");
    Translator.add("cart.table.heading.product", "Product", "wellcommerce", "en");
    Translator.add("cart.table.heading.price", "Price", "wellcommerce", "en");
    Translator.add("cart.table.heading.quantity", "Quantity", "wellcommerce", "en");
    Translator.add("cart.table.heading.total", "Total", "wellcommerce", "en");
    Translator.add("cart.error.no_available_methods", "There are no available shipping and\/or payment options for this cart", "wellcommerce", "en");
    Translator.add("cart.shipping_method.label", "Shipping method", "wellcommerce", "en");
    Translator.add("cart.payment_method.label", "Payment method", "wellcommerce", "en");
    Translator.add("address.heading.billing_address", "Billing address", "wellcommerce", "en");
    Translator.add("address.heading.shipping_address", "Shipping address", "wellcommerce", "en");
    Translator.add("address.label.copy_address", "Shipping address same as billing address", "wellcommerce", "en");
    Translator.add("address.label.addresses", "Addresses", "wellcommerce", "en");
    Translator.add("address.label.street", "Street", "wellcommerce", "en");
    Translator.add("address.label.street_no", "Street no.", "wellcommerce", "en");
    Translator.add("address.label.flat_no", "Flat no.", "wellcommerce", "en");
    Translator.add("address.label.province", "Province", "wellcommerce", "en");
    Translator.add("address.label.post_code", "Post code", "wellcommerce", "en");
    Translator.add("address.label.country", "Country", "wellcommerce", "en");
    Translator.add("address.label.city", "City", "wellcommerce", "en");
    Translator.add("category.form.fieldset.general", "General", "wellcommerce", "en");
    Translator.add("category.form.fieldset.meta", "Meta", "wellcommerce", "en");
    Translator.add("category.form.fieldset.shops", "Shops", "wellcommerce", "en");
    Translator.add("category.form.fieldset.description", "Description", "wellcommerce", "en");
    Translator.add("category.label.shops", "Available in shops", "wellcommerce", "en");
    Translator.add("category.label.hierarchy", "Hierarchy", "wellcommerce", "en");
    Translator.add("category.label.enabled", "Enabled", "wellcommerce", "en");
    Translator.add("category.label.name", "Name", "wellcommerce", "en");
    Translator.add("category.label.slug", "Slug", "wellcommerce", "en");
    Translator.add("category.label.parent", "Parent category", "wellcommerce", "en");
    Translator.add("category.label.short_description", "Short description", "wellcommerce", "en");
    Translator.add("category.label.description", "Description", "wellcommerce", "en");
    Translator.add("category.label.category_add", "Add category", "wellcommerce", "en");
    Translator.add("category.label.category_name", "Category name", "wellcommerce", "en");
    Translator.add("category.label.tree", "Categories tree", "wellcommerce", "en");
    Translator.add("category.heading.index", "Categories", "wellcommerce", "en");
    Translator.add("category.heading.add", "Create a new category", "wellcommerce", "en");
    Translator.add("category.heading.edit", "Edit category", "wellcommerce", "en");
    Translator.add("category.comment.enabled", "Enable category visibility", "wellcommerce", "en");
    Translator.add("client.label.username", "Login (e-mail)", "wellcommerce", "en");
    Translator.add("client.label.password", "Password", "wellcommerce", "en");
    Translator.add("client.label.confirm_password", "Confirm password", "wellcommerce", "en");
    Translator.add("client.label.new_password", "New password", "wellcommerce", "en");
    Translator.add("client.label.accept_conditions", "Accept store conditions", "wellcommerce", "en");
    Translator.add("client.label.accept_newsletter", "Sign up for our newsletter", "wellcommerce", "en");
    Translator.add("client.label.contact_details.first_name", "First name", "wellcommerce", "en");
    Translator.add("client.label.contact_details.last_name", "Last name", "wellcommerce", "en");
    Translator.add("client.label.contact_details.phone", "Phone", "wellcommerce", "en");
    Translator.add("client.label.contact_details.secondary_phone", "Secondary phone", "wellcommerce", "en");
    Translator.add("client.label.contact_details.email", "E-mail", "wellcommerce", "en");
    Translator.add("client.label.address.first_name", "First name", "wellcommerce", "en");
    Translator.add("client.label.address.last_name", "Last name", "wellcommerce", "en");
    Translator.add("client.label.address.street", "Street", "wellcommerce", "en");
    Translator.add("client.label.address.street_no", "Street no.", "wellcommerce", "en");
    Translator.add("client.label.address.flat_no", "Flat no.", "wellcommerce", "en");
    Translator.add("client.label.address.province", "Province", "wellcommerce", "en");
    Translator.add("client.label.address.post_code", "Post code", "wellcommerce", "en");
    Translator.add("client.label.address.country", "Country", "wellcommerce", "en");
    Translator.add("client.label.address.city", "City", "wellcommerce", "en");
    Translator.add("client.label.address.copy_address", "Shipping address same as billing address", "wellcommerce", "en");
    Translator.add("client.heading.index", "Clients", "wellcommerce", "en");
    Translator.add("client.heading.add", "Create a client", "wellcommerce", "en");
    Translator.add("client.heading.edit", "Edit client", "wellcommerce", "en");
    Translator.add("client.heading.login", "Sign in", "wellcommerce", "en");
    Translator.add("client.heading.register", "Sign up", "wellcommerce", "en");
    Translator.add("client.heading.contact_details", "Contact details", "wellcommerce", "en");
    Translator.add("client.heading.footer_links", "Your account", "wellcommerce", "en");
    Translator.add("client.heading.billing_address", "Billing address", "wellcommerce", "en");
    Translator.add("client.heading.shipping_address", "Shipping address", "wellcommerce", "en");
    Translator.add("client.heading.reset_password", "Reset password", "wellcommerce", "en");
    Translator.add("client.heading.change_password", "Change password", "wellcommerce", "en");
    Translator.add("client.link.login", "Sign in or Sign up", "wellcommerce", "en");
    Translator.add("client.link.register", "Sign up", "wellcommerce", "en");
    Translator.add("client.link.logout", "Logout", "wellcommerce", "en");
    Translator.add("client.link.orders", "Orders", "wellcommerce", "en");
    Translator.add("client.link.address_book", "Addressess", "wellcommerce", "en");
    Translator.add("client.link.settings", "Settings", "wellcommerce", "en");
    Translator.add("client.link.wishlist", "Wishlist", "wellcommerce", "en");
    Translator.add("client.link.password_forgotten", "Reset password", "wellcommerce", "en");
    Translator.add("client.button.login", "Sign in", "wellcommerce", "en");
    Translator.add("client.button.register", "Sign up", "wellcommerce", "en");
    Translator.add("client.button.reset_password", "Confirm password reset", "wellcommerce", "en");
    Translator.add("client.button.change_password", "Change password", "wellcommerce", "en");
    Translator.add("client.flash.registration.error", "Form contains invalid data.", "wellcommerce", "en");
    Translator.add("client.flash.reset_password.wrong_email", "Wrong e-mail adress was given.", "wellcommerce", "en");
    Translator.add("client.flash.reset_password.email_not_found", "Such e-mail does not exists.", "wellcommerce", "en");
    Translator.add("client.flash.reset_password.success", "E-mail with reset instructions was sent.", "wellcommerce", "en");
    Translator.add("client.flash.change_password.success", "New password was set.", "wellcommerce", "en");
    Translator.add("client.comment.discount", "Enter percentage-based discount ie. 10 for 10%", "wellcommerce", "en");
    Translator.add("client.email.heading.reset_password", "Reset password instructions", "wellcommerce", "en");
    Translator.add("client.email.heading.registration_ok", "User registration", "wellcommerce", "en");
    Translator.add("client.email.heading.register", "User registration", "wellcommerce", "en");
    Translator.add("client.email.body.reset_password_instructions", "Password recovery procedure is in progress.", "wellcommerce", "en");
    Translator.add("client.email.body.confirm_password_reset", "Head to the site to establish a new password.", "wellcommerce", "en");
    Translator.add("client_group.heading.index", "Client groups", "wellcommerce", "en");
    Translator.add("client_group.heading.add", "Create a client group", "wellcommerce", "en");
    Translator.add("client_group.heading.edit", "Edit group", "wellcommerce", "en");
    Translator.add("client_group.label.total_clients", "Total clients", "wellcommerce", "en");
    Translator.add("company.heading.index", "Companies", "wellcommerce", "en");
    Translator.add("company.heading.add", "Add a company", "wellcommerce", "en");
    Translator.add("company.heading.edit", "Edit a company", "wellcommerce", "en");
    Translator.add("company.label.name", "Full name", "wellcommerce", "en");
    Translator.add("company.label.short_name", "Short name", "wellcommerce", "en");
    Translator.add("contact.heading.index", "Contacts", "wellcommerce", "en");
    Translator.add("contact.heading.add", "Add a new contact", "wellcommerce", "en");
    Translator.add("contact.heading.edit", "Edit contact", "wellcommerce", "en");
    Translator.add("contact.email.heading.contact", "We have received your inquiry", "wellcommerce", "en");
    Translator.add("contact.label.business_hours", "Business hours", "wellcommerce", "en");
    Translator.add("contact_details.heading.details", "Contact details", "wellcommerce", "en");
    Translator.add("contact_details.label.first_name", "First name", "wellcommerce", "en");
    Translator.add("contact_details.label.last_name", "Last name", "wellcommerce", "en");
    Translator.add("coupon.heading.index", "Coupons", "wellcommerce", "en");
    Translator.add("coupon.heading.add", "Add a coupon", "wellcommerce", "en");
    Translator.add("coupon.heading.edit", "Edit a coupon", "wellcommerce", "en");
    Translator.add("coupon.fieldset.discount_settings", "Discounts configuration", "wellcommerce", "en");
    Translator.add("coupon.label.client_usage_limit", "Usage limit for clients", "wellcommerce", "en");
    Translator.add("coupon.label.global_usage_limit", "Global usage limit", "wellcommerce", "en");
    Translator.add("coupon.label.modifier_type", "Type of modifier", "wellcommerce", "en");
    Translator.add("coupon.label.modifier_value", "Value of modifier", "wellcommerce", "en");
    Translator.add("coupon.label.modifier_type_percent", "%", "wellcommerce", "en");
    Translator.add("coupon.label.modifier_type_subtract", "-", "wellcommerce", "en");
    Translator.add("coupon.error.not_found", "Coupon code is invalid", "wellcommerce", "en");
    Translator.add("currency.heading.index", "Currencies", "wellcommerce", "en");
    Translator.add("currency.heading.add", "Add a currency", "wellcommerce", "en");
    Translator.add("currency.heading.edit", "Edit a currency", "wellcommerce", "en");
    Translator.add("currency.button.sync", "Synchronize exchange rates", "wellcommerce", "en");
    Translator.add("currency.label.code", "Code", "wellcommerce", "en");
    Translator.add("currency.label.name", "Currency", "wellcommerce", "en");
    Translator.add("currency.comment.enabled", "Currency will be visible in shop", "wellcommerce", "en");
    Translator.add("deliverer.heading.index", "Deliverers", "wellcommerce", "en");
    Translator.add("deliverer.heading.add", "Create a new deliverer", "wellcommerce", "en");
    Translator.add("deliverer.heading.edit", "Edit deliverer", "wellcommerce", "en");
    Translator.add("dictionary.heading.index", "Translations", "wellcommerce", "en");
    Translator.add("dictionary.heading.add", "Add a translation", "wellcommerce", "en");
    Translator.add("dictionary.heading.edit", "Edit a translation", "wellcommerce", "en");
    Translator.add("dictionary.label.id", "ID", "wellcommerce", "en");
    Translator.add("dictionary.label.identifier", "Identifier", "wellcommerce", "en");
    Translator.add("dictionary.label.translation", "Translation", "wellcommerce", "en");
    Translator.add("dictionary.label.locale", "Locale", "wellcommerce", "en");
    Translator.add("dictionary.label.value", "Value", "wellcommerce", "en");
    Translator.add("dictionary.button.add", "Add new translation", "wellcommerce", "en");
    Translator.add("dictionary.button.sync", "Synchronize translations", "wellcommerce", "en");
    Translator.add("channel.heading.index", "Channel", "wellcommerce", "en");
    Translator.add("channel.heading.add", "Add a new channel", "wellcommerce", "en");
    Translator.add("channel.label.name", "Name", "wellcommerce", "en");
    Translator.add("channel.label.url", "URL", "wellcommerce", "en");
    Translator.add("package.heading.index", "Packages", "wellcommerce", "en");
    Translator.add("package.heading.require", "Require package", "wellcommerce", "en");
    Translator.add("package.button.sync", "Synchronize packages", "wellcommerce", "en");
    Translator.add("package.button.run", "Install package", "wellcommerce", "en");
    Translator.add("package.label.id", "ID", "wellcommerce", "en");
    Translator.add("package.label.name", "Name", "wellcommerce", "en");
    Translator.add("package.label.full_name", "Full name", "wellcommerce", "en");
    Translator.add("package.label.vendor", "Vendor", "wellcommerce", "en");
    Translator.add("package.label.local_version", "Local version", "wellcommerce", "en");
    Translator.add("package.label.remote_version", "Remote version", "wellcommerce", "en");
    Translator.add("package.label.created_at", "Installed at", "wellcommerce", "en");
    Translator.add("package.label.updated_at", "Updated at", "wellcommerce", "en");
    Translator.add("package.label.output", "Install status", "wellcommerce", "en");
    Translator.add("package.fieldset.information", "Informations", "wellcommerce", "en");
    Translator.add("package.fieldset.progress", "Download progress", "wellcommerce", "en");
    Translator.add("package.flash.sync.success", "Package synchronization succeeded.", "wellcommerce", "en");
    Translator.add("layout_box.heading.index", "Layout boxes", "wellcommerce", "en");
    Translator.add("layout_box.heading.add", "Add a layout box", "wellcommerce", "en");
    Translator.add("layout_box.heading.edit", "Edit layout box", "wellcommerce", "en");
    Translator.add("layout_box.label.type", "Type", "wellcommerce", "en");
    Translator.add("layout_box.label.identifier", "Identifier", "wellcommerce", "en");
    Translator.add("locale.heading.index", "Locales", "wellcommerce", "en");
    Translator.add("locale.heading.add", "Add a locale", "wellcommerce", "en");
    Translator.add("locale.heading.edit", "Edit a locale", "wellcommerce", "en");
    Translator.add("locale.label.code", "Code", "wellcommerce", "en");
    Translator.add("locale.label.currency", "Default currency", "wellcommerce", "en");
    Translator.add("locale.label.language", "Language", "wellcommerce", "en");
    Translator.add("locale.label.translations", "Translations", "wellcommerce", "en");
    Translator.add("locale.comment.enabled", "Locale will be visible in shop", "wellcommerce", "en");
    Translator.add("media.heading.index", "Media", "wellcommerce", "en");
    Translator.add("media.button.select_from_library", "Select from library", "wellcommerce", "en");
    Translator.add("media.button.add_from_disk", "Add from disk", "wellcommerce", "en");
    Translator.add("news.heading.index", "News", "wellcommerce", "en");
    Translator.add("news.heading.add", "Add a news", "wellcommerce", "en");
    Translator.add("news.heading.edit", "Edit news", "wellcommerce", "en");
    Translator.add("news.label.topic", "Topic", "wellcommerce", "en");
    Translator.add("news.label.summary", "Summary", "wellcommerce", "en");
    Translator.add("news.label.content", "Content", "wellcommerce", "en");
    Translator.add("order.form.fieldset.products", "Products", "wellcommerce", "en");
    Translator.add("order.heading.index", "Orders", "wellcommerce", "en");
    Translator.add("order.heading.edit", "Edit order", "wellcommerce", "en");
    Translator.add("order.heading.address", "Address", "wellcommerce", "en");
    Translator.add("order.heading.confirmation", "Confirmation", "wellcommerce", "en");
    Translator.add("order.heading.order_total", "Summary", "wellcommerce", "en");
    Translator.add("order.heading.products", "Products", "wellcommerce", "en");
    Translator.add("order.button.confirm", "Go to confirmation", "wellcommerce", "en");
    Translator.add("order.button.add_product", "Add product", "wellcommerce", "en");
    Translator.add("order.label.id", "ID", "wellcommerce", "en");
    Translator.add("order.label.order_no", "Order no.", "wellcommerce", "en");
    Translator.add("order.label.client", "Client", "wellcommerce", "en");
    Translator.add("order.label.product_total", "Products value", "wellcommerce", "en");
    Translator.add("order.label.shipping_total", "Shipping cost", "wellcommerce", "en");
    Translator.add("order.label.order_total", "Total value", "wellcommerce", "en");
    Translator.add("order.label.variant", "Variant", "wellcommerce", "en");
    Translator.add("order.label.weight", "Weight", "wellcommerce", "en");
    Translator.add("order.label.quantity", "Qty", "wellcommerce", "en");
    Translator.add("order.label.stock", "Stock", "wellcommerce", "en");
    Translator.add("order.label.tax_rate", "Tax rate", "wellcommerce", "en");
    Translator.add("order.label.current_status", "Status", "wellcommerce", "en");
    Translator.add("order.label.created_at", "Placed on", "wellcommerce", "en");
    Translator.add("order.label.comment", "Additional comments", "wellcommerce", "en");
    Translator.add("order.label.shipping_method", "Shipping method", "wellcommerce", "en");
    Translator.add("order.label.payment_method", "Payment method", "wellcommerce", "en");
    Translator.add("order.label.product_name", "Product", "wellcommerce", "en");
    Translator.add("order.label.tax_value", "Tax", "wellcommerce", "en");
    Translator.add("order.label.gross_amount", "Price", "wellcommerce", "en");
    Translator.add("order.label.gross_total", "Total", "wellcommerce", "en");
    Translator.add("order.label.currency", "Currency", "wellcommerce", "en");
    Translator.add("order.description.product_total", "Total products value", "wellcommerce", "en");
    Translator.add("order.description.shipping_cost", "Shipping costs", "wellcommerce", "en");
    Translator.add("order.notice.empty_order_list", "You have not placed any orders", "wellcommerce", "en");
    Translator.add("order_status.heading.index", "Order statuses", "wellcommerce", "en");
    Translator.add("order_status.heading.add", "Add a new order status", "wellcommerce", "en");
    Translator.add("order_status.heading.edit", "Edit an order status", "wellcommerce", "en");
    Translator.add("order_status.label.order_status_group", "Order status group", "wellcommerce", "en");
    Translator.add("order_status.label.default_comment", "Default comment for order", "wellcommerce", "en");
    Translator.add("order_status.comment.enabled", "Order status will be visible.", "wellcommerce", "en");
    Translator.add("order_status_group.heading.index", "Order status groups", "wellcommerce", "en");
    Translator.add("order_status_group.heading.add", "Add a new order status group", "wellcommerce", "en");
    Translator.add("order_status_group.heading.edit", "Edit an order status group", "wellcommerce", "en");
    Translator.add("order_status_group.label.name", "Order status group name", "wellcommerce", "en");
    Translator.add("page.tip.client_groups", "Select all client groups which can see the page.", "wellcommerce", "en");
    Translator.add("page.heading.index", "CMS pages", "wellcommerce", "en");
    Translator.add("page.heading.add", "Add a new page", "wellcommerce", "en");
    Translator.add("page.heading.edit", "Edit page", "wellcommerce", "en");
    Translator.add("page.label.parent", "Parent category", "wellcommerce", "en");
    Translator.add("page.label.client_groups", "Visible for client groups", "wellcommerce", "en");
    Translator.add("page.label.section", "Section", "wellcommerce", "en");
    Translator.add("page.label.redirect.type", "Type of redirect", "wellcommerce", "en");
    Translator.add("page.label.redirect.url", "Redirect to URL", "wellcommerce", "en");
    Translator.add("page.label.redirect.route", "Redirect to route", "wellcommerce", "en");
    Translator.add("page.label.redirect.none", "No redirect", "wellcommerce", "en");
    Translator.add("page.fieldset.redirect_settings", "Redirect configuration", "wellcommerce", "en");
    Translator.add("page.comment.publish", "Check if information should be visible for clients", "wellcommerce", "en");
    Translator.add("payment.flash.thank_you", "Thank you for placing an order. Below are the order's details:", "wellcommerce", "en");
    Translator.add("payment_method.heading.index", "Payment methods", "wellcommerce", "en");
    Translator.add("payment_method.heading.add", "Add a payment method", "wellcommerce", "en");
    Translator.add("payment_method.heading.edit", "Edit a payment method", "wellcommerce", "en");
    Translator.add("payment_method.fieldset.shipping_methods", "Shipping methods", "wellcommerce", "en");
    Translator.add("payment_method.label.processor", "Payment processor", "wellcommerce", "en");
    Translator.add("payment_method.label.shipping_methods", "Allowed shipping methods", "wellcommerce", "en");
    Translator.add("payment_method.bank_transfer.tip", "Your order will be processed upon receiving of the payment at the following bank account", "wellcommerce", "en");
    Translator.add("payment_method.bank_transfer.account", "Account number", "wellcommerce", "en");
    Translator.add("payment_method.bank_transfer.sort_number", "Sort code", "wellcommerce", "en");
    Translator.add("payment_method.bank_transfer.title", "Transfer title", "wellcommerce", "en");
    Translator.add("producer.heading.index", "Producers", "wellcommerce", "en");
    Translator.add("producer.heading.add", "Add a producer", "wellcommerce", "en");
    Translator.add("producer.heading.edit", "Edit a producer", "wellcommerce", "en");
    Translator.add("producer.fieldset.deliverers", "Deliverers", "wellcommerce", "en");
    Translator.add("producer.label.deliverers", "Deliverers", "wellcommerce", "en");
    Translator.add("product.form.fieldset.general", "General", "wellcommerce", "en");
    Translator.add("product.form.fieldset.meta", "Meta", "wellcommerce", "en");
    Translator.add("product.form.fieldset.categories", "Categories", "wellcommerce", "en");
    Translator.add("product.form.fieldset.prices", "Prices", "wellcommerce", "en");
    Translator.add("product.form.fieldset.stock", "Stock settings", "wellcommerce", "en");
    Translator.add("product.form.fieldset.photos", "Photos", "wellcommerce", "en");
    Translator.add("product.form.fieldset.statuses", "Statuses", "wellcommerce", "en");
    Translator.add("product.form.fieldset.attributes", "Variants", "wellcommerce", "en");
    Translator.add("product.form.fieldset.shops", "Shops", "wellcommerce", "en");
    Translator.add("product.form.fieldset.description", "Description", "wellcommerce", "en");
    Translator.add("product.comment.enabled", "Enable product's visibility", "wellcommerce", "en");
    Translator.add("product.comment.track_stock", "Enabling inventory tracking, the quantity of items will be updated automatically. A products with tracking switched on, which quantity equals 0, would not be able to order by clients.", "wellcommerce", "en");
    Translator.add("product.heading.index", "Products", "wellcommerce", "en");
    Translator.add("product.heading.add", "Add a product", "wellcommerce", "en");
    Translator.add("product.heading.edit", "Edit a product", "wellcommerce", "en");
    Translator.add("product.label.id", "ID", "wellcommerce", "en");
    Translator.add("product.label.name", "Name", "wellcommerce", "en");
    Translator.add("product.label.slug", "Slug", "wellcommerce", "en");
    Translator.add("product.label.enabled", "Enabled", "wellcommerce", "en");
    Translator.add("product.label.sku", "SKU", "wellcommerce", "en");
    Translator.add("product.label.statuses", "Product's statuses", "wellcommerce", "en");
    Translator.add("product.label.shops", "Available in shops", "wellcommerce", "en");
    Translator.add("product.label.categories", "Categories", "wellcommerce", "en");
    Translator.add("product.label.gross_amount", "Gross price", "wellcommerce", "en");
    Translator.add("product.label.stock", "Stock", "wellcommerce", "en");
    Translator.add("product.label.weight", "Weight", "wellcommerce", "en");
    Translator.add("product.label.producer", "Producer", "wellcommerce", "en");
    Translator.add("product.label.currency", "Currency", "wellcommerce", "en");
    Translator.add("product.label.manufactured_by", "by", "wellcommerce", "en");
    Translator.add("product.label.shipping_cost", "Shipping costs", "wellcommerce", "en");
    Translator.add("product.label.availability", "Product's availability", "wellcommerce", "en");
    Translator.add("product.label.attributes", "Attributes", "wellcommerce", "en");
    Translator.add("product.label.add_tax_prompt", "Add tax", "wellcommerce", "en");
    Translator.add("product.label.photos", "Zdj\u0119cia", "wellcommerce", "en");
    Translator.add("product.label.quantity", "Quantity", "wellcommerce", "en");
    Translator.add("product.label.unit", "Unit", "wellcommerce", "en");
    Translator.add("product.label.package_size", "Package size", "wellcommerce", "en");
    Translator.add("product.label.track_stock", "Track stock", "wellcommerce", "en");
    Translator.add("product.label.pcs", "pcs", "wellcommerce", "en");
    Translator.add("product.label.buy_price.settings", "Buy prices configuration", "wellcommerce", "en");
    Translator.add("product.label.buy_price.currency", "Currency", "wellcommerce", "en");
    Translator.add("product.label.buy_price.tax", "Tax", "wellcommerce", "en");
    Translator.add("product.label.buy_price.gross_amount", "Gross price", "wellcommerce", "en");
    Translator.add("product.label.buy_price.discounted_gross_amount", "Special gross price", "wellcommerce", "en");
    Translator.add("product.label.sell_price.settings", "Sell prices configuration", "wellcommerce", "en");
    Translator.add("product.label.sell_price.currency", "Currency", "wellcommerce", "en");
    Translator.add("product.label.sell_price.tax", "Tax", "wellcommerce", "en");
    Translator.add("product.label.sell_price.gross_amount", "Standard price", "wellcommerce", "en");
    Translator.add("product.label.sell_price.discounted_gross_amount", "Discounted price", "wellcommerce", "en");
    Translator.add("product.label.sell_price.discount_valid_from", "Valid from", "wellcommerce", "en");
    Translator.add("product.label.sell_price.discount_valid_to", "Valid to", "wellcommerce", "en");
    Translator.add("product.label.dimension.width", "Width", "wellcommerce", "en");
    Translator.add("product.label.dimension.height", "Height", "wellcommerce", "en");
    Translator.add("product.label.dimension.depth", "Depth", "wellcommerce", "en");
    Translator.add("product.label.layered_navigation.price", "Filter by price", "wellcommerce", "en");
    Translator.add("product.label.layered_navigation.brand", "Filter by brand", "wellcommerce", "en");
    Translator.add("product.label.short_description", "Short description", "wellcommerce", "en");
    Translator.add("product.label.description", "Description", "wellcommerce", "en");
    Translator.add("product.button.filter", "Filter results", "wellcommerce", "en");
    Translator.add("product.options.label.order", "Sort by", "wellcommerce", "en");
    Translator.add("product.options.label.view", "View as", "wellcommerce", "en");
    Translator.add("product.options.label.limit", "Show per page", "wellcommerce", "en");
    Translator.add("product.options.label.grid_view", "Grid", "wellcommerce", "en");
    Translator.add("product.options.label.list_view", "List", "wellcommerce", "en");
    Translator.add("product.options.order_by.name.asc", "Name - from A to Z", "wellcommerce", "en");
    Translator.add("product.options.order_by.name.desc", "Name - from Z to A", "wellcommerce", "en");
    Translator.add("product.options.order_by.final_price.asc", "Price - from lowest to highest", "wellcommerce", "en");
    Translator.add("product.options.order_by.final_price.desc", "Price - from highest to lowest", "wellcommerce", "en");
    Translator.add("product.options.order_by.score.asc", "Best match", "wellcommerce", "en");
    Translator.add("product.options.limit", "Show per page", "wellcommerce", "en");
    Translator.add("product.options.view_type.list", "List view", "wellcommerce", "en");
    Translator.add("product.options.view_type.grid", "Grid view", "wellcommerce", "en");
    Translator.add("product_status.heading.index", "Products statuses", "wellcommerce", "en");
    Translator.add("product_status.heading.add", "Add a new products status", "wellcommerce", "en");
    Translator.add("product_status.heading.edit", "Edit the products status", "wellcommerce", "en");
    Translator.add("product_status.label.css_class", "CSS class", "wellcommerce", "en");
    Translator.add("product_status.label.id", "Id", "wellcommerce", "en");
    Translator.add("product_status.label.name", "Name", "wellcommerce", "en");
    Translator.add("product_status.comment.css_class", "A symbol used for example in CSS templates. Alphanumeric characters permitted.", "wellcommerce", "en");
    Translator.add("sales_report.heading.sales", "Sales summary", "wellcommerce", "en");
    Translator.add("sales_report.label.sales", "Sales", "wellcommerce", "en");
    Translator.add("sales_report.label.clients", "Clients", "wellcommerce", "en");
    Translator.add("sales_report.label.orders", "Orders", "wellcommerce", "en");
    Translator.add("sales_report.label.today", "today", "wellcommerce", "en");
    Translator.add("sales_report.label.current_month", "current month", "wellcommerce", "en");
    Translator.add("review.heading.index", "Reviews", "wellcommerce", "en");
    Translator.add("review.heading.edit", "Edit", "wellcommerce", "en");
    Translator.add("review.label.rating", "Rating", "wellcommerce", "en");
    Translator.add("review.label.nick", "Name or nickname", "wellcommerce", "en");
    Translator.add("review.label.review", "Review", "wellcommerce", "en");
    Translator.add("review.label.created_at", "Created at", "wellcommerce", "en");
    Translator.add("review.label.product", "Product", "wellcommerce", "en");
    Translator.add("review.label.id", "ID", "wellcommerce", "en");
    Translator.add("review.button.add_opinion", "Submit review", "wellcommerce", "en");
    Translator.add("review.link.first_review", "Be first to submit a review", "wellcommerce", "en");
    Translator.add("review.flash.success", "Opinion added succesfull.", "wellcommerce", "en");
    Translator.add("search.heading.index", "Search results", "wellcommerce", "en");
    Translator.add("search.label.phrase", "Enter search phrase", "wellcommerce", "en");
    Translator.add("search.flash.no_results", "No search results", "wellcommerce", "en");
    Translator.add("shipping_method.heading.index", "Shipping methods", "wellcommerce", "en");
    Translator.add("shipping_method.heading.add", "Add a shipping method", "wellcommerce", "en");
    Translator.add("shipping_method.heading.edit", "Edit a shipping method", "wellcommerce", "en");
    Translator.add("shipping_method.label.calculator", "Type of costs calculation", "wellcommerce", "en");
    Translator.add("shipping_method.label.costs", "Shipping costs", "wellcommerce", "en");
    Translator.add("shipping_method.fieldset.costs", "Shipping costs settings", "wellcommerce", "en");
    Translator.add("shop.heading.index", "Shops", "wellcommerce", "en");
    Translator.add("shop.heading.add", "Add a shop", "wellcommerce", "en");
    Translator.add("shop.heading.edit", "Edit a shop", "wellcommerce", "en");
    Translator.add("shop.fieldset.mailer_configuration", "Mailer configuration", "wellcommerce", "en");
    Translator.add("shop.fieldset.url_configuration", "URL configuration", "wellcommerce", "en");
    Translator.add("shop.fieldset.cart_configuration", "Cart configuration", "wellcommerce", "en");
    Translator.add("shop.label.company", "Company", "wellcommerce", "en");
    Translator.add("shop.label.url", "URL", "wellcommerce", "en");
    Translator.add("shop.label.theme", "Default theme", "wellcommerce", "en");
    Translator.add("shop.label.default_country", "Default country", "wellcommerce", "en");
    Translator.add("shop.label.default_currency", "Default currency", "wellcommerce", "en");
    Translator.add("shop.label.mailer_configuration.from", "Sender (e-mail)", "wellcommerce", "en");
    Translator.add("shop.label.mailer_configuration.host", "SMTP host", "wellcommerce", "en");
    Translator.add("shop.label.mailer_configuration.port", "SMTP port", "wellcommerce", "en");
    Translator.add("shop.label.mailer_configuration.user", "SMTP username", "wellcommerce", "en");
    Translator.add("shop.label.mailer_configuration.pass", "SMTP password", "wellcommerce", "en");
    Translator.add("tax.heading.index", "Tax rates", "wellcommerce", "en");
    Translator.add("tax.heading.add", "Add a tax rate", "wellcommerce", "en");
    Translator.add("tax.heading.edit", "Edit a tax rate", "wellcommerce", "en");
    Translator.add("tax.label.value", "Tax rate", "wellcommerce", "en");
    Translator.add("theme.heading.index", "Themes", "wellcommerce", "en");
    Translator.add("theme.heading.add", "Add a theme", "wellcommerce", "en");
    Translator.add("theme.heading.edit", "Edit theme", "wellcommerce", "en");
    Translator.add("theme.label.folder", "Folder", "wellcommerce", "en");
    Translator.add("theme.comment.folder", "Choose a folder which contains your theme", "wellcommerce", "en");
    Translator.add("unit.heading.index", "Units of measure", "wellcommerce", "en");
    Translator.add("unit.heading.add", "Add a unit of measure", "wellcommerce", "en");
    Translator.add("unit.heading.edit", "Edit a unit of measure", "wellcommerce", "en");
    Translator.add("test", "test", "wellcommerce", "en");
})(Translator);

(function (Translator) {
    // pl
    Translator.add("form.help.required_fields", "* pola wymagane", "wellcommerce", "pl");
    Translator.add("form.media_data.image_id", "ID obrazka", "wellcommerce", "pl");
    Translator.add("common.button.add", "Dodaj", "wellcommerce", "pl");
    Translator.add("common.button.save", "Zapisz zmiany", "wellcommerce", "pl");
    Translator.add("common.button.save_and_finish", "Zapisz i zako\u0144cz", "wellcommerce", "pl");
    Translator.add("common.button.save_and_continue", "Zapisz i kontynuuj", "wellcommerce", "pl");
    Translator.add("common.button.save_and_add_another", "Zapisz i dodaj kolejny", "wellcommerce", "pl");
    Translator.add("common.button.back", "Return", "wellcommerce", "pl");
    Translator.add("common.help.required_fields", "* pola wymagane", "wellcommerce", "pl");
    Translator.add("common.fieldset.required_data", "Ustawienia og\u00f3lne", "wellcommerce", "pl");
    Translator.add("common.fieldset.general_settings", "Ustawienia og\u00f3lne", "wellcommerce", "pl");
    Translator.add("common.fieldset.translations", "T\u0142umaczenia", "wellcommerce", "pl");
    Translator.add("common.fieldset.shops", "Sklepy", "wellcommerce", "pl");
    Translator.add("common.fieldset.prices", "Ceny", "wellcommerce", "pl");
    Translator.add("common.fieldset.discount_settings", "Rabaty", "wellcommerce", "pl");
    Translator.add("common.fieldset.general", "Og\u00f3lne", "wellcommerce", "pl");
    Translator.add("common.fieldset.photos", "Zdj\u0119cia", "wellcommerce", "pl");
    Translator.add("common.fieldset.meta", "Ustawienia znacznik\u00f3w meta", "wellcommerce", "pl");
    Translator.add("common.fieldset.categories", "Kategorie", "wellcommerce", "pl");
    Translator.add("common.fieldset.description", "Opis", "wellcommerce", "pl");
    Translator.add("common.label.id", "ID", "wellcommerce", "pl");
    Translator.add("common.label.name", "Nazwa", "wellcommerce", "pl");
    Translator.add("common.label.currency", "Waluta", "wellcommerce", "pl");
    Translator.add("common.label.short_description", "Kr\u00f3tki opis", "wellcommerce", "pl");
    Translator.add("common.label.description", "Opis", "wellcommerce", "pl");
    Translator.add("common.label.code", "Kod", "wellcommerce", "pl");
    Translator.add("common.label.slug", "\u015acie\u017cka SEO", "wellcommerce", "pl");
    Translator.add("common.label.group", "Grupa", "wellcommerce", "pl");
    Translator.add("common.label.discount", "Rabat", "wellcommerce", "pl");
    Translator.add("common.label.created_at", "Utworzenie", "wellcommerce", "pl");
    Translator.add("common.label.updated_at", "Ostatnia aktualizacja", "wellcommerce", "pl");
    Translator.add("common.label.valid_from", "Wa\u017cny od", "wellcommerce", "pl");
    Translator.add("common.label.valid_to", "Wa\u017cny do", "wellcommerce", "pl");
    Translator.add("common.label.enabled", "W\u0142\u0105czony", "wellcommerce", "pl");
    Translator.add("common.label.preview", "Podgl\u0105d", "wellcommerce", "pl");
    Translator.add("common.label.extension", "Rozszerzenie", "wellcommerce", "pl");
    Translator.add("common.label.mime", "MIME", "wellcommerce", "pl");
    Translator.add("common.label.size", "Rozmiar", "wellcommerce", "pl");
    Translator.add("common.label.publish", "Opublikowany", "wellcommerce", "pl");
    Translator.add("common.label.hierarchy", "Kolejno\u015b\u0107", "wellcommerce", "pl");
    Translator.add("common.label.password", "Has\u0142o", "wellcommerce", "pl");
    Translator.add("common.label.producer", "Producent", "wellcommerce", "pl");
    Translator.add("common.label.tax", "Podatek", "wellcommerce", "pl");
    Translator.add("common.label.stock", "Stan magazynowy", "wellcommerce", "pl");
    Translator.add("common.label.categories", "Kategorie", "wellcommerce", "pl");
    Translator.add("common.label.sku", "SKU", "wellcommerce", "pl");
    Translator.add("common.label.default_order_status", "Domy\u015blny status", "wellcommerce", "pl");
    Translator.add("common.label.url", "Adres URL", "wellcommerce", "pl");
    Translator.add("common.label.shops", "Dost\u0119pny w sklepach", "wellcommerce", "pl");
    Translator.add("common.label.meta.title", "Tytu\u0142", "wellcommerce", "pl");
    Translator.add("common.label.meta.keywords", "S\u0142owa kluczowe", "wellcommerce", "pl");
    Translator.add("common.label.meta.description", "Opis", "wellcommerce", "pl");
    Translator.add("common.label.dimension.width", "Szeroko\u015b\u0107", "wellcommerce", "pl");
    Translator.add("common.label.dimension.height", "Wysoko\u015b\u0107", "wellcommerce", "pl");
    Translator.add("common.label.dimension.depth", "G\u0142\u0119boko\u015b\u0107", "wellcommerce", "pl");
    Translator.add("common.label.dimension.length", "D\u0142ugo\u015b\u0107", "wellcommerce", "pl");
    Translator.add("common.label.dimension.weight", "Waga", "wellcommerce", "pl");
    Translator.add("common.label.phone", "Telefon", "wellcommerce", "pl");
    Translator.add("common.label.secondary_phone", "Drugi telefon", "wellcommerce", "pl");
    Translator.add("common.label.email", "E-mail", "wellcommerce", "pl");
    Translator.add("common.label.price", "Cena", "wellcommerce", "pl");
    Translator.add("common.label.discounted_price", "Cena promocyjna", "wellcommerce", "pl");
    Translator.add("common.label.gross_price", "Cena brutto", "wellcommerce", "pl");
    Translator.add("common.label.net_price", "Cena netto", "wellcommerce", "pl");
    Translator.add("common.label.first_name", "Imi\u0119", "wellcommerce", "pl");
    Translator.add("common.label.last_name", "Nazwisko", "wellcommerce", "pl");
    Translator.add("common.label.client_group", "Grupa klient\u00f3w", "wellcommerce", "pl");
    Translator.add("common.label.address", "Adresy", "wellcommerce", "pl");
    Translator.add("common.label.street", "Ulica", "wellcommerce", "pl");
    Translator.add("common.label.street_no", "Numer ulicy", "wellcommerce", "pl");
    Translator.add("common.label.flat_no", "Numer domu\/lokalu", "wellcommerce", "pl");
    Translator.add("common.label.province", "Prowincja", "wellcommerce", "pl");
    Translator.add("common.label.post_code", "Kod pocztowy", "wellcommerce", "pl");
    Translator.add("common.label.country", "Pa\u0144stwo", "wellcommerce", "pl");
    Translator.add("common.label.meta_title", "Tytu\u0142 meta", "wellcommerce", "pl");
    Translator.add("common.label.meta_description", "Opis meta", "wellcommerce", "pl");
    Translator.add("common.label.meta_keywords", "S\u0142owa kluczowe meta", "wellcommerce", "pl");
    Translator.add("common.flashes.success", "Sukces!", "wellcommerce", "pl");
    Translator.add("price.sell_price.net", "Cena sprzeda\u017cy netto", "wellcommerce", "pl");
    Translator.add("price.sell_price.gross", "Cena sprzeda\u017cy brutto", "wellcommerce", "pl");
    Translator.add("price.buy_price.net", "Cena zakupu netto", "wellcommerce", "pl");
    Translator.add("price.buy_price.gross", "Cena zakupu brutto", "wellcommerce", "pl");
    Translator.add("price.discounted_price.net", "Cena promocyjna netto", "wellcommerce", "pl");
    Translator.add("price.discounted_price.gross", "Cena promocyjna brutto", "wellcommerce", "pl");
    Translator.add("price.discounted_price.discount", "Rabat", "wellcommerce", "pl");
    Translator.add("dataset.label.delete", "Usu\u0144", "wellcommerce", "pl");
    Translator.add("dataset.label.confirm_delete", "Czy na pewno chcesz usun\u0105\u0107", "wellcommerce", "pl");
    Translator.add("user.heading.index", "Administratorzy", "wellcommerce", "pl");
    Translator.add("user.heading.add", "Dodaj admnistratora", "wellcommerce", "pl");
    Translator.add("user.heading.edit", "Edytuj admnistratora", "wellcommerce", "pl");
    Translator.add("user.button.add", "Dodaj", "wellcommerce", "pl");
    Translator.add("user.button.log_in", "Zaloguj si\u0119", "wellcommerce", "pl");
    Translator.add("user.button.reset_password", "Zresetuj has\u0142o", "wellcommerce", "pl");
    Translator.add("user.label.id", "ID", "wellcommerce", "pl");
    Translator.add("user.label.username", "Login", "wellcommerce", "pl");
    Translator.add("user.label.password", "Has\u0142o", "wellcommerce", "pl");
    Translator.add("user.label.email", "E-mail", "wellcommerce", "pl");
    Translator.add("user.label.first_name", "Imi\u0119", "wellcommerce", "pl");
    Translator.add("user.label.last_name", "Nazwisko", "wellcommerce", "pl");
    Translator.add("user.label.enabled", "Aktywny", "wellcommerce", "pl");
    Translator.add("user.label.user_group", "Grupa administrator\u00f3w", "wellcommerce", "pl");
    Translator.add("user.label.api_key", "Klucz API", "wellcommerce", "pl");
    Translator.add("user.fieldset.api_access", "Dost\u0119p API", "wellcommerce", "pl");
    Translator.add("user.flash.success.reset_password", "Twoje nowe has\u0142o zosta\u0142o wys\u0142ane na e-mail", "wellcommerce", "pl");
    Translator.add("user.flash.error.wrong_username", "Podano niepoprawny login", "wellcommerce", "pl");
    Translator.add("user.flash.error.blocked_account", "Konto jest zablokowane", "wellcommerce", "pl");
    Translator.add("user.email.title.register", "Dane logowania administratora", "wellcommerce", "pl");
    Translator.add("user.email.title.reset_password", "Nowe dane do logowania", "wellcommerce", "pl");
    Translator.add("user_group.heading.index", "Grupy administrator\u00f3w", "wellcommerce", "pl");
    Translator.add("user_group.heading.add", "Dodaj grup\u0119 administrator\u00f3w", "wellcommerce", "pl");
    Translator.add("user_group.heading.edit", "Edytuj grup\u0119 administrator\u00f3w", "wellcommerce", "pl");
    Translator.add("user_group.label.permissions", "Uprawnienia", "wellcommerce", "pl");
    Translator.add("admin.heading.last_opinions", "Ostatnie opinie", "wellcommerce", "pl");
    Translator.add("admin.heading.last_orders", "Ostatnie zam\u00f3wienia", "wellcommerce", "pl");
    Translator.add("admin.heading.new_customers", "Nowi klienci", "wellcommerce", "pl");
    Translator.add("admin.heading.bestsellers", "Bestsellery", "wellcommerce", "pl");
    Translator.add("admin.heading.customers_online", "Klienci online", "wellcommerce", "pl");
    Translator.add("admin.heading.dashboard", "Dashboard", "wellcommerce", "pl");
    Translator.add("admin.label.content", "Tre\u015b\u0107", "wellcommerce", "pl");
    Translator.add("admin.label.customer", "Zamawiaj\u0105cy", "wellcommerce", "pl");
    Translator.add("admin.label.sum", "Suma", "wellcommerce", "pl");
    Translator.add("admin.label.firstname", "Imi\u0119", "wellcommerce", "pl");
    Translator.add("admin.label.lastname", "Nazwisko", "wellcommerce", "pl");
    Translator.add("admin.label.product", "Produkt", "wellcommerce", "pl");
    Translator.add("admin.label.quantity", "Ilo\u015b\u0107 sprzedanych", "wellcommerce", "pl");
    Translator.add("admin.label.show_raports", "Poka\u017c raporty", "wellcommerce", "pl");
    Translator.add("admin.label.client", "Klient", "wellcommerce", "pl");
    Translator.add("admin.label.cart", "Koszyk", "wellcommerce", "pl");
    Translator.add("admin.label.global_context", "Globalny", "wellcommerce", "pl");
    Translator.add("admin.user.logout", "Wyloguj", "wellcommerce", "pl");
    Translator.add("admin.user.help", "Pomoc", "wellcommerce", "pl");
    Translator.add("admin.button.show_all", "Poka\u017c wszystkie", "wellcommerce", "pl");
    Translator.add("attribute.heading.index", "Atrybuty", "wellcommerce", "pl");
    Translator.add("attribute.heading.add", "Dodawanie nowego atrubutu", "wellcommerce", "pl");
    Translator.add("attribute.heading.edit", "Edycja atrybutu", "wellcommerce", "pl");
    Translator.add("attribute_group.heading.index", "Grupy atrybut\u00f3w", "wellcommerce", "pl");
    Translator.add("attribute_group.heading.add", "Dodaj grup\u0119", "wellcommerce", "pl");
    Translator.add("attribute_group.heading.edit", "Edycja grupy", "wellcommerce", "pl");
    Translator.add("attribute_group.flash.empty_group", "Pusta grupa", "wellcommerce", "pl");
    Translator.add("attribute_group.flash.new_group", "Nowa grupa", "wellcommerce", "pl");
    Translator.add("attribute_group.label.attributes", "Atrybuty", "wellcommerce", "pl");
    Translator.add("attribute_group.label.group", "Grupa", "wellcommerce", "pl");
    Translator.add("attribute_value.heading.index", "Warto\u015bci atrybut\u00f3w", "wellcommerce", "pl");
    Translator.add("attribute_value.heading.add", "Dodaj warto\u015bci", "wellcommerce", "pl");
    Translator.add("attribute_value.heading.edit", "Edytuj warto\u015bci", "wellcommerce", "pl");
    Translator.add("availability.heading.index", "Statusy dost\u0119pno\u015bci", "wellcommerce", "pl");
    Translator.add("availability.heading.add", "Dodaj status", "wellcommerce", "pl");
    Translator.add("availability.heading.edit", "Edytuj status", "wellcommerce", "pl");
    Translator.add("cart.flash.added", "zosta\u0142 dodany do koszyka", "wellcommerce", "pl");
    Translator.add("cart.flash.empty", "Koszyk jest pusty.", "wellcommerce", "pl");
    Translator.add("cart.button.add", "Dodaj do koszyka", "wellcommerce", "pl");
    Translator.add("cart.link.checkout", "Przejd\u017a do zam\u00f3wienia", "wellcommerce", "pl");
    Translator.add("cart.link.go_to_cart", "Przejd\u017a do koszyka", "wellcommerce", "pl");
    Translator.add("cart.link.back_to_shopping", "Wr\u00f3\u0107 do sklepu", "wellcommerce", "pl");
    Translator.add("cart.heading.index", "Koszyk", "wellcommerce", "pl");
    Translator.add("cart.heading.recommendations", "Polecamy Ci r\u00f3wnie\u017c", "wellcommerce", "pl");
    Translator.add("cart.table.heading.product", "Produkt", "wellcommerce", "pl");
    Translator.add("cart.table.heading.price", "Cena", "wellcommerce", "pl");
    Translator.add("cart.table.heading.quantity", "Ilo\u015b\u0107", "wellcommerce", "pl");
    Translator.add("cart.table.heading.total", "Warto\u015b\u0107", "wellcommerce", "pl");
    Translator.add("cart.error.no_available_methods", "Nie ma dost\u0119pnych form wysy\u0142ki i\/lub p\u0142atno\u015bci dla produkt\u00f3w w koszyku", "wellcommerce", "pl");
    Translator.add("cart.shipping_method.label", "Metoda wysy\u0142ki", "wellcommerce", "pl");
    Translator.add("cart.payment_method.label", "Metoda p\u0142atno\u015bci", "wellcommerce", "pl");
    Translator.add("address.heading.billing_address", "Adres p\u0142atnika", "wellcommerce", "pl");
    Translator.add("address.heading.shipping_address", "Adres dostawy", "wellcommerce", "pl");
    Translator.add("address.label.copy_address", "Adres dostawy jest taki sam jak adres p\u0142atnika", "wellcommerce", "pl");
    Translator.add("address.label.addresses", "Adresy", "wellcommerce", "pl");
    Translator.add("address.label.street", "Ulica", "wellcommerce", "pl");
    Translator.add("address.label.street_no", "Numer ulicy", "wellcommerce", "pl");
    Translator.add("address.label.flat_no", "Numer domu\/lokalu", "wellcommerce", "pl");
    Translator.add("address.label.province", "Prowincja", "wellcommerce", "pl");
    Translator.add("address.label.post_code", "Kod pocztowy", "wellcommerce", "pl");
    Translator.add("address.label.country", "Pa\u0144stwo", "wellcommerce", "pl");
    Translator.add("address.label.city", "Miejscowo\u015b\u0107", "wellcommerce", "pl");
    Translator.add("category.form.fieldset.general", "Og\u00f3lne", "wellcommerce", "pl");
    Translator.add("category.form.fieldset.meta", "Ustawienia znacznik\u00f3w meta", "wellcommerce", "pl");
    Translator.add("category.form.fieldset.shops", "Sklepy", "wellcommerce", "pl");
    Translator.add("category.form.fieldset.description", "Opis", "wellcommerce", "pl");
    Translator.add("category.label.shops", "Dost\u0119pna w sklepach", "wellcommerce", "pl");
    Translator.add("category.label.hierarchy", "Kolejno\u015b\u0107", "wellcommerce", "pl");
    Translator.add("category.label.enabled", "W\u0142\u0105czona", "wellcommerce", "pl");
    Translator.add("category.label.name", "Nazwa", "wellcommerce", "pl");
    Translator.add("category.label.slug", "\u015acie\u017cka SEO", "wellcommerce", "pl");
    Translator.add("category.label.parent", "Kategoria nadrz\u0119dna", "wellcommerce", "pl");
    Translator.add("category.label.short_description", "Kr\u00f3tki opis", "wellcommerce", "pl");
    Translator.add("category.label.description", "Opis", "wellcommerce", "pl");
    Translator.add("category.label.category_add", "Dodaj kategori\u0119", "wellcommerce", "pl");
    Translator.add("category.label.category_name", "Nazwa kategorii", "wellcommerce", "pl");
    Translator.add("category.label.tree", "Drzewko kategorii", "wellcommerce", "pl");
    Translator.add("category.heading.index", "Kategorie", "wellcommerce", "pl");
    Translator.add("category.heading.add", "Dodaj kategori\u0119", "wellcommerce", "pl");
    Translator.add("category.heading.edit", "Edytuj kategori\u0119", "wellcommerce", "pl");
    Translator.add("category.comment.enabled", "W\u0142\u0105cz widoczno\u015b\u0107 kategorii", "wellcommerce", "pl");
    Translator.add("client.label.username", "Login (e-mail)", "wellcommerce", "pl");
    Translator.add("client.label.password", "Has\u0142o", "wellcommerce", "pl");
    Translator.add("client.label.confirm_password", "Potwierd\u017a has\u0142o", "wellcommerce", "pl");
    Translator.add("client.label.new_password", "Nowe has\u0142o", "wellcommerce", "pl");
    Translator.add("client.label.accept_conditions", "Akceptuj\u0119 regulamin sklepu", "wellcommerce", "pl");
    Translator.add("client.label.accept_newsletter", "Zapisz si\u0119 na nasz newsleter", "wellcommerce", "pl");
    Translator.add("client.label.contact_details.first_name", "Imi\u0119", "wellcommerce", "pl");
    Translator.add("client.label.contact_details.last_name", "Nazwisko", "wellcommerce", "pl");
    Translator.add("client.label.contact_details.phone", "Telefon", "wellcommerce", "pl");
    Translator.add("client.label.contact_details.secondary_phone", "Telefon dodatkowy", "wellcommerce", "pl");
    Translator.add("client.label.contact_details.email", "E-mail", "wellcommerce", "pl");
    Translator.add("client.label.address.first_name", "Imi\u0119", "wellcommerce", "pl");
    Translator.add("client.label.address.last_name", "Nazwisko", "wellcommerce", "pl");
    Translator.add("client.label.address.street", "Ulica", "wellcommerce", "pl");
    Translator.add("client.label.address.street_no", "Numer budynku", "wellcommerce", "pl");
    Translator.add("client.label.address.flat_no", "Numer lokalu", "wellcommerce", "pl");
    Translator.add("client.label.address.province", "Prowincja", "wellcommerce", "pl");
    Translator.add("client.label.address.post_code", "Kod pocztowy", "wellcommerce", "pl");
    Translator.add("client.label.address.country", "Pa\u0144stwo", "wellcommerce", "pl");
    Translator.add("client.label.address.city", "Miejscowo\u015b\u0107", "wellcommerce", "pl");
    Translator.add("client.label.address.copy_address", "Adres dostawy jest taki sam jak adres p\u0142atnika", "wellcommerce", "pl");
    Translator.add("client.heading.index", "Klienci", "wellcommerce", "pl");
    Translator.add("client.heading.add", "Dodaj klienta", "wellcommerce", "pl");
    Translator.add("client.heading.edit", "Edytuj klienta", "wellcommerce", "pl");
    Translator.add("client.heading.login", "Logowanie", "wellcommerce", "pl");
    Translator.add("client.heading.register", "Rejestracja", "wellcommerce", "pl");
    Translator.add("client.heading.contact_details", "Dane kontaktowe", "wellcommerce", "pl");
    Translator.add("client.heading.footer_links", "Twoje konto", "wellcommerce", "pl");
    Translator.add("client.heading.billing_address", "Adres p\u0142atnika", "wellcommerce", "pl");
    Translator.add("client.heading.shipping_address", "Adres dostawy", "wellcommerce", "pl");
    Translator.add("client.heading.reset_password", "Zresetuj has\u0142o", "wellcommerce", "pl");
    Translator.add("client.heading.change_password", "Zmie\u0144 has\u0142o", "wellcommerce", "pl");
    Translator.add("client.link.login", "Zaloguj lub zarejestruj si\u0119", "wellcommerce", "pl");
    Translator.add("client.link.register", "Rejestracja", "wellcommerce", "pl");
    Translator.add("client.link.logout", "Wyloguj", "wellcommerce", "pl");
    Translator.add("client.link.orders", "Zam\u00f3wienia", "wellcommerce", "pl");
    Translator.add("client.link.address_book", "Adresy", "wellcommerce", "pl");
    Translator.add("client.link.settings", "Ustawienia", "wellcommerce", "pl");
    Translator.add("client.link.wishlist", "Lista \u017cycze\u0144", "wellcommerce", "pl");
    Translator.add("client.link.password_forgotten", "Zresetuj has\u0142o", "wellcommerce", "pl");
    Translator.add("client.button.login", "Zaloguj si\u0119", "wellcommerce", "pl");
    Translator.add("client.button.register", "Zarejestruj si\u0119", "wellcommerce", "pl");
    Translator.add("client.button.reset_password", "Potwierd\u017a zresetowanie has\u0142a", "wellcommerce", "pl");
    Translator.add("client.button.change_password", "Potwierd\u017a zmian\u0119 has\u0142a", "wellcommerce", "pl");
    Translator.add("client.flash.registration.error", "Formularz zawiera niepoprawne dane.", "wellcommerce", "pl");
    Translator.add("client.flash.reset_password.wrong_email", "Podano niepoprawny adres e-mail.", "wellcommerce", "pl");
    Translator.add("client.flash.reset_password.email_not_found", "Podany adres e-mail nie wyst\u0119puje w naszej bazie.", "wellcommerce", "pl");
    Translator.add("client.flash.reset_password.success", "Wys\u0142ano e-mail z linkiem do zresetowania has\u0142a.", "wellcommerce", "pl");
    Translator.add("client.flash.change_password.success", "Nowe has\u0142o zosta\u0142o ustawione", "wellcommerce", "pl");
    Translator.add("client.comment.discount", "Wprowad\u017a procentow\u0105 warto\u015b\u0107 zni\u017cki (np. 10 dla 10% zni\u017cki)", "wellcommerce", "pl");
    Translator.add("client.email.heading.reset_password", "Informacje dotycz\u0105ce zresetowania has\u0142a", "wellcommerce", "pl");
    Translator.add("client.email.heading.registration_ok", "Rejestracja u\u017cytkownika", "wellcommerce", "pl");
    Translator.add("client.email.heading.register", "Rejestracja u\u017cytkownika", "wellcommerce", "pl");
    Translator.add("client.email.body.reset_password_instructions", "Rozpocz\u0119to procedur\u0119 odzyskiwania has\u0142a.", "wellcommerce", "pl");
    Translator.add("client.email.body.confirm_password_reset", "Przejd\u017a na stron\u0119 celem ustalenia nowego has\u0142a w sklepie.", "wellcommerce", "pl");
    Translator.add("client_group.heading.index", "Grupy klient\u00f3w", "wellcommerce", "pl");
    Translator.add("client_group.heading.add", "Dodaj grup\u0119 klient\u00f3w", "wellcommerce", "pl");
    Translator.add("client_group.heading.edit", "Edytuj grup\u0119", "wellcommerce", "pl");
    Translator.add("client_group.label.total_clients", "Klient\u00f3w w tej grupie", "wellcommerce", "pl");
    Translator.add("company.heading.index", "Firmy", "wellcommerce", "pl");
    Translator.add("company.heading.add", "Dodaj firm\u0119", "wellcommerce", "pl");
    Translator.add("company.heading.edit", "Edytuj firm\u0119", "wellcommerce", "pl");
    Translator.add("company.label.name", "Pe\u0142na nazwa", "wellcommerce", "pl");
    Translator.add("company.label.short_name", "Skr\u00f3cona nazwa", "wellcommerce", "pl");
    Translator.add("contact.heading.index", "Kontakty", "wellcommerce", "pl");
    Translator.add("contact.heading.add", "Dodaj kontakt", "wellcommerce", "pl");
    Translator.add("contact.heading.edit", "Edytuj kontakt", "wellcommerce", "pl");
    Translator.add("contact.email.heading.contact", "Otrzymali\u015bmy Twoje zapytanie", "wellcommerce", "pl");
    Translator.add("contact.label.business_hours", "Godziny otwarcia", "wellcommerce", "pl");
    Translator.add("contact_details.heading.details", "Dane kontaktowe", "wellcommerce", "pl");
    Translator.add("contact_details.label.first_name", "Imi\u0119", "wellcommerce", "pl");
    Translator.add("contact_details.label.last_name", "Nazwisko", "wellcommerce", "pl");
    Translator.add("coupon.heading.index", "Kupony", "wellcommerce", "pl");
    Translator.add("coupon.heading.add", "Dodaj kupon", "wellcommerce", "pl");
    Translator.add("coupon.heading.edit", "Edytuj kupon", "wellcommerce", "pl");
    Translator.add("coupon.fieldset.discount_settings", "Konfiguracja rabat\u00f3w", "wellcommerce", "pl");
    Translator.add("coupon.label.client_usage_limit", "Limit dla klient\u00f3w", "wellcommerce", "pl");
    Translator.add("coupon.label.global_usage_limit", "Limit globalny", "wellcommerce", "pl");
    Translator.add("coupon.label.modifier_type", "Rodzaj modyfikatora", "wellcommerce", "pl");
    Translator.add("coupon.label.modifier_value", "Warto\u015b\u0107 modyfikatora", "wellcommerce", "pl");
    Translator.add("coupon.label.modifier_type_percent", "%", "wellcommerce", "pl");
    Translator.add("coupon.label.modifier_type_subtract", "-", "wellcommerce", "pl");
    Translator.add("coupon.error.not_found", "Kod kuponu jest nieprawid\u0142owy", "wellcommerce", "pl");
    Translator.add("currency.heading.index", "Waluty", "wellcommerce", "pl");
    Translator.add("currency.heading.add", "Dodaj walut\u0119", "wellcommerce", "pl");
    Translator.add("currency.heading.edit", "Edytuj walut\u0119", "wellcommerce", "pl");
    Translator.add("currency.button.sync", "Synchronizuj kursy walutowe", "wellcommerce", "pl");
    Translator.add("currency.label.code", "Kod", "wellcommerce", "pl");
    Translator.add("currency.comment.enabled", "Waluta b\u0119dzie widoczna w sklepie", "wellcommerce", "pl");
    Translator.add("locale.heading.index", "T\u0142umaczenia", "wellcommerce", "pl");
    Translator.add("locale.heading.add", "Dodaj t\u0142umaczenie", "wellcommerce", "pl");
    Translator.add("locale.heading.edit", "Edytuj t\u0142umaczenie", "wellcommerce", "pl");
    Translator.add("locale.label.code", "Kod", "wellcommerce", "pl");
    Translator.add("locale.label.currency", "Domy\u015blna waluta", "wellcommerce", "pl");
    Translator.add("deliverer.heading.index", "Dostawcy", "wellcommerce", "pl");
    Translator.add("deliverer.heading.add", "Dodaj dostawc\u0119", "wellcommerce", "pl");
    Translator.add("deliverer.heading.edit", "Edytuj dostawc\u0119", "wellcommerce", "pl");
    Translator.add("dictionary.heading.index", "T\u0142umaczenia", "wellcommerce", "pl");
    Translator.add("dictionary.heading.add", "Dodaj t\u0142umaczenie", "wellcommerce", "pl");
    Translator.add("dictionary.heading.edit", "Edytuj t\u0142umaczenie", "wellcommerce", "pl");
    Translator.add("dictionary.label.id", "ID", "wellcommerce", "pl");
    Translator.add("dictionary.label.identifier", "Identyfikator", "wellcommerce", "pl");
    Translator.add("dictionary.label.translation", "T\u0142umaczenie", "wellcommerce", "pl");
    Translator.add("dictionary.label.locale", "J\u0119zyk", "wellcommerce", "pl");
    Translator.add("dictionary.label.value", "Warto\u015b\u0107", "wellcommerce", "pl");
    Translator.add("dictionary.button.add", "Dodaj t\u0142umaczenie", "wellcommerce", "pl");
    Translator.add("dictionary.button.sync", "Synchronizuj t\u0142umaczenia", "wellcommerce", "pl");
    Translator.add("channel.heading.index", "Kana\u0142y aktualizacji", "wellcommerce", "pl");
    Translator.add("channel.heading.add", "Dodaj nowy kana\u0142", "wellcommerce", "pl");
    Translator.add("channel.label.name", "Nazwa", "wellcommerce", "pl");
    Translator.add("channel.label.url", "Adres URL", "wellcommerce", "pl");
    Translator.add("package.heading.index", "Modu\u0142y", "wellcommerce", "pl");
    Translator.add("package.heading.require", "Pobierz modu\u0142", "wellcommerce", "pl");
    Translator.add("package.button.sync", "Synchronizuj modu\u0142y", "wellcommerce", "pl");
    Translator.add("package.button.run", "Rozpocznij pobieranie", "wellcommerce", "pl");
    Translator.add("package.label.id", "ID", "wellcommerce", "pl");
    Translator.add("package.label.name", "Nazwa", "wellcommerce", "pl");
    Translator.add("package.label.full_name", "Pe\u0142na nazwa", "wellcommerce", "pl");
    Translator.add("package.label.vendor", "Dostawca", "wellcommerce", "pl");
    Translator.add("package.label.local_version", "Wersja lokalna", "wellcommerce", "pl");
    Translator.add("package.label.remote_version", "Wersja zdalna", "wellcommerce", "pl");
    Translator.add("package.label.created_at", "Zainstalowany", "wellcommerce", "pl");
    Translator.add("package.label.updated_at", "Zaktualizowany", "wellcommerce", "pl");
    Translator.add("package.label.output", "Status instalacji", "wellcommerce", "pl");
    Translator.add("package.fieldset.information", "Informacje", "wellcommerce", "pl");
    Translator.add("package.fieldset.progress", "Post\u0119p pobierania", "wellcommerce", "pl");
    Translator.add("package.flash.sync.success", "Synchronizacja zako\u0144czona sukcesem.", "wellcommerce", "pl");
    Translator.add("layout_box.heading.index", "Boksy", "wellcommerce", "pl");
    Translator.add("layout_box.heading.add", "Dodaj boks", "wellcommerce", "pl");
    Translator.add("layout_box.heading.edit", "Edytuj boks", "wellcommerce", "pl");
    Translator.add("layout_box.label.type", "Typ", "wellcommerce", "pl");
    Translator.add("layout_box.label.identifier", "Identyfikator", "wellcommerce", "pl");
    Translator.add("locale.label.language", "J\u0119zyk", "wellcommerce", "pl");
    Translator.add("locale.label.translations", "T\u0142umaczenia", "wellcommerce", "pl");
    Translator.add("locale.comment.enabled", "T\u0142umaczenie b\u0119dzie widoczne w sklepie", "wellcommerce", "pl");
    Translator.add("media.heading.index", "Media", "wellcommerce", "pl");
    Translator.add("media.button.select_from_library", "Wybierz z biblioteki", "wellcommerce", "pl");
    Translator.add("media.button.add_from_disk", "Dodaj z dysku", "wellcommerce", "pl");
    Translator.add("news.heading.index", "Newsy", "wellcommerce", "pl");
    Translator.add("news.heading.add", "Dodaj news", "wellcommerce", "pl");
    Translator.add("news.heading.edit", "Edytuj news", "wellcommerce", "pl");
    Translator.add("news.label.topic", "Temat", "wellcommerce", "pl");
    Translator.add("news.label.summary", "Skr\u00f3cona tre\u015b\u0107", "wellcommerce", "pl");
    Translator.add("news.label.content", "Tre\u015b\u0107", "wellcommerce", "pl");
    Translator.add("order.form.fieldset.products", "Produkty", "wellcommerce", "pl");
    Translator.add("order.heading.index", "Zam\u00f3wienia", "wellcommerce", "pl");
    Translator.add("order.heading.edit", "Edytuj zam\u00f3wienie", "wellcommerce", "pl");
    Translator.add("order.heading.address", "Adresy", "wellcommerce", "pl");
    Translator.add("order.heading.confirmation", "Potwierdzenie", "wellcommerce", "pl");
    Translator.add("order.heading.order_total", "Suma", "wellcommerce", "pl");
    Translator.add("order.heading.products", "Produkty", "wellcommerce", "pl");
    Translator.add("order.heading.order_method_details", null, "wellcommerce", "pl");
    Translator.add("order.button.confirm", "Przejd\u017a do potwierdzenia", "wellcommerce", "pl");
    Translator.add("order.button.add_product", "Dodaj produkt", "wellcommerce", "pl");
    Translator.add("order.label.id", "ID", "wellcommerce", "pl");
    Translator.add("order.label.order_no", "Numer zam\u00f3wienia", "wellcommerce", "pl");
    Translator.add("order.label.client", "Klient", "wellcommerce", "pl");
    Translator.add("order.label.product_total", "Warto\u015b\u0107\u00a0produkt\u00f3w", "wellcommerce", "pl");
    Translator.add("order.label.shipping_total", "Koszty wysy\u0142ki", "wellcommerce", "pl");
    Translator.add("order.label.order_total", "Warto\u015b\u0107 zam\u00f3wienia", "wellcommerce", "pl");
    Translator.add("order.label.variant", "Wariant", "wellcommerce", "pl");
    Translator.add("order.label.weight", "Waga", "wellcommerce", "pl");
    Translator.add("order.label.quantity", "Ilo\u015b\u0107", "wellcommerce", "pl");
    Translator.add("order.label.stock", "Stan magazynowy", "wellcommerce", "pl");
    Translator.add("order.label.tax_rate", "Stawka VAT", "wellcommerce", "pl");
    Translator.add("order.label.current_status", "Status", "wellcommerce", "pl");
    Translator.add("order.label.created_at", "Z\u0142o\u017cone", "wellcommerce", "pl");
    Translator.add("order.label.comment", "Komentarz klienta", "wellcommerce", "pl");
    Translator.add("order.label.shipping_method", "Forma wysy\u0142ki", "wellcommerce", "pl");
    Translator.add("order.label.payment_method", "Forma p\u0142atno\u015bci", "wellcommerce", "pl");
    Translator.add("order.label.product_name", "Produkt", "wellcommerce", "pl");
    Translator.add("order.label.tax_value", "Podatek", "wellcommerce", "pl");
    Translator.add("order.label.gross_amount", "Cena", "wellcommerce", "pl");
    Translator.add("order.label.gross_total", "Suma", "wellcommerce", "pl");
    Translator.add("order.label.currency", "Waluta", "wellcommerce", "pl");
    Translator.add("order.description.product_total", "Warto\u015b\u0107 produkt\u00f3w", "wellcommerce", "pl");
    Translator.add("order.description.shipping_cost", "Koszty wysy\u0142ki", "wellcommerce", "pl");
    Translator.add("order.notice.empty_order_list", "Nie z\u0142o\u017cy\u0142e\u015b jeszcze \u017cadnych zam\u00f3wie\u0144", "wellcommerce", "pl");
    Translator.add("order_status.heading.index", "Statusy zam\u00f3wienia", "wellcommerce", "pl");
    Translator.add("order_status.heading.add", "Dodaj status", "wellcommerce", "pl");
    Translator.add("order_status.heading.edit", "Edytuj status", "wellcommerce", "pl");
    Translator.add("order_status.heading.label.order_status_group", "Grupa statusu zam\u00f3wienia", "wellcommerce", "pl");
    Translator.add("order_status.heading.label.default_comment", "Domy\u015blny komentarz dla zam\u00f3wienia", "wellcommerce", "pl");
    Translator.add("order_status.heading.comment.enabled", "Status zam\u00f3wienia b\u0119dzie widoczny.", "wellcommerce", "pl");
    Translator.add("order_status_group.heading.index", "Grupy status\u00f3w zam\u00f3wienia", "wellcommerce", "pl");
    Translator.add("order_status_group.heading.add", "Dodaj grup\u0119", "wellcommerce", "pl");
    Translator.add("order_status_group.heading.edit", "Edytuj grup\u0119", "wellcommerce", "pl");
    Translator.add("order_status_group.label.name", "Nazwa grupy status\u00f3w zam\u00f3wie\u0144", "wellcommerce", "pl");
    Translator.add("page.tip.client_groups", "Zaznacz grupy klient\u00f3w kt\u00f3re mog\u0105 widzie\u0107 stron\u0119", "wellcommerce", "pl");
    Translator.add("page.heading.index", "Strony CMS", "wellcommerce", "pl");
    Translator.add("page.heading.add", "Dodaj stron\u0119", "wellcommerce", "pl");
    Translator.add("page.heading.edit", "Edytuj stron\u0119", "wellcommerce", "pl");
    Translator.add("page.label.section", "Sekcja", "wellcommerce", "pl");
    Translator.add("page.label.parent", "Strona nadrz\u0119dna", "wellcommerce", "pl");
    Translator.add("page.label.client_groups", "Widoczno\u015b\u0107 dla grup klient\u00f3w", "wellcommerce", "pl");
    Translator.add("page.label.redirect.type", "Rodzaj przekierowania", "wellcommerce", "pl");
    Translator.add("page.label.redirect.url", "Na adres URL", "wellcommerce", "pl");
    Translator.add("page.label.redirect.route", "Na adres wewn\u0119trzny", "wellcommerce", "pl");
    Translator.add("page.label.redirect.none", "Brak przekierowania", "wellcommerce", "pl");
    Translator.add("page.fieldset.redirect_settings", "Ustawienia przekierowa\u0144", "wellcommerce", "pl");
    Translator.add("page.comment.publish", "Informacja b\u0119dzie widoczna w sklepie", "wellcommerce", "pl");
    Translator.add("payment.flash.thank_you", "Dzi\u0119kujemy za z\u0142o\u017cenie zam\u00f3wienia. Poni\u017cej prezentujemy jego szczeg\u00f3\u0142y:", "wellcommerce", "pl");
    Translator.add("payment_method.heading.index", "Formy p\u0142atno\u015bci", "wellcommerce", "pl");
    Translator.add("payment_method.heading.add", "Dodaj form\u0119 p\u0142atno\u015bci", "wellcommerce", "pl");
    Translator.add("payment_method.heading.edit", "Edytuj form\u0119 p\u0142atno\u015bci", "wellcommerce", "pl");
    Translator.add("payment_method.fieldset.shipping_methods", "Formy wysy\u0142ki", "wellcommerce", "pl");
    Translator.add("payment_method.label.processor", "Typ procesora p\u0142atno\u015bci", "wellcommerce", "pl");
    Translator.add("payment_method.label.shipping_methods", "Dozwolone formy wysy\u0142ki", "wellcommerce", "pl");
    Translator.add("payment_method.bank_transfer.tip", "Twoje zam\u00f3wienie b\u0119dzie realizowane po otrzymaniu przelewu na poni\u017csze dane rachunku.", "wellcommerce", "pl");
    Translator.add("payment_method.bank_transfer.account", "Numer rachunku", "wellcommerce", "pl");
    Translator.add("payment_method.bank_transfer.sort_number", "Sort code banku", "wellcommerce", "pl");
    Translator.add("payment_method.bank_transfer.title", "Tytu\u0142 przelewu", "wellcommerce", "pl");
    Translator.add("producer.heading.index", "Producenci", "wellcommerce", "pl");
    Translator.add("producer.heading.add", "Dodaj producenta", "wellcommerce", "pl");
    Translator.add("producer.heading.edit", "Edytuj producenta", "wellcommerce", "pl");
    Translator.add("producer.fieldset.deliverers", "Dostawcy", "wellcommerce", "pl");
    Translator.add("producer.label.deliverers", "Dostawcy", "wellcommerce", "pl");
    Translator.add("product.form.fieldset.general", "Og\u00f3lne", "wellcommerce", "pl");
    Translator.add("product.form.fieldset.meta", "Ustawienia znacznik\u00f3w meta", "wellcommerce", "pl");
    Translator.add("product.form.fieldset.categories", "Kategorie", "wellcommerce", "pl");
    Translator.add("product.form.fieldset.prices", "Ceny", "wellcommerce", "pl");
    Translator.add("product.form.fieldset.stock", "Ustawienia magazynu", "wellcommerce", "pl");
    Translator.add("product.form.fieldset.photos", "Zdj\u0119cia", "wellcommerce", "pl");
    Translator.add("product.form.fieldset.statuses", "Statusy", "wellcommerce", "pl");
    Translator.add("product.form.fieldset.attributes", "Warianty", "wellcommerce", "pl");
    Translator.add("product.form.fieldset.shops", "Sklepy", "wellcommerce", "pl");
    Translator.add("product.form.fieldset.description", "Opis", "wellcommerce", "pl");
    Translator.add("product.comment.enabled", "W\u0142\u0105cz widoczno\u015b\u0107 produktu w sklepie", "wellcommerce", "pl");
    Translator.add("product.comment.track_stock", "\u015aledzenie stanu magazynowego spowoduje, \u017ce stan magazynowy b\u0119dzie si\u0119 zmienia\u0142 automatycznie w przypadku zam\u00f3wie\u0144. Produkty z w\u0142\u0105czonym \u015bledzeniem i ilo\u015bci\u0105 0 nie b\u0119d\u0105 mog\u0142y by\u0107 zam\u00f3wione przez klient\u00f3w.", "wellcommerce", "pl");
    Translator.add("product.heading.index", "Produkty", "wellcommerce", "pl");
    Translator.add("product.heading.add", "Dodaj produkt", "wellcommerce", "pl");
    Translator.add("product.heading.edit", "Edytuj produkt", "wellcommerce", "pl");
    Translator.add("product.label.id", "ID", "wellcommerce", "pl");
    Translator.add("product.label.name", "Nazwa", "wellcommerce", "pl");
    Translator.add("product.label.slug", "\u015acie\u017cka SEO", "wellcommerce", "pl");
    Translator.add("product.label.enabled", "W\u0142\u0105czony", "wellcommerce", "pl");
    Translator.add("product.label.sku", "SKU", "wellcommerce", "pl");
    Translator.add("product.label.statuses", "Statusy produktu", "wellcommerce", "pl");
    Translator.add("product.label.shops", "Dost\u0119pny w sklepach", "wellcommerce", "pl");
    Translator.add("product.label.categories", "Kategorie", "wellcommerce", "pl");
    Translator.add("product.label.gross_amount", "Cena brutto", "wellcommerce", "pl");
    Translator.add("product.label.stock", "Stan magazynowy", "wellcommerce", "pl");
    Translator.add("product.label.weight", "Waga", "wellcommerce", "pl");
    Translator.add("product.label.producer", "Producent", "wellcommerce", "pl");
    Translator.add("product.label.currency", "Waluta", "wellcommerce", "pl");
    Translator.add("product.label.manufactured_by", "od", "wellcommerce", "pl");
    Translator.add("product.label.shipping_cost", "Koszty wysy\u0142ki", "wellcommerce", "pl");
    Translator.add("product.label.availability", "Dost\u0119pno\u015b\u0107", "wellcommerce", "pl");
    Translator.add("product.label.attributes", "Atrybuty", "wellcommerce", "pl");
    Translator.add("product.label.add_tax_prompt", "Dodaj podatek", "wellcommerce", "pl");
    Translator.add("product.label.quantity", "Ilo\u015b\u0107", "wellcommerce", "pl");
    Translator.add("product.label.unit", "Jednostka miary", "wellcommerce", "pl");
    Translator.add("product.label.package_size", "Ilo\u015b\u0107 w opakowaniu", "wellcommerce", "pl");
    Translator.add("product.label.track_stock", "\u015aledzenie magazynu", "wellcommerce", "pl");
    Translator.add("product.label.pcs", "szt.", "wellcommerce", "pl");
    Translator.add("product.label.buy_price.settings", "Konfiguracja cen zakupu", "wellcommerce", "pl");
    Translator.add("product.label.buy_price.currency", "Waluta", "wellcommerce", "pl");
    Translator.add("product.label.buy_price.tax", "Podatek", "wellcommerce", "pl");
    Translator.add("product.label.buy_price.gross_amount", "Cena brutto", "wellcommerce", "pl");
    Translator.add("product.label.sell_price.settings", "Konfiguracja cen sprzeda\u017cy", "wellcommerce", "pl");
    Translator.add("product.label.sell_price.currency", "Waluta", "wellcommerce", "pl");
    Translator.add("product.label.sell_price.tax", "Podatek", "wellcommerce", "pl");
    Translator.add("product.label.sell_price.gross_amount", "Cena standardowa", "wellcommerce", "pl");
    Translator.add("product.label.sell_price.discounted_gross_amount", "Cena promocyjna", "wellcommerce", "pl");
    Translator.add("product.label.sell_price.discount_valid_from", "Wa\u017cna od", "wellcommerce", "pl");
    Translator.add("product.label.sell_price.discount_valid_to", "Wa\u017cna do", "wellcommerce", "pl");
    Translator.add("product.label.dimension.width", "Szeroko\u015b\u0107", "wellcommerce", "pl");
    Translator.add("product.label.dimension.height", "Wysoko\u015b\u0107", "wellcommerce", "pl");
    Translator.add("product.label.dimension.depth", "G\u0142\u0119boko\u015b\u0107", "wellcommerce", "pl");
    Translator.add("product.label.layered_navigation.price", "Filtruj po cenie", "wellcommerce", "pl");
    Translator.add("product.label.layered_navigation.brand", "Filtruj po marce", "wellcommerce", "pl");
    Translator.add("product.label.short_description", "Kr\u00f3tki opis", "wellcommerce", "pl");
    Translator.add("product.label.description", "Opis", "wellcommerce", "pl");
    Translator.add("product.button.filter", "Filtrowanie wynik\u00f3w", "wellcommerce", "pl");
    Translator.add("product.options.label.order", "Sortuj", "wellcommerce", "pl");
    Translator.add("product.options.label.view", "Widok", "wellcommerce", "pl");
    Translator.add("product.options.label.limit", "Wynik\u00f3w na stron\u0119", "wellcommerce", "pl");
    Translator.add("product.options.label.grid_view", "Siatka", "wellcommerce", "pl");
    Translator.add("product.options.label.list_view", "Lista", "wellcommerce", "pl");
    Translator.add("product.options.order_by.name.asc", "Nazwa - od A d Z", "wellcommerce", "pl");
    Translator.add("product.options.order_by.name.desc", "Nazwa - od Z a A", "wellcommerce", "pl");
    Translator.add("product.options.order_by.final_price.asc", "Cena - od najni\u017cszej", "wellcommerce", "pl");
    Translator.add("product.options.order_by.final_price.desc", "Cena - od najwy\u017cszej", "wellcommerce", "pl");
    Translator.add("product.options.order_by.score.asc", "Najlepsze trafienie", "wellcommerce", "pl");
    Translator.add("product.options.limit", "Wynik\u00f3w na stron\u0119", "wellcommerce", "pl");
    Translator.add("product.options.view_type.list", "Lista", "wellcommerce", "pl");
    Translator.add("product.options.view_type.grid", "Siatka", "wellcommerce", "pl");
    Translator.add("product_status.heading.index", "Statusy produkt\u00f3w", "wellcommerce", "pl");
    Translator.add("product_status.heading.add", "Dodaj status produktu", "wellcommerce", "pl");
    Translator.add("product_status.heading.edit", "Edytuj status produktu", "wellcommerce", "pl");
    Translator.add("product_status.label.css_class", "Nazwa klasy CSS", "wellcommerce", "pl");
    Translator.add("product_status.label.id", "Id", "wellcommerce", "pl");
    Translator.add("product_status.label.name", "Nazwa", "wellcommerce", "pl");
    Translator.add("product_status.comment.css_class", "Symbol wykorzystywany np. w szablonach CSS. Dozwolone znaki alfanumeryczne.", "wellcommerce", "pl");
    Translator.add("sales_report.heading.sales", "Podsumowanie sprzeda\u017cy", "wellcommerce", "pl");
    Translator.add("sales_report.label.sales", "Sprzeda\u017c", "wellcommerce", "pl");
    Translator.add("sales_report.label.clients", "Klienci", "wellcommerce", "pl");
    Translator.add("sales_report.label.orders", "Zam\u00f3wienia", "wellcommerce", "pl");
    Translator.add("sales_report.label.today", "dzisiaj", "wellcommerce", "pl");
    Translator.add("sales_report.label.current_month", "w tym miesi\u0105cu", "wellcommerce", "pl");
    Translator.add("review.heading.index", "Opinie", "wellcommerce", "pl");
    Translator.add("review.heading.edit", "Edytuj", "wellcommerce", "pl");
    Translator.add("review.label.rating", "Ocena", "wellcommerce", "pl");
    Translator.add("review.label.nick", "Imi\u0119 lub pseudonim", "wellcommerce", "pl");
    Translator.add("review.label.review", "Recenzja", "wellcommerce", "pl");
    Translator.add("review.label.created_at", "Utworzono", "wellcommerce", "pl");
    Translator.add("review.label.product", "Produkt", "wellcommerce", "pl");
    Translator.add("review.label.id", "ID", "wellcommerce", "pl");
    Translator.add("review.button.add_opinion", "Wy\u015blij opini\u0119", "wellcommerce", "pl");
    Translator.add("review.link.first_review", "B\u0105d\u017a pierwsz\u0105 osob\u0105 kt\u00f3ra doda opini\u0119", "wellcommerce", "pl");
    Translator.add("review.flash.success", "Opinia dodana prawid\u0142owo.", "wellcommerce", "pl");
    Translator.add("search.heading.index", "Wyniki wyszukiwania", "wellcommerce", "pl");
    Translator.add("search.label.phrase", "Wpisz czego szukasz", "wellcommerce", "pl");
    Translator.add("search.flash.no_results", "Brak wynik\u00f3w wyszukiwania", "wellcommerce", "pl");
    Translator.add("shipping_method.heading.index", "Formy wysy\u0142ki", "wellcommerce", "pl");
    Translator.add("shipping_method.heading.add", "Dodaj form\u0119 wysy\u0142ki", "wellcommerce", "pl");
    Translator.add("shipping_method.heading.edit", "Edytuj form\u0119 wysy\u0142ki", "wellcommerce", "pl");
    Translator.add("shipping_method.label.calculator", "Rodzaj kalkulacji koszt\u00f3w", "wellcommerce", "pl");
    Translator.add("shipping_method.label.costs", "Koszty wysy\u0142ki", "wellcommerce", "pl");
    Translator.add("shipping_method.fieldset.costs", "Ustawienia koszt\u00f3w wysy\u0142ki", "wellcommerce", "pl");
    Translator.add("shop.heading.index", "Sklepy", "wellcommerce", "pl");
    Translator.add("shop.heading.add", "Dodaj sklep", "wellcommerce", "pl");
    Translator.add("shop.heading.edit", "Edytuj sklep", "wellcommerce", "pl");
    Translator.add("shop.fieldset.mailer_configuration", "Ustawienia mailera", "wellcommerce", "pl");
    Translator.add("shop.fieldset.url_configuration", "Ustawienia adres\u00f3w", "wellcommerce", "pl");
    Translator.add("shop.fieldset.cart_configuration", "Ustawienia koszyka", "wellcommerce", "pl");
    Translator.add("shop.label.company", "Firma", "wellcommerce", "pl");
    Translator.add("shop.label.url", "Adres URL", "wellcommerce", "pl");
    Translator.add("shop.label.theme", "Domy\u015blny szablon sklepu", "wellcommerce", "pl");
    Translator.add("shop.label.default_country", "Domy\u015blne pa\u0144stwo", "wellcommerce", "pl");
    Translator.add("shop.label.default_currency", "Domy\u015blna waluta", "wellcommerce", "pl");
    Translator.add("shop.label.mailer_configuration.from", "Nadawca (e-mail)", "wellcommerce", "pl");
    Translator.add("shop.label.mailer_configuration.host", "Host SMTP", "wellcommerce", "pl");
    Translator.add("shop.label.mailer_configuration.port", "Port SMTP", "wellcommerce", "pl");
    Translator.add("shop.label.mailer_configuration.user", "Login SMTP", "wellcommerce", "pl");
    Translator.add("shop.label.mailer_configuration.pass", "Has\u0142o SMTP", "wellcommerce", "pl");
    Translator.add("tax.heading.index", "Stawki VAT", "wellcommerce", "pl");
    Translator.add("tax.heading.add", "Dodaj stawk\u0119 VAT", "wellcommerce", "pl");
    Translator.add("tax.heading.edit", "Edytuj stawk\u0119 VAT", "wellcommerce", "pl");
    Translator.add("tax.label.value", "Wysoko\u015b\u0107 stawki", "wellcommerce", "pl");
    Translator.add("theme.heading.index", "Szablony", "wellcommerce", "pl");
    Translator.add("theme.heading.add", "Dodaj szablon", "wellcommerce", "pl");
    Translator.add("theme.heading.edit", "Edytuj szablon", "wellcommerce", "pl");
    Translator.add("theme.label.folder", "Folder", "wellcommerce", "pl");
    Translator.add("theme.comment.folder", "Wybierz folder zawieraj\u0105cy szablon", "wellcommerce", "pl");
    Translator.add("unit.heading.index", "Jednostki miary", "wellcommerce", "pl");
    Translator.add("unit.heading.add", "Dodaj jednostk\u0119 miary", "wellcommerce", "pl");
    Translator.add("unit.heading.edit", "Edytuj jednostk\u0119 miary", "wellcommerce", "pl");
})(Translator);

/*
 * ALERT
 */

var GAlert = function(sTitle, sMessage, oParams) {
    if (sMessage == undefined) {
        sMessage = '';
    }
    var iAlertId = GAlert.Register();
    if (GAlert.sp_dHandler != undefined) {
        GAlert.sp_dHandler.Alert(sTitle, sMessage, oParams, iAlertId);
    }
    else {
        alert(sTitle + '\n' + sMessage);
    }
    return iAlertId;
};

var GWarning = function(sTitle, sMessage, oParams) {
    if (oParams == undefined) {
        oParams = {};
    }
    oParams.iType = GAlert.TYPE_WARNING;
    return GAlert(sTitle, sMessage, oParams);
};

var GError = function(sTitle, sMessage, oParams) {
    if (oParams == undefined) {
        oParams = {};
    }
    oParams.iType = GAlert.TYPE_ERROR;
    return GAlert(sTitle, sMessage, oParams);
};

var GMessage = function(sTitle, sMessage, oParams) {
    if (oParams == undefined) {
        oParams = {};
    }
    oParams.iType = GAlert.TYPE_MESSAGE;
    return GAlert(sTitle, sMessage, oParams);
};

var GPrompt = function(sTitle, fOnConfirm, oParams) {
    if (oParams == undefined) {
        oParams = {};
    }
    var sMessage = '<span class="field-text"><input type="text" class="prompt-value" value="' + ((oParams.sDefault == undefined) ? '' : oParams.sDefault) + '"/></span>';
    oParams = $.extend(true, {
        bAutoExpand: true,
        bNotRetractable: true,
        aoPossibilities: [
            {
                mLink: GEventHandler(function(eEvent) {
                    var sValue = $(this).closest('.message').find('input.prompt-value').val();
                    fOnConfirm.apply(this, [sValue]);
                }),
                sCaption: GMessageBar.Language.add
            },
            {
                mLink: GAlert.DestroyThis,
                sCaption: GMessageBar.Language.cancel
            }
        ]
    }, oParams);
    oParams.iType = GAlert.TYPE_PROMPT;
    return GAlert(sTitle, sMessage, oParams);
};

GAlert.Destroy = function(iAlertId) {
    if (GAlert.sp_dHandler != undefined) {
        GAlert.sp_dHandler.Destroy(iAlertId);
    }
};

GAlert.DestroyThis = function(eEvent) {
    GAlert.Destroy($(this));
};

GAlert.DestroyAll = function() {
    if (GAlert.sp_dHandler != undefined) {
        GAlert.sp_dHandler.DestroyAll();
    }
};

GAlert.Register = function() {
    return GAlert.s_iCounter++;
};

GAlert.sp_dHandler;
GAlert.s_iCounter = 0;

GAlert.TYPE_WARNING = 0;
GAlert.TYPE_ERROR = 1;
GAlert.TYPE_MESSAGE = 2;
GAlert.TYPE_PROMPT = 3;

/*
* CORE
*/

var oDefaults = {
	iCookieLifetime: 30,
	sDesignPath: '',
	iActiveView: null,
	aoViews:'',
	iActiveLanguage:1,
	aoLanguages:'',
	aoVatValues:'',
	sCurrentController: '',
	sCurrentAction: ''
};

GCore = function(oParams) {
	GCore.p_oParams = oParams;
	GCore.DESIGN_PATH = GCore.p_oParams.sDesignPath;
	GCore.iActiveView = GCore.p_oParams.iActiveView;
	GCore.aoViews = GCore.p_oParams.aoViews;
	GCore.iActiveLanguage = GCore.p_oParams.iActiveLanguage;
	GCore.aoLanguages = GCore.p_oParams.aoLanguages;
	GCore.aoVatValues = GCore.p_oParams.aoVatValues;
	GCore.sCurrentController = GCore.p_oParams.sCurrentController;
	GCore.sAdminUrl = GCore.p_oParams.sUrl;
	GCore.sCurrentAction = GCore.p_oParams.sCurrentAction;
	GCore.StartWaiting();
};


GCore.NULL = 'null';

GCore.s_afOnLoad = [];

GCore.GetArgumentsArray = function(oArguments) {
	var amArguments = [];
	for (var i = 0; i < oArguments.length; i++) {
		amArguments[i] = oArguments[i];
	}
	return amArguments;
};

GCore.Duplicate = function(oA, bDeep) {
	return $.extend((bDeep == true), {}, oA);
};

GCore.OnLoad = function(fTarget) {
	GCore.s_afOnLoad.push(fTarget);
};

GCore.Init = function() {
	for (var i = 0; i < GCore.s_afOnLoad.length; i++) {
		GCore.s_afOnLoad[i]();
	}
	$('#content').css('visibility', 'visible').children('.preloader').remove();
	GCore.StopWaiting();
};

GCore.ExtendClass = function(fBase, fChild, oDefaults) {
	var fExtended = function() {
		var aBaseArguments = [];
		for (var i = 0; i < arguments.length; i++) {
			aBaseArguments.push(arguments[i]);
		}
		var result = fBase.apply(this, aBaseArguments);
		if (result === false) {
			return result;
		}
		fChild.apply(this, arguments);
		this.m_oOptions = $.extend(true, GCore.Duplicate(oDefaults, true), arguments[0]);
		return this;
	};
	for(var i in fBase.prototype) {
		fExtended.prototype[i] = fBase.prototype[i];
	}
	return fExtended;
};

GCore.ObjectLength = function(oObject) {
	var iLength = 0;
	for (var i in oObject) {
		iLength++;
	}
	return iLength;
};

GCore.FilterObject = function(oSource, fTest) {
	var oResult = {};
	for (var i in oSource) {
		if (fTest(oSource[i])) {
			oResult[i] = GCore.Duplicate(oSource[i], true);
		}
	}
	return oResult;
};

GCore.GetIterationArray = function(oSource, fCompare) {
	var oSource = $.extend(true, {}, oSource);
	var aSource = [];
	for (var i in oSource) {
		aSource.push($.extend(true, {$$key: i}, oSource[i]));
	}
	aSource.sort(fCompare);
	var asIterationArray = [];
	for (var i = 0; i < aSource.length; i++) {
		asIterationArray.push(aSource[i]['$$key']);
	}
	return asIterationArray;
};

GCore.StartWaiting = function() {
	$('body').css({
		cursor: 'wait'
	});
};

GCore.StopWaiting = function() {
	$('body').css({
		cursor: 'auto'
	});
};


var GEventHandler = function(fHandler) {
	var fSafeHandler = function(eEvent) {
		try {
			if (eEvent.data) {
				for (var i in eEvent.data) {
					this[i] = eEvent.data[i];
				}
			}
			return fHandler.apply(this, arguments);
		}
		catch (xException) {
			GException.Handle(xException);
			return false;
		}
	};
	return fSafeHandler;
};

/*
 * GCookie
 */

GCookie = function(name, value, options) {
    if (typeof value != 'undefined') {
        options = options || {};
        if (value === null) {
            value = '';
            options.expires = -1;
        }
        var expires = '';
        if (options.expires && (typeof options.expires == 'number' || options.expires.toUTCString)) {
            var date;
            if (typeof options.expires == 'number') {
                date = new Date();
                date.setTime(date.getTime() + (options.expires * 24 * 60 * 60 * 1000));
            } else {
                date = options.expires;
            }
            expires = '; expires=' + date.toUTCString();
        }
        var path = options.path ? '; path=' + (options.path) : '';
        var domain = options.domain ? '; domain=' + (options.domain) : '';
        var secure = options.secure ? '; secure' : '';
        document.cookie = [name, '=', encodeURIComponent(value), expires, path, domain, secure].join('');
    } else {
        var cookieValue = null;
        if (document.cookie && document.cookie != '') {
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = jQuery.trim(cookies[i]);
                if (cookie.substring(0, name.length + 1) == (name + '=')) {
                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
};

/*
 * CACHE
 * For caching xajax requests.
 */

var GCache = function() {

    var gThis = this;

    this.m_oResponses;

    this._Constructor = function() {
        this.m_oResponses = {};
    };

    this.Execute = function(fHandler, oRequest, sCallback) {
        var sRequest = JSON.stringify(oRequest);
        if (this.m_oResponses[sRequest] != undefined) {
            gThis.ReturnResponse(sCallback, this.m_oResponses[sRequest]);
            return;
        }
        fHandler(oRequest, GCallback(this.SaveResponse, {
            sCallback: sCallback,
            sRequest: sRequest
        }));
    };

    this._CompareRequests = function(oA, oB) {
        for (var i in oA) {
            if (oA[i] != oB[i]) {
                return false;
            }
        }
        for (var j in oB) {
            if (oA[j] != oB[j]) {
                return false;
            }
        }
        return true;
    };

    this.ReturnResponse = function(sFunction, oResponse) {
        eval(sFunction + '(oResponse);');
    };

    this.SaveResponse = new GEventHandler(function(eEvent) {
        var sCallback = eEvent.sCallback;
        var sRequest = eEvent.sRequest;
        delete eEvent.sCallback;
        delete eEvent.sRequest;
        gThis.m_oResponses[sRequest] = eEvent;
        gThis.ReturnResponse(sCallback, eEvent);
    });

    this._Constructor();

};

/*
 * CALLBACK
 */

var GCallback = function(fHandler, oParams) {
    if (oParams == undefined) {
        oParams = {};
    }
    var i = GCallback.s_iReferenceCounter++;
    GCallback.s_aoReferences[i] = {
        fHandler: fHandler,
        oParams: oParams
    };
    GCallback['Trigger_' + i] = function() {
        GCallback.Invoke(i, GCore.GetArgumentsArray(arguments));
    };
    return 'GCallback.Trigger_' + i + '';
};

GCallback.s_iReferenceCounter = 0;
GCallback.s_aoReferences = {};

GCallback.Invoke = function(iReference, amArguments) {
    if (amArguments[0] == undefined) {
        amArguments[0] = {};
    }
    var oReference = GCallback.s_aoReferences[iReference];
    if (oReference != undefined) {
        oReference.fHandler.call(this, $.extend(oReference.oParams, amArguments[0]));
    }
    delete GCallback.s_aoReferences[iReference];
};

/*
 * EXCEPTION
 */

var GException = function(sMessage) {
    this.m_sMessage = sMessage;
    this.toString = function() {
        return this.m_sMessage;
    };
};

GException.Handle = function(xException) {
    new GAlert(GException.Language['exception_has_occured'], xException);
    throw xException; // for debugging
};


/*
 * PLUGIN
 */

var GPlugin = function(sPluginName, oDefaults, fPlugin) {

    (function($) {

        var oExtension = {};
        oExtension[sPluginName] = function(oOptions) {
            if ($(this).hasClass(sPluginName)) {
                return;
            }
            oOptions = $.extend(GCore.Duplicate(oDefaults), oOptions);
            return this.each(function() {
                this.m_oOptions = oOptions;
                this.m_iId = GPlugin.s_iCounter++;
                GPlugin.s_oInstances[this.m_iId] = this;
                this.m_oParams = {};
                this._GetClass = function(sClassName) {
                    var sClass = this.m_oOptions.oClasses['s' + sClassName + 'Class'];
                    if (sClass == undefined) {
                        return '';
                    }
                    else {
                        return sClass;
                    }
                };
                this._GetImage = function(sImageName) {
                    var sImage = this.m_oOptions.oImages['s' + sImageName];
                    if (sImage == undefined) {
                        return '';
                    }
                    else {
                        return GCore.DESIGN_PATH + sImage;
                    }
                };
                try {
                    if($(this).attr('class') != undefined){
                        var asParams = $(this).attr('class').match(/G\:\w+\=\S+/g);
                        if (asParams != undefined) {
                            for (var i = 0; i < asParams.length; i++) {
                                var asParamData = asParams[i].match(/G:(\w+)\=(\S+)/);
                                this.m_oParams[asParamData[1]] = asParamData[2];
                            }
                        }
                    }
                    $(this).addClass(sPluginName);
                    fPlugin.apply(this, [this.m_oOptions]);
                }
                catch(xException) {
                    throw xException;
                    GException.Handle(xException);
                }
            });
        };
        $.fn.extend(oExtension);
        fPlugin.GetInstance = GPlugin.GetInstance;

    })(jQuery);

};

GPlugin.s_iCounter = 0;
GPlugin.s_oInstances = {};

GPlugin.GetInstance = function(iId) {
    if (GPlugin.s_oInstances[iId] != undefined) {
        return GPlugin.s_oInstances[iId];
    }
    throw new GException('Requested instance (' + iId + ') not found.');
    return false;
};

/*
 * LINK
 */

var GLink = function(jA, mLink) {
    if (mLink instanceof Function) {
        jA.attr('href', '#');
        jA.click(function(eEvent) {
            mLink.apply(jA, [eEvent]);
            return false;
        });
    }
    else {
        jA.attr('href', mLink);
    }
};
/*
* BLOCK
* Adds rounded corners to a block.
*/

var oDefaults = {
	oClasses: {
		sNE: 'beginning-r',
		sNW: 'beginning-l',
		sSE: 'ending-r',
		sSW: 'ending-l'
	}
};

var GBlock = function() {
	
	var gThis = this;
	
	this._Constructor = function() {
		$(gThis).prepend('<div class="' + gThis.m_oOptions.oClasses.sNE + '"/>');
		$(gThis).prepend('<div class="' + gThis.m_oOptions.oClasses.sNW + '"/>');
		$(gThis).append('<div class="' + gThis.m_oOptions.oClasses.sSE + '"/>');
		$(gThis).append('<div class="' + gThis.m_oOptions.oClasses.sSW + '"/>');
	};
	
	gThis._Constructor();
	
};

new GPlugin('GBlock', oDefaults, GBlock);
/*
* BOX
* Adds a subtle shadow to a block.
*/

var oDefaults = {
	oClasses: {
		sN: 'beginning',
		sS: 'ending'
	}
};

var GBox = function() {
	
	var gThis = this;
	
	gThis._Constructor = function() {
		$(gThis).prepend('<div class="' + gThis.m_oOptions.oClasses.sN + '"/>');
		$(gThis).append('<div class="' + gThis.m_oOptions.oClasses.sS + '"/>');
	};
	
	gThis._Constructor();
	
};

new GPlugin('GBox', oDefaults, GBox);
/*
* CHART
* Chart
*/

var oDefaults = {
	oDefaultData: {
    	areaOpacity: 0.6,
    	colors: ['#33cccc', '#CC0000', '#FF7400', '#FF0084', '#4096EE', '#B02B2C', '#D15600', '#C3D9FF', '#CDEB8B', '#36393D'],
    	chartArea: {
        	left: 50,
        	top: 50,
        	height: 300,
        	width: 700,
        	backgroundColor: '#fbfbfb',
        },
        backgroundColor: {
            fill: '#fbfbfb',
        	stroke: '#ececec',
            strokeWidth: 3,
        },
    	width: 850, 
    	height: 400,
    	lineWidth: 3,
    	pointSize: 10,
    	vAxis: {
        	gridlines:{
        		color: '#ececec', 
        	}
        },
    	hAxis: {
        	gridlines:{
        		color: '#ececec', 
        	}
        },
        legend: {
        	position: 'top'
        },
	},
	sType: 'area',
	oParams: {},
	fSource: GCore.NULL,
};

var GChart = function() {
	
	var gThis = this;
	
	gThis._Constructor = function() {
		gThis.oOptions = $.extend(true, GCore.Duplicate(gThis.m_oOptions.oDefaultData, true), gThis.m_oOptions.oParams);
		gThis.Update();
		$(window).bind('hashchange', function() {
			gThis.Update();
		});
	};
	
	gThis.Update = function() {
		
		if(location.hash.length){
			var url = gThis.m_oOptions.fSource + ',' + location.hash.substr(1);
		}else{
			var url = gThis.m_oOptions.fSource;
		}
		var jsonData = $.ajax({
        	url: url,
          	dataType:"json",
          	async: false
		}).responseText;
		
		var data = new google.visualization.DataTable(jsonData);
		var sId = $(gThis).attr('id');
		if(gThis.m_oOptions.sType == 'area'){
			gThis.oChart = new google.visualization.AreaChart(document.getElementById(sId));
		}
		if(gThis.m_oOptions.sType == 'pie'){
			gThis.oChart = new google.visualization.PieChart(document.getElementById(sId));
		}
		gThis.oChart.draw(data, gThis.oOptions);
	};
	
	gThis._Constructor();
	
};

new GPlugin('GChart', oDefaults, GChart);
/*
* CLIENT ACTIVITY
*/

var oDefaults = {
	oClasses: {
		sButtonClass: 'button'
	},
	jClientId: $(),
	fSource: function() {},
	gProducts: GCore.NULL
};

var GClientActivity = function() {
	
	var gThis = this;
	
	gThis._Constructor = function() {
		gThis.m_oOptions.jClientId.change(GEventHandler(function(eEvent) {
			gThis.LoadActivities();
		}));
		gThis.LoadActivities();
	};
	
	gThis.LoadActivities = function() {
		gThis.m_oOptions.fSource({
			client: gThis.m_oOptions.jClientId.val()
		}, GCallback(gThis.OnActivitiesLoaded));
	};
	
	gThis.OnActivitiesLoaded = function(oData) {
		var aoActivities = oData.clientActivity;
		$(gThis).children('h3').nextAll().remove();
		for (var i = 0; i < aoActivities.length; i++) {
			if ((aoActivities[i].products == undefined) || !(aoActivities[i].products instanceof Array)) {
				aoActivities[i].products = [];
			}
			var jForm = $('<form action="" method="post"/>');
			var iProductsCount = aoActivities[i].products.length;
			jForm.append('<h4>' + aoActivities[i].name + ' <small>(' + iProductsCount + ')</small></h4>');
			var jUl = $('<ul/>');
			for (var j = 0; j < iProductsCount; j++) {
				jUl.append('<li><label><input type="checkbox" name="product[]" value="' + aoActivities[i].products[j].id + '"/> ' + aoActivities[i].products[j].name + '</label></li>');
			}
			jForm.append(jUl);
			jForm.append('<div class="' + gThis._GetClass('Button') + '"><input type="submit" value="' + GClientActivity.Language.add_to_order + '"/></div>');
			$(gThis).append(jForm);
			jForm.submit(GEventHandler(function(eEvent) {
				var jChecked = $(this).find('input:checked');
				var aIds = [];
				for (var i = 0; i < jChecked.length; i++) {
					aIds.push(jChecked.eq(i).attr('value'));
				}
				gThis.m_oOptions.gProducts.AddProducts(aIds);
				return false;
			}));
		}
	};
	
	gThis._Constructor();
	
};

new GPlugin('GClientActivity', oDefaults, GClientActivity);
/*
* COMBO BOX
* Select field with the ability to define custom values.
*/

var oDefaults = {
	oClasses: {
	},
	oFiles: {
		sIconExpand: '_images_frontend/icons/arrows/triangle-gray-down.png',
		sIconRetract: '_images_frontend/icons/arrows/triangle-gray-up.png'
	}
};

var GComboBox = function() {
	
	var gThis = this;
	
	gThis.m_jField;
	gThis.m_sDefaultValue;
	
	gThis.Update = function() {
		$(gThis).parent().find('.faux span').text($(gThis).find('option:selected').text()).attr('class', $(gThis).find('option:selected').attr('class') + ' ');
		gThis.m_jField.val($(gThis).find('option:selected').text()).attr('class', $(gThis).find('option:selected').attr('class') + ' ');
		return true;
	};
	
	this._Constructor = function() {
		$(gThis).parent().addClass('GComboBox');
		gThis.m_sDefaultValue = $(gThis).find('option:eq(0)').text();
		gThis.m_jField = $('<input type="text" value="' + $(gThis).find('option:selected').text() + '"/>');
		$(gThis).parent().find('select').css('opacity', 0);
		$(gThis).parent().append('<span class="faux"><span style="visibility: hidden;">' + $(gThis).find('option:selected').text() + '</span></span>');
		$(gThis).parent().append(gThis.m_jField);
		$(gThis).change(gThis.Update).change(function() {
			$(gThis).trigger('GChange');
		});
		$(gThis).add(gThis.m_jField).focus(function() {
			$(gThis).closest('.field').addClass('focus');
			return true;
		});
		$(gThis).add(gThis.m_jField).blur(function() {
			$(gThis).closest('.field').removeClass('focus');
			if ($(gThis).val() != '_new_') {
				$(gThis).find('option[value="_new_"]').remove();
			}
			return true;
		});
		gThis.m_jField.focus(function() {
			if ($(this).val() == gThis.m_sDefaultValue) {
				$(this).val('');
			}
		}).blur(function() {
			if (!$(this).val().length) {
				$(this).val(gThis.m_sDefaultValue);
			}
			$(gThis).find('option[value="_new_"]').remove();
			if ($(this).val() != gThis.m_sDefaultValue) {
				var jOption = $(gThis).find('option');
				var bFound = false;
				if($('.field-attribute-editor').length == 0){
					for (var i = 0; i < jOption.length; i++) {
						if (jOption.eq(i).text() == $(this).val()) {
							$(gThis).val(jOption.eq(i).attr('value'));
							bFound = true;
							break;
						}
					}
				}
				if (!bFound) {
					$(gThis).append('<option value="_new_">' + $(this).val() + '</option>').val('_new_');
				}
			}
			$(gThis).trigger('GChange');
		}).keydown(gThis.PreventEnter);
		gThis.Update();
	};
	
	gThis.PreventEnter = function(eEvent) {
		if (eEvent.keyCode == 13) {
			eEvent.preventDefault();
			eEvent.stopImmediatePropagation();
			$(this).blur().change();
			$(gThis).change();
		}
	};
	
	gThis._Constructor();
	
};

new GPlugin('GComboBox', oDefaults, GComboBox);
/*
* CONTENT LOADER
* AJAX-based remote content loader.
*/

var oDefaults = {
	oParams: {},
	sSource: '',
	oClasses: {
		sLoadingClass: 'preloader'
	}
};

var GContentLoader = function() {
	
	var gThis = this;
	
	gThis.m_jHolder;
	
	gThis._Constructor = function() {
		gThis.m_jHolder = $('<div/>');
		$(gThis).append($('<div class="' + gThis._GetClass('Loading') + '"/>').css('display', 'none').fadeIn(150));
		gThis.m_jHolder.load(gThis.m_oOptions.sSource, gThis.m_oOptions.oParams, gThis.Loaded);
	};
	
	gThis.Loaded = GEventHandler(function(eEvent) {	
		$(gThis).find('.' + gThis._GetClass('Loading')).stop(true, false).fadeOut(150, function() {
			$(gThis).empty().html(gThis.m_jHolder.html()).css('opacity', 0).animate({
				opacity: 1
			}, 150);
			$(gThis).find('.block').GBlock();
			$(gThis).find('.box').GBox();
			$(gThis).find('select').GSelect();
		});
	});
	
	gThis._Constructor();
	
};

new GPlugin('GContentLoader', oDefaults, GContentLoader);
/*
* MENU
*/

var GMENU_MODE_CLICK = 0;
var GMENU_MODE_DELAY = 1;
var GMENU_MODE_HOVER = 2;

var GMENU_FOLLOW = 1;
var GMENU_NOFOLLOW = 0;

var oDefaults = {
	oClasses: {
		sCustomizationClass: 'customization',
		sCustomizeClass: 'customize',
		sExpandableClass: 'expandable',
		sButtonClass: 'button',
		sCancelClass: 'cancel',
		sSaveClass: 'save',
		sActiveClass: 'active'
	},
	iDefaultMode: GMENU_MODE_HOVER,
	iDefaultDelay: 500,
	iDefaultFollow: GMENU_NOFOLLOW,
	sModeCookieName: 'gekosale-panel-menu-mode',
	sDelayCookieName: 'gekosale-panel-menu-delay',
	sFollowCookieName: 'gekosale-panel-menu-follow',
};

var GMenu = function() {
	
	var gThis = this;
	
	gThis.m_jCustomizationTrigger;
	gThis.m_jCustomization;
	
	gThis.m_iMode;
	gThis.m_iDelay;
	gThis.m_bCustomization;
	
	gThis._Constructor = function() {
		gThis.m_bCustomization = false;
		gThis._UpdateParams();
		$(gThis).find('li:has(ul)').mouseenter(gThis.OnMouseEnter).mouseleave(gThis.OnMouseLeave).children('ul').hide();
		$(gThis).find('li:has(ul)').children('a').click(gThis.OnMouseClick);
		$(gThis).find('li li:has(ul)').addClass(gThis.m_oOptions.oClasses.sExpandableClass);
		gThis._PrepareCustomization();
	};
	
	gThis._PrepareCustomization = function() {
		gThis.m_jCustomizationTrigger = $('<span class="' + gThis.m_oOptions.oClasses.sCustomizeClass + '" title="' + GMenu.Language.customize + '"/>');
		gThis.m_jCustomizationTrigger.click(gThis.OnExpandCustomization);
		gThis.m_jCustomization = $('<div class="' + gThis.m_oOptions.oClasses.sCustomizationClass + '"/>');
		gThis.m_jCustomization.append('<h3>' + GMenu.Language.choose_mode + '</h3>');
		gThis.m_jCustomization.append('<label><input type="radio" name="GMenu-' + gThis.m_iId + '-mode" value="' + GMENU_MODE_CLICK + '"/> ' + GMenu.Language.mode_click + '</label>');
		gThis.m_jCustomization.append('<label><input type="radio" name="GMenu-' + gThis.m_iId + '-mode" value="' + GMENU_MODE_HOVER + '"/> ' + GMenu.Language.mode_hover + '</label>');
		var jSaveTrigger = $('<a href="#" class="' + gThis.m_oOptions.oClasses.sButtonClass + '" title="' + GMenu.Language.save_desc + '"><span>' + GMenu.Language.save + '</span></a>');
		jSaveTrigger.click(gThis.OnSave);
		var jCancelTrigger = $('<a href="#" title="' + GMenu.Language.restore_default_desc + '"><span>' + GMenu.Language.restore_default + '</span></a>');
		jCancelTrigger.click(gThis.OnCancel);
		gThis.m_jCustomization.append($('<p class="' + gThis.m_oOptions.oClasses.sSaveClass + '"/>').append(jSaveTrigger));
		gThis.m_jCustomization.append($('<p class="' + gThis.m_oOptions.oClasses.sCancelClass + '"/>').append(jCancelTrigger));
		gThis.m_jCustomization.hide();
		$(gThis).after(gThis.m_jCustomization);
		$(gThis).after(gThis.m_jCustomizationTrigger);
	};
	
	gThis.OnMouseClick = new GEventHandler(function(eEvent) {
		if ((gThis.m_iMode == GMENU_MODE_DELAY) || (gThis.m_iMode == GMENU_MODE_CLICK)) {
			var jLi = $(this).closest('li');
			jLi.stop(true, false);
			gThis._ShowMenu(jLi);
		}
		return false;
	});
	
	gThis.OnMouseEnter = new GEventHandler(function(eEvent) {
		if (gThis.m_iMode == GMENU_MODE_HOVER) {
			gThis._ShowMenu($(this));
		}
		else if (gThis.m_iMode == GMENU_MODE_DELAY) {
			$(this).delay(gThis.m_iDelay, function() {
				gThis._ShowMenu($(this));
			});
		}
	});
	
	gThis.OnMouseLeave = new GEventHandler(function(eEvent) {
		$(this).stop(true, false);
		gThis._HideMenu($(this));
	});
	
	gThis._ShowMenu = function(jParent) {
		if (gThis.m_bCustomization) {
			return;
		}
		var jUl = jParent.find('ul:first');
		jUl.hide().stop(true, true);
		if (jParent.closest('ul').hasClass('GMenu')) {
			jUl.slideDown(150);
		}
		else {
			jUl.show('slide', {}, 150);
		}
	};
	
	gThis._HideMenu = function(jParent) {
		var jUl = jParent.find('ul:first');
		jUl.stop(true, true).fadeOut(50);
	};
	
	gThis._UpdateParams = function() {
		var sCookie;
		var bSave = false;
		sCookie = GCookie(gThis.m_oOptions.sModeCookieName);
		if ((sCookie == undefined) || (sCookie == '')) {
			gThis.m_iMode = parseInt(gThis.m_oOptions.iDefaultMode);
			bSave = true;
		}
		else {
			gThis.m_iMode = parseInt(sCookie);
		}
		sCookie = GCookie(gThis.m_oOptions.sDelayCookieName);
		if ((sCookie == undefined) || (sCookie == '')) {
			gThis.m_iDelay = parseInt(gThis.m_oOptions.iDefaultDelay);
			bSave = true;
		}
		else {
			gThis.m_iDelay = parseInt(sCookie);
		}
		if (bSave) {
			gThis._SaveParams();
		}
	};
	
	gThis._SaveParams = function() {
		GCookie(gThis.m_oOptions.sDelayCookieName, gThis.m_iDelay, {
			expires: GCore.p_oParams.iCookieLifetime
		});
		GCookie(gThis.m_oOptions.sModeCookieName, gThis.m_iMode, {
			expires: GCore.p_oParams.iCookieLifetime
		});
	};
	
	gThis.OnExpandCustomization = new GEventHandler(function(eEvent) {
		if (gThis.m_bCustomization) {
			gThis.OnRetractCustomization({});
			return false;
		}
		gThis.m_jCustomizationTrigger.addClass(gThis.m_oOptions.oClasses.sActiveClass);
		gThis.m_bCustomization = true;
		gThis.m_jCustomization.css('left', - gThis.m_jCustomization.width() + gThis.m_jCustomizationTrigger.offset().left - gThis.m_jCustomizationTrigger.parent().offset().left).slideDown(150);
		gThis.m_jCustomization.find('input[value="' + gThis.m_iMode + '"]').click();
		gThis.m_jCustomization.find('input[name="GMenu-' + gThis.m_iId + '-delay"]').val(gThis.m_iDelay);
	});
	
	gThis.OnRetractCustomization = new GEventHandler(function(eEvent) {
		if (!gThis.m_bCustomization) {
			return false;
		}
		gThis.m_jCustomizationTrigger.removeClass(gThis.m_oOptions.oClasses.sActiveClass);
		gThis.m_bCustomization = false;
		gThis.m_jCustomization.slideUp(100);
	});
	
	gThis.OnSave = new GEventHandler(function(eEvent) {
		gThis.m_iMode = gThis.m_jCustomization.find('input[type="radio"]:checked').val();
		gThis.m_iDelay = parseInt(gThis.m_jCustomization.find('input[name="GMenu-' + gThis.m_iId + '-delay"]').val());
		if (isNaN(gThis.m_iDelay)) {
			gThis.m_iDelay = gThis.m_oOptions.iDefaultDelay;
		}
		gThis._SaveParams();
		gThis.OnRetractCustomization({});
		return false;
	});
	
	gThis.OnCancel = new GEventHandler(function(eEvent) {
		GCookie(gThis.m_oOptions.sDelayCookieName, null);
		GCookie(gThis.m_oOptions.sModeCookieName, null);
		gThis.OnRetractCustomization({});
		gThis._UpdateParams();
		return false;
	});
	
	gThis._Constructor();
	
};

new GPlugin('GMenu', oDefaults, GMenu);
/*
* STICKY
*/

var oDefaults = {
};

var GSticky = function() {
	
	var gThis = this;
	
	gThis._Constructor = function() {
		gThis.m_jSticky = $(gThis);
		gThis.sStickyId = gThis.m_jSticky.attr('id');
		sCookie = GCookie(gThis.sStickyId);
		if(sCookie != undefined && sCookie){
			gThis.m_jSticky.hide();
		}
		
		if(GCore.sCurrentController == 'mainside'){
			setTimeout(function() {
				for(var i = 0; i < 2; i++) {
					gThis.m_jSticky.animate({opacity: 0.2}, 250, 'linear').animate({opacity: 1}, 250, 'linear');
				}
			}, 1500);
		}
		
		gThis.m_jSticky.find('.task-completed a').click(function(){
			gThis.m_jSticky.fadeOut('slow');
			GCookie(gThis.sStickyId, true, {
				expires: GCore.p_oParams.iCookieLifetime
			});
		});
	};
	
	gThis._Constructor();
	
};

new GPlugin('GSticky', oDefaults, GSticky);
/*
* MESSAGE BAR
*/

var oDefaults = {
	iMessagesToShow: 1,
	oClasses: {
		sMessageClass: 'message',
		sCaptionClass: 'caption',
		sContentClass: 'content',
		sContainerClass: 'layout-container',
		sOptionsClass: 'options',
		sRetractableClass: 'retractable',
		sExpandedClass: 'expanded',
		sTypeWarningClass: 'warning',
		sTypeErrorClass: 'error',
		sTypeMessageClass: 'message',
		sTypePromptClass: 'prompt'
	}
};

var GMessageBar = function() {

	var gThis = this;

	gThis.m_jBox;
	gThis.m_jHoax;
	gThis.m_ojMessages;
	gThis.m_iMargin;

	gThis._Constructor = function() {
		GAlert.sp_dHandler = gThis;
		gThis.m_jBox = $(gThis);
		gThis.m_ojMessages = {};
		gThis.m_jHoax = $('<div/>');
		gThis.m_jHoax.css({
			height: 0
		});
		gThis.m_jBox.before(gThis.m_jHoax);
		gThis.m_jBox.css({
			width: '100%',
			position: 'fixed',
			left: 0,
			top: 0,
			zIndex: 100,
			opacity: 1
		});
		gThis.m_iMargin = gThis.m_jHoax.offset().top;
		$(window).scroll(gThis._UpdateScroll);
		gThis._UpdateScroll();
		gThis._InitExistingMessages();
	};
	
	gThis._UpdateScroll = function(eEvent) {
		if (gThis.m_jHoax.css('display') != 'none') {
			gThis.m_iMargin = gThis.m_jHoax.offset().top;
		}
		if (($(document).scrollTop() < gThis.m_iMargin) || !$(gThis).find('.' + gThis._GetClass('Message')).length) {
			gThis.m_jBox.css({
				position: 'fixed',
				zIndex: 100
			});
			gThis.m_jHoax.css('display', 'none');
		}
		else {
			gThis.m_jBox.css({
				position: 'fixed',
				zIndex: 100
			});
			gThis.m_jHoax.css('display', 'block');
		}
	};
	
	gThis._UpdateHeight = function() {
		gThis.m_jHoax.css('height', gThis.m_jBox.height());
	};

	gThis._InitExistingMessages = function() {
		var jMessages = $(gThis).find('.' + gThis._GetClass('Message'));
		for (var i = 0; i < jMessages.length; i++) {
			var iAlertId = GAlert.Register();
			gThis.m_ojMessages[iAlertId] = jMessages.eq(i);
			gThis._InitMessage(jMessages.eq(i), iAlertId);
			gThis.ShowMessage(jMessages.eq(i));
		}
	};

	gThis._PrepareMessageDOM = function(sTitle, sMessage, oParams) {
		gThis.bAutoFocus = true;
		if (oParams.bAutoFocus == false) {
			gThis.bAutoFocus = false;
		}
		
		if (!oParams.bNoAutoFormatting) {
			sMessage = '<p>' + sMessage + '</p>';
		}
		var jMessage = $('<div class="' + gThis._GetClass('Message') + '"/>');
		var jContainer = $('<div class="' + gThis._GetClass('Container') + '"/>');
		switch (oParams.iType) {
			case GAlert.TYPE_MESSAGE:
				jMessage.addClass(gThis._GetClass('TypeMessage'));
				break;
			case GAlert.TYPE_ERROR:
				jMessage.addClass(gThis._GetClass('TypeError'));
				break;
			case GAlert.TYPE_PROMPT:
				jMessage.addClass(gThis._GetClass('TypePrompt'));
				break;
			default:
				jMessage.addClass(gThis._GetClass('TypeWarning'));
		}
		jContainer.append('<h3>' + sTitle + '</h3>');
		if (!oParams.aoPossibilities || !oParams.aoPossibilities.length) {
			oParams.aoPossibilities = [];
			oParams.aoPossibilities[0] = {
				mLink: GAlert.DestroyThis,
				sCaption: GMessageBar.Language.close_alert
			};
		}
		var jUl = $('<ul class="' + gThis._GetClass('Options') + '"/>');
		for (var i = 0; i < oParams.aoPossibilities.length; i++) {
			var jA = $('<a/>');
			jA.append(oParams.aoPossibilities[i].sCaption);
			GLink(jA, oParams.aoPossibilities[i].mLink);
			if (oParams.aoPossibilities[i].bHidden) {
				jA.css('display', 'none');
			}
			jUl.append($('<li/>').append(jA));
		}
		jContainer.append(jUl);
		jContainer.append('<div class="' + gThis._GetClass('Content') + '">' + sMessage + '</div>');
		jMessage.append(jContainer);
		if (!oParams.bNotRetractable) {
			jMessage.addClass(gThis._GetClass('Retractable'));
			oParams.bAutoExpand = true;
		}
		return jMessage;
	};

	gThis.RetractMessage = function(jMessage) {
		if (!jMessage.hasClass(gThis._GetClass('Retractable'))) {
			return;
		}
		jMessage.get(0).g_bExpanded = false;
		jMessage.removeClass(gThis._GetClass('Expanded'));
		jMessage.stop(true, false).find('.' + gThis._GetClass('Content') + ', .' + gThis._GetClass('Options') + ' li:not(:first-child)').stop(true, false).fadeOut(100, function() {
			jMessage.animate({
				height: jMessage.get(0).g_iRetractedHeight
			}, 150, function() {
				gThis._UpdateHeight();
			});
		});
	};

	gThis._InitMessage = function(jMessage, iAlertId) {
		jMessage.get(0).g_iAlertId = iAlertId;
		jMessage.get(0).g_iExpandedHeight = jMessage.height();
		jMessage.find('.' + gThis._GetClass('Content')).hide();
		jMessage.find('.' + gThis._GetClass('Options') + ' li:not(:first-child)').hide();
		jMessage.get(0).g_iRetractedHeight = jMessage.height();
		jMessage.get(0).g_bExpanded = false;
		jMessage.click(gThis.OnExpandMessage);
		jMessage.find('a').click(new GEventHandler(function(eEvent) {
			eEvent.stopPropagation();
			return true;
		}));
	};

	gThis.OnExpandMessage = new GEventHandler(function(eEvent) {
		if (this.g_bExpanded) {
			gThis.RetractMessage($(this));
		}
		else {
			gThis.ExpandMessage($(this));
		}
		return true;
	});

	gThis.ExpandMessage = function(jMessage) {
		jMessage.get(0).g_bExpanded = true;
		jMessage.addClass(gThis._GetClass('Expanded'));
		jMessage.stop(true, false).animate({
			height: jMessage.get(0).g_iExpandedHeight
		}, 150, function() {
			$(this).find('.' + gThis._GetClass('Content') + ', .' + gThis._GetClass('Options') + ' li:not(:first-child)').stop(true, false).fadeIn(100);
			gThis._UpdateHeight();
			if ($(this).find('input:text').length) {
				$(this).find('input:text:eq(0)').focus().keydown(GEventHandler(function(eEvent) {
					if (eEvent.keyCode == 13) {
						eEvent.preventDefault();
						eEvent.stopImmediatePropagation();
						jMessage.find('.' + gThis._GetClass('Options')).find('a:first').click();
					}
					if (eEvent.keyCode == 27) {
						eEvent.preventDefault();
						eEvent.stopImmediatePropagation();
						jMessage.find('.' + gThis._GetClass('Options')).find('a:last').click();
					}
				}));
			}else{
				if(gThis.bAutoFocus){
					$(this).find('a:first').focus().keydown(GEventHandler(function(eEvent) {
						if (eEvent.keyCode == 13) {
							eEvent.preventDefault();
							eEvent.stopImmediatePropagation();
							jMessage.find('.' + gThis._GetClass('Options')).find('a:first').click();
						}
						if (eEvent.keyCode == 27) {
							eEvent.preventDefault();
							eEvent.stopImmediatePropagation();
							jMessage.find('.' + gThis._GetClass('Options')).find('a:last').click();
						}
					}));
				}
				else{
					$(this).find('a:first').keydown(GEventHandler(function(eEvent) {
						if (eEvent.keyCode == 13) {
							eEvent.preventDefault();
							eEvent.stopImmediatePropagation();
							jMessage.find('.' + gThis._GetClass('Options')).find('a:first').click();
						}
						if (eEvent.keyCode == 27) {
							eEvent.preventDefault();
							eEvent.stopImmediatePropagation();
							jMessage.find('.' + gThis._GetClass('Options')).find('a:last').click();
						}
					}));
				}
				
			}
		});
	};

	gThis.ShowMessage = function(jMessage, bAutoExpand) {
		gThis._UpdateScroll();
		var iTime = 200;
		var nOpacity = .1;
		var jContainer = jMessage.children('.' + gThis._GetClass('Container'));
		jContainer.css('opacity', (document.documentMode == 8) ? '' : 0);
		jMessage.css('height', 0).animate({
			height: jMessage.get(0).g_iRetractedHeight
		}, iTime, function() {
			gThis._UpdateHeight();
			jContainer.animate({
				opacity: (document.documentMode == 8) ? '' : 1
			}, iTime, function() {
				if (bAutoExpand) {
					gThis.ExpandMessage($(this).closest('.' + gThis._GetClass('Message')));
					return;
				}
				gThis.UpdateStack();
				jContainer.animate({
					opacity: (document.documentMode == 8) ? '' : nOpacity
				}, iTime, function() {
					jContainer.animate({
						opacity: (document.documentMode == 8) ? '' : 1
					}, iTime, function() {
						jContainer.animate({
							opacity: (document.documentMode == 8) ? '' : nOpacity
						}, iTime, function() {
							jContainer.animate({
								opacity: (document.documentMode == 8) ? '' : 1
							}, iTime);
						});
					});
				});
			});
		});
	};

	gThis.Destroy = function(mAlert) {
		var iAlertId;
		var jMessage;
		if (!isNaN(mAlert)) {
			iAlertId = mAlert;
			jMessage = gThis.m_ojMessages[iAlertId];
		}
		else {
			if ((mAlert == undefined) || !(mAlert instanceof $)) {
				return;
			}
			jMessage = mAlert.closest('.' + gThis._GetClass('Message'));
			if (!jMessage.length) {
				return;
			}
			iAlertId = jMessage.get(0).g_iAlertId;
		}
		if ((jMessage == undefined) || !(jMessage instanceof $)) {
			return;
		}
		jMessage.stop(true, false).children('.' + gThis._GetClass('Container')).animate({
			opacity: (document.documentMode == 8) ? '' : 0
		}, 100, function() {
			jMessage.animate({
				height: 0
			}, 150, function() {
				jMessage.remove();
				delete gThis.m_ojMessages[iAlertId];
				gThis.UpdateStack();
				gThis._UpdateHeight();
			});
		});
	};
	
	gThis.DestroyAll = function() {
		for (var i in gThis.m_ojMessages) {
			gThis.Destroy(gThis.m_ojMessages[i]);
		}
	};

	gThis.Alert = function(sTitle, sMessage, oParams, iAlertId) {
		oParams = $.extend({}, oParams);
		var jMessage = gThis._PrepareMessageDOM(sTitle, sMessage, oParams);
		gThis.m_jBox.append(jMessage);
		gThis.m_ojMessages[iAlertId] = jMessage;
		gThis._InitMessage(jMessage, iAlertId);
		gThis.ShowMessage(jMessage, (oParams.bAutoExpand == true));
	};
	
	gThis.UpdateStack = function() {
		var jMessages = gThis.m_jBox.find('.' + gThis._GetClass('Message'));
		for (var i = 0; i < jMessages.length; i++) {
			if (jMessages.length - i > gThis.m_oOptions.iMessagesToShow) {
				jMessages.eq(i).css('display', 'none');
			}
			else {
				jMessages.eq(i).css('display', 'block');
			}
		}
	};

	gThis._Constructor();
};

new GPlugin('GMessageBar', oDefaults, GMessageBar);
/*
* OVERLAY
* Adds a customizable overlay that covers everything except the element that it's invoked for.
*/

var oDefaults = {
	oClasses: {
	},
	iZIndex: 1000,
	fClick: GCore.NULL,
	fOpacity: 0.0
};

var GOverlay = function() {
	
	var gThis = this;
	
	gThis.m_jOverlay;
	
	this._Constructor = function() {
		gThis.m_jOverlay = $('<div class="GOverlay"/>').css({
			display: 'block',
			position: 'absolute',
			left: 0,
			top: 0,
			width: $(document).width(),
			height: $(document).height(),
			zIndex: gThis.m_oOptions.iZIndex,
			opacity: gThis.m_oOptions.fOpacity,
			background: '#000'
		});
		$('body').append(gThis.m_jOverlay);
		$(gThis).css({
			zIndex: gThis.m_oOptions.iZIndex + 1
		});
		gThis.m_jOverlay.click(GEventHandler(function(eEvent) {
			var bResult = false;
			if (gThis.m_oOptions.fClick instanceof Function) {
				bResult = gThis.m_oOptions.fClick.apply(this, [eEvent]);
			}
			if (!bResult) {
				gThis.m_jOverlay.remove();
			}
			return false;
		}));
	};
	
	gThis._Constructor();
	
};

GOverlay.RemoveAll = function() {
	$('.GOverlay').remove();
};

new GPlugin('GOverlay', oDefaults, GOverlay);

/*
* QUICK ACCESS
*/

var oDefaults = {
	aoPossibilities: [],
	oClasses: {
		sExpandClass: 'expand',
		sExpandedClass: 'expanded',
		sActiveClass: 'active',
		sListClass: 'list',
		sPossibilitiesListClass: 'possibilities-list',
		sCustomizeClass: 'customize',
		sCustomizationClass: 'customization',
		sButtonClass: 'button',
		sCancelClass: 'cancel',
		sSaveClass: 'save',
		sAccessKeyClass: 'accesskey',
		sCaptionClass: 'caption',
		sHiddenClass: 'aural'
	},
	sCookieName: 'gekosale-panel-quick-access'
};

var GQuickAccess = function() {
	
	var gThis = this;
	
	gThis.m_jMainOption;
	gThis.m_jListTrigger;
	gThis.m_jCustomizationTrigger;
	gThis.m_jList;
	gThis.m_jCustomization;
	gThis.m_jPossibilitiesList;
	gThis.m_aList;
	gThis.m_aPossibilitiesList;
	
	gThis.m_bExpanded;
	gThis.m_bCustomization;
	
	gThis._Constructor = function() {
		gThis.m_bExpanded = false;
		gThis.m_bCustomization = false;
		gThis.m_aList = [];
		gThis.m_aPossibilitiesList = gThis.m_oOptions.aoPossibilities;
		gThis._PrepareDOM();
	};
	
	gThis._PrepareDOM = function() {
		gThis._PrepareList();
		gThis._PreparePossibilitiesList();
		gThis.m_jMainOption = $('<p/>');
		gThis.m_jList.before(gThis.m_jMainOption);
		gThis._UpdateMainOption();
		gThis.m_jListTrigger = $('<span class="' + gThis.m_oOptions.oClasses.sExpandClass + '" title="' + GQuickAccess.Language.show_list + '"/>');
		var fToggleClass = 
		gThis.m_jListTrigger.hover(function() {
			gThis.m_jMainOption.addClass(gThis.m_oOptions.oClasses.sActiveClass);
		}, function() {
			if (!gThis.m_bExpanded) {
				gThis.m_jMainOption.removeClass(gThis.m_oOptions.oClasses.sActiveClass);
			}
		}).mousedown(gThis.OnExpandList);
		$(gThis).mouseleave(gThis.OnRetractList);
		gThis.m_jMainOption.append(gThis.m_jListTrigger);
		gThis._RefreshAccessKeys();
	};
	
	gThis._SaveList = function() {
		GCookie(gThis.m_oOptions.sCookieName, gThis.m_aList.join(','), {
			expires: GCore.p_oParams.iCookieLifetime
		});
	};
	
	gThis._PrepareList = function() {
		var i;
		var sCookie = GCookie(gThis.m_oOptions.sCookieName);
		if ((sCookie == undefined) || (sCookie == '')) {
			gThis.m_aList = [];
			for (i = 0; i < gThis.m_aPossibilitiesList.length; i++) {
				if ((gThis.m_aPossibilitiesList[i] != undefined) && gThis.m_aPossibilitiesList[i].bDefault) {
					gThis.m_aList.push(i);
				}
			}
			gThis._SaveList();
		}
		else {
			gThis.m_aList = sCookie.split(',');
		}
		if (gThis.m_jList == undefined) {
			gThis.m_jList = $(gThis).find('ul:first').wrap('<div class="' + gThis.m_oOptions.oClasses.sListClass + '"/>').closest('div');
			gThis.m_jList.GShadow();
			gThis.m_jCustomizationTrigger = $('<span class="' + gThis.m_oOptions.oClasses.sCustomizeClass + '" title="' + GQuickAccess.Language.customize + '"/>');
			gThis.m_jCustomizationTrigger.click(gThis.OnExpandCustomization);
			gThis.m_jList.append(gThis.m_jCustomizationTrigger);
		}
		var jUl = gThis.m_jList.find('ul:first').empty();
		var aList = [];
		for (i = 0; i < gThis.m_aList.length; i++) {
			var oPossibility = gThis.m_aPossibilitiesList[gThis.m_aList[i]];
			if (oPossibility != undefined) {
				aList.push(gThis.m_aList[i]);
				var jA = $('<a rel="' + gThis.m_aList[i] + '"/>');
				GLink(jA, oPossibility.mLink);
				jA.append('<span class="' + gThis.m_oOptions.oClasses.sCaptionClass + '">' + oPossibility.sCaption + '</span>');
				jUl.append($('<li/>').append(jA));
			}
		}
	};
	
	gThis._PreparePossibilitiesList = function() {
		gThis.m_jPossibilitiesList = $('<div class="' + gThis.m_oOptions.oClasses.sPossibilitiesListClass + '"/>');
		var jUl = $('<ul/>');
		for (var i = 0; i < gThis.m_aPossibilitiesList.length; i++) {
			if (($.inArray(i, gThis.m_aList) == -1) && ($.inArray('' + i, gThis.m_aList) == -1)) {
				var oPossibility = gThis.m_aPossibilitiesList[i];
				var jA = $('<a rel="' + i + '"/>');
				GLink(jA, oPossibility.mLink);
				jA.append('<span class="' + gThis.m_oOptions.oClasses.sCaptionClass + '">' + oPossibility.sCaption + '</span>');
				jUl.append($('<li/>').append(jA));
			}
		}
		gThis.m_jPossibilitiesList.append(jUl);
		var jSaveTrigger = $('<a href="#" class="' + gThis.m_oOptions.oClasses.sButtonClass + '" title="' + GQuickAccess.Language.save_desc + '"><span>' + GQuickAccess.Language.save + '</span></a>');
		jSaveTrigger.click(gThis.OnSave);
		var jCancelTrigger = $('<a href="#" title="' + GQuickAccess.Language.restore_default_desc + '"><span>' + GQuickAccess.Language.restore_default + '</span></a>');
		jCancelTrigger.click(gThis.OnCancel);
		gThis.m_jPossibilitiesList.append($('<p class="' + gThis.m_oOptions.oClasses.sSaveClass + '"/>').append(jSaveTrigger));
		gThis.m_jPossibilitiesList.append($('<p class="' + gThis.m_oOptions.oClasses.sCancelClass + '"/>').append(jCancelTrigger));
		gThis.m_jPossibilitiesList.GShadow();
		$(gThis).append(gThis.m_jPossibilitiesList);
	};
	
	gThis.OnExpandList = new GEventHandler(function(eEvent) {
		gThis.m_bExpanded = true;
		gThis.m_jMainOption.addClass(gThis.m_oOptions.oClasses.sActiveClass);
		gThis.m_jList.css('display', 'none').removeClass(gThis.m_oOptions.oClasses.sHiddenClass).css('left', gThis.m_jMainOption.offset().left - gThis.m_jMainOption.parent().offset().left);
		gThis.m_jList.stop(true, true).slideDown(150);
		return false;
	});
	
	gThis.OnRetractList = new GEventHandler(function(eEvent) {
		if (gThis.m_bCustomization) {
			return;
		}
		gThis.m_bExpanded = false;
		gThis.m_jMainOption.removeClass(gThis.m_oOptions.oClasses.sActiveClass);
		gThis.m_jList.stop(true, true).slideUp(50, function() {
			$(this).css('display', 'block').addClass(gThis.m_oOptions.oClasses.sHiddenClass);
		});
	});
	
	gThis.OnExpandCustomization = new GEventHandler(function(eEvent) {
		if (gThis.m_bCustomization) {
			gThis.OnRetractCustomization({});
			return false;
		}
		gThis.m_bCustomization = true;
		$(gThis).addClass(gThis.m_oOptions.oClasses.sCustomizationClass);
		gThis.m_jList.find('ul:first').sortable({
			placeholder: 'placeholder',
			connectWith: '.' + gThis.m_oOptions.oClasses.sPossibilitiesListClass + ' ul',
			update: gThis.OnChange,
			start: gThis.OnDragStart
		});
		gThis.m_jPossibilitiesList.find('ul:first').sortable({
			placeholder: 'placeholder',
			connectWith: '.' + gThis.m_oOptions.oClasses.sListClass + ' ul',
			update: gThis.OnChange,
			start: gThis.OnDragStart
		});
		gThis.m_jList.find('li a').bind('click', GDoNothing);
		gThis.m_jPossibilitiesList.find('li a').bind('click', GDoNothing);
		gThis.m_jPossibilitiesList.css('left', gThis.m_jMainOption.offset().left - gThis.m_jMainOption.parent().offset().left + gThis.m_jList.width() + 1);
		gThis.m_jPossibilitiesList.slideDown(150);
	});
	
	gThis.OnRetractCustomization = new GEventHandler(function(eEvent) {
		if (!gThis.m_bCustomization) {
			return false;
		}
		gThis.m_bCustomization = false;
		gThis.m_jList.find('ul:first').sortable('destroy');
		gThis.m_jPossibilitiesList.find('ul:first').sortable('destroy');
		gThis.m_jPossibilitiesList.slideUp(50);
		$(gThis).removeClass(gThis.m_oOptions.oClasses.sCustomizationClass);
		gThis.m_jList.find('li a').unbind('click', GDoNothing);
		gThis.m_jPossibilitiesList.find('li a').unbind('click', GDoNothing);
	});
	
	gThis.OnChange = new GEventHandler(function(eEvent, oUi) {
		oUi.item.find('.' + gThis.m_oOptions.oClasses.sAccessKeyClass).remove();
		gThis._UpdateMainOption();
		gThis.m_aList = [];
		var jAs = gThis.m_jList.find('li a');
		for (var i = 0; i < jAs.length; i++) {
			gThis.m_aList.push(jAs.eq(i).attr('rel'));
		}
		gThis._RefreshAccessKeys();
	});
	
	gThis.OnSave = new GEventHandler(function(eEvent) {
		gThis._SaveList();
		gThis.OnRetractCustomization({});
		return false;
	});
	
	gThis.OnCancel = new GEventHandler(function(eEvent) {
		GCookie(gThis.m_oOptions.sCookieName, null);
		gThis.OnRetractCustomization({});
		gThis._PrepareList();
		gThis._PreparePossibilitiesList();
		gThis._UpdateMainOption();
		gThis._RefreshAccessKeys();
		return false;
	});
	
	gThis.OnDragStart = new GEventHandler(function(eEvent, oUi) {
		oUi.helper.find('.' + gThis.m_oOptions.oClasses.sAccessKeyClass).remove();
	});
	
	gThis._UpdateMainOption = function() {
		gThis.m_jMainOption.find('a').remove();
		var jA = gThis.m_jList.find('li:first a:first').clone().attr('accesskey', '');
		jA.find('.' + gThis.m_oOptions.oClasses.sAccessKeyClass).remove();
		gThis.m_jMainOption.prepend(jA);
	};
	
	gThis._RefreshAccessKeys = function() {
		gThis.m_jList.find('a').each(function(i) {
			$(this).find('.' + gThis.m_oOptions.oClasses.sAccessKeyClass).remove();
			if (i < 10) {
				$(this).attr('accesskey', i + 1).prepend('<span class="' + gThis.m_oOptions.oClasses.sAccessKeyClass + '" title="' + GQuickAccess.Language.accesskey + ': ' + (i + 1) + '">' + (i + 1) + '</span>');
			}
		});
	};
	
	gThis._Constructor();
	
};

new GPlugin('GQuickAccess', oDefaults, GQuickAccess);
/*
* SCROLLABLE TABS
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sContainerClass: 'container',
		sControlsClass: 'controls',
		sActiveClass: 'active'
	},
	oImages: {
		sLeft: 'images/icons/buttons/arrow-left-gray.png',
		sRight: 'images/icons/buttons/arrow-right-gray.png'
	}
};

var GScrollableTabs = function() {
	
	var gThis = this;
	
	gThis.m_jUl;
	gThis.m_jContainier;
	gThis.m_jControls;
	gThis.m_jNext;
	gThis.m_jPrevious;
	
	gThis.m_iContainerWidth;
	gThis.m_iUlWidth;
	
	gThis.Constructor = function() {
		gThis.m_jUl = $(gThis).find('ul');
		gThis.m_jUl.wrap('<div class="' + gThis._GetClass('Container') + '"/>');
		gThis.m_jContainier = gThis.m_jUl.parent();
		gThis.m_iContainerWidth = gThis.m_jContainier.width();
		gThis._UpdateWidth();
		if (gThis.m_iUlWidth > gThis.m_iContainerWidth) {
			gThis.m_jControls = $('<p class="' + gThis._GetClass('Controls') + '"/>');
			gThis.m_jNext = $('<a href="#"/>').append('<img src="' + gThis._GetImage('Right') + '" alt="' + GScrollableTabs.Language.next + '" title="' + GScrollableTabs.Language.next + '"/>');
			gThis.m_jPrevious = $('<a href="#"/>').append('<img src="' + gThis._GetImage('Left') + '" alt="' + GScrollableTabs.Language.previous + '" title="' + GScrollableTabs.Language.previous + '"/>');
			gThis.m_jControls.append(gThis.m_jPrevious).append(gThis.m_jNext);
			$(gThis).append(gThis.m_jControls);
		}
		gThis._InitializeEvents();
	};
	
	gThis._UpdateWidth = function() {
		gThis.m_jUl.css('width', 19000);
		var jLis = gThis.m_jUl.children('li');
		var iLisLength = jLis.length;
		var iWidth = 0;
		for (var i = 0; i < iLisLength; i++) {
			iWidth += jLis.eq(i).width() + 4;
		}
		gThis.m_jUl.css('width', iWidth);
		gThis.m_iUlWidth = iWidth;
	};
	
	gThis._InitializeEvents = function() {
		if (gThis.m_jNext != undefined) {
			gThis.m_jNext.click(function() {
				gThis.Right();
				return false;
			});
			gThis.m_jPrevious.click(function() {
				gThis.Left();
				return false;
			});
		}
		gThis.m_jUl.find('a').click(function() {
			GCore.StartWaiting();
			gThis.m_jUl.find('li').removeClass(gThis._GetClass('Active'));
			$(this).closest('li').addClass(gThis._GetClass('Active'));
			gThis._UpdateWidth();
			return true;
		});
	};
	
	gThis.Right = function() {
		
		var left = isNaN(parseInt(gThis.m_jUl.css('left'))) ? 0 : parseInt(gThis.m_jUl.css('left'));
		gThis.m_jUl.stop(true, true).animate({
			left: Math.max(- (gThis.m_iUlWidth - gThis.m_iContainerWidth), left - 250)
		}, 150);
	};
	
	gThis.Left = function() {
		gThis.m_jUl.stop(true, true).animate({
			left: Math.min(0, parseInt(gThis.m_jUl.css('left')) + 250)
		}, 150);
	};
	
	gThis.Constructor();
	
};

new GPlugin('GScrollableTabs', oDefaults, GScrollableTabs);
/*
* SELECT
* Beautiful select-field replacement.
*/

var oDefaults = {
	oClasses: {
		sFauxClass: 'faux'
	}
};

var GSelect = function() {

	var gThis = this;
	
	this._Constructor = function() {
		var dThis = this;
		
		if (this.bBeautifulized) {
			return;
		}
		this.bBeautifulized = true;

		this.Update = function() {
			$(dThis).parent().find('.faux span').text($(dThis).find('option:selected').text()).attr('class', $(dThis).find('option:selected').attr('class') + ' ');
			return true;
		};
		
		$(this).parent().find('select').css('opacity', 0);
		$(this).parent().append('<span class="faux"><span>' + $(this).find('option:selected').text() + '</span></span>');
		$(this).change(this.Update);
		$(this).focus(function() {
			$(this).closest('.field').addClass('focus');
			return true;
		});
		$(this).blur(function() {
			$(this).closest('.field').removeClass('focus');
			return true;
		});
		this.Update();
	};
	
	gThis._Constructor();
	
};

new GPlugin('GSelect', oDefaults, GSelect);
/*
* SHADOW
* Adds a nice shadow to the given element.
*/

var oDefaults = {
	oClasses: {
		sNE: 'shadow-ne',
		sSE: 'shadow-se',
		sSW: 'shadow-sw',
		sS: 'shadow-s',
		sE: 'shadow-e'
	}
};

var GShadow = function() {
	
	var gThis = this;
	
	this._Constructor = function() {
		$(gThis).append('<span class="' + gThis.m_oOptions.oClasses.sNE + '"/>');
		$(gThis).append('<span class="' + gThis.m_oOptions.oClasses.sSE + '"/>');
		$(gThis).append('<span class="' + gThis.m_oOptions.oClasses.sSW + '"/>');
		$(gThis).append('<span class="' + gThis.m_oOptions.oClasses.sS + '"/>');
		$(gThis).append('<span class="' + gThis.m_oOptions.oClasses.sE + '"/>');
	};
	
	gThis._Constructor();
	
};

new GPlugin('GShadow', oDefaults, GShadow);
/*
* TABS
*/

var oDefaults = {
	oClasses: {
		sBlockClass: 'block',
		sButtonClass: 'button',
		sButtonImageRightClass: 'right',
		sNavigationClass: 'navigation',
		sPreviousClass: 'previous',
		sNextClass: 'next',
		sInputWithImageClass: 'with-image',
		sActionsClass: 'actions',
		sTabbedClass: 'tabbed',
		sTabbedHorizontalClass: 'tabbed-horizontal'
	},
	oImages: {
		sArrowLeftGray: 'images/icons/buttons/arrow-left-gray.png',
		sArrowRightGreen: 'images/icons/buttons/arrow-right-green.png',
		sSave: 'images/icons/buttons/check.png'
	},
	iType: 0
};

var GTabs = function() {
	
	var gThis = this;
	
	this._Constructor = function() {
		gThis._PrepareDOM();
	};
	
	gThis._PrepareDOM = function() {
		var jPanels = $(gThis).children('fieldset');
		if (!jPanels.length) {
			return;
		}
		if (gThis.m_oOptions.iType == GTabs.TABS_HORIZONTAL) {
			$(gThis).addClass(gThis._GetClass('TabbedHorizontal'));
		}
		else {
			$(gThis).addClass(gThis._GetClass('Tabbed'));
		}
		var jTabs = $('<ul class="form-navigation"/>');
		var sLastId = '';
		for (var i = 0; i < jPanels.length; i++) {
			var jPanel = jPanels.eq(i);
			var sId = jPanel.attr('id');
			if (!sId.length) {
				sId = 'GTabs-auto-panel-' + GTabs.s_iId++;
			}
			jPanel.attr('id', '');
			var jWrapper = $('<div/>').attr('id', sId).addClass(gThis._GetClass('Block'));
			jPanel.replaceWith(jWrapper);
			jWrapper.append(jPanel);
			jWrapper.GBlock();
			jTabs.append('<li><a href="#' + sId + '">' + jPanel.find('legend span').eq(0).text() + '</a></li>');
			var jNavigation = $('<ul class="' + gThis._GetClass('Navigation') + '"/>');
			if (i > 0) {
				jNavigation.append('<li class="' + gThis._GetClass('Previous') + '"><a tabindex="-1" class="' + gThis._GetClass('Button') + '" href="#previous-tab"><span><img src="' + gThis._GetImage('ArrowLeftGray') + '" alt=""/>' + GForm.Language.previous + '</span></a></li>');
			}
			if (i < jPanels.length - 1) {
				var sNextId = jPanels.eq(i + 1).attr('id');
				if (!sNextId.length) {
					sNextId = 'GTabs-auto-panel-' + GTabs.s_iId;
				}
				jNavigation.append('<li class="' + gThis._GetClass('Next') + '"><a tabindex="-1" class="' + gThis._GetClass('Button') + ' next" href="#next-tab"><span><img class="' + gThis._GetClass('ButtonImageRight') + '" src="' + gThis._GetImage('ArrowRightGreen') + '" alt=""/>' + GForm.Language.next + '</span></a></li>');
			}
			else if ($(gThis).is('form')) {
				jNavigation.append('<li class="' + gThis._GetClass('Next') + '"><span class="' + gThis._GetClass('Button') + '"><span><img class="' + gThis._GetClass('ButtonImageRight') + '" src="' + gThis._GetImage('Save') + '" alt=""/><input type="submit" class="' + gThis._GetClass('InputWithImage') + '" value="' + GForm.Language.save + '"/></span></span></li>');
			}
			jPanel.append(jNavigation);
			sLastId = sId;
		}
		$(gThis).prepend(jTabs).tabs();
		var jAs = $(gThis).find('.navigation a');
		for (i = 0; i < jAs.length; i++) {
			jAs.eq(i).click(function() {
				$(gThis).tabs('select', $(this).attr('href'));
				return false;
			});
		}
		$(gThis).bind('tabsshow', function(eEvent, oUI) {
			$(oUI.panel).children('fieldset').triggerHandler('GFormShow');
		});
		gThis._SolveAllProblems();
		gThis._InitializeTabsEvents();
	};
	
	gThis._InitializeTabsEvents = function() {
		$('a[href="#previous-tab"]').bind('click', GEventHandler(function(eEvent) {
			var jPanel = $(eEvent.currentTarget).closest('.ui-tabs-panel');
			do {
				jPanel = jPanel.prev();
				if (!jPanel.length) {
					return false;
				}
			} while (jPanel.children('fieldset').css('display') == 'none');
			$(gThis).tabs('select', '#' + jPanel.attr('id'));
			eEvent.stopImmediatePropagation();
			return false;
		}));
		
		$('a[href="#next-tab"]').bind('click', GEventHandler(function(eEvent) {
			var jPanel = $(eEvent.currentTarget).closest('.ui-tabs-panel');
			do {
				jPanel = jPanel.next();
				if (!jPanel.length) {
					return false;
				}
			} while (jPanel.children('fieldset').css('display') == 'none');
			$(gThis).tabs('select', '#' + jPanel.attr('id'));
			eEvent.stopImmediatePropagation();
			return false;
		}));
	};
	
	gThis._SolveAllProblems = function() {
		$(gThis).css({
			opacity: 0,
			height: 0,
			overflow: 'hidden'
		}).tabs('add', '#a', '', 1).tabs('select', 1);
		
				setTimeout(function() {
					$(gThis).tabs('select', 0).tabs('remove', 1).wrap('<div style="clear: both;"/>').css('height', 'auto');
					$(gThis).parent().css('display', 'none').slideDown(350);
					$(gThis).css({
						opacity: 1,
						overflow: 'visible'
					});
				}, 10);
		
//		if(window.location.hash.length){
//			setTimeout(function() {
//				alert(window.location.hash);
//				$('.ui-tabs-nav a[href="'+ window.location.hash +'"]').click();
//			}, 100);
//		}
	};
	
	gThis._Constructor();
	
};

GTabs.TABS_VERTICAL = 0;
GTabs.TABS_HORIZONTAL = 1;

GTabs.s_iId = 0;

new GPlugin('GTabs', oDefaults, GTabs);
/*
* TOOLTIP
*/

var oDefaults = {
	bClickToHide: false,
	iPositionX: 0,
	iPositionY: 0,
	iOffsetX: -27,
	iOffsetY: -34,
	jContent: $('<div/>'),
	bAutoShow: false,
	oClasses: {
		sTooltipClass: 'tooltip',
		sNEClass: 'tooltip-ne',
		sSEClass: 'tooltip-se',
		sSWClass: 'tooltip-sw',
		sSClass: 'tooltip-s',
		sEClass: 'tooltip-e',
		sWClass: 'tooltip-w',
		sNWClass: 'tooltip-nw'
	}
};

var GTooltip = function() {
	
	var gThis = this;
	
	gThis.m_iHeight = 0;
	
	this._Constructor = function() {
		GTooltip.s_oTooltips[gThis.m_iId] = gThis;
		gThis._PrepareTooltip();
	};
	
	gThis._PrepareTooltip = function() {
		$(gThis).append(gThis.m_oOptions.jContent).css({
			position: 'absolute',
			left: 0,
			bottom: 0,
			zIndex: 1000,
			display: 'none'
		});
		$(gThis).append('<span class="' + gThis._GetClass('W') + '"/>');
		$(gThis).append('<span class="' + gThis._GetClass('NW') + '"/>');
		$(gThis).append('<span class="' + gThis._GetClass('NE') + '"/>');
		$(gThis).append('<span class="' + gThis._GetClass('SE') + '"/>');
		$(gThis).append('<span class="' + gThis._GetClass('SW') + '"/>');
		$(gThis).append('<span class="' + gThis._GetClass('S') + '"/>');
		$(gThis).append('<span class="' + gThis._GetClass('E') + '"/>');
		if (gThis.m_oOptions.bAutoShow) {
			gThis._ShowTooltip(gThis.m_oOptions.iPositionX, gThis.m_oOptions.iPositionY);
		}
	};
	
	gThis._ShowTooltip = function(iX, iY) {
		$('.GTooltip').not($(gThis)).each(function() {
			this._HideTooltip();
		});
		$(gThis).stop(true, true).css({
			left: iX + gThis.m_oOptions.iOffsetX,
			bottom: $('body').height() - (iY + gThis.m_oOptions.iOffsetY - gThis.m_iHeight)
		}).fadeIn(150);
	};
	
	gThis._HideTooltip = function() {
		$(gThis).stop(true, true).fadeOut(50, function() {
			$(this).remove();
		});
	};
	
	gThis._Constructor();
	
};

GTooltip.Create = function(oOptions) {
	var jTooltip = $('<div/>');
	$('body').append(jTooltip);
	jTooltip.GTooltip(oOptions);
	return jTooltip.get(0).m_iId;
};

GTooltip.ShowThumbForThis = GEventHandler(function(eEvent) {
	eEvent.stopImmediatePropagation();
	eEvent.preventDefault();
	var jTooltip = $('<div/>');
	jTooltip.append('<img src="' + $(this).attr('href') + '" alt=""/>');
	this.m_iTooltipId = GTooltip.Create({
		bClickToHide: true,
		iPositionX: eEvent.pageX,
		iPositionY: eEvent.pageY,
		jContent: jTooltip,
		bAutoShow: true
	});
	return false;
});

GTooltip.HideThumbForThis = GEventHandler(function(eEvent) {
	eEvent.stopImmediatePropagation();
	eEvent.preventDefault();
	if (GTooltip.s_oTooltips[this.m_iTooltipId] != undefined) {
		GTooltip.s_oTooltips[this.m_iTooltipId]._HideTooltip();
		delete GTooltip.s_oTooltips[this.m_iTooltipId];
	}
	return false;
});

GTooltip.ShowInfoForThis = GEventHandler(function(eEvent) {
	eEvent.stopImmediatePropagation();
	eEvent.preventDefault();
	var jTooltip = $('<div/>');
	jTooltip.append('<span>' + $(this).attr('title') + '</span>');
	this.m_iTooltipId = GTooltip.Create({
		bClickToHide: true,
		iPositionX: eEvent.pageX,
		iPositionY: eEvent.pageY,
		jContent: jTooltip,
		bAutoShow: true
	});
	return false;
});

GTooltip.HideInfoForThis = GEventHandler(function(eEvent) {
	eEvent.stopImmediatePropagation();
	eEvent.preventDefault();
	if (GTooltip.s_oTooltips[this.m_iTooltipId] != undefined) {
		GTooltip.s_oTooltips[this.m_iTooltipId]._HideTooltip();
		delete GTooltip.s_oTooltips[this.m_iTooltipId];
	}
	return false;
});

GTooltip.s_oTooltips = {};

new GPlugin('GTooltip', oDefaults, GTooltip);
/*
* HELP
*/

var GHelp = function() {
	
	var gThis = this;

	gThis.OnContentLoaded = GEventHandler(function(eEvent) {

		gThis.m_sContent.html(eEvent.sContent);
		gThis.bLoaded = true;
	});
	
	gThis._OnExpandHelp = GEventHandler(function(eEvent) {

		gThis.m_sContent.slideToggle('fast');
		
		if(gThis.bLoaded == false){
			
			xajax_getHelpForPage ({
				sController: GCore.sCurrentController,
				sAction: GCore.sCurrentAction
			}, GCallback(gThis.OnContentLoaded));
			
		}
		
		return false;
	});
	
	gThis.MakeHelpButton = function() {
		gThis.bLoaded = false;
		gThis.m_jLi = $('<li>');
		gThis.m_jA = $('<a class="button" href="#"/>');
		gThis.m_jA.append('<span><img src="'+GCore.DESIGN_PATH+'images/icons/buttons/help.png" alt=""/>' + GForm.Language.help + '</span>');
		gThis.m_jA.appendTo(gThis.m_jLi);	
		gThis.m_jLi.appendTo($('.possibilities'));
		gThis.m_jA.bind('click', gThis._OnExpandHelp);
		gThis.m_sContent = $('<div></div>').addClass('block').html('<p>Trwa wczytywanie pomocy...</p>');
		gThis.m_sContent.insertAfter($('.possibilities'));
		gThis.m_sContent.hide();
	};
	
	gThis.MakeHelpButton();
	
};

new GPlugin('GHelp', oDefaults, GHelp);
/*
* LOADING
* Adds a loading indicator for the desired DOM element.
*/

var oDefaults = {
	oClasses: {
	},
	sBackground: '#fff',
	fOpacity: .75,
	iZIndex: 1001
};

var GLoading = function() {
	
	var gThis = this;
	
	gThis.m_jOverlay;
	gThis.m_jIcon;
	
	gThis._Constructor = function() {
		gThis.m_jOverlay = $('<div class="GLoading"/>').css({
			display: 'block',
			position: 'absolute',
			left: $(gThis).offset().left,
			top: $(gThis).offset().top,
			width: $(gThis).width(),
			height: $(gThis).height(),
			zIndex: gThis.m_oOptions.iZIndex,
			opacity: 0,
			background: gThis.m_oOptions.sBackground
		});
		gThis.m_jIcon = $('<div class="GLoading_icon"/>').css({
			display: 'block',
			position: 'absolute',
			left: $(gThis).offset().left,
			top: $(gThis).offset().top,
			width: $(gThis).width(),
			height: $(gThis).height(),
			zIndex: gThis.m_oOptions.iZIndex,
			opacity: 0
		});
		$('body').append(gThis.m_jOverlay).append(gThis.m_jIcon);
		gThis.m_jOverlay.animate({
			duration: 500,
			opacity: gThis.m_oOptions.fOpacity
		});
		gThis.m_jIcon.animate({
			duration: 500,
			opacity: 1
		});
		$(gThis).resize(GEventHandler(function(eEvent) {
			gThis.m_jOverlay.css({
				width: $(gThis).width(),
				height: $(gThis).height()
			});
			gThis.m_jIcon.css({
				width: $(gThis).width(),
				height: $(gThis).height()
			});
		}));
	};
	
	gThis.StopLoading = function() {
		gThis.m_jOverlay.stop(true, true).animate({
			duration: 500,
			opacity: 0
		}, function() {
			$(this).remove();
		});
		gThis.m_jIcon.stop(true, true).animate({
			duration: 500,
			opacity: 0
		}, function() {
			$(this).remove();
		});
		$(gThis).removeClass('GLoading');
	};
	
	gThis._Constructor();
	
};

GLoading.Stop = function(jNode) {
	return jNode.get(0).StopLoading();
};

GLoading.RemoveAll = function() {
	$('.GLoading, GLoading_icon').remove();
};

new GPlugin('GLoading', oDefaults, GLoading);
/*
* SEARCH
* Live Search 
*/

var oDefaults = {
	oClasses: {
	},
	sBackground: '#fff',
	fOpacity: .75,
	iZIndex: 1001,
	iDuration: 200,
	sDefaultText: '',
	sPlaceholder: 'live-search-results'
};

var GSearch = function() {
	
	var gThis = this;
	gThis._Constructor = function() {
		gThis.m_oOptions.sViewUrl = GCore.sAdminUrl+'mainside/confirm/';
		gThis.m_jInput = $(this);
		gThis.sLastValue = gThis.m_jInput.val();
		gThis.m_jInput.attr('autocomplete','off');
		gThis.m_jLiveSearch = $('<div>').attr('id',gThis.m_oOptions.sPlaceholder).appendTo(document.body).hide().slideUp(0);
		$(document.body).click(function(event){
			var clicked = $(event.target);
			if(!(clicked.is('#'+gThis.m_oOptions.sPlaceholder) || clicked.parents('#' + gThis.m_oOptions.sPlaceholder).length || clicked.is('input'))){
				gThis.m_jLiveSearch.slideUp(gThis.m_oOptions.iDuration);
			}
		});
		gThis.OnFocus();
		gThis.OnBlur();
		gThis.OnClick();
		
		gThis.m_jInput.typeWatch({callback: function(){
			gThis.OnTypingFinished();
		}});
	};
	
	gThis.RepositionLiveSearch = function() {
		var liveSearchPaddingBorderHoriz = parseInt(gThis.m_jLiveSearch.css('paddingLeft'), 10) + parseInt(gThis.m_jLiveSearch.css('paddingRight'), 10) + parseInt(gThis.m_jLiveSearch.css('borderLeftWidth'), 10) + parseInt(gThis.m_jLiveSearch.css('borderRightWidth'), 10);
		var tmpOffset = gThis.m_jInput.offset();
		var inputDim = {
			left: tmpOffset.left,
			top: tmpOffset.top,
			width: gThis.m_jInput.outerWidth(),
			height: gThis.m_jInput.outerHeight()
		};
		
		inputDim.topPos = inputDim.top + inputDim.height;
		inputDim.totalWidth = inputDim.width - liveSearchPaddingBorderHoriz;

		gThis.m_jLiveSearch.css({
			position:	'absolute',
			left:	inputDim.left+'px',
			top:	inputDim.topPos+'px',
			width:	inputDim.totalWidth+'px'
		});
	};
	
	gThis.ShowLiveSearch = function() {
		gThis.RepositionLiveSearch();	
		$(window).unbind('resize', gThis.RepositionLiveSearch).bind('resize', gThis.RepositionLiveSearch);
		gThis.m_jLiveSearch.slideDown(gThis.m_oOptions.iDuration);
	};
	
	gThis.HideLiveSearch = function() {
		gThis.m_jLiveSearch.slideUp(gThis.m_oOptions.iDuration);
	};
	
	gThis.OnFocus = function() {
		gThis.m_jInput.focus(function() {
			if(gThis.m_jInput.val() == gThis.m_oOptions.sDefaultText) $(this).val("");
		});
		if (gThis.m_jInput.val() != ''){
			if (gThis.m_jLiveSearch.html() == ''){
				gThis.sLastValue = '';
				gThis.m_jInput.keyup();
			}else{
				setTimeout(gThis.ShowLiveSearch(),1);
			}
		}
	};
	
	gThis.OnClick = function() {
		gThis.m_jInput.click(function(){
			if(gThis.m_jLiveSearch.html() != '') {
				setTimeout(gThis.ShowLiveSearch(),1);
			}	
		});
	};
	
	gThis.OnBlur = function() {
		gThis.m_jInput.blur(function() {
			if(gThis.m_jInput.val() == '') $(this).val(gThis.m_oOptions.sDefaultText);
		});
		if(gThis.m_jLiveSearch.html() != ''){
			gThis.ShowLiveSearch();
		}
	};
	
	gThis.OnTypingFinished = function() {
		if(gThis.sLastValue != gThis.m_jInput.val() && gThis.m_jInput.val() != '' && gThis.m_jInput.val() != gThis.m_oOptions.sDefaultText && gThis.m_jInput.val().length > 2){
			gThis.LoadResults();
		}
	};
	
	gThis.LoadResults = function() {
		gThis.sLastValue = gThis.m_jInput.val();
		$.get(gThis.m_oOptions.sViewUrl + Base64.encode(gThis.m_jInput.val()), function (data){
			if (data.length && gThis.sLastValue.length) {
				gThis.m_jLiveSearch.html(data);
				gThis.ShowLiveSearch();
			}else{
				gThis.HideLiveSearch();
			}
		});
	};
	
	gThis._Constructor();
	
};

new GPlugin('GSearch', oDefaults, GSearch);
/*
 * ALERT
 */

var GAlert = function(sTitle, sMessage, oParams) {
    if (sMessage == undefined) {
        sMessage = '';
    }
    var iAlertId = GAlert.Register();
    if (GAlert.sp_dHandler != undefined) {
        GAlert.sp_dHandler.Alert(sTitle, sMessage, oParams, iAlertId);
    }
    else {
        alert(sTitle + '\n' + sMessage);
    }
    return iAlertId;
};

var GWarning = function(sTitle, sMessage, oParams) {
    if (oParams == undefined) {
        oParams = {};
    }
    oParams.iType = GAlert.TYPE_WARNING;
    return GAlert(sTitle, sMessage, oParams);
};

var GError = function(sTitle, sMessage, oParams) {
    if (oParams == undefined) {
        oParams = {};
    }
    oParams.iType = GAlert.TYPE_ERROR;
    return GAlert(sTitle, sMessage, oParams);
};

var GMessage = function(sTitle, sMessage, oParams) {
    if (oParams == undefined) {
        oParams = {};
    }
    oParams.iType = GAlert.TYPE_MESSAGE;
    return GAlert(sTitle, sMessage, oParams);
};

var GNotification = function(sMessage, oParams){
	if (oParams == undefined) {
        oParams = {};
    }

	oParams.life 		= 2500;
	oParams.corners 	= 0;
	oParams.sticky	 	= false;
	oParams.position 	= 'bottom-right';

	return $.jGrowl(sMessage, oParams);
};

var GPrompt = function(sTitle, fOnConfirm, oParams) {
    if (oParams == undefined) {
        oParams = {};
    }
    var sMessage = '<span class="field-text"><input type="text" class="prompt-value" value="' + ((oParams.sDefault == undefined) ? '' : oParams.sDefault) + '"/></span>';
    oParams = $.extend(true, {
        bAutoExpand: true,
        bNotRetractable: true,
        aoPossibilities: [
            {
                mLink: GEventHandler(function(eEvent) {
                    var sValue = $(this).closest('.message').find('input.prompt-value').val();
                    fOnConfirm.apply(this, [sValue]);
                }),
                sCaption: GMessageBar.Language.add
            },
            {
                mLink: GAlert.DestroyThis,
                sCaption: GMessageBar.Language.cancel
            }
        ]
    }, oParams);
    oParams.iType = GAlert.TYPE_PROMPT;
    return GAlert(sTitle, sMessage, oParams);
};

GAlert.Destroy = function(iAlertId) {
    if (GAlert.sp_dHandler != undefined) {
        GAlert.sp_dHandler.Destroy(iAlertId);
    }
};

GAlert.DestroyThis = function(eEvent) {
    GAlert.Destroy($(this));
};

GAlert.DestroyAll = function() {
    if (GAlert.sp_dHandler != undefined) {
        GAlert.sp_dHandler.DestroyAll();
    }
};

GAlert.Register = function() {
    return GAlert.s_iCounter++;
};

GAlert.sp_dHandler;
GAlert.s_iCounter = 0;

GAlert.TYPE_WARNING = 0;
GAlert.TYPE_ERROR = 1;
GAlert.TYPE_MESSAGE = 2;
GAlert.TYPE_PROMPT = 3;

/*
* CORE
*/

var oDefaults = {
	iCookieLifetime: 30,
	sDesignPath: '',
	iActiveView: null,
	aoViews:'',
	iActiveLanguage:1,
	aoLanguages:'',
	aoVatValues:'',
	sCurrentController: '',
	sCurrentAction: ''
};

GCore = function(oParams) {
	GCore.p_oParams = oParams;
	GCore.DESIGN_PATH = GCore.p_oParams.sDesignPath;
	GCore.iActiveView = GCore.p_oParams.iActiveView;
	GCore.aoViews = GCore.p_oParams.aoViews;
	GCore.iActiveLanguage = GCore.p_oParams.iActiveLanguage;
	GCore.aoLanguages = GCore.p_oParams.aoLanguages;
	GCore.aoVatValues = GCore.p_oParams.aoVatValues;
	GCore.sCurrentController = GCore.p_oParams.sCurrentController;
	GCore.sAdminUrl = GCore.p_oParams.sUrl;
	GCore.sCurrentAction = GCore.p_oParams.sCurrentAction;
	GCore.StartWaiting();
};

GCore.NULL = 'null';

GCore.s_afOnLoad = [];

GCore.GetArgumentsArray = function(oArguments) {
	var amArguments = [];
	for (var i = 0; i < oArguments.length; i++) {
		amArguments[i] = oArguments[i];
	}
	return amArguments;
};

GCore.Duplicate = function(oA, bDeep) {
	return $.extend((bDeep == true), {}, oA);
};

GCore.OnLoad = function(fTarget) {
	GCore.s_afOnLoad.push(fTarget);
};

GCore.Init = function() {
	for (var i = 0; i < GCore.s_afOnLoad.length; i++) {
		GCore.s_afOnLoad[i]();
	}
	$('#content').css('visibility', 'visible').children('.preloader').remove();
	GCore.StopWaiting();
};

GCore.ExtendClass = function(fBase, fChild, oDefaults) {
	var fExtended = function() {
		var aBaseArguments = [];
		for (var i = 0; i < arguments.length; i++) {
			aBaseArguments.push(arguments[i]);
		}
		var result = fBase.apply(this, aBaseArguments);
		if (result === false) {
			return result;
		}
		fChild.apply(this, arguments);
		this.m_oOptions = $.extend(true, GCore.Duplicate(oDefaults, true), arguments[0]);
		return this;
	};
	for(var i in fBase.prototype) {
		fExtended.prototype[i] = fBase.prototype[i];
	}
	return fExtended;
};

GCore.ObjectLength = function(oObject) {
	var iLength = 0;
	for (var i in oObject) {
		iLength++;
	}
	return iLength;
};

GCore.FilterObject = function(oSource, fTest) {
	var oResult = {};
	for (var i in oSource) {
		if (fTest(oSource[i])) {
			oResult[i] = GCore.Duplicate(oSource[i], true);
		}
	}
	return oResult;
};

GCore.GetIterationArray = function(oSource, fCompare) {
	var oSource = $.extend(true, {}, oSource);
	var aSource = [];
	for (var i in oSource) {
		aSource.push($.extend(true, {$$key: i}, oSource[i]));
	}
	aSource.sort(fCompare);
	var asIterationArray = [];
	for (var i = 0; i < aSource.length; i++) {
		asIterationArray.push(aSource[i]['$$key']);
	}
	return asIterationArray;
};

GCore.StartWaiting = function() {
	$('body').css({
		cursor: 'wait'
	});
};

GCore.StopWaiting = function() {
	$('body').css({
		cursor: 'auto'
	});
};


var GEventHandler = function(fHandler) {
	var fSafeHandler = function(eEvent) {
		try {
			if (eEvent.data) {
				for (var i in eEvent.data) {
					this[i] = eEvent.data[i];
				}
			}
			return fHandler.apply(this, arguments);
		}
		catch (xException) {
			GException.Handle(xException);
			return false;
		}
	};
	return fSafeHandler;
};

/*
 * GCookie
 */

GCookie = function(name, value, options) {
    if (typeof value != 'undefined') {
        options = options || {};
        if (value === null) {
            value = '';
            options.expires = -1;
        }
        var expires = '';
        if (options.expires && (typeof options.expires == 'number' || options.expires.toUTCString)) {
            var date;
            if (typeof options.expires == 'number') {
                date = new Date();
                date.setTime(date.getTime() + (options.expires * 24 * 60 * 60 * 1000));
            } else {
                date = options.expires;
            }
            expires = '; expires=' + date.toUTCString();
        }
        var path = options.path ? '; path=' + (options.path) : '';
        var domain = options.domain ? '; domain=' + (options.domain) : '';
        var secure = options.secure ? '; secure' : '';
        document.cookie = [name, '=', encodeURIComponent(value), expires, path, domain, secure].join('');
    } else {
        var cookieValue = null;
        if (document.cookie && document.cookie != '') {
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = jQuery.trim(cookies[i]);
                if (cookie.substring(0, name.length + 1) == (name + '=')) {
                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
};

/*
 * CACHE
 * For caching xajax requests.
 */

var GCache = function() {

    var gThis = this;

    this.m_oResponses;

    this._Constructor = function() {
        this.m_oResponses = {};
    };

    this.Execute = function(fHandler, oRequest, sCallback) {
        var sRequest = JSON.stringify(oRequest);
        if (this.m_oResponses[sRequest] != undefined) {
            gThis.ReturnResponse(sCallback, this.m_oResponses[sRequest]);
            return;
        }
        fHandler(oRequest, GCallback(this.SaveResponse, {
            sCallback: sCallback,
            sRequest: sRequest
        }));
    };

    this._CompareRequests = function(oA, oB) {
        for (var i in oA) {
            if (oA[i] != oB[i]) {
                return false;
            }
        }
        for (var j in oB) {
            if (oA[j] != oB[j]) {
                return false;
            }
        }
        return true;
    };

    this.ReturnResponse = function(sFunction, oResponse) {
        eval(sFunction + '(oResponse);');
    };

    this.SaveResponse = new GEventHandler(function(eEvent) {
        var sCallback = eEvent.sCallback;
        var sRequest = eEvent.sRequest;
        delete eEvent.sCallback;
        delete eEvent.sRequest;
        gThis.m_oResponses[sRequest] = eEvent;
        gThis.ReturnResponse(sCallback, eEvent);
    });

    this._Constructor();

};

/*
 * CALLBACK
 */

var GCallback = function(fHandler, oParams) {
    if (oParams == undefined) {
        oParams = {};
    }
    var i = GCallback.s_iReferenceCounter++;
    GCallback.s_aoReferences[i] = {
        fHandler: fHandler,
        oParams: oParams
    };
    GCallback['Trigger_' + i] = function() {
        GCallback.Invoke(i, GCore.GetArgumentsArray(arguments));
    };
    return 'GCallback.Trigger_' + i + '';
};

GCallback.s_iReferenceCounter = 0;
GCallback.s_aoReferences = {};

GCallback.Invoke = function(iReference, amArguments) {
    if (amArguments[0] == undefined) {
        amArguments[0] = {};
    }
    var oReference = GCallback.s_aoReferences[iReference];
    if (oReference != undefined) {
        oReference.fHandler.call(this, $.extend(oReference.oParams, amArguments[0]));
    }
    delete GCallback.s_aoReferences[iReference];
};

/*
 * EXCEPTION
 */

var GException = function(sMessage) {
    this.m_sMessage = sMessage;
    this.toString = function() {
        return this.m_sMessage;
    };
};

GException.Handle = function(xException) {
    new GAlert(GException.Language['exception_has_occured'], xException);
    throw xException; // for debugging
};

var GTranslation = function(sMessage) {
    return Translator.trans(sMessage, {}, 'wellcommerce');
};

/*
 * PLUGIN
 */

var GPlugin = function(sPluginName, oDefaults, fPlugin) {

    (function($) {

        var oExtension = {};
        oExtension[sPluginName] = function(oOptions) {
            if ($(this).hasClass(sPluginName)) {
                return;
            }
            oOptions = $.extend(GCore.Duplicate(oDefaults), oOptions);
            return this.each(function() {
                this.m_oOptions = oOptions;
                this.m_iId = GPlugin.s_iCounter++;
                GPlugin.s_oInstances[this.m_iId] = this;
                this.m_oParams = {};
                this._GetClass = function(sClassName) {
                    var sClass = this.m_oOptions.oClasses['s' + sClassName + 'Class'];
                    if (sClass == undefined) {
                        return '';
                    }
                    else {
                        return sClass;
                    }
                };
                this._GetImage = function(sImageName) {
                    var sImage = this.m_oOptions.oImages['s' + sImageName];
                    if (sImage == undefined) {
                        return '';
                    }
                    else {
                        return GCore.DESIGN_PATH + sImage;
                    }
                };
                try {
                    if($(this).attr('class') != undefined){
                        var asParams = $(this).attr('class').match(/G\:\w+\=\S+/g);
                        if (asParams != undefined) {
                            for (var i = 0; i < asParams.length; i++) {
                                var asParamData = asParams[i].match(/G:(\w+)\=(\S+)/);
                                this.m_oParams[asParamData[1]] = asParamData[2];
                            }
                        }
                    }
                    $(this).addClass(sPluginName);
                    fPlugin.apply(this, [this.m_oOptions]);
                }
                catch(xException) {
                    throw xException;
                    GException.Handle(xException);
                }
            });
        };
        $.fn.extend(oExtension);
        fPlugin.GetInstance = GPlugin.GetInstance;

    })(jQuery);
};

GPlugin.s_iCounter = 0;
GPlugin.s_oInstances = {};

GPlugin.GetInstance = function(iId) {
    if (GPlugin.s_oInstances[iId] != undefined) {
        return GPlugin.s_oInstances[iId];
    }
    throw new GException('Requested instance (' + iId + ') not found.');
    return false;
};

/*
 * LINK
 */

var GLink = function(jA, mLink) {
    if (mLink instanceof Function) {
        jA.attr('href', '#');
        jA.click(function(eEvent) {
            mLink.apply(jA, [eEvent]);
            return false;
        });
    }
    else {
        jA.attr('href', mLink);
    }
};
/*
* BLOCK
* Adds rounded corners to a block.
*/

var oDefaults = {
	oClasses: {
		sNE: 'beginning-r',
		sNW: 'beginning-l',
		sSE: 'ending-r',
		sSW: 'ending-l'
	}
};

var GBlock = function() {

	var gThis = this;

	this._Constructor = function() {
		$(gThis).prepend('<div class="' + gThis.m_oOptions.oClasses.sNE + '"/>');
		$(gThis).prepend('<div class="' + gThis.m_oOptions.oClasses.sNW + '"/>');
		$(gThis).append('<div class="' + gThis.m_oOptions.oClasses.sSE + '"/>');
		$(gThis).append('<div class="' + gThis.m_oOptions.oClasses.sSW + '"/>');
	};

	gThis._Constructor();

};

new GPlugin('GBlock', oDefaults, GBlock);
/*
* BOX
* Adds a subtle shadow to a block.
*/

var oDefaults = {
	oClasses: {
		sN: 'beginning',
		sS: 'ending'
	}
};

var GBox = function() {

	var gThis = this;

	gThis._Constructor = function() {
		$(gThis).prepend('<div class="' + gThis.m_oOptions.oClasses.sN + '"/>');
		$(gThis).append('<div class="' + gThis.m_oOptions.oClasses.sS + '"/>');
	};

	gThis._Constructor();

};

new GPlugin('GBox', oDefaults, GBox);
/*
* CHART
* Chart
*/

var oDefaults = {
	oDefaultData: {
    	areaOpacity: 0.6,
    	colors: ['#33cccc', '#CC0000', '#FF7400', '#FF0084', '#4096EE', '#B02B2C', '#D15600', '#C3D9FF', '#CDEB8B', '#36393D'],
    	chartArea: {
        	left: 50,
        	top: 50,
        	height: 300,
        	width: 700,
        	backgroundColor: '#fbfbfb',
        },
        backgroundColor: {
            fill: '#fbfbfb',
        	stroke: '#ececec',
            strokeWidth: 3,
        },
    	width: 850,
    	height: 400,
    	lineWidth: 3,
    	pointSize: 10,
    	vAxis: {
        	gridlines:{
        		color: '#ececec',
        	}
        },
    	hAxis: {
        	gridlines:{
        		color: '#ececec',
        	}
        },
        legend: {
        	position: 'top'
        },
	},
	sType: 'area',
	oParams: {},
	fSource: GCore.NULL,
};

var GChart = function() {

	var gThis = this;

	gThis._Constructor = function() {
		gThis.oOptions = $.extend(true, GCore.Duplicate(gThis.m_oOptions.oDefaultData, true), gThis.m_oOptions.oParams);
		gThis.Update();
		$(window).bind('hashchange', function() {
			gThis.Update();
		});
	};

	gThis.Update = function() {

		if(location.hash.length){
			var url = gThis.m_oOptions.fSource + ',' + location.hash.substr(1);
		}else{
			var url = gThis.m_oOptions.fSource;
		}
		var jsonData = $.ajax({
        	url: url,
          	dataType:"json",
          	async: false
		}).responseText;

		var data = new google.visualization.DataTable(jsonData);
		var sId = $(gThis).attr('id');
		if(gThis.m_oOptions.sType == 'area'){
			gThis.oChart = new google.visualization.AreaChart(document.getElementById(sId));
		}
		if(gThis.m_oOptions.sType == 'pie'){
			gThis.oChart = new google.visualization.PieChart(document.getElementById(sId));
		}
		gThis.oChart.draw(data, gThis.oOptions);
	};

	gThis._Constructor();

};

new GPlugin('GChart', oDefaults, GChart);
/*
* CLIENT ACTIVITY
*/

var oDefaults = {
	oClasses: {
		sButtonClass: 'button'
	},
	jClientId: $(),
	fSource: function() {},
	gProducts: GCore.NULL
};

var GClientActivity = function() {

	var gThis = this;

	gThis._Constructor = function() {
		gThis.m_oOptions.jClientId.change(GEventHandler(function(eEvent) {
			gThis.LoadActivities();
		}));
		gThis.LoadActivities();
	};

	gThis.LoadActivities = function() {
		gThis.m_oOptions.fSource({
			client: gThis.m_oOptions.jClientId.val()
		}, GCallback(gThis.OnActivitiesLoaded));
	};

	gThis.OnActivitiesLoaded = function(oData) {
		var aoActivities = oData.clientActivity;
		$(gThis).children('h3').nextAll().remove();
		for (var i = 0; i < aoActivities.length; i++) {
			if ((aoActivities[i].products == undefined) || !(aoActivities[i].products instanceof Array)) {
				aoActivities[i].products = [];
			}
			var jForm = $('<form action="" method="post"/>');
			var iProductsCount = aoActivities[i].products.length;
			jForm.append('<h4>' + aoActivities[i].name + ' <small>(' + iProductsCount + ')</small></h4>');
			var jUl = $('<ul/>');
			for (var j = 0; j < iProductsCount; j++) {
				jUl.append('<li><label><input type="checkbox" name="product[]" value="' + aoActivities[i].products[j].id + '"/> ' + aoActivities[i].products[j].name + '</label></li>');
			}
			jForm.append(jUl);
			jForm.append('<div class="' + gThis._GetClass('Button') + '"><input type="submit" value="' + GClientActivity.Language.add_to_order + '"/></div>');
			$(gThis).append(jForm);
			jForm.submit(GEventHandler(function(eEvent) {
				var jChecked = $(this).find('input:checked');
				var aIds = [];
				for (var i = 0; i < jChecked.length; i++) {
					aIds.push(jChecked.eq(i).attr('value'));
				}
				gThis.m_oOptions.gProducts.AddProducts(aIds);
				return false;
			}));
		}
	};

	gThis._Constructor();

};

new GPlugin('GClientActivity', oDefaults, GClientActivity);
/*
* COMBO BOX
* Select field with the ability to define custom values.
*/

var oDefaults = {
	oClasses: {
	},
	oFiles: {
		sIconExpand: '_images_frontend/icons/arrows/triangle-gray-down.png',
		sIconRetract: '_images_frontend/icons/arrows/triangle-gray-up.png'
	}
};

var GComboBox = function() {

	var gThis = this;

	gThis.m_jField;
	gThis.m_sDefaultValue;

	gThis.Update = function() {
		$(gThis).parent().find('.faux span').text($(gThis).find('option:selected').text()).attr('class', $(gThis).find('option:selected').attr('class') + ' ');
		gThis.m_jField.val($(gThis).find('option:selected').text()).attr('class', $(gThis).find('option:selected').attr('class') + ' ');
		return true;
	};

	this._Constructor = function() {
		$(gThis).parent().addClass('GComboBox');
		gThis.m_sDefaultValue = $(gThis).find('option:eq(0)').text();
		gThis.m_jField = $('<input type="text" value="' + $(gThis).find('option:selected').text() + '"/>');
		$(gThis).parent().find('select').css('opacity', 0);
		$(gThis).parent().append('<span class="faux"><span style="visibility: hidden;">' + $(gThis).find('option:selected').text() + '</span></span>');
		$(gThis).parent().append(gThis.m_jField);
		$(gThis).change(gThis.Update).change(function() {
			$(gThis).trigger('GChange');
		});
		$(gThis).add(gThis.m_jField).focus(function() {
			$(gThis).closest('.field').addClass('focus');
			return true;
		});
		$(gThis).add(gThis.m_jField).blur(function() {
			$(gThis).closest('.field').removeClass('focus');
			if ($(gThis).val() != '_new_') {
				$(gThis).find('option[value="_new_"]').remove();
			}
			return true;
		});
		gThis.m_jField.focus(function() {
			if ($(this).val() == gThis.m_sDefaultValue) {
				$(this).val('');
			}
		}).blur(function() {
			if (!$(this).val().length) {
				$(this).val(gThis.m_sDefaultValue);
			}
			$(gThis).find('option[value="_new_"]').remove();
			if ($(this).val() != gThis.m_sDefaultValue) {
				var jOption = $(gThis).find('option');
				var bFound = false;
				if($('.field-attribute-editor').length == 0){
					for (var i = 0; i < jOption.length; i++) {
						if (jOption.eq(i).text() == $(this).val()) {
							$(gThis).val(jOption.eq(i).attr('value'));
							bFound = true;
							break;
						}
					}
				}
				if (!bFound) {
					$(gThis).append('<option value="_new_">' + $(this).val() + '</option>').val('_new_');
				}
			}
			$(gThis).trigger('GChange');
		}).keydown(gThis.PreventEnter);
		gThis.Update();
	};

	gThis.PreventEnter = function(eEvent) {
		if (eEvent.keyCode == 13) {
			eEvent.preventDefault();
			eEvent.stopImmediatePropagation();
			$(this).blur().change();
			$(gThis).change();
		}
	};

	gThis._Constructor();

};

new GPlugin('GComboBox', oDefaults, GComboBox);
/*
* CONTENT LOADER
* AJAX-based remote content loader.
*/

var oDefaults = {
	oParams: {},
	sSource: '',
	oClasses: {
		sLoadingClass: 'preloader'
	}
};

var GContentLoader = function() {

	var gThis = this;

	gThis.m_jHolder;

	gThis._Constructor = function() {
		gThis.m_jHolder = $('<div/>');
		$(gThis).append($('<div class="' + gThis._GetClass('Loading') + '"/>').css('display', 'none').fadeIn(150));
		gThis.m_jHolder.load(gThis.m_oOptions.sSource, gThis.m_oOptions.oParams, gThis.Loaded);
	};

	gThis.Loaded = GEventHandler(function(eEvent) {
		$(gThis).find('.' + gThis._GetClass('Loading')).stop(true, false).fadeOut(150, function() {
			$(gThis).empty().html(gThis.m_jHolder.html()).css('opacity', 0).animate({
				opacity: 1
			}, 150);
			$(gThis).find('.block').GBlock();
			$(gThis).find('.box').GBox();
			$(gThis).find('select').GSelect();
		});
	});

	gThis._Constructor();

};

new GPlugin('GContentLoader', oDefaults, GContentLoader);
/*
* MENU
*/

var GMENU_MODE_CLICK = 0;
var GMENU_MODE_DELAY = 1;
var GMENU_MODE_HOVER = 2;

var GMENU_FOLLOW = 1;
var GMENU_NOFOLLOW = 0;

var oDefaults = {
	oClasses: {
		sCustomizationClass: 'customization',
		sCustomizeClass: 'customize',
		sExpandableClass: 'expandable',
		sButtonClass: 'button',
		sCancelClass: 'cancel',
		sSaveClass: 'save',
		sActiveClass: 'active'
	},
	iDefaultMode: GMENU_MODE_HOVER,
	iDefaultDelay: 500,
	iDefaultFollow: GMENU_NOFOLLOW,
	sModeCookieName: 'gekosale-panel-menu-mode',
	sDelayCookieName: 'gekosale-panel-menu-delay',
	sFollowCookieName: 'gekosale-panel-menu-follow',
};

var GMenu = function() {

	var gThis = this;

	gThis.m_jCustomizationTrigger;
	gThis.m_jCustomization;

	gThis.m_iMode;
	gThis.m_iDelay;
	gThis.m_bCustomization;

	gThis._Constructor = function() {
		gThis.m_bCustomization = false;
		gThis._UpdateParams();
		$(gThis).find('li:has(ul)').mouseenter(gThis.OnMouseEnter).mouseleave(gThis.OnMouseLeave).children('ul').hide();
		$(gThis).find('li:has(ul)').children('a').click(gThis.OnMouseClick);
		$(gThis).find('li li:has(ul)').addClass(gThis.m_oOptions.oClasses.sExpandableClass);
		gThis._PrepareCustomization();
	};

	gThis._PrepareCustomization = function() {
		gThis.m_jCustomizationTrigger = $('<span class="' + gThis.m_oOptions.oClasses.sCustomizeClass + '" title="' + GMenu.Language.customize + '"/>');
		gThis.m_jCustomizationTrigger.click(gThis.OnExpandCustomization);
		gThis.m_jCustomization = $('<div class="' + gThis.m_oOptions.oClasses.sCustomizationClass + '"/>');
		gThis.m_jCustomization.append('<h3>' + GMenu.Language.choose_mode + '</h3>');
		gThis.m_jCustomization.append('<label><input type="radio" name="GMenu-' + gThis.m_iId + '-mode" value="' + GMENU_MODE_CLICK + '"/> ' + GMenu.Language.mode_click + '</label>');
		gThis.m_jCustomization.append('<label><input type="radio" name="GMenu-' + gThis.m_iId + '-mode" value="' + GMENU_MODE_HOVER + '"/> ' + GMenu.Language.mode_hover + '</label>');
		var jSaveTrigger = $('<a href="#" class="' + gThis.m_oOptions.oClasses.sButtonClass + '" title="' + GMenu.Language.save_desc + '"><span>' + GMenu.Language.save + '</span></a>');
		jSaveTrigger.click(gThis.OnSave);
		var jCancelTrigger = $('<a href="#" title="' + GMenu.Language.restore_default_desc + '"><span>' + GMenu.Language.restore_default + '</span></a>');
		jCancelTrigger.click(gThis.OnCancel);
		gThis.m_jCustomization.append($('<p class="' + gThis.m_oOptions.oClasses.sSaveClass + '"/>').append(jSaveTrigger));
		gThis.m_jCustomization.append($('<p class="' + gThis.m_oOptions.oClasses.sCancelClass + '"/>').append(jCancelTrigger));
		gThis.m_jCustomization.hide();
		$(gThis).after(gThis.m_jCustomization);
		$(gThis).after(gThis.m_jCustomizationTrigger);
	};

	gThis.OnMouseClick = new GEventHandler(function(eEvent) {
		if ((gThis.m_iMode == GMENU_MODE_DELAY) || (gThis.m_iMode == GMENU_MODE_CLICK)) {
			var jLi = $(this).closest('li');
			jLi.stop(true, false);
			gThis._ShowMenu(jLi);
		}
		return false;
	});

	gThis.OnMouseEnter = new GEventHandler(function(eEvent) {
		if (gThis.m_iMode == GMENU_MODE_HOVER) {
			gThis._ShowMenu($(this));
		}
		else if (gThis.m_iMode == GMENU_MODE_DELAY) {
			$(this).delay(gThis.m_iDelay, function() {
				gThis._ShowMenu($(this));
			});
		}
	});

	gThis.OnMouseLeave = new GEventHandler(function(eEvent) {
		$(this).stop(true, false);
		gThis._HideMenu($(this));
	});

	gThis._ShowMenu = function(jParent) {
		if (gThis.m_bCustomization) {
			return;
		}
		var jUl = jParent.find('ul:first');
		jUl.hide().stop(true, true);
		if (jParent.closest('ul').hasClass('GMenu')) {
			jUl.slideDown(150);
		}
		else {
			jUl.show('slide', {}, 150);
		}
	};

	gThis._HideMenu = function(jParent) {
		var jUl = jParent.find('ul:first');
		jUl.stop(true, true).fadeOut(50);
	};

	gThis._UpdateParams = function() {
		var sCookie;
		var bSave = false;
		sCookie = GCookie(gThis.m_oOptions.sModeCookieName);
		if ((sCookie == undefined) || (sCookie == '')) {
			gThis.m_iMode = parseInt(gThis.m_oOptions.iDefaultMode);
			bSave = true;
		}
		else {
			gThis.m_iMode = parseInt(sCookie);
		}
		sCookie = GCookie(gThis.m_oOptions.sDelayCookieName);
		if ((sCookie == undefined) || (sCookie == '')) {
			gThis.m_iDelay = parseInt(gThis.m_oOptions.iDefaultDelay);
			bSave = true;
		}
		else {
			gThis.m_iDelay = parseInt(sCookie);
		}
		if (bSave) {
			gThis._SaveParams();
		}
	};

	gThis._SaveParams = function() {
		GCookie(gThis.m_oOptions.sDelayCookieName, gThis.m_iDelay, {
			expires: GCore.p_oParams.iCookieLifetime
		});
		GCookie(gThis.m_oOptions.sModeCookieName, gThis.m_iMode, {
			expires: GCore.p_oParams.iCookieLifetime
		});
	};

	gThis.OnExpandCustomization = new GEventHandler(function(eEvent) {
		if (gThis.m_bCustomization) {
			gThis.OnRetractCustomization({});
			return false;
		}
		gThis.m_jCustomizationTrigger.addClass(gThis.m_oOptions.oClasses.sActiveClass);
		gThis.m_bCustomization = true;
		gThis.m_jCustomization.css('left', - gThis.m_jCustomization.width() + gThis.m_jCustomizationTrigger.offset().left - gThis.m_jCustomizationTrigger.parent().offset().left).slideDown(150);
		gThis.m_jCustomization.find('input[value="' + gThis.m_iMode + '"]').click();
		gThis.m_jCustomization.find('input[name="GMenu-' + gThis.m_iId + '-delay"]').val(gThis.m_iDelay);
	});

	gThis.OnRetractCustomization = new GEventHandler(function(eEvent) {
		if (!gThis.m_bCustomization) {
			return false;
		}
		gThis.m_jCustomizationTrigger.removeClass(gThis.m_oOptions.oClasses.sActiveClass);
		gThis.m_bCustomization = false;
		gThis.m_jCustomization.slideUp(100);
	});

	gThis.OnSave = new GEventHandler(function(eEvent) {
		gThis.m_iMode = gThis.m_jCustomization.find('input[type="radio"]:checked').val();
		gThis.m_iDelay = parseInt(gThis.m_jCustomization.find('input[name="GMenu-' + gThis.m_iId + '-delay"]').val());
		if (isNaN(gThis.m_iDelay)) {
			gThis.m_iDelay = gThis.m_oOptions.iDefaultDelay;
		}
		gThis._SaveParams();
		gThis.OnRetractCustomization({});
		return false;
	});

	gThis.OnCancel = new GEventHandler(function(eEvent) {
		GCookie(gThis.m_oOptions.sDelayCookieName, null);
		GCookie(gThis.m_oOptions.sModeCookieName, null);
		gThis.OnRetractCustomization({});
		gThis._UpdateParams();
		return false;
	});

	gThis._Constructor();

};

new GPlugin('GMenu', oDefaults, GMenu);

/*
* MESSAGE BAR
*/

var oDefaults = {
	iMessagesToShow: 1,
	oClasses: {
		sMessageClass: 'message',
		sCaptionClass: 'caption',
		sContentClass: 'content',
		sContainerClass: 'layout-container',
		sOptionsClass: 'options',
		sRetractableClass: 'retractable',
		sExpandedClass: 'expanded',
		sTypeWarningClass: 'warning',
		sTypeErrorClass: 'error',
		sTypeMessageClass: 'message',
		sTypePromptClass: 'prompt'
	}
};

var GMessageBar = function() {

	var gThis = this;

	gThis.m_jBox;
	gThis.m_jHoax;
	gThis.m_ojMessages;
	gThis.m_iMargin;

	gThis._Constructor = function() {
		GAlert.sp_dHandler = gThis;
		gThis.m_jBox = $(gThis);
		gThis.m_ojMessages = {};
		gThis.m_jHoax = $('<div/>');
		gThis.m_jHoax.css({
			height: 0
		});
		gThis.m_jBox.before(gThis.m_jHoax);
		gThis.m_jBox.css({
			width: '100%',
			position: 'fixed',
			left: 0,
			top: 0,
			zIndex: 100,
			opacity: 1
		});
		gThis.m_iMargin = gThis.m_jHoax.offset().top;
		$(window).scroll(gThis._UpdateScroll);
		gThis._UpdateScroll();
		gThis._InitExistingMessages();
	};

	gThis._UpdateScroll = function(eEvent) {
		if (gThis.m_jHoax.css('display') != 'none') {
			gThis.m_iMargin = gThis.m_jHoax.offset().top;
		}
		if (($(document).scrollTop() < gThis.m_iMargin) || !$(gThis).find('.' + gThis._GetClass('Message')).length) {
			gThis.m_jBox.css({
				position: 'fixed',
				zIndex: 100
			});
			gThis.m_jHoax.css('display', 'none');
		}
		else {
			gThis.m_jBox.css({
				position: 'fixed',
				zIndex: 100
			});
			gThis.m_jHoax.css('display', 'block');
		}
	};

	gThis._UpdateHeight = function() {
		gThis.m_jHoax.css('height', gThis.m_jBox.height());
	};

	gThis._InitExistingMessages = function() {
		var jMessages = $(gThis).find('.' + gThis._GetClass('Message'));
		for (var i = 0; i < jMessages.length; i++) {
			var iAlertId = GAlert.Register();
			gThis.m_ojMessages[iAlertId] = jMessages.eq(i);
			gThis._InitMessage(jMessages.eq(i), iAlertId);
			gThis.ShowMessage(jMessages.eq(i));
		}
	};

	gThis._PrepareMessageDOM = function(sTitle, sMessage, oParams) {
		gThis.bAutoFocus = true;
		if (oParams.bAutoFocus == false) {
			gThis.bAutoFocus = false;
		}

		if (!oParams.bNoAutoFormatting) {
			sMessage = '<p>' + sMessage + '</p>';
		}
		var jMessage = $('<div class="' + gThis._GetClass('Message') + '"/>');
		var jContainer = $('<div class="' + gThis._GetClass('Container') + '"/>');
		switch (oParams.iType) {
			case GAlert.TYPE_MESSAGE:
				jMessage.addClass(gThis._GetClass('TypeMessage'));
				break;
			case GAlert.TYPE_ERROR:
				jMessage.addClass(gThis._GetClass('TypeError'));
				break;
			case GAlert.TYPE_PROMPT:
				jMessage.addClass(gThis._GetClass('TypePrompt'));
				break;
			default:
				jMessage.addClass(gThis._GetClass('TypeWarning'));
		}
		jContainer.append('<h3>' + sTitle + '</h3>');
		if (!oParams.aoPossibilities || !oParams.aoPossibilities.length) {
			oParams.aoPossibilities = [];
			oParams.aoPossibilities[0] = {
				mLink: GAlert.DestroyThis,
				sCaption: GMessageBar.Language.close_alert
			};
		}
		var jUl = $('<ul class="' + gThis._GetClass('Options') + '"/>');
		for (var i = 0; i < oParams.aoPossibilities.length; i++) {
			var jA = $('<a/>');
			jA.append(oParams.aoPossibilities[i].sCaption);
			jA.attr('title', oParams.aoPossibilities[i].sCaption);
			GLink(jA, oParams.aoPossibilities[i].mLink);
			if (oParams.aoPossibilities[i].bHidden) {
				jA.css('display', 'none');
			}
			jUl.append($('<li/>').append(jA));
		}
		jContainer.append(jUl);
		jContainer.append('<div class="' + gThis._GetClass('Content') + '">' + sMessage + '</div>');
		jMessage.append(jContainer);
		if (!oParams.bNotRetractable) {
			jMessage.addClass(gThis._GetClass('Retractable'));
			oParams.bAutoExpand = true;
		}
		return jMessage;
	};

	gThis.RetractMessage = function(jMessage) {
		if (!jMessage.hasClass(gThis._GetClass('Retractable'))) {
			return;
		}
		jMessage.get(0).g_bExpanded = false;
		jMessage.removeClass(gThis._GetClass('Expanded'));
		jMessage.stop(true, false).find('.' + gThis._GetClass('Content') + ', .' + gThis._GetClass('Options') + ' li:not(:first-child)').stop(true, false).fadeOut(100, function() {
			jMessage.animate({
				height: jMessage.get(0).g_iRetractedHeight
			}, 150, function() {
				gThis._UpdateHeight();
			});
		});
	};

	gThis._InitMessage = function(jMessage, iAlertId) {
		jMessage.get(0).g_iAlertId = iAlertId;
		jMessage.get(0).g_iExpandedHeight = jMessage.height();
		jMessage.find('.' + gThis._GetClass('Content')).hide();
		jMessage.find('.' + gThis._GetClass('Options') + ' li:not(:first-child)').hide();
		jMessage.get(0).g_iRetractedHeight = jMessage.height();
		jMessage.get(0).g_bExpanded = false;
		jMessage.click(gThis.OnExpandMessage);
		jMessage.find('a').click(new GEventHandler(function(eEvent) {
			eEvent.stopPropagation();
			return true;
		}));
	};

	gThis.OnExpandMessage = new GEventHandler(function(eEvent) {
		if (this.g_bExpanded) {
			gThis.RetractMessage($(this));
		}
		else {
			gThis.ExpandMessage($(this));
		}
		return true;
	});

	gThis.ExpandMessage = function(jMessage) {
		jMessage.get(0).g_bExpanded = true;
		jMessage.addClass(gThis._GetClass('Expanded'));
		jMessage.stop(true, false).animate({
			height: jMessage.get(0).g_iExpandedHeight
		}, 150, function() {
			$(this).find('.' + gThis._GetClass('Content') + ', .' + gThis._GetClass('Options') + ' li:not(:first-child)').stop(true, false).fadeIn(100);
			gThis._UpdateHeight();
			if ($(this).find('input:text').length) {
				$(this).find('input:text:eq(0)').focus().keydown(GEventHandler(function(eEvent) {
					if (eEvent.keyCode == 13) {
						eEvent.preventDefault();
						eEvent.stopImmediatePropagation();
						jMessage.find('.' + gThis._GetClass('Options')).find('a:first').click();
					}
					if (eEvent.keyCode == 27) {
						eEvent.preventDefault();
						eEvent.stopImmediatePropagation();
						jMessage.find('.' + gThis._GetClass('Options')).find('a:last').click();
					}
				}));
			}else{
				if(gThis.bAutoFocus){
					$(this).find('a:first').focus().keydown(GEventHandler(function(eEvent) {
						if (eEvent.keyCode == 13) {
							eEvent.preventDefault();
							eEvent.stopImmediatePropagation();
							jMessage.find('.' + gThis._GetClass('Options')).find('a:first').click();
						}
						if (eEvent.keyCode == 27) {
							eEvent.preventDefault();
							eEvent.stopImmediatePropagation();
							jMessage.find('.' + gThis._GetClass('Options')).find('a:last').click();
						}
					}));
				}
				else{
					$(this).find('a:first').keydown(GEventHandler(function(eEvent) {
						if (eEvent.keyCode == 13) {
							eEvent.preventDefault();
							eEvent.stopImmediatePropagation();
							jMessage.find('.' + gThis._GetClass('Options')).find('a:first').click();
						}
						if (eEvent.keyCode == 27) {
							eEvent.preventDefault();
							eEvent.stopImmediatePropagation();
							jMessage.find('.' + gThis._GetClass('Options')).find('a:last').click();
						}
					}));
				}

			}
		});
	};

	gThis.ShowMessage = function(jMessage, bAutoExpand) {
		gThis._UpdateScroll();
		var iTime = 200;
		var nOpacity = .1;
		var jContainer = jMessage.children('.' + gThis._GetClass('Container'));
		jContainer.css('opacity', (document.documentMode == 8) ? '' : 0);
		jMessage.css('height', 0).animate({
			height: jMessage.get(0).g_iRetractedHeight
		}, iTime, function() {
			gThis._UpdateHeight();
			jContainer.animate({
				opacity: (document.documentMode == 8) ? '' : 1
			}, iTime, function() {
				if (bAutoExpand) {
					gThis.ExpandMessage($(this).closest('.' + gThis._GetClass('Message')));
					return;
				}
				gThis.UpdateStack();
				jContainer.animate({
					opacity: (document.documentMode == 8) ? '' : nOpacity
				}, iTime, function() {
					jContainer.animate({
						opacity: (document.documentMode == 8) ? '' : 1
					}, iTime, function() {
						jContainer.animate({
							opacity: (document.documentMode == 8) ? '' : nOpacity
						}, iTime, function() {
							jContainer.animate({
								opacity: (document.documentMode == 8) ? '' : 1
							}, iTime);
						});
					});
				});
			});
		});
	};

	gThis.Destroy = function(mAlert) {
		var iAlertId;
		var jMessage;
		if (!isNaN(mAlert)) {
			iAlertId = mAlert;
			jMessage = gThis.m_ojMessages[iAlertId];
		}
		else {
			if ((mAlert == undefined) || !(mAlert instanceof $)) {
				return;
			}
			jMessage = mAlert.closest('.' + gThis._GetClass('Message'));
			if (!jMessage.length) {
				return;
			}
			iAlertId = jMessage.get(0).g_iAlertId;
		}
		if ((jMessage == undefined) || !(jMessage instanceof $)) {
			return;
		}
		jMessage.stop(true, false).children('.' + gThis._GetClass('Container')).animate({
			opacity: (document.documentMode == 8) ? '' : 0
		}, 100, function() {
			jMessage.animate({
				height: 0
			}, 150, function() {
				jMessage.remove();
				delete gThis.m_ojMessages[iAlertId];
				gThis.UpdateStack();
				gThis._UpdateHeight();
			});
		});
	};

	gThis.DestroyAll = function() {
		for (var i in gThis.m_ojMessages) {
			gThis.Destroy(gThis.m_ojMessages[i]);
		}
	};

	gThis.Alert = function(sTitle, sMessage, oParams, iAlertId) {
		oParams = $.extend({}, oParams);
		var jMessage = gThis._PrepareMessageDOM(sTitle, sMessage, oParams);
		gThis.m_jBox.append(jMessage);
		gThis.m_ojMessages[iAlertId] = jMessage;
		gThis._InitMessage(jMessage, iAlertId);
		gThis.ShowMessage(jMessage, (oParams.bAutoExpand == true));
	};

	gThis.UpdateStack = function() {
		var jMessages = gThis.m_jBox.find('.' + gThis._GetClass('Message'));
		for (var i = 0; i < jMessages.length; i++) {
			if (jMessages.length - i > gThis.m_oOptions.iMessagesToShow) {
				jMessages.eq(i).css('display', 'none');
			}
			else {
				jMessages.eq(i).css('display', 'block');
			}
		}
	};

	gThis._Constructor();
};

new GPlugin('GMessageBar', oDefaults, GMessageBar);
/*
* OVERLAY
* Adds a customizable overlay that covers everything except the element that it's invoked for.
*/

var oDefaults = {
	oClasses: {
	},
	iZIndex: 1000,
	fClick: GCore.NULL,
	fOpacity: 0.0
};

var GOverlay = function() {

	var gThis = this;

	gThis.m_jOverlay;

	this._Constructor = function() {
		gThis.m_jOverlay = $('<div class="GOverlay"/>').css({
			display: 'block',
			position: 'absolute',
			left: 0,
			top: 0,
			width: $(document).width(),
			height: $(document).height(),
			zIndex: gThis.m_oOptions.iZIndex,
			opacity: gThis.m_oOptions.fOpacity,
			background: '#000'
		});
		$('body').append(gThis.m_jOverlay);
		$(gThis).css({
			zIndex: gThis.m_oOptions.iZIndex + 1
		});
		gThis.m_jOverlay.click(GEventHandler(function(eEvent) {
			var bResult = false;
			if (gThis.m_oOptions.fClick instanceof Function) {
				bResult = gThis.m_oOptions.fClick.apply(this, [eEvent]);
			}
			if (!bResult) {
				gThis.m_jOverlay.remove();
			}
			return false;
		}));
	};

	gThis._Constructor();

};

GOverlay.RemoveAll = function() {
	$('.GOverlay').remove();
};

new GPlugin('GOverlay', oDefaults, GOverlay);

/*
* QUICK ACCESS
*/

var oDefaults = {
	aoPossibilities: [],
	oClasses: {
		sExpandClass: 'expand',
		sExpandedClass: 'expanded',
		sActiveClass: 'active',
		sListClass: 'list',
		sPossibilitiesListClass: 'possibilities-list',
		sCustomizeClass: 'customize',
		sCustomizationClass: 'customization',
		sButtonClass: 'button',
		sCancelClass: 'cancel',
		sSaveClass: 'save',
		sAccessKeyClass: 'accesskey',
		sCaptionClass: 'caption',
		sHiddenClass: 'aural'
	},
	sCookieName: 'gekosale-panel-quick-access'
};

var GQuickAccess = function() {

	var gThis = this;

	gThis.m_jMainOption;
	gThis.m_jListTrigger;
	gThis.m_jCustomizationTrigger;
	gThis.m_jList;
	gThis.m_jCustomization;
	gThis.m_jPossibilitiesList;
	gThis.m_aList;
	gThis.m_aPossibilitiesList;

	gThis.m_bExpanded;
	gThis.m_bCustomization;

	gThis._Constructor = function() {
		gThis.m_bExpanded = false;
		gThis.m_bCustomization = false;
		gThis.m_aList = [];
		gThis.m_aPossibilitiesList = gThis.m_oOptions.aoPossibilities;
		gThis._PrepareDOM();
	};

	gThis._PrepareDOM = function() {
		gThis._PrepareList();
		gThis._PreparePossibilitiesList();
		gThis.m_jMainOption = $('<p/>');
		gThis.m_jList.before(gThis.m_jMainOption);
		gThis._UpdateMainOption();
		gThis.m_jListTrigger = $('<span class="' + gThis.m_oOptions.oClasses.sExpandClass + '" title="' + GQuickAccess.Language.show_list + '"/>');
		var fToggleClass =
		gThis.m_jListTrigger.hover(function() {
			gThis.m_jMainOption.addClass(gThis.m_oOptions.oClasses.sActiveClass);
		}, function() {
			if (!gThis.m_bExpanded) {
				gThis.m_jMainOption.removeClass(gThis.m_oOptions.oClasses.sActiveClass);
			}
		}).mousedown(gThis.OnExpandList);
		$(gThis).mouseleave(gThis.OnRetractList);
		gThis.m_jMainOption.append(gThis.m_jListTrigger);
		gThis._RefreshAccessKeys();
	};

	gThis._SaveList = function() {
		GCookie(gThis.m_oOptions.sCookieName, gThis.m_aList.join(','), {
			expires: GCore.p_oParams.iCookieLifetime
		});
	};

	gThis._PrepareList = function() {
		var i;
		var sCookie = GCookie(gThis.m_oOptions.sCookieName);
		if ((sCookie == undefined) || (sCookie == '')) {
			gThis.m_aList = [];
			for (i = 0; i < gThis.m_aPossibilitiesList.length; i++) {
				if ((gThis.m_aPossibilitiesList[i] != undefined) && gThis.m_aPossibilitiesList[i].bDefault) {
					gThis.m_aList.push(i);
				}
			}
			gThis._SaveList();
		}
		else {
			gThis.m_aList = sCookie.split(',');
		}
		if (gThis.m_jList == undefined) {
			gThis.m_jList = $(gThis).find('ul:first').wrap('<div class="' + gThis.m_oOptions.oClasses.sListClass + '"/>').closest('div');
			gThis.m_jList.GShadow();
			gThis.m_jCustomizationTrigger = $('<span class="' + gThis.m_oOptions.oClasses.sCustomizeClass + '" title="' + GQuickAccess.Language.customize + '"/>');
			gThis.m_jCustomizationTrigger.click(gThis.OnExpandCustomization);
			gThis.m_jList.append(gThis.m_jCustomizationTrigger);
		}
		var jUl = gThis.m_jList.find('ul:first').empty();
		var aList = [];
		for (i = 0; i < gThis.m_aList.length; i++) {
			var oPossibility = gThis.m_aPossibilitiesList[gThis.m_aList[i]];
			if (oPossibility != undefined) {
				aList.push(gThis.m_aList[i]);
				var jA = $('<a rel="' + gThis.m_aList[i] + '"/>');
				GLink(jA, oPossibility.mLink);
				jA.append('<span class="' + gThis.m_oOptions.oClasses.sCaptionClass + '">' + oPossibility.sCaption + '</span>');
				jUl.append($('<li/>').append(jA));
			}
		}
	};

	gThis._PreparePossibilitiesList = function() {
		gThis.m_jPossibilitiesList = $('<div class="' + gThis.m_oOptions.oClasses.sPossibilitiesListClass + '"/>');
		var jUl = $('<ul/>');
		for (var i = 0; i < gThis.m_aPossibilitiesList.length; i++) {
			if (($.inArray(i, gThis.m_aList) == -1) && ($.inArray('' + i, gThis.m_aList) == -1)) {
				var oPossibility = gThis.m_aPossibilitiesList[i];
				var jA = $('<a rel="' + i + '"/>');
				GLink(jA, oPossibility.mLink);
				jA.append('<span class="' + gThis.m_oOptions.oClasses.sCaptionClass + '">' + oPossibility.sCaption + '</span>');
				jUl.append($('<li/>').append(jA));
			}
		}
		gThis.m_jPossibilitiesList.append(jUl);
		var jSaveTrigger = $('<a href="#" class="' + gThis.m_oOptions.oClasses.sButtonClass + '" title="' + GQuickAccess.Language.save_desc + '"><span>' + GQuickAccess.Language.save + '</span></a>');
		jSaveTrigger.click(gThis.OnSave);
		var jCancelTrigger = $('<a href="#" title="' + GQuickAccess.Language.restore_default_desc + '"><span>' + GQuickAccess.Language.restore_default + '</span></a>');
		jCancelTrigger.click(gThis.OnCancel);
		gThis.m_jPossibilitiesList.append($('<p class="' + gThis.m_oOptions.oClasses.sSaveClass + '"/>').append(jSaveTrigger));
		gThis.m_jPossibilitiesList.append($('<p class="' + gThis.m_oOptions.oClasses.sCancelClass + '"/>').append(jCancelTrigger));
		gThis.m_jPossibilitiesList.GShadow();
		$(gThis).append(gThis.m_jPossibilitiesList);
	};

	gThis.OnExpandList = new GEventHandler(function(eEvent) {
		gThis.m_bExpanded = true;
		gThis.m_jMainOption.addClass(gThis.m_oOptions.oClasses.sActiveClass);
		gThis.m_jList.css('display', 'none').removeClass(gThis.m_oOptions.oClasses.sHiddenClass).css('left', gThis.m_jMainOption.offset().left - gThis.m_jMainOption.parent().offset().left);
		gThis.m_jList.stop(true, true).slideDown(150);
		return false;
	});

	gThis.OnRetractList = new GEventHandler(function(eEvent) {
		if (gThis.m_bCustomization) {
			return;
		}
		gThis.m_bExpanded = false;
		gThis.m_jMainOption.removeClass(gThis.m_oOptions.oClasses.sActiveClass);
		gThis.m_jList.stop(true, true).slideUp(50, function() {
			$(this).css('display', 'block').addClass(gThis.m_oOptions.oClasses.sHiddenClass);
		});
	});

	gThis.OnExpandCustomization = new GEventHandler(function(eEvent) {
		if (gThis.m_bCustomization) {
			gThis.OnRetractCustomization({});
			return false;
		}
		gThis.m_bCustomization = true;
		$(gThis).addClass(gThis.m_oOptions.oClasses.sCustomizationClass);
		gThis.m_jList.find('ul:first').sortable({
			placeholder: 'placeholder',
			connectWith: '.' + gThis.m_oOptions.oClasses.sPossibilitiesListClass + ' ul',
			update: gThis.OnChange,
			start: gThis.OnDragStart
		});
		gThis.m_jPossibilitiesList.find('ul:first').sortable({
			placeholder: 'placeholder',
			connectWith: '.' + gThis.m_oOptions.oClasses.sListClass + ' ul',
			update: gThis.OnChange,
			start: gThis.OnDragStart
		});
		gThis.m_jList.find('li a').bind('click', GDoNothing);
		gThis.m_jPossibilitiesList.find('li a').bind('click', GDoNothing);
		gThis.m_jPossibilitiesList.css('left', gThis.m_jMainOption.offset().left - gThis.m_jMainOption.parent().offset().left + gThis.m_jList.width() + 1);
		gThis.m_jPossibilitiesList.slideDown(150);
	});

	gThis.OnRetractCustomization = new GEventHandler(function(eEvent) {
		if (!gThis.m_bCustomization) {
			return false;
		}
		gThis.m_bCustomization = false;
		gThis.m_jList.find('ul:first').sortable('destroy');
		gThis.m_jPossibilitiesList.find('ul:first').sortable('destroy');
		gThis.m_jPossibilitiesList.slideUp(50);
		$(gThis).removeClass(gThis.m_oOptions.oClasses.sCustomizationClass);
		gThis.m_jList.find('li a').unbind('click', GDoNothing);
		gThis.m_jPossibilitiesList.find('li a').unbind('click', GDoNothing);
	});

	gThis.OnChange = new GEventHandler(function(eEvent, oUi) {
		oUi.item.find('.' + gThis.m_oOptions.oClasses.sAccessKeyClass).remove();
		gThis._UpdateMainOption();
		gThis.m_aList = [];
		var jAs = gThis.m_jList.find('li a');
		for (var i = 0; i < jAs.length; i++) {
			gThis.m_aList.push(jAs.eq(i).attr('rel'));
		}
		gThis._RefreshAccessKeys();
	});

	gThis.OnSave = new GEventHandler(function(eEvent) {
		gThis._SaveList();
		gThis.OnRetractCustomization({});
		return false;
	});

	gThis.OnCancel = new GEventHandler(function(eEvent) {
		GCookie(gThis.m_oOptions.sCookieName, null);
		gThis.OnRetractCustomization({});
		gThis._PrepareList();
		gThis._PreparePossibilitiesList();
		gThis._UpdateMainOption();
		gThis._RefreshAccessKeys();
		return false;
	});

	gThis.OnDragStart = new GEventHandler(function(eEvent, oUi) {
		oUi.helper.find('.' + gThis.m_oOptions.oClasses.sAccessKeyClass).remove();
	});

	gThis._UpdateMainOption = function() {
		gThis.m_jMainOption.find('a').remove();
		var jA = gThis.m_jList.find('li:first a:first').clone().attr('accesskey', '');
		jA.find('.' + gThis.m_oOptions.oClasses.sAccessKeyClass).remove();
		gThis.m_jMainOption.prepend(jA);
	};

	gThis._RefreshAccessKeys = function() {
		gThis.m_jList.find('a').each(function(i) {
			$(this).find('.' + gThis.m_oOptions.oClasses.sAccessKeyClass).remove();
			if (i < 10) {
				$(this).attr('accesskey', i + 1).prepend('<span class="' + gThis.m_oOptions.oClasses.sAccessKeyClass + '" title="' + GQuickAccess.Language.accesskey + ': ' + (i + 1) + '">' + (i + 1) + '</span>');
			}
		});
	};

	gThis._Constructor();

};

new GPlugin('GQuickAccess', oDefaults, GQuickAccess);
/*
* SCROLLABLE TABS
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sContainerClass: 'container',
		sControlsClass: 'controls',
		sActiveClass: 'active'
	},
	oImages: {
		sLeft: 'images/icons/buttons/arrow-left-gray.png',
		sRight: 'images/icons/buttons/arrow-right-gray.png'
	}
};

var GScrollableTabs = function() {

	var gThis = this;

	gThis.m_jUl;
	gThis.m_jContainier;
	gThis.m_jControls;
	gThis.m_jNext;
	gThis.m_jPrevious;

	gThis.m_iContainerWidth;
	gThis.m_iUlWidth;

	gThis.Constructor = function() {
		gThis.m_jUl = $(gThis).find('ul');
		gThis.m_jUl.wrap('<div class="' + gThis._GetClass('Container') + '"/>');
		gThis.m_jContainier = gThis.m_jUl.parent();
		gThis.m_iContainerWidth = gThis.m_jContainier.width();
		gThis._UpdateWidth();
		if (gThis.m_iUlWidth > gThis.m_iContainerWidth) {
			gThis.m_jControls = $('<p class="' + gThis._GetClass('Controls') + '"/>');
			gThis.m_jNext = $('<a href="#"/>').append('<img src="' + gThis._GetImage('Right') + '" alt="' + GScrollableTabs.Language.next + '" title="' + GScrollableTabs.Language.next + '"/>');
			gThis.m_jPrevious = $('<a href="#"/>').append('<img src="' + gThis._GetImage('Left') + '" alt="' + GScrollableTabs.Language.previous + '" title="' + GScrollableTabs.Language.previous + '"/>');
			gThis.m_jControls.append(gThis.m_jPrevious).append(gThis.m_jNext);
			$(gThis).append(gThis.m_jControls);
		}
		gThis._InitializeEvents();
	};

	gThis._UpdateWidth = function() {
		gThis.m_jUl.css('width', 19000);
		var jLis = gThis.m_jUl.children('li');
		var iLisLength = jLis.length;
		var iWidth = 0;
		for (var i = 0; i < iLisLength; i++) {
			iWidth += jLis.eq(i).width() + 4;
		}
		gThis.m_jUl.css('width', iWidth);
		gThis.m_iUlWidth = iWidth;
	};

	gThis._InitializeEvents = function() {
		if (gThis.m_jNext != undefined) {
			gThis.m_jNext.click(function() {
				gThis.Right();
				return false;
			});
			gThis.m_jPrevious.click(function() {
				gThis.Left();
				return false;
			});
		}
		gThis.m_jUl.find('a').click(function() {
			GCore.StartWaiting();
			gThis.m_jUl.find('li').removeClass(gThis._GetClass('Active'));
			$(this).closest('li').addClass(gThis._GetClass('Active'));
			gThis._UpdateWidth();
			return true;
		});
	};

	gThis.Right = function() {

		var left = isNaN(parseInt(gThis.m_jUl.css('left'))) ? 0 : parseInt(gThis.m_jUl.css('left'));
		gThis.m_jUl.stop(true, true).animate({
			left: Math.max(- (gThis.m_iUlWidth - gThis.m_iContainerWidth), left - 250)
		}, 150);
	};

	gThis.Left = function() {
		gThis.m_jUl.stop(true, true).animate({
			left: Math.min(0, parseInt(gThis.m_jUl.css('left')) + 250)
		}, 150);
	};

	gThis.Constructor();

};

new GPlugin('GScrollableTabs', oDefaults, GScrollableTabs);
/*
* SELECT
* Beautiful select-field replacement.
*/

var oDefaults = {
	oClasses: {
		sFauxClass: 'faux'
	}
};

var GSelect = function() {

	var gThis = this;

	this._Constructor = function() {
		var dThis = this;

		if (this.bBeautifulized) {
			return;
		}
		this.bBeautifulized = true;

		this.Update = function() {
			$(dThis).parent().find('.faux span').text($(dThis).find('option:selected').text()).attr('class', $(dThis).find('option:selected').attr('class') + ' ');
			return true;
		};

		$(this).parent().find('select').css('opacity', 0);
		$(this).parent().append('<span class="faux"><span>' + $(this).find('option:selected').text() + '</span></span>');
		$(this).change(this.Update);
		$(this).focus(function() {
			$(this).closest('.field').addClass('focus');
			return true;
		});
		$(this).blur(function() {
			$(this).closest('.field').removeClass('focus');
			return true;
		});
		this.Update();
	};

	gThis._Constructor();

};

new GPlugin('GSelect', oDefaults, GSelect);

/*
* SHADOW
* Adds a nice shadow to the given element.
*/

var oDefaults = {
	oClasses: {
		sNE: 'shadow-ne',
		sSE: 'shadow-se',
		sSW: 'shadow-sw',
		sS: 'shadow-s',
		sE: 'shadow-e'
	}
};

var GShadow = function() {

	var gThis = this;

	this._Constructor = function() {
		$(gThis).append('<span class="' + gThis.m_oOptions.oClasses.sNE + '"/>');
		$(gThis).append('<span class="' + gThis.m_oOptions.oClasses.sSE + '"/>');
		$(gThis).append('<span class="' + gThis.m_oOptions.oClasses.sSW + '"/>');
		$(gThis).append('<span class="' + gThis.m_oOptions.oClasses.sS + '"/>');
		$(gThis).append('<span class="' + gThis.m_oOptions.oClasses.sE + '"/>');
	};

	gThis._Constructor();

};

new GPlugin('GShadow', oDefaults, GShadow);
/*
* TABS
*/

var oDefaults = {
	oClasses: {
		sBlockClass: 'block',
		sButtonClass: 'button',
		sButtonImageRightClass: 'right',
		sNavigationClass: 'navigation',
		sPreviousClass: 'previous',
		sNextClass: 'next',
		sInputWithImageClass: 'with-image',
		sActionsClass: 'actions',
		sTabbedClass: 'tabbed',
		sTabbedHorizontalClass: 'tabbed-horizontal'
	},
	oImages: {
		sArrowLeftGray: 'images/icons/buttons/arrow-left-gray.png',
		sArrowRightGreen: 'images/icons/buttons/arrow-right-green.png',
		sSave: 'images/icons/buttons/check.png'
	},
	iType: 0
};

var GTabs = function() {

	var gThis = this;

	this._Constructor = function() {
		gThis._PrepareDOM();
	};

	gThis._PrepareDOM = function() {
		var jPanels = $(gThis).children('fieldset');
		if (!jPanels.length) {
			return;
		}
		if (gThis.m_oOptions.iType == GTabs.TABS_HORIZONTAL) {
			$(gThis).addClass(gThis._GetClass('TabbedHorizontal'));
		}
		else {
			$(gThis).addClass(gThis._GetClass('Tabbed'));
		}
		var jTabs = $('<ul class="form-navigation"/>');
		var sLastId = '';
		for (var i = 0; i < jPanels.length; i++) {
			var jPanel = jPanels.eq(i);
			var sId = jPanel.attr('id');
			if (undefined == sId || !sId.length) {
				sId = 'GTabs-auto-panel-' + GTabs.s_iId++;
			}
			jPanel.attr('id', '');
			jTabs.append('<li><a href="#' + sId + '">' + jPanel.find('legend span').eq(0).text() + '</a></li>');
			var jNavigation = $('<ul class="' + gThis._GetClass('Navigation') + '"/>');
			if (i > 0) {
				jNavigation.append('<li class="' + gThis._GetClass('Previous') + '"><a tabindex="-1" class="' + gThis._GetClass('Button') + '" href="#previous-tab"><span><img src="' + gThis._GetImage('ArrowLeftGray') + '" alt=""/>' + GForm.Language.previous + '</span></a></li>');
			}
			if (i < jPanels.length - 1) {
				var sNextId = jPanels.eq(i + 1).attr('id');
				if (undefined === sNextId || !sNextId.length) {
					sNextId = 'GTabs-auto-panel-' + GTabs.s_iId;
				}
				jNavigation.append('<li class="' + gThis._GetClass('Next') + '"><a tabindex="-1" class="' + gThis._GetClass('Button') + ' next" href="#next-tab"><span><img class="' + gThis._GetClass('ButtonImageRight') + '" src="' + gThis._GetImage('ArrowRightGreen') + '" alt=""/>' + GForm.Language.next + '</span></a></li>');
			}
			else if ($(gThis).is('form')) {
				jNavigation.append('<li class="' + gThis._GetClass('Next') + '"><span class="' + gThis._GetClass('Button') + '"><span><img class="' + gThis._GetClass('ButtonImageRight') + '" src="' + gThis._GetImage('Save') + '" alt=""/><input type="submit" class="' + gThis._GetClass('InputWithImage') + '" value="' + GForm.Language.save + '"/></span></span></li>');
			}
			jPanel.append(jNavigation);
			sLastId = sId;

            jPanel.wrap(function() {
                return '<div id="'+ sId +'" class="' + gThis._GetClass('Block') + '"></div>';
            });
			jPanel.parent().GBlock();

		}
		$(gThis).prepend(jTabs).tabs();
		var jAs = $(gThis).find('.navigation a');
		for (i = 0; i < jAs.length; i++) {
			jAs.eq(i).click(function() {
				$(gThis).tabs('select', $(this).attr('href'));
				return false;
			});
		}
		$(gThis).bind('tabsshow', function(eEvent, oUI) {
			$(oUI.panel).children('fieldset').triggerHandler('GFormShow');
		});
		gThis._SolveAllProblems();
		gThis._InitializeTabsEvents();
	};

	gThis._InitializeTabsEvents = function() {
		$('a[href="#previous-tab"]').bind('click', GEventHandler(function(eEvent) {
			var jPanel = $(eEvent.currentTarget).closest('.ui-tabs-panel');
			do {
				jPanel = jPanel.prev();
				if (!jPanel.length) {
					return false;
				}
			} while (jPanel.children('fieldset').css('display') == 'none');
			$(gThis).tabs('select', '#' + jPanel.attr('id'));
			eEvent.stopImmediatePropagation();
			return false;
		}));

		$('a[href="#next-tab"]').bind('click', GEventHandler(function(eEvent) {
			var jPanel = $(eEvent.currentTarget).closest('.ui-tabs-panel');
			do {
				jPanel = jPanel.next();
				if (!jPanel.length) {
					return false;
				}
			} while (jPanel.children('fieldset').css('display') == 'none');
			$(gThis).tabs('select', '#' + jPanel.attr('id'));
			eEvent.stopImmediatePropagation();
			return false;
		}));
	};

	gThis._SolveAllProblems = function() {
		$(gThis).css({
			opacity: 0,
			height: 0,
			overflow: 'hidden'
		}).tabs('add', '#a', '', 0).tabs('select', 0);

		setTimeout(function() {
			$(gThis).tabs('select', 1);
			$(gThis).tabs('remove', 0);
			$(gThis).find('.ui-tabs-panel').eq(0).children('fieldset').triggerHandler('GFormShow');
			$(gThis).wrap('<div style="clear: both;"/>').css('height', 'auto');
			$(gThis).parent().css('display', 'none').slideDown(350);
			$(gThis).css({
				opacity: 1,
				overflow: 'visible'
			});
		}, 10);
	};

	gThis._Constructor();

};

GTabs.TABS_VERTICAL = 0;
GTabs.TABS_HORIZONTAL = 1;

GTabs.s_iId = 0;

new GPlugin('GTabs', oDefaults, GTabs);
/*
* TOOLTIP
*/

var oDefaults = {
	bClickToHide: false,
	iPositionX: 0,
	iPositionY: 0,
	iOffsetX: -27,
	iOffsetY: -34,
	jContent: $('<div/>'),
	bAutoShow: false,
	oClasses: {
		sTooltipClass: 'tooltip',
		sNEClass: 'tooltip-ne',
		sSEClass: 'tooltip-se',
		sSWClass: 'tooltip-sw',
		sSClass: 'tooltip-s',
		sEClass: 'tooltip-e',
		sWClass: 'tooltip-w',
		sNWClass: 'tooltip-nw'
	}
};

var GTooltip = function() {

	var gThis = this;

	gThis.m_iHeight = 0;

	this._Constructor = function() {
		GTooltip.s_oTooltips[gThis.m_iId] = gThis;
		gThis._PrepareTooltip();
	};

	gThis._PrepareTooltip = function() {
		$(gThis).append(gThis.m_oOptions.jContent).css({
			position: 'absolute',
			left: 0,
			bottom: 0,
			zIndex: 1000,
			display: 'none'
		});
		$(gThis).append('<span class="' + gThis._GetClass('W') + '"/>');
		$(gThis).append('<span class="' + gThis._GetClass('NW') + '"/>');
		$(gThis).append('<span class="' + gThis._GetClass('NE') + '"/>');
		$(gThis).append('<span class="' + gThis._GetClass('SE') + '"/>');
		$(gThis).append('<span class="' + gThis._GetClass('SW') + '"/>');
		$(gThis).append('<span class="' + gThis._GetClass('S') + '"/>');
		$(gThis).append('<span class="' + gThis._GetClass('E') + '"/>');
		if (gThis.m_oOptions.bAutoShow) {
			gThis._ShowTooltip(gThis.m_oOptions.iPositionX, gThis.m_oOptions.iPositionY);
		}
	};

	gThis._ShowTooltip = function(iX, iY) {
		$('.GTooltip').not($(gThis)).each(function() {
			this._HideTooltip();
		});
		$(gThis).stop(true, true).css({
			left: iX + gThis.m_oOptions.iOffsetX,
			bottom: $('body').height() - (iY + gThis.m_oOptions.iOffsetY - gThis.m_iHeight)
		}).fadeIn(150);
	};

	gThis._HideTooltip = function() {
		$(gThis).stop(true, true).fadeOut(50, function() {
			$(this).remove();
		});
	};

	gThis._Constructor();

};

GTooltip.Create = function(oOptions) {
	var jTooltip = $('<div/>');
	$('body').append(jTooltip);
	jTooltip.GTooltip(oOptions);
	return jTooltip.get(0).m_iId;
};

GTooltip.ShowThumbForThis = GEventHandler(function(eEvent) {
	eEvent.stopImmediatePropagation();
	eEvent.preventDefault();
	var jTooltip = $('<div/>');
	jTooltip.append('<img src="' + $(this).attr('href') + '" alt=""/>');
	this.m_iTooltipId = GTooltip.Create({
		bClickToHide: true,
		iPositionX: eEvent.pageX,
		iPositionY: eEvent.pageY,
		jContent: jTooltip,
		bAutoShow: true
	});
	return false;
});

GTooltip.HideThumbForThis = GEventHandler(function(eEvent) {
	eEvent.stopImmediatePropagation();
	eEvent.preventDefault();
	if (GTooltip.s_oTooltips[this.m_iTooltipId] != undefined) {
		GTooltip.s_oTooltips[this.m_iTooltipId]._HideTooltip();
		delete GTooltip.s_oTooltips[this.m_iTooltipId];
	}
	return false;
});

GTooltip.ShowInfoForThis = GEventHandler(function(eEvent) {
	eEvent.stopImmediatePropagation();
	eEvent.preventDefault();
	var jTooltip = $('<div/>');
	jTooltip.append('<span>' + $(this).attr('title') + '</span>');
	this.m_iTooltipId = GTooltip.Create({
		bClickToHide: true,
		iPositionX: eEvent.pageX,
		iPositionY: eEvent.pageY,
		jContent: jTooltip,
		bAutoShow: true
	});
	return false;
});

GTooltip.HideInfoForThis = GEventHandler(function(eEvent) {
	eEvent.stopImmediatePropagation();
	eEvent.preventDefault();
	if (GTooltip.s_oTooltips[this.m_iTooltipId] != undefined) {
		GTooltip.s_oTooltips[this.m_iTooltipId]._HideTooltip();
		delete GTooltip.s_oTooltips[this.m_iTooltipId];
	}
	return false;
});

GTooltip.s_oTooltips = {};

new GPlugin('GTooltip', oDefaults, GTooltip);
/*
* HELP
*/

var GHelp = function() {

	var gThis = this;

	gThis.OnContentLoaded = GEventHandler(function(eEvent) {

		gThis.m_sContent.html(eEvent.sContent);
		gThis.bLoaded = true;
	});

	gThis._OnExpandHelp = GEventHandler(function(eEvent) {

		gThis.m_sContent.slideToggle('fast');

		if(gThis.bLoaded == false){

			xajax_getHelpForPage ({
				sController: GCore.sCurrentController,
				sAction: GCore.sCurrentAction
			}, GCallback(gThis.OnContentLoaded));

		}

		return false;
	});

	gThis.MakeHelpButton = function() {
		gThis.bLoaded = false;
		gThis.m_jLi = $('<li>');
		gThis.m_jA = $('<a class="button" href="#"/>');
		gThis.m_jA.append('<span><img src="'+GCore.DESIGN_PATH+'images/icons/buttons/help.png" alt=""/>' + GForm.Language.help + '</span>');
		gThis.m_jA.appendTo(gThis.m_jLi);
		gThis.m_jLi.appendTo($('.possibilities'));
		gThis.m_jA.bind('click', gThis._OnExpandHelp);
		gThis.m_sContent = $('<div></div>').addClass('block').html('<p>Trwa wczytywanie pomocy...</p>');
		gThis.m_sContent.insertAfter($('.possibilities'));
		gThis.m_sContent.hide();
	};

	gThis.MakeHelpButton();

};

new GPlugin('GHelp', oDefaults, GHelp);
/*
* LOADING
* Adds a loading indicator for the desired DOM element.
*/

var oDefaults = {
	oClasses: {
	},
	sBackground: '#fff',
	fOpacity: .75,
	iZIndex: 1001
};

var GLoading = function() {

	var gThis = this;

	gThis.m_jOverlay;
	gThis.m_jIcon;

	gThis._Constructor = function() {
		gThis.m_jOverlay = $('<div class="GLoading"/>').css({
			display: 'block',
			position: 'absolute',
			left: $(gThis).offset().left,
			top: $(gThis).offset().top,
			width: $(gThis).width(),
			height: $(gThis).height(),
			zIndex: gThis.m_oOptions.iZIndex,
			opacity: 0,
			background: gThis.m_oOptions.sBackground
		});
		gThis.m_jIcon = $('<div class="GLoading_icon"/>').css({
			display: 'block',
			position: 'absolute',
			left: $(gThis).offset().left,
			top: $(gThis).offset().top,
			width: $(gThis).width(),
			height: $(gThis).height(),
			zIndex: gThis.m_oOptions.iZIndex,
			opacity: 0
		});
		$('body').append(gThis.m_jOverlay).append(gThis.m_jIcon);
		gThis.m_jOverlay.animate({
			duration: 500,
			opacity: gThis.m_oOptions.fOpacity
		});
		gThis.m_jIcon.animate({
			duration: 500,
			opacity: 1
		});
		$(gThis).resize(GEventHandler(function(eEvent) {
			gThis.m_jOverlay.css({
				width: $(gThis).width(),
				height: $(gThis).height()
			});
			gThis.m_jIcon.css({
				width: $(gThis).width(),
				height: $(gThis).height()
			});
		}));
	};

	gThis.StopLoading = function() {
		gThis.m_jOverlay.stop(true, true).animate({
			duration: 500,
			opacity: 0
		}, function() {
			$(this).remove();
		});
		gThis.m_jIcon.stop(true, true).animate({
			duration: 500,
			opacity: 0
		}, function() {
			$(this).remove();
		});
		$(gThis).removeClass('GLoading');
	};

	gThis._Constructor();

};

GLoading.Stop = function(jNode) {
	return jNode.get(0).StopLoading();
};

GLoading.RemoveAll = function() {
	$('.GLoading, GLoading_icon').remove();
};

new GPlugin('GLoading', oDefaults, GLoading);
/*
* SEARCH
* Live Search
*/

var oDefaults = {
	oClasses: {
	},
	sBackground: '#fff',
	fOpacity: .75,
	iZIndex: 1001,
	iDuration: 200,
	sDefaultText: '',
	sPlaceholder: 'live-search-results'
};

var GSearch = function() {

	var gThis = this;
	gThis._Constructor = function() {
		gThis.m_oOptions.sViewUrl = GCore.sAdminUrl+'mainside/confirm/';
		gThis.m_jInput = $(this);
		gThis.sLastValue = gThis.m_jInput.val();
		gThis.m_jInput.attr('autocomplete','off');
		gThis.m_jLiveSearch = $('<div>').attr('id',gThis.m_oOptions.sPlaceholder).appendTo(document.body).hide().slideUp(0);
		$(document.body).click(function(event){
			var clicked = $(event.target);
			if(!(clicked.is('#'+gThis.m_oOptions.sPlaceholder) || clicked.parents('#' + gThis.m_oOptions.sPlaceholder).length || clicked.is('input'))){
				gThis.m_jLiveSearch.slideUp(gThis.m_oOptions.iDuration);
			}
		});
		gThis.OnFocus();
		gThis.OnBlur();
		gThis.OnClick();

		gThis.m_jInput.typeWatch({callback: function(){
			gThis.OnTypingFinished();
		}});
	};

	gThis.RepositionLiveSearch = function() {
		var liveSearchPaddingBorderHoriz = parseInt(gThis.m_jLiveSearch.css('paddingLeft'), 10) + parseInt(gThis.m_jLiveSearch.css('paddingRight'), 10) + parseInt(gThis.m_jLiveSearch.css('borderLeftWidth'), 10) + parseInt(gThis.m_jLiveSearch.css('borderRightWidth'), 10);
		var tmpOffset = gThis.m_jInput.offset();
		var inputDim = {
			left: tmpOffset.left,
			top: tmpOffset.top,
			width: gThis.m_jInput.outerWidth(),
			height: gThis.m_jInput.outerHeight()
		};

		inputDim.topPos = inputDim.top + inputDim.height;
		inputDim.totalWidth = inputDim.width - liveSearchPaddingBorderHoriz;

		gThis.m_jLiveSearch.css({
			position:	'absolute',
			left:	inputDim.left+'px',
			top:	inputDim.topPos+'px',
			width:	inputDim.totalWidth+'px'
		});
	};

	gThis.ShowLiveSearch = function() {
		gThis.RepositionLiveSearch();
		$(window).unbind('resize', gThis.RepositionLiveSearch).bind('resize', gThis.RepositionLiveSearch);
		gThis.m_jLiveSearch.slideDown(gThis.m_oOptions.iDuration);
	};

	gThis.HideLiveSearch = function() {
		gThis.m_jLiveSearch.slideUp(gThis.m_oOptions.iDuration);
	};

	gThis.OnFocus = function() {
		gThis.m_jInput.focus(function() {
			if(gThis.m_jInput.val() == gThis.m_oOptions.sDefaultText) $(this).val("");
		});
		if (gThis.m_jInput.val() != ''){
			if (gThis.m_jLiveSearch.html() == ''){
				gThis.sLastValue = '';
				gThis.m_jInput.keyup();
			}else{
				setTimeout(gThis.ShowLiveSearch(),1);
			}
		}
	};

	gThis.OnClick = function() {
		gThis.m_jInput.click(function(){
			if(gThis.m_jLiveSearch.html() != '') {
				setTimeout(gThis.ShowLiveSearch(),1);
			}
		});
	};

	gThis.OnBlur = function() {
		gThis.m_jInput.blur(function() {
			if(gThis.m_jInput.val() == '') $(this).val(gThis.m_oOptions.sDefaultText);
		});
		if(gThis.m_jLiveSearch.html() != ''){
			gThis.ShowLiveSearch();
		}
	};

	gThis.OnTypingFinished = function() {
		if(gThis.sLastValue != gThis.m_jInput.val() && gThis.m_jInput.val() != '' && gThis.m_jInput.val() != gThis.m_oOptions.sDefaultText && gThis.m_jInput.val().length > 2){
			gThis.LoadResults();
		}
	};

	gThis.LoadResults = function() {
		gThis.sLastValue = gThis.m_jInput.val();
		$.get(gThis.m_oOptions.sViewUrl + Base64.encode(gThis.m_jInput.val()), function (data){
			if (data.length && gThis.sLastValue.length) {
				gThis.m_jLiveSearch.html(data);
				gThis.ShowLiveSearch();
			}else{
				gThis.HideLiveSearch();
			}
		});
	};

	gThis._Constructor();

};

new GPlugin('GSearch', oDefaults, GSearch);

/**
 * GFormDependency
 *
 * @param sType
 * @param sFieldSource
 * @param mCondition
 * @param mArgument
 * @constructor
 */
var GFormDependency = function (sType, sFieldSource, mCondition, mArgument) {

    var gThis = this;

    gThis.m_iId;
    gThis.m_sType = sType;
    gThis.m_gForm;
    gThis.m_sFieldSource = sFieldSource;
    gThis.m_sFieldTarget;
    gThis.m_mArgument = mArgument;
    if (mCondition instanceof GFormCondition) {
        gThis.m_gCondition = mCondition;
    }
    else if (mCondition instanceof Function) {
        gThis.m_fSource = mCondition;
    }

    gThis.Constructor = function (gForm, sFieldTarget) {
        gThis.m_iId = GFormDependency.s_iNextId++;
        gThis.m_gForm = gForm;
        gThis.m_sFieldTarget = sFieldTarget;
        gThis._InitializeEvents();
    };

    gThis._InitializeEvents = function () {
        var gFieldTarget = gThis.m_gForm.GetField(gThis.m_sFieldTarget);
        var fHandler;
        switch (gThis.m_sType) {
            case GFormDependency.HIDE:
                fHandler = gThis.EvaluateHide;
                break;
            case GFormDependency.SHOW:
                fHandler = gThis.EvaluateShow;
                break;
            case GFormDependency.IGNORE:
                fHandler = gThis.EvaluateIgnore;
                break;
            case GFormDependency.SUGGEST:
                fHandler = gThis.EvaluateSuggest;
                break;
            case GFormDependency.INVOKE_CUSTOM_FUNCTION:
                fHandler = gThis.EvaluateInvoke;
                break;
            case GFormDependency.EXCHANGE_OPTIONS:
                fHandler = gThis.EvaluateExchangeOptions;
                break;
            default:
                return;
        }
        var bAlreadyInitialised = false;
        if (!gFieldTarget.m_oInitializedDependencies[gThis.m_iId]) {
            var gField = gThis.m_gForm.GetFieldForForm(gThis.m_sFieldSource);
            gField.BindChangeHandler(fHandler, {
                gNode: gField
            });
            gField.m_afDependencyTriggers.push(fHandler);
            gFieldTarget.m_oInitializedDependencies[gThis.m_iId] = true;
            bAlreadyInitialised = true;
        }
        if (!bAlreadyInitialised || (gThis.m_sType != GFormDependency.EXCHANGE_OPTIONS)) {
            fHandler.apply(gThis.m_gForm.GetFieldForForm(gThis.m_sFieldSource).m_jField);
        }
    };

    gThis.EvaluateShow = function (eEvent) {
        var gCurrentField, gDependentField;
        if (eEvent == undefined) {
            eEvent = {data: {gNode: $(this).closest('.GFormNode').get(0).gNode}};
        }
        gCurrentField = eEvent.data.gNode;
        gDependentField = gThis._FindFieldInCurrentRepetition(gCurrentField, gThis.m_gForm.GetFieldForForm(gThis.m_sFieldTarget));
        if ((gCurrentField.m_gParent instanceof GFormRepeatableFieldset) && (gCurrentField.m_gParent == gDependentField.m_gParent)) {
            gDependentField = gDependentField;
        }
        if (gThis.Evaluate(gCurrentField.GetValue())) {
            gDependentField.Show();
        }
        else {
            gDependentField.Hide();
        }
    };

    gThis.EvaluateHide = function (eEvent) {
        var gCurrentField, gDependentField;
        if (eEvent == undefined) {
            eEvent = {data: {gNode: $(this).closest('.GFormNode').get(0).gNode}};
        }
        gCurrentField = eEvent.data.gNode;
        gDependentField = gThis._FindFieldInCurrentRepetition(gCurrentField, gThis.m_gForm.GetFieldForForm(gThis.m_sFieldTarget));
        if (gThis.Evaluate(gCurrentField.GetValue())) {
            gDependentField.Hide();
        }
        else {
            gDependentField.Show();
        }
    };

    gThis._FindFieldInCurrentRepetition = function (gCurrentField, gDependentField) {
        if ((gCurrentField.m_gParent instanceof GFormRepetition) && (gCurrentField.m_gParent.m_gParent == gDependentField.m_gParent.m_gParent)) {
            for (var i in gCurrentField.m_gParent.m_agFields) {
                var gField = gCurrentField.m_gParent.m_agFields[i];
                if (gField.m_oOptions.sName == gThis.m_sFieldTarget) {
                    return gField;
                }
            }
        }
        return gDependentField;
    };

    gThis.EvaluateIgnore = function (eEvent) {
        var gCurrentField, gDependentField;
        if (eEvent == undefined) {
            eEvent = {data: {gNode: $(this).closest('.GFormNode').get(0).gNode}};
        }
        gCurrentField = eEvent.data.gNode;
        gDependentField = gThis._FindFieldInCurrentRepetition(gCurrentField, gThis.m_gForm.GetFieldForForm(gThis.m_sFieldTarget));
        if (gThis.Evaluate(gCurrentField.GetValue())) {
            gDependentField.Ignore();
        }
        else {
            gDependentField.Unignore();
        }
    };

    gThis.EvaluateInvoke = function (eEvent) {
        if (eEvent == undefined) {
            eEvent = {
                data: {
                    gNode: $(this).closest('.GFormNode').get(0).gNode,
                    mArgument: gThis.m_mArgument
                }
            };
        }
        gThis.m_fSource({
            sValue: eEvent.data.gNode.GetValue(),
            gForm: gThis.m_gForm,
            sFieldTarget: gThis.m_sFieldTarget,
            mArgument: gThis.m_mArgument
        });
    };

    gThis.EvaluateSuggest = function (eEvent) {
        var gCurrentField, gDependentField;
        if (eEvent == undefined) {
            eEvent = {data: {gNode: $(this).closest('.GFormNode').get(0).gNode}};
        }
        gCurrentField = eEvent.data.gNode;
        gDependentField = gThis._FindFieldInCurrentRepetition(gCurrentField, gThis.m_gForm.GetFieldForForm(gThis.m_sFieldTarget));
        gThis.m_fSource({
            value: eEvent.data.gNode.GetValue()
        }, GCallback(function (oData) {
            gDependentField.SetValue(oData.suggestion);
        }, {
            gForm: gThis.m_gForm,
            sFieldTarget: gThis.m_sFieldTarget
        }));
    };

    gThis.EvaluateExchangeOptions = function (eEvent) {
        if (eEvent == undefined) {
            eEvent = {
                data: {
                    gNode: $(this).closest('.GFormNode').get(0).gNode,
                    mArgument: gThis.m_mArgument
                }
            };
        }
        gThis.m_fSource({
            value: eEvent.data.gNode.GetValue()
        }, GCallback(function (oData) {
            oData.gForm.GetField(oData.sFieldTarget).ExchangeOptions(oData.options);
        }, {
            gForm: gThis.m_gForm,
            sFieldTarget: gThis.m_sFieldTarget
        }));
    };

    gThis.Evaluate = function (mValue) {
        return gThis.m_gCondition.Evaluate(mValue);
    };

};

GFormDependency.HIDE = 'hide';
GFormDependency.SHOW = 'show';
GFormDependency.IGNORE = 'ignore';
GFormDependency.SUGGEST = 'suggest';
GFormDependency.INVOKE_CUSTOM_FUNCTION = 'invoke';
GFormDependency.EXCHANGE_OPTIONS = 'exchangeOptions';
GFormDependency.s_iNextId = 0;

/*
* NODE
* Abstract class with base functionality used by all form nodes.
*/

var oDefaults = {
	oClasses: {

	}
};

var GFormNode = function(oOptions) {

	var gThis = this;

	gThis.m_jNode;
	gThis.m_gParent;
	gThis.m_gForm;
	gThis.m_sNamePrefix;
	gThis.m_bRepeatable;
	gThis.m_bIgnore = false;
	gThis.m_oInitializedDependencies = {};

	gThis._Constructor = function() {};

	gThis.Render = function() {
		gThis.m_bRepeatable = false;
		if ((gThis.m_oOptions.oRepeat != undefined) && (gThis.m_oOptions.oRepeat.iMax != undefined) && (gThis.m_oOptions.oRepeat.iMax > 1)) {
			gThis.m_bRepeatable = true;
		}
		gThis._PrepareNode();
		gThis.m_jNode.get(0).gNode = gThis;
		gThis.m_jNode.addClass('GFormNode');
		return gThis.m_jNode;
	};

	gThis._GetClass = function(sClassName) {
		var sClass = gThis.m_oOptions.oClasses['s' + sClassName + 'Class'];
		if (sClass == undefined) {
			return '';
		}
		else {
			return sClass;
		}
	};

	gThis._GetImage = function(sImageName) {
		var sImage = gThis.m_oOptions.oImages['s' + sImageName];
		if (sImage == undefined) {
			return '';
		}
		else {
			return GCore.DESIGN_PATH + sImage;
		}
	};

	gThis.GetName = function(sId) {
		if ((gThis.m_sNamePrefix == undefined) || (gThis.m_sNamePrefix == '')) {
			return (sId != undefined) ? gThis.m_oOptions.sName + '[' + sId + ']' : gThis.m_oOptions.sName;
		}
		var sName = gThis.m_sNamePrefix + '[' + gThis.m_oOptions.sName + ']';
		if (sId != undefined) {
			sName += '[' + sId + ']';
		}
		return sName;
	};

	gThis.GetId = function(sId) {
		var sName = gThis.GetName().replace(/[\[\]]+/g, '__').replace(/\_\_$/, '');
		if (sId != undefined) {
			sName += '__' + sId;
		}
		return sName;
	};

	gThis.Populate = function(mData) {};
	gThis.PopulateErrors = function(mData) {};
	gThis.Validate = function(bNoRequests, iRepetition) { return true; };

	gThis.OnInit = function() {
		gThis._Initialize();
		gThis._InitializeEvents();
		gThis._InitializeDependencies();
		gThis._InitializeRules();
	};

	gThis._InitializeDependencies = function() {
		if (gThis.m_oOptions.agDependencies != undefined) {
			for (var i in gThis.m_oOptions.agDependencies) {
				gThis.m_oOptions.agDependencies[i].Constructor(gThis.m_gForm, gThis.m_oOptions.sName);
			}
		}
	};

	gThis._InitializeRules = function() {
		if (!gThis.m_jNode) {
			return;
		}
		if (gThis.m_oOptions.aoRules != undefined) {
			for (var i = 0; i < gThis.m_oOptions.aoRules.length; i++) {
				if (gThis.m_oOptions.aoRules[i].sType == 'required') {
					gThis.m_jNode.addClass('required');
				}
			}
		}
	};

	gThis.OnReset = function() {};
	gThis.OnShow = function() {};
	gThis.OnHide = function() {};
	gThis.OnRemove = function() {};
	gThis.Reset = function() {};
	gThis.Focus = function() { return false; };

	gThis.BindChangeHandler = function(fHandler, oData) {
		return gThis.m_jNode.bind('change', oData, fHandler);
	};

	gThis._PrepareNode = function() {};
	gThis._Initialize = function() {};
	gThis._InitializeEvents = function() {};

	gThis.Ignore = function() {
		gThis.m_bIgnore = true;
	};

	gThis.Unignore = function() {
		gThis.m_bIgnore = false;
	};

	gThis.Show = function() {
		gThis.Unignore();
		gThis.m_jNode.slideDown(200);
		if (gThis.m_oOptions.sName != undefined) {
			$(gThis.m_gForm).find('.form-navigation li:has(a[href="#' + gThis.m_oOptions.sName + '"])').css('display', 'block');
		}
	};

	gThis.Hide = function() {
		gThis.Ignore();
		gThis.m_jNode.slideUp(150);
		if (gThis.m_oOptions.sName != undefined) {
			$(gThis.m_gForm).find('.form-navigation li:has(a[href="#' + gThis.m_oOptions.sName + '"])').css('display', 'none');
		}
	};

};
/**
 * GFormRule
 *
 * @constructor
 */
var GFormRule = function () {
};

GFormRule.Check = function (oRule, gField, bNoRequest, iRepetition) {
    if (bNoRequest == undefined) {
        bNoRequest = false;
    }
    var mValue = gField.GetValue(iRepetition);
    switch (oRule.sType) {

        case 'required':
            if (gField._GetField(iRepetition).find('option:selected').val() != undefined) {
                if (gField._GetField(iRepetition).find('option:selected').val() == 0) {
                    return gField.ValidationResult(false, oRule.sErrorMessage, iRepetition);
                }
            }
            else if (mValue == '') {
                return gField.ValidationResult(false, oRule.sErrorMessage, iRepetition);
            }
            return gField.ValidationResult(true, oRule.sErrorMessage, iRepetition);

        case 'format':
            if (mValue != '') {
                var rRE = new RegExp(oRule.sFormat.substr(1, oRule.sFormat.length - 2));
                return gField.ValidationResult(rRE.test(mValue), oRule.sErrorMessage, iRepetition);
            }
            return gField.ValidationResult(true);

        case 'email':
            if (mValue != '') {
                return gField.ValidationResult(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.(?:[A-Z]{2}|com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|museum)$/i.test(mValue), oRule.sErrorMessage, iRepetition);
            }
            return gField.ValidationResult(true);

        case 'vat':
            var sValue = mValue.replace(/-/, '');
            sValue = sValue.replace(/-/, '');
            sValue = sValue.replace(/-/, '');

            if (sValue.length != 10) {
                return gField.ValidationResult(false, oRule.sErrorMessage, iRepetition);
            }

            aoSteps = new Array(6, 5, 7, 2, 3, 4, 5, 6, 7);
            iSum = 0;

            for (i = 0; i < 9; i++) {

                iSum += aoSteps[i] * sValue.charAt(i);

            }

            iModulo = iSum % 11;

            if (iModulo == 10) {
                iControl = 0;
            } else {
                iControl = iModulo;
            }

            if (iControl == sValue.charAt(9)) {
                return gField.ValidationResult(true, oRule.sErrorMessage, iRepetition);
            }

        case 'compare':
            var jFieldToCompare = $('[id$="' + oRule.sFieldToCompare + '"]');
            if (!jFieldToCompare.length) {
                return gField.ValidationResult(false, oRule.sErrorMessage, iRepetition);
            }
            return gField.ValidationResult(mValue == jFieldToCompare.closest('.GFormNode').get(0).gNode.GetValue(), oRule.sErrorMessage, iRepetition);

        case 'dateto':
            var jFieldToCompare = $('[id$="' + oRule.sFieldToCompare + '"]');
            if (!jFieldToCompare.length) {
                return gField.ValidationResult(false, oRule.sErrorMessage, iRepetition);
            }
            return gField.ValidationResult(mValue >= jFieldToCompare.closest('.GFormNode').get(0).gNode.GetValue(), oRule.sErrorMessage, iRepetition);

        case 'unique':
            if (!bNoRequest) {
                gField.StartWaiting();
                oRule.fCheckFunction({
                    value: mValue
                }, GCallback(GFormRule.ValidationResponse, {
                    gField: gField,
                    sErrorMessage: oRule.sErrorMessage,
                    iRepetition: iRepetition
                }));
            }
            return gField.ValidationResult(true);

        case 'languageunique':
            if (!bNoRequest) {
                gField.StartWaiting();
                oRule.fCheckFunction({
                    value: mValue,
                    language: gField.m_gParent.m_oOptions.sName
                }, GCallback(GFormRule.ValidationResponse, {
                    gField: gField,
                    sErrorMessage: oRule.sErrorMessage,
                    iRepetition: iRepetition
                }));
            }
            return gField.ValidationResult(true);

        case 'custom':
            var oParams = {};
            for (var sI in oRule.oParams) {
                if (sI.substr(0, 7) == '_field_') {
                    oParams[sI.substr(7)] = gField.m_gForm.GetField(oRule.oParams[sI]).GetValue();
                }
                else {
                    oParams[sI] = oRule.oParams[sI];
                }
            }
            if (!bNoRequest) {
                gField.StartWaiting();
                oRule.fCheckFunction({
                    value: mValue,
                    params: oParams
                }, GCallback(GFormRule.ValidationResponse, {
                    gField: gField,
                    sErrorMessage: oRule.sErrorMessage,
                    iRepetition: iRepetition
                }));
            }
            return gField.ValidationResult(true);

    }
    return gField.ValidationResult(false);
};

GFormRule.ValidationResponse = function (oData) {
    oData.gField.StopWaiting();
    oData.gField.ValidationResult(oData.unique, oData.sErrorMessage, oData.iRepetition);
};
/**
 * Default values
 *
 * @type {{sName: string, oClasses: {sRepetitionClass: string, sAddButtonClass: string, sDeleteButtonClass: string}, aoFields: Array, aoLanguages: Array, agFields: Array}}
 */
var oDefaults = {
    sName: '',
    oClasses: {
        sRepetitionClass: 'GFormRepetition',
        sAddButtonClass: 'add-repetition',
        sDeleteButtonClass: 'delete-repetition'
    },
    aoFields: [],
    aoLanguages: [],
    agFields: []
};

/**
 * GFormLanguageContainer
 *
 * @type {*}
 */
var GFormLanguageContainer = GCore.ExtendClass(GFormNode, function () {

    var gThis = this;

    gThis.m_oContainerRepetitions = {};
    gThis.m_iRepetitionIndex = 0;
    gThis.m_agFields = [];
    gThis.m_iChildIndex = 0;

    gThis._Constructor = function () {
        gThis.m_bRepeatable = true;
    };

    gThis._ConstructChildren = function () {

        for (var i = 0; i < gThis.m_oOptions.aoFields.length; i++) {
            var oField = gThis.m_oOptions.aoFields[i];
            var gChild = new oField.fType(oField);
            if (gChild._Constructor != undefined) {
                gChild._Constructor();
            }
            gThis.m_oOptions.agFields.push(gChild);
            gThis.m_agFields[gThis.m_iChildIndex++] = gChild;
        }
    };

    gThis.RenderChildren = function () {
        var jChildrenCollection = $('<div/>');
        for (var i = 0; i < gThis.m_oOptions.agFields.length; i++) {
            gThis._PrepareChild(gThis.m_oOptions.agFields[i]);
            jChildrenCollection.append(gThis.m_oOptions.agFields[i].Render());
        }
        return jChildrenCollection.children();
    };

    gThis._PrepareChild = function (gChild) {
        gChild.m_gForm = gThis.m_gForm;
        gChild.m_gParent = gThis;
        if (gChild.m_oOptions.sName != undefined) {
            gThis.m_gForm.m_ogFields[gChild.m_oOptions.sName] = gChild;
        }
        if (gThis.m_gParent == GCore.NULL) {
            gChild.m_sNamePrefix = '';
        }
        if (gThis.m_gForm == gThis.m_gParent) {
            gChild.m_sNamePrefix = gThis.m_oOptions.sName;
        }
        else {
            gChild.m_sNamePrefix = gThis.GetName();
        }
    };

    gThis.OnInit = function () {
        gThis._Initialize();
        gThis._InitializeEvents();
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            gThis.m_agFields[i].OnInit();
        }
        gThis._InitializeDependencies();
        gThis._InitializeRules();
    };

    gThis.OnShow = function () {
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            gThis.m_agFields[i].OnShow();
        }
    };

    gThis.OnRemove = function () {
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            gThis.m_agFields[i].OnRemove();
        }
    };

    gThis.OnHide = function () {
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            gThis.m_agFields[i].OnHide();
        }
    };

    gThis.OnReset = function () {
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            gThis.m_agFields[i].OnReset();
        }
    };

    gThis.Reset = function () {
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            gThis.m_agFields[i].Reset();
        }
    };

    gThis.Validate = function (bNoRequests) {
        var bResult = true;
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            if (!gThis.m_agFields[i].Validate(bNoRequests)) {
                bResult = false;
            }
        }
        return bResult;
    };

    gThis.AddRepetition = function (i) {

        var oOptions = GCore.Duplicate(gThis.m_oOptions, true);
        oOptions.sName = i;
        oOptions.agFields = [];
        oOptions.oRepeat = {};
        var gRepetition = new GFormRepetitionLanguage(oOptions);
        gRepetition._Constructor();
        gThis._PrepareChild(gRepetition);
        gThis.m_jNode.append(gRepetition.Render());
        gRepetition.OnInit();
        gThis.m_oContainerRepetitions[i] = gRepetition;
        gThis.m_agFields[gThis.m_iChildIndex++] = gRepetition;
        gRepetition.OnShow();
    };

    gThis.RemoveRepetition = function (i) {
        gRepetition = gThis.m_oContainerRepetitions[i];
        if (gRepetition == undefined) {
            return;
        }
        gRepetition.OnRemove();
        if (gRepetition.m_jNode != undefined) {
            gRepetition.m_jNode.remove();
        }
        for (var j in gThis.m_agFields) {
            if (gThis.m_oContainerRepetitions[i] == gThis.m_agFields[j]) {
                delete gThis.m_agFields[j];
            }
        }
        delete gThis.m_oContainerRepetitions[i];

    };

    gThis.Populate = function (mData) {

        $.each(gThis.m_oOptions.aoLanguages, function (l, language) {
            gThis.RemoveRepetition(language.sValue);
        });

        if (mData == undefined) {
            return;
        }

        if (!GCore.ObjectLength(mData)) {
            return;
        }

        for (var sRepetitionId in mData) {
        	gThis.AddRepetition(sRepetitionId);
        	var oValueObject = {};
        	for (var sFieldName in mData[sRepetitionId]) {
                oValueObject[sFieldName] = mData[sRepetitionId][sFieldName];
        	}
        	gThis.m_oContainerRepetitions[sRepetitionId].Populate(oValueObject);
        }
    };

    gThis.PopulateErrors = function (mData) {
        if (mData == undefined) {
            return;
        }
        var i;

        for (i in mData) {
            if (gThis.m_oContainerRepetitions[i] != undefined) {
                gThis.m_oContainerRepetitions[i].PopulateErrors(mData[i]);
            }
        }

    };

    gThis.Focus = function () {

        var aKeys = [];
        for (i in gThis.m_oContainerRepetitions) {
            aKeys.push(i);
        }
        aKeys.sort();
        for (i = 0; i < aKeys.length; i++) {
            var j = aKeys[i];
            if (gThis.m_oContainerRepetitions[j].Focus()) {
                return true;
            }
        }

        return false;
    };

    gThis._Initialize = function () {
    };

}, oDefaults);
/**
 * Default values
 *
 * @type {{sName: string, oClasses: {sRepetitionClass: string, sAddButtonClass: string, sDeleteButtonClass: string}, aoFields: Array, agFields: Array}}
 */
var oDefaults = {
    sName: '',
    oClasses: {
        sRepetitionClass: 'GFormRepetition',
        sAddButtonClass: 'add-repetition',
        sDeleteButtonClass: 'delete-repetition'
    },
    aoFields: [],
    agFields: []
};

/**
 * GFormContainer
 *
 * @type {*}
 */
var GFormContainer = GCore.ExtendClass(GFormNode, function () {

    var gThis = this;

    gThis.m_oContainerRepetitions = {};
    gThis.m_iRepetitionIndex = 0;
    gThis.m_agFields = [];
    gThis.m_iChildIndex = 0;

    gThis._Constructor = function () {
        gThis.m_bRepeatable = false;
        if ((gThis.m_oOptions.oRepeat != undefined) && (gThis.m_oOptions.oRepeat.iMax != undefined) && (gThis.m_oOptions.oRepeat.iMax > 1)) {
            gThis.m_bRepeatable = true;
        }
        if (!gThis.m_bRepeatable) {
            gThis._ConstructChildren();
        }
    };

    gThis._ConstructChildren = function () {

        for (var i = 0; i < gThis.m_oOptions.aoFields.length; i++) {
            var oField = gThis.m_oOptions.aoFields[i];
            var gChild = new oField.fType(oField);
            if (gChild._Constructor != undefined) {
                gChild._Constructor();
            }
            gThis.m_oOptions.agFields.push(gChild);
            gThis.m_agFields[gThis.m_iChildIndex++] = gChild;
        }
    };

    gThis.RenderChildren = function () {
        var jChildrenCollection = $('<div/>');
        for (var i = 0; i < gThis.m_oOptions.agFields.length; i++) {
            gThis._PrepareChild(gThis.m_oOptions.agFields[i]);
            jChildrenCollection.append(gThis.m_oOptions.agFields[i].Render());
        }
        return jChildrenCollection.children();
    };

    gThis._PrepareChild = function (gChild) {
        gChild.m_gForm = gThis.m_gForm;
        gChild.m_gParent = gThis;
        if (gChild.m_oOptions.sName != undefined) {
            gThis.m_gForm.m_ogFields[gChild.m_oOptions.sName] = gChild;
        }
        if (gThis.m_gParent == GCore.NULL) {
            gChild.m_sNamePrefix = '';
        }
        if (gThis.m_gForm == gThis.m_gParent) {
            gChild.m_sNamePrefix = gThis.m_oOptions.sName;
        }
        else {
            gChild.m_sNamePrefix = gThis.GetName();
        }
    };

    gThis.OnInit = function () {
        gThis._Initialize();
        gThis._InitializeEvents();
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            gThis.m_agFields[i].OnInit();
        }
        gThis._InitializeDependencies();
        gThis._InitializeRules();
    };

    gThis.OnShow = function () {
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            gThis.m_agFields[i].OnShow();
        }
    };

    gThis.OnRemove = function () {
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            gThis.m_agFields[i].OnRemove();
        }
    };

    gThis.OnHide = function () {
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            gThis.m_agFields[i].OnHide();
        }
    };

    gThis.OnReset = function () {
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            gThis.m_agFields[i].OnReset();
        }

    };

    gThis.Reset = function () {
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            gThis.m_agFields[i].Reset();
        }
    };

    gThis.Validate = function (bNoRequests) {
        var bResult = true;
        for (var i = 0; i < gThis.m_iChildIndex; i++) {
            if (gThis.m_agFields[i] == undefined) {
                continue;
            }
            if (!gThis.m_agFields[i].Validate(bNoRequests)) {
                bResult = false;
            }
        }
        return bResult;
    };

    gThis.AddRepetition = function (i) {
        if (i == undefined) {
            i = 'new-' + gThis.m_iRepetitionIndex++;
        }

        var oOptions = GCore.Duplicate(gThis.m_oOptions, true);
        oOptions.sName = i;
        oOptions.agFields = [];
        oOptions.oRepeat = {};
        var gRepetition = new GFormRepetition(oOptions);
        gRepetition._Constructor();
        gThis._PrepareChild(gRepetition);
        gThis.m_jNode.append(gRepetition.Render());
        gRepetition.OnInit();
        gRepetition.m_jNode.find('.' + gThis._GetClass('DeleteButton')).attr('rel', i).click(function () {
            gThis.RemoveRepetition($(this).attr('rel'));
            return false;
        });
        gRepetition.m_jNode.find('input').focus();
        gThis.m_oContainerRepetitions[i] = gRepetition;
        gThis.m_agFields[gThis.m_iChildIndex++] = gRepetition;
        if (GCore.ObjectLength(gThis.m_oContainerRepetitions) <= gThis.m_oOptions.oRepeat.iMin) {
            gThis.m_jNode.find('.' + gThis._GetClass('Repetition') + ' > .' + gThis._GetClass('DeleteButton')).css('display', 'none');
        }
        else {
            gThis.m_jNode.find('.' + gThis._GetClass('Repetition') + ' > .' + gThis._GetClass('DeleteButton')).css('display', 'block');
        }
        gRepetition.OnShow();
    };

    gThis.RemoveRepetition = function (i) {
        gRepetition = gThis.m_oContainerRepetitions[i];
        if (gRepetition == undefined) {
            return;
        }
        gRepetition.OnRemove();
        if (gRepetition.m_jNode != undefined) {
            gRepetition.m_jNode.remove();
        }
        for (var j in gThis.m_agFields) {
            if (gThis.m_oContainerRepetitions[i] == gThis.m_agFields[j]) {
                delete gThis.m_agFields[j];
            }
        }
        delete gThis.m_oContainerRepetitions[i];
        if (GCore.ObjectLength(gThis.m_oContainerRepetitions) <= gThis.m_oOptions.oRepeat.iMin) {
            gThis.m_jNode.find('.' + gThis._GetClass('Repetition') + ' > .' + gThis._GetClass('DeleteButton')).css('display', 'none');
        }
        if (GCore.ObjectLength(gThis.m_oContainerRepetitions) < gThis.m_oOptions.oRepeat.iMax) {
            gThis.m_jAdd.css('display', 'block');
        }
    };

    gThis.Populate = function (mData) {

        if (gThis.m_bRepeatable) {
            gThis.AddRepetition();
        }
        if (mData == undefined) {
            return;
        }
        var i;
        if (gThis.m_bRepeatable) {
            if (!GCore.ObjectLength(mData)) {
                return;
            }
            var aKeys = [];
            for (i in mData) {
                aKeys.push(i);
            }
//			aKeys.sort();
            if (!gThis.m_gForm.m_bPopulatedWithDefaults) {
                for (var k in gThis.m_oContainerRepetitions) {
                    gThis.RemoveRepetition(k);
                }
                gThis.m_jNode.find('.' + gThis._GetClass('Repetition')).remove();
            }
            for (i = 0; i < aKeys.length; i++) {
                var j = aKeys[i];
                if (gThis.m_oContainerRepetitions[j] == undefined) {
                    gThis.AddRepetition(j);
                }
                gThis.m_oContainerRepetitions[j].Populate(mData[j]);
            }
        }
        else {
            for (i = 0; i < gThis.m_oOptions.agFields.length; i++) {
                if ((gThis.m_oOptions.agFields[i].m_oOptions.sName != undefined)) {
                    gThis.m_oOptions.agFields[i].Populate(mData[gThis.m_oOptions.agFields[i].m_oOptions.sName]);
                }
            }
        }
    };

    gThis.PopulateErrors = function (mData) {
        if (mData == undefined) {
            return;
        }

        var i;
        if (gThis.m_bRepeatable) {
            for (i in mData) {
                if (gThis.m_oContainerRepetitions[i] != undefined) {
                    gThis.m_oContainerRepetitions[i].PopulateErrors(mData[i]);
                }
            }
        }
        else {
            for (i = 0; i < gThis.m_oOptions.agFields.length; i++) {
                if ((gThis.m_oOptions.agFields[i].m_oOptions.sName != undefined)) {

                    gThis.m_oOptions.agFields[i].PopulateErrors(mData[gThis.m_oOptions.agFields[i].m_oOptions.sName]);
                }
            }
        }
    };

    gThis.Focus = function () {
        if (gThis.m_bRepeatable) {
            var aKeys = [];
            for (i in gThis.m_oContainerRepetitions) {
                aKeys.push(i);
            }
            aKeys.sort();
            for (i = 0; i < aKeys.length; i++) {
                var j = aKeys[i];
                if (gThis.m_oContainerRepetitions[j].Focus()) {
                    return true;
                }
            }
        }
        else {
            for (var i = 0; i < gThis.m_oOptions.agFields.length; i++) {
                if (gThis.m_oOptions.agFields[i].Focus()) {
                    return true;
                }
            }
        }
        return false;
    };

    gThis._Initialize = function () {
        if (gThis.m_bRepeatable && !gThis.m_agFields.length) {
            for (var i = 0; i < gThis.m_oOptions.oRepeat.iMin; i++) {
                gThis.AddRepetition();
            }
        }
    };

}, oDefaults);
/*
* FIELD
* Abstract class with base functionality used by all field types.
*/

var oDefaults = {
	oClasses: {
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition'
	},
	oImages: {
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png'
	},
	aoRules: [],
	sComment: ''
};

var GFormField = GCore.ExtendClass(GFormNode, function() {

	var gThis = this;

	gThis.m_jField = $('empty');
	gThis.m_oAlerts = {};
	gThis.m_oRepetitionLookup = {};
	gThis.m_sRepetitionCounter = 0;
	gThis.m_oRepetitions = {};
	gThis.m_bAlreadyPopulated = false;
	gThis.m_bSkipValidation = false;
	gThis.m_afDependencyTriggers = [];

	gThis.Populate = function(mData) {
		var i;
		if (gThis.m_bRepeatable) {
			if (GCore.ObjectLength(mData) && !gThis.m_bAlreadyPopulated) {
				gThis.m_bAlreadyPopulated = true;
				for (i in gThis.m_oRepetitions) {
					gThis.RemoveRepetition(i);
				}
			}
			for (i in mData) {
				if (gThis.m_oRepetitions[i] == undefined) {
					gThis.AddRepetition(i);
				}
				gThis.SetValue(mData[i], i);
			}
		}
		else {
			gThis.SetValue(mData);
		}
	};

	gThis.AddRepetition = function(sRepetition) {
		if (sRepetition == undefined) {
			sRepetition = 'new-' + gThis.m_sRepetitionCounter++;
		}
		var jRepetition = gThis._AddField(sRepetition);
		gThis.m_jNode.append(jRepetition);
		gThis.m_oRepetitions[sRepetition] = jRepetition;
		jRepetition.get(0).sRepetition = sRepetition;
		gThis._GetField(sRepetition).get(0).sRepetition = sRepetition;
		gThis._InitializeEvents(sRepetition);
		gThis._UpdateRepetitionButtons();
		gThis.OnInitRepetition(sRepetition);
		return sRepetition;
	};

	gThis.OnInitRepetition = function(sRepetition) {};

	gThis.RemoveRepetition = function(sRepetition) {
		gThis._RemoveAlerts(sRepetition);
		gThis.m_oRepetitions[sRepetition].addClass('to-remove');
		gThis.m_jField = gThis.m_jField.not('.to-remove *');
		gThis.m_oRepetitions[sRepetition].remove();
		delete gThis.m_oRepetitions[sRepetition];
		gThis._UpdateRepetitionButtons();
	};

	gThis.PopulateErrors = function(mData) {
		if ((mData == undefined) || (mData == '')) {
			return;
		}
		if (gThis.m_bRepeatable) {
			for (var i in mData) {
				if (gThis.m_oRepetitions[i] == undefined) {
					gThis.AddRepetition(i);
				}
				gThis.SetError(mData[i], i);
			}
		}
		else {
			gThis.SetError(mData);
		}
	};

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		return gThis._GetField(sRepetition).val();
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		gThis._GetField(sRepetition).val(mValue);
	};

	gThis.Validate = function(bNoRequests, sRepetition) {
		if (gThis.m_bRepeatable && (sRepetition == undefined)) {
			for (var j in gThis.m_oRepetitions) {
				gThis._RemoveAlerts(j);
			}
			if (gThis.m_bIgnore || (gThis.m_oOptions.aoRules == undefined)) {
				return true;
			}
			var bResult = true;
			for (j in gThis.m_oRepetitions) {
				for (var i = 0; i < gThis.m_oOptions.aoRules.length; i++) {
					if (!GFormRule.Check(gThis.m_oOptions.aoRules[i], gThis, bNoRequests, j)) {
						bResult = false;
					}
				}
			}
			return bResult;
		}
		else {
			gThis._RemoveAlerts(sRepetition);
			if (gThis.m_bIgnore || (gThis.m_oOptions.aoRules == undefined)) {
				return true;
			}
			for (var i = 0; i < gThis.m_oOptions.aoRules.length; i++) {
				if (!GFormRule.Check(gThis.m_oOptions.aoRules[i], gThis, bNoRequests, sRepetition)) {
					return false;
				}
			}
		}
		return true;
	};

	gThis.OnRemove = function() {
		gThis._RemoveAlerts();
	};

	gThis._RemoveAlerts = function(sRepetition) {
		var i;
		if (sRepetition == undefined) {
			if (gThis.m_bRepeatable) {
				for (var j in gThis.m_oRepetitions) {
					for (i in gThis.m_oAlerts[j]) {
						GAlert.Destroy(gThis.m_oAlerts[j][i]);
					}
				}
			}
			else {
				for (i in gThis.m_oAlerts[0]) {
					GAlert.Destroy(gThis.m_oAlerts[0][i]);
				}
			}
		}
		else {
			if (gThis.m_oAlerts[sRepetition] != undefined) {
				for (i in gThis.m_oAlerts[sRepetition]) {
					GAlert.Destroy(gThis.m_oAlerts[sRepetition][i]);
				}
			}
		}
		gThis._GetField(sRepetition).closest('.' + gThis._GetClass('FieldSpan')).parent().find('.required').html('');
		gThis._GetField(sRepetition).closest('.' + gThis._GetClass('FieldSpan')).parent().removeClass(gThis._GetClass('Invalid'));

	};

	gThis.StartWaiting = function(sRepetition) {
		var jWaiting = $('<span class="' + gThis._GetClass('Waiting') + '"/>');
		gThis._GetField(sRepetition).closest('.' + gThis._GetClass('FieldSpan')).parent().append(jWaiting);
		jWaiting.css('display', 'none').fadeIn(250);
	};

	gThis._GetField = function(sRepetition) {
		if (!gThis.m_bRepeatable || (sRepetition == undefined)) {
			return gThis.m_jField;
		}
		if (gThis.m_oRepetitions[sRepetition] == undefined) {
			return $();
		}
		gThis.m_oRepetitions[sRepetition].addClass('to-retrieve');
		var jField = gThis.m_jField.filter('.to-retrieve *');
		gThis.m_oRepetitions[sRepetition].removeClass('to-retrieve');
		return jField;
	};

	gThis.StopWaiting = function(sRepetition) {
		gThis._GetField(sRepetition).closest('.' + gThis._GetClass('FieldSpan')).parent().find('.' + gThis._GetClass('Waiting')).fadeOut(250, function() {$(this).remove();});
	};

	gThis.ValidationResult = function(bResult, sMessage, sRepetition) {
		if (!bResult) {
			gThis.SetError(sMessage, sRepetition);
		}
		return bResult;
	};

	gThis.SetError = function(sMessage, sRepetition) {
		gThis._GetField(sRepetition).closest('.' + gThis._GetClass('FieldSpan')).parent().addClass(gThis._GetClass('Invalid'));
		gThis._GetField(sRepetition).closest('.' + gThis._GetClass('FieldSpan')).parent().find('.required').html(sMessage).fadeOut(150, function() {
			$(this).fadeIn(150, function() {
				$(this).fadeOut(150, function() {
					$(this).fadeIn(150, function() {  });
				});
			});
		});
	};

	gThis._InitializeEvents = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (gThis.m_bRepeatable && (sRepetition == undefined)) {
			return;
		}
		var jField = gThis._GetField(sRepetition);
		jField.focus(gThis.OnFocus);
		jField.blur(gThis.OnBlur);
		jField.each(function() {
			$(this).unbind('change', gThis.OnValidate).change(gThis.OnValidate);
		});
	};

	gThis._ActivateFocusedTab = function(eEvent) {
		if ($(eEvent.currentTarget).closest('.ui-tabs-panel').length && $(eEvent.currentTarget).closest('.ui-tabs-panel').hasClass('ui-tabs-hide')) {
			gThis.m_gForm.m_bDontFocus = true;
			$(eEvent.currentTarget).closest('.ui-tabs').tabs('select', $(eEvent.currentTarget).closest('.ui-tabs-panel').attr('id'));
		}
	};

	gThis.OnFocus = function(eEvent) {
		gThis._ActivateFocusedTab(eEvent);
	};

	gThis.OnBlur = function(eEvent) {};

	gThis.OnValidate = GEventHandler(function(eEvent) {
		if (!$(this).closest('.GFormNode').get(0).gNode.m_bSkipValidation) {
			gThis.Validate(false, this.sRepetition);
		}
	});

	gThis.Focus = function(sRepetition) {
		gThis._GetField(sRepetition).eq(0).focus();
		return true;
	};

	gThis._UpdateRepetitionButtons = function() {
		if (!gThis.m_bRepeatable) {
			return;
		}
		for (var j in gThis.m_oRepetitions) {
			gThis.m_oRepetitions[j].find('.' + gThis._GetClass('RemoveRepetition') + ', .' + gThis._GetClass('AddRepetition')).remove();
		}
		var jRepetitions = gThis.m_jNode.find('.' + gThis._GetClass('FieldRepetition'));
		var jTrigger;
		for (var i = 0; i < jRepetitions.length; i++) {
			if ((i == jRepetitions.length - 1) && (GCore.ObjectLength(gThis.m_oRepetitions) < gThis.m_oOptions.oRepeat.iMax)) {
				jTrigger = $('<a href="#" class="' + gThis._GetClass('AddRepetition') + '"/>').append('<img src="' + gThis._GetImage('AddRepetition') + '" alt="' + GForm.Language.add_field_repetition + '" title="' + GForm.Language.add_field_repetition + '"/>');
				jRepetitions.eq(i).find('.' + gThis._GetClass('FieldSpan')).after(jTrigger);
				jTrigger.click(function() {
					gThis.AddRepetition();
					return false;
				});
			}
			if (jRepetitions.length > 1) {
				jTrigger = $('<a href="#" class="' + gThis._GetClass('RemoveRepetition') + '"/>').append('<img src="' + gThis._GetImage('RemoveRepetition') + '" alt="' + GForm.Language.remove_field_repetition + '" title="' + GForm.Language.remove_field_repetition + '"/>');
				jRepetitions.eq(i).find('.' + gThis._GetClass('FieldSpan')).after(jTrigger);
				var sRepetition = jRepetitions.get(i).sRepetition;
				jTrigger.click(function() {
					gThis.RemoveRepetition($(this).closest('.' + gThis._GetClass('FieldRepetition')).get(0).sRepetition);
					return false;
				});
			}
		}
	};

}, oDefaults);
/*
* CHECKBOX
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-checkbox',
		sFieldSpanClass: 'field',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition'
	},
	sFieldType: 'checkbox',
	sDefault: '',
	aoRules: [],
	sComment: ''
};

var GFormCheckbox = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		return (gThis._GetField(sRepetition).is(':checked')) ? gThis._GetField(sRepetition).attr('value') : '';
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (gThis._GetField(sRepetition).attr('value') == mValue) {
			gThis._GetField(sRepetition).parent().checkCheckboxes();
		}
		else {
			gThis._GetField(sRepetition).parent().unCheckCheckboxes();
		}
	};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		gThis.m_jNode.append(jLabel);
		gThis.m_jHiddenField = $('<input type="hidden" name="' + gThis.GetName() + '" value="0"/>');
		gThis.m_jField = $('<input type="' + gThis.m_oOptions.sFieldType + '" name="' + gThis.GetName() + '" id="' + gThis.GetId() + '" value="1"/>');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(gThis.m_jHiddenField).append(gThis.m_jField));
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jRepetitionNode.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jRepetitionNode);
	};

	gThis.OnFocus = function(eEvent) {
		var jField = $(eEvent.currentTarget);
		jField.closest('.' + gThis._GetClass('FieldSpan')).addClass(gThis._GetClass('Focused'));
		gThis._ActivateFocusedTab(eEvent);
	};

	gThis.OnBlur = function(eEvent) {
		var jField = $(eEvent.currentTarget);
		jField.closest('.' + gThis._GetClass('FieldSpan')).removeClass(gThis._GetClass('Focused'));
	};

	gThis.Reset = function() {
		gThis.m_jField.val(gThis.m_oOptions.sDefault);
	};

}, oDefaults);
/*
* FIELDSET LANGUAGE
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sRepetitionClass: 'GFormRepetition',
		sAddButtonClass: 'add-repetition',
		sDeleteButtonClass: 'delete-repetition'
	},
	oImages: {
		sDelete: 'images/buttons/small-delete.png',
		sAdd: 'images/buttons/small-add.png'
	},
	aoFields: [],
	aoLanguages: [],
	agFields: [],
	oRepeat: {
		iMin: 1,
		iMax: 1
	},
	sClass: ''
};

var GFormLanguageFieldset = GCore.ExtendClass(GFormLanguageContainer, function() {

	var gThis = this;

	gThis.m_jAdd;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<fieldset/>');
		gThis.m_jNode.addClass(gThis.m_oOptions.sClass);
		gThis.m_jNode.attr('id', gThis.m_oOptions.sName);
		gThis.m_jNode.addClass('repeatable');

	};

	gThis._InitializeEvents = function() {
		gThis.m_jNode.bind('GFormShow', function() {
			gThis.m_gForm.m_bFocused = false;
			gThis.OnShow();
		});
		return false;
	};

	gThis.OnShow = function() {

		var aKeys = [];
		for (i in gThis.m_oContainerRepetitions) {
			aKeys.push(i);
		}
		aKeys.sort();
		for (i = 0; i < aKeys.length; i++) {
			var j = aKeys[i];
			gThis.m_oContainerRepetitions[j].OnShow();
			if (!gThis.m_gForm.m_bFocused) {
				gThis.m_gForm.m_bFocused = gThis.m_oContainerRepetitions[j].Focus();
			}
		}

		return gThis.m_gForm.m_bFocused;
	};

}, oDefaults);
/*
* FIELDSET
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sRepetitionClass: 'GFormRepetition',
		sAddButtonClass: 'add-repetition',
		sDeleteButtonClass: 'delete-repetition'
	},
	oImages: {
		sDelete: 'images/buttons/small-delete.png',
		sAdd: 'images/buttons/small-add.png'
	},
	aoFields: [],
	agFields: [],
	oRepeat: {
		iMin: 1,
		iMax: 1
	},
	sClass: ''
};

var GFormNestedFieldset = GCore.ExtendClass(GFormContainer, function() {

	var gThis = this;

	gThis.m_jAdd;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<fieldset/>');
		gThis.m_jNode.addClass(gThis.m_oOptions.sClass);
		gThis.m_jNode.attr('id', gThis.m_oOptions.sName);
		gThis.m_jNode.append('<legend><span>' + gThis.m_oOptions.sLabel + '</span></legend>');
		if (!gThis.m_bRepeatable) {
			gThis.m_jNode.append(gThis.RenderChildren());
		}
		else {
			gThis.m_jNode.addClass('repeatable');
			gThis.m_jAdd = $('<a href="#" class="' + gThis._GetClass('AddButton') + '"/>');
			gThis.m_jAdd.append('<img src="' + gThis._GetImage('Add') + '" alt="' + GForm.Language.add_repetition + '" title="' + GForm.Language.add_repetition + '"/>');
			gThis.m_jNode.append(gThis.m_jAdd);
			if (GCore.ObjectLength(gThis.m_oContainerRepetitions) >= gThis.m_oOptions.oRepeat.iMax) {
				gThis.m_jAdd.css('display', 'none');
			}
		}
	};

	gThis._InitializeEvents = function() {
		gThis.m_jNode.bind('GFormShow', function() {
			gThis.m_gForm.m_bFocused = false;
			gThis.OnShow();
		});
		if (gThis.m_bRepeatable) {
			gThis.m_jAdd.click(function() {
				gThis.AddRepetition();
				if (GCore.ObjectLength(gThis.m_oContainerRepetitions) >= gThis.m_oOptions.oRepeat.iMax) {
					gThis.m_jAdd.css('display', 'none');
				}
				if (GCore.ObjectLength(gThis.m_oContainerRepetitions) > gThis.m_oOptions.oRepeat.iMin) {
					gThis.m_jNode.find('.' + gThis._GetClass('Repetition') + ' > .' + gThis._GetClass('DeleteButton')).css('display', 'block');
				}
				return false;
			});
		}
	};

	gThis.OnShow = function() {
		if (gThis.m_bRepeatable) {
			var aKeys = [];
			for (i in gThis.m_oContainerRepetitions) {
				aKeys.push(i);
			}
			aKeys.sort();
			for (i = 0; i < aKeys.length; i++) {
				var j = aKeys[i];
				gThis.m_oContainerRepetitions[j].OnShow();
				if (!gThis.m_gForm.m_bFocused) {
					gThis.m_gForm.m_bFocused = gThis.m_oContainerRepetitions[j].Focus();
				}
			}
		}
		else {

			for (var i = 0; i < gThis.m_oOptions.agFields.length; i++) {
				gThis.m_oOptions.agFields[i].OnShow();
				if (!gThis.m_gForm.m_bFocused) {
					gThis.m_gForm.m_bFocused = gThis.m_oOptions.agFields[i].Focus();
				}
			}
		}

		gThis.m_jNode.find('input,select').bind('change', GEventHandler(function(eEvent) {
			var jPanel = $(eEvent.currentTarget).closest('.ui-tabs-panel');
			$('a[href="#' + jPanel.attr('id') + '"]').addClass('changed');
		}));

		return gThis.m_gForm.m_bFocused;
	};

}, oDefaults);
/*
* FORM
*/

var oDefaults = {
	sName: '',
	sFormName: '',
	sClass: '',
	oClasses: {
		sBlockClass: 'block',
		sButtonClass: 'button',
		sButtonImageRightClass: 'right',
		sNavigationClass: 'navigation',
		sPreviousClass: 'previous',
		sNextClass: 'next',
		sInputWithImageClass: 'with-image',
		sActionsClass: 'actions',
		sTabbedClass: 'tabbed'
	},
	oImages: {
		sArrowLeftGray: 'images/icons/buttons/arrow-left-gray.png',
		sArrowRightGreen: 'images/icons/buttons/arrow-right-green.png',
		sSave: 'images/icons/buttons/check.png'
	},
	aoFields: [],
	agFields: [],
	oValues: {},
	iTabs: 0
};

var GForm = GCore.ExtendClass(GFormContainer, function() {

	var gThis = this;

	gThis.m_bDontFocus = false;
	gThis.m_bPopulatedWithDefaults = false;
	gThis.m_bLocked = false;
	gThis.m_bFocused = false;
	gThis.m_bEnableAjax = true;
	gThis.m_ogFields = {};
	gThis.m_oLocks = {};
	gThis.m_iLockId = 0;

	gThis._Constructor = function() {
		GForm.s_agForms[gThis.m_oOptions.sFormName] = gThis;
		gThis.m_gForm = gThis;
		gThis.m_bEnableAjax = gThis.m_oOptions.bEnableAjax;
		gThis.m_gParent = GCore.NULL;
		$(gThis).addClass(gThis.m_oOptions.sClass);
		gThis._ConstructChildren();
		$(gThis).append('<div class="' + gThis._GetClass('Actions') + '"/>');
		$(gThis).append(gThis.Render());
		gThis.MakeTabs();
		gThis.Populate(gThis.m_oOptions.oValues);
		gThis.m_bPopulatedWithDefaults = true;
		gThis.PopulateErrors(gThis.m_oOptions.oErrors);
		gThis.OnInit();
		gThis._InitButtons();
	};

	gThis._InitializeEvents = function() {
		if(gThis.m_bEnableAjax){
			$(gThis).submit(gThis.AjaxSubmit);
		}else{
			$(gThis).submit(gThis.OnSubmit);
		}
	};

	gThis.Lock = function(sTitle, sMessage) {
		gThis.m_oLocks[gThis.m_iLockId++] = {
			sTitle: sTitle,
			sMessage: sMessage
		};
		return gThis.m_iLockId - 1;
	};

	gThis.Unlock = function(iLockId) {
		delete gThis.m_oLocks[iLockId];
	};

	gThis.OnSubmit = function() {
		for (var i in gThis.m_oLocks) {
			GAlert(gThis.m_oLocks[i].sTitle, gThis.m_oLocks[i].sMessage);
			return false;
		}
		var bResult = gThis.Validate(true);
		if (bResult) {
			GCore.StartWaiting();
		}
		else
		{
			$(gThis).find('.invalid').first().find('input, select').focus();
			GAlert.DestroyAll();
			GAlert(GForm.Language.form_data_invalid,'', {
				bAutoFocus: false
			});
			window.setTimeout(GAlert.DestroyAll, 15000);
		}
		return bResult;
	};

	gThis.Submit = function(sAction) {
		$(gThis).find('.' + gThis._GetClass('Actions')).empty();
		if ((sAction != undefined) && (sAction != '')) {
			$(gThis).find('.' + gThis._GetClass('Actions')).append('<input type="hidden" name="_Action_' + sAction + '" value="1"/>');
		}

		if(gThis.m_bEnableAjax){
			gThis.AjaxSubmit();
		}else{
			$(gThis).submit();
		}

	};

	gThis.OnAjaxSubmitResponse = function(oResponse){
		GCore.StopWaiting();
		gThis.m_bLocked = false;
		gThis.m_oOptions.agFields = gThis.m_agFields;

		if(oResponse.valid == false){
			gThis.PopulateErrors(oResponse.error);
		}else{
			if(oResponse.next == false && oResponse.continue == false){
				window.location.href = oResponse.redirectTo;
			}

			if(oResponse.next == true && oResponse.continue == false){
				gThis.Reset();
				GNotification('Changes added!');
			}

			if(oResponse.next == false && oResponse.continue == true){
                window.location.reload(false);
			}
		}
	};

	gThis.AjaxSubmit = function() {
		if(gThis.m_bLocked == true){
			return false;
		}

        var bResult = gThis.Validate(true);
		if (bResult) {
            gThis.m_bLocked = true;
    		GCore.StartWaiting();
    		var values = {};
    		$.each($(gThis).serializeArray(), function(i, field) {
    			values[field.name] = field.value;
    		});

    		GF_Ajax_Request($(gThis).attr('action'), values, gThis.OnAjaxSubmitResponse);
        }else{
            $(gThis).find('.invalid').first().find('input, select').focus();
			GAlert.DestroyAll();
			GAlert(GForm.Language.form_data_invalid,'', {
				bAutoFocus: false
			});
			window.setTimeout(GAlert.DestroyAll, 15000);
        }

		return false;
	};

	gThis._InitButtons = function() {
		var jButtons = $('a[href="#' + $(gThis).attr('id') + '"]');
		jButtons.each(function() {
			var jButton = $(this);
			var sRel = jButton.attr('rel').match(/^[^\[]+/)[0];
			var sAction = jButton.attr('rel').match(/\[[^\]]+\]$/);
			if (sAction != null) {
				sAction = sAction[0].substr(1, sAction[0].length - 2);
			}
			else {
				sAction = null;
			}
			switch (sRel) {
				case 'submit':
					jButton.click(function() {
						gThis.Submit(sAction);
						return false;
					});
					break;
				case 'reset':
					jButton.click(function() {
						gThis.Reset();
						return false;
					});
					break;
			}
		});
	};

	gThis.Render = function() {
		return gThis.RenderChildren();
	};

	gThis.Reset = function() {
		gThis.OnReset();
		gThis.m_bPopulatedWithDefaults = false;
		gThis.m_oOptions.agFields = gThis.m_agFields;
		gThis.Populate(gThis.m_oOptions.oValues);
		gThis.m_bPopulatedWithDefaults = true;
	};

	gThis.MakeTabs = function() {
		if ($(gThis).is('.attributeGroupEditor, .statusChange, .editOrder')) {
			gThis.OnShow();
			return;
		}
		var oThisOptions = gThis.m_oOptions;
		$(gThis).GTabs({
			iType: gThis.m_oOptions.iTabs == GForm.TABS_HORIZONTAL
		});
		gThis.m_oOptions = oThisOptions;
	};

    gThis.GetFieldForForm = function(sName) {
		var asName = sName.split('.');
		if (asName.length == 2) {
			if (asName[0] != gThis.m_oOptions.sFormName) {
				return GForm.GetForm(asName[0]).GetField(asName[1]);
			}
			sName = asName[1];
		}
		return gThis.m_ogFields[sName];
	};

	gThis.GetField = function(sName) {
		return gThis.m_ogFields[sName];
	};

	gThis._Constructor();

}, oDefaults);

GForm.INFINITE = 99999;
GForm.TABS_VERTICAL = 0;
GForm.TABS_HORIZONTAL = 1;
GForm.s_agForms = {};

GForm.GetForm = function(sName) {
	return GForm.s_agForms[sName];
};

new GPlugin('GForm', oDefaults, GForm);

/*
* LAYER SELECTOR
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-tree',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sItemNameClass: 'item-name',
		sExpanderClass: 'expander',
		sExpandedClass: 'expanded',
		sActiveClass: 'active',
		sButtonClass: 'button',
		sExpandAllClass: 'expand-all',
		sRetractAllClass: 'retract-all'
	},
	oImages: {
		sAdd: 'images/icons/buttons/add.png',
		sDelete: 'images/icons/buttons/delete.png',
		sSave: 'images/icons/buttons/save.png',
		sRestore: 'images/icons/buttons/clean.png',
		sWaiting: 'images/icons/loading/indicator.gif'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	oStores: {},
	sActive: ''
};

var GFormShopSelector = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_jTree;
	gThis.m_jOptions;
	gThis.m_oStores;
	gThis.m_jExpandAll;
	gThis.m_jRetractAll;
	gThis.m_jFieldWrapper;
	gThis.m_jItemPlaceholder;
	gThis.m_jItemDragged;
	gThis.m_oStores = {};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jField = $('<input type="hidden"/>');
		gThis.m_jNode.append(gThis.m_jField);
		gThis.m_jFieldWrapper = $('<div/>');
		gThis.m_jNode.append(gThis.m_jFieldWrapper);
		gThis.m_jNode.append('<label>' + gThis.m_oOptions.sLabel + '</label>');
		gThis.m_jExpandAll = $('<a href="#"/>').text(GForm.Language.tree_expand_all);
		gThis.m_jRetractAll = $('<a href="#"/>').text('Zaznacz wszystkie');
		gThis.m_jTree = $('<ul/>');
		gThis.m_jNode.append($('<div class="tree-wrapper"/>').append(gThis.m_jTree));
		gThis.Update();
		window.setTimeout(gThis.ResetExpansion, 500);
	};

	gThis.OnRetractAll = function(eEvent) {
		gThis.m_jTree.find('li:has(li)').removeClass(gThis._GetClass('Expanded'));
		return false;
	};

	gThis.OnExpandAll = function(eEvent) {
		gThis.m_jTree.find('li:has(li)').addClass(gThis._GetClass('Expanded'));
		return false;
	};

	gThis.GetOrder = function() {
		var jItems = gThis.m_jTree.find('li');
		var aoItems = [];
		for (var i = 0; i < jItems.length; i++) {
			var sId = jItems.eq(i).get(0).sId;
			var sParent = '';
			if (jItems.eq(i).parent().closest('li').length) {
				sParent = jItems.eq(i).parent().closest('li').get(0).sId;
			}
			var jSiblings = jItems.eq(i).parent().children('li');
			var iWeight = jSiblings.length - jSiblings.index(jItems.eq(i)) - 1;
			aoItems.push({
				id: sId,
				parent: sParent,
				weight: iWeight
			});
		}
		return aoItems;
	};

	gThis.GetValue = function(sRepetition) {

		return gThis.m_jFieldWrapper.find('input:first').attr('value');

		if (gThis.m_jField == undefined) {
			return '';
		}
		var aValues = [];
		var jValues = gThis._GetField(sRepetition).filter(':checked');
		for (var i in jValues) {
			aValues.push(jValues.eq(i).attr('value'));
		}
		return aValues;
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		gThis._GetField(sRepetition).val(mValue).change();
	};

	gThis.ResetExpansion = function() {
		gThis.m_jTree.find('li').removeClass(gThis._GetClass('Expanded'));
		gThis.m_jTree.find('li.' + gThis._GetClass('Active')).parents('li').andSelf().filter(':has(li)').addClass(gThis._GetClass('Expanded'));
		gThis.m_jTree.find('li > label > input:checked').parents('li').andSelf().filter(':has(li)').addClass(gThis._GetClass('Expanded'));
	};

	gThis._WriteSubtree = function(jParent, sParent) {
		if (sParent == undefined) {
			sParent = null;
		}
		var oStores = GCore.FilterObject(gThis.m_oOptions.oStores, function(oStore) {return (oStore.parent == sParent);});
		var aIterationArray = GCore.GetIterationArray(oStores, function(oA, oB) {return (oA.weight < oB.weight);});
		var iLength = aIterationArray.length;
		for (var i = 0; i < iLength; i++) {
			var sId = aIterationArray[i];
			var oStore = oStores[sId];
			jParent.append(gThis._WriteItem(sId, oStore));
		}
	};

	gThis._WriteItem = function(sId, oStore) {
		var jLi = $('<li/>');
		jLi.get(0).sId = sId;
		if (gThis.m_oOptions.sActive == sId) {
			jLi.addClass(gThis._GetClass('Active'));
		}

		if(oStore.type == 'store'){

			jLi.append($('<label class="' + gThis._GetClass('ItemName') + '"/>').css({'font-size':'13px','font-weight':'bold'}).append(oStore.name));

		}else{
			var jField = $('<input type="checkbox" value="' + sId + '"/>');
			if (gThis.m_jFieldWrapper.find('input[value="' + sId + '"]').length) {
				jField.click();
				jField.attr('checked', 'checked');
			}
			if((gThis.m_oOptions.bGlobal == true) && GCore.iActiveView > 0){
				jField.attr('disabled','disabled');
			}
			jLi.append($('<label class="' + gThis._GetClass('ItemName') + '"/>').append(jField).append(oStore.name));
		}


		var jUl = $('<ul/>');
		gThis._WriteSubtree(jUl, sId);
		jLi.append(jUl);
		return jLi;
	};

	gThis.UpdateExpanders = function() {
		gThis.m_jTree.find('li::not(:has(li))').removeClass(gThis._GetClass('Expanded')).children('.' + gThis._GetClass('Expander')).css('display', 'none');
		gThis.m_jTree.find('li:has(li) > .' + gThis._GetClass('Expander')).css('display', 'block');
	};

	gThis.Update = function() {
		gThis.m_jTree.empty();
		gThis._WriteSubtree(gThis.m_jTree);
		gThis._InitializeNodeEvents();
		gThis.ResetExpansion();
	};

	gThis.Populate = function(mValue) {

		if ((mValue == undefined) || (mValue == '')) {
			mValue = [];
		}
		else if (!(mValue instanceof Array)) {
			mValue = [mValue];
		}

			gThis.m_jNode.unCheckCheckboxes();
			gThis.m_jFieldWrapper.empty();
			for (var i in mValue) {
				if (i == 'toJSON') {
					continue;
				}

				gThis.m_jFieldWrapper.append('<input type="hidden" name="' + gThis.GetName() + '[]" value="' + mValue[i] + '"/>');
				gThis.m_jNode.find('input:checkbox[value="v' + mValue[i] + '"]').parent().checkCheckboxes();
			}

		gThis.ResetExpansion();
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis.m_bShown = true;
		}
		gThis.OnExpandAll();
	};

	gThis._OnClick = GEventHandler(function(eEvent) {
		GCore.StartWaiting();
	});

	gThis._InitializeEvents = function(sRepetition) {
		gThis.m_jExpandAll.click(gThis.OnExpandAll);
		gThis.m_jRetractAll.click(gThis.OnRetractAll);
		gThis._InitializeNodeEvents();
	};

	gThis._OnSelect = GEventHandler(function(eEvent) {

		var sStoreLabel = $(this).attr('value');

		var oStores = GCore.FilterObject(gThis.m_oOptions.oStores, function(oStore) {
			return (oStore.label == sStoreLabel);
		});

		var aoStore = oStores[sStoreLabel];
		var iStoreId = aoStore['id'];

		gThis.m_jFieldWrapper.find('input[value="' + iStoreId + '"]').remove();

		if ($(this).is(':checked')) {

			var jInput = $('<input type="hidden" name="' + gThis.GetName() + '[]" value="' + iStoreId + '"/>');
			gThis.m_jFieldWrapper.append(jInput);

		}
	});

	gThis._InitializeNodeEvents = function() {
		gThis.m_jTree.find('.' + gThis._GetClass('Expander')).unbind('click').click(function() {
			if ($(this).closest('li').hasClass(gThis._GetClass('Expanded'))) {
				$(this).closest('li').find('li').andSelf().removeClass(gThis._GetClass('Expanded'));
			}
			else {
				$(this).closest('li').addClass(gThis._GetClass('Expanded'));
				gThis._Expand($(this).closest('li'));
			}
		});
		gThis.m_jTree.find('input').unbind('click').click(gThis._OnSelect);
	};

	gThis._Expand = function(jParentLi) {
		var sId = jParentLi.get(0).sId;
		if (gThis.m_oStores[sId] != undefined) {
			return;
		}
	};

	gThis._OnChildrenLoaded = GEventHandler(function(eEvent) {
		var jUl = $('<ul/>');
		gThis.m_oStores[eEvent.parentNode.get(0).sId] = true;
		for (var i in eEvent.children) {
			jUl.append(gThis._WriteItem(i, eEvent.children[i]));
		}
		eEvent.parentNode.find('ul').remove();
		eEvent.parentNode.append(jUl);
		gThis._InitializeNodeEvents();
	});

}, oDefaults);
/*
* LAYOUT BOX SCHEME LIVE PREVIEW
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	sAlt: '',
	sSrc: '',
	oClasses: {
		sFieldClass: 'field-layout-box-scheme-preview'
	},
	sBoxName: '',
	sBoxScheme: '',
	sLayoutBoxTpl: '',
	sBoxTitle: 'Lorem Ipsum',
	sBoxContent: 'Lorem ipsum dolor sit amet enim.'
};

var GFormLayoutBoxSchemePreview = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_oValues = {};
	gThis.m_jWindow;
	gThis.m_bWindowLoaded = false;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jWindow = $('<iframe src="' + GCore.DESIGN_PATH + '_data_frontend/blank.htm" id="' + gThis.GetId() + '__window" width="300" height="100"/>');
		gThis.m_jNode.append(gThis.m_jWindow);
		gThis.m_jUnmodified = $('<input type="hidden" name="' + gThis.GetName() + '[unmodified]" value="1"/>');
		gThis.m_jNode.append(gThis.m_jUnmodified);
	};

	gThis._BuildWindow = function() {
		gThis.m_bWindowLoaded = true;
		var sTpl = gThis.m_oOptions.sLayoutBoxTpl;
		var sBoxScheme = gThis.m_oOptions.sBoxScheme;
		if (sBoxScheme.length) {
			sBoxScheme = 'layout-box layout-box-scheme-' + sBoxScheme;
		}
		else {
			sBoxScheme = 'layout-box';
		}
		var sBoxId = gThis.m_oOptions.sBoxName;
		if (sBoxId.length) {
			sBoxId = 'layout-box-' + sBoxId;
		}
		sTpl = sTpl.replace(/\{{\ box.id \}}/, sBoxId);
		sTpl = sTpl.replace(/\{{\ box.schemeClass \}}/, sBoxScheme);
		sTpl = sTpl.replace(/\{{\ box.heading \}}/, gThis.m_oOptions.sBoxTitle);
		sTpl = sTpl.replace(/\{%\ block content \%}/, '<p>' + gThis.m_oOptions.sBoxContent + '</p>');
		sTpl = sTpl.replace(/\{%\ endblock \%}/, '');
		sTpl = sTpl.replace(/\{%\ block headerurl \%}/, '');
		sTpl = sTpl.replace(/\{%\ endblock \%}/, '');
		var jBox = $(sTpl);
		jBox.find('.layout-box-icons').prepend('<span class="layout-box-close layout-box-icon"/>');
		jBox.find('.layout-box-icons').prepend('<span class="layout-box-uncollapse layout-box-icon"/>');
		gThis.m_jWindow.contents().find('head').empty();
		for (var i = 0; i < gThis.m_oOptions.asStylesheets.length; i++) {
			gThis.m_jWindow.contents().find('head').append('<link rel="stylesheet" href="' + gThis.m_oOptions.asStylesheets[i] + '?id=' + Math.random() + '" type="text/css"/>');
		}
		gThis.m_jWindow.contents().find('body').css({
			padding: 0,
			margin: 0,
			background: 'transparent',
			width: 'auto',
			minWidth: 0
		}).html(jBox.wrap('<div/>').parent().html());
		gThis.Refresh();
	};

	gThis.OnShow = function() {
		if (gThis.m_bShown) {
			return;
		}
		gThis.m_bShown = true;
		gThis._BuildWindow();
		gThis.m_jWindow.load(gThis._BuildWindow);
		gThis.m_jUnmodified.val('0');
	};

	gThis._InitializeEvents = function() {
		for (var i in gThis.m_oOptions.asTriggers) {
			var gField = gThis.m_gForm.GetField(gThis.m_oOptions.asTriggers[i]);
			if (gField instanceof GFormColourSchemePicker) {
				gThis._ConnectColourSchemePicker(gField);
			}
			else if (gField instanceof GFormFontStyle) {
				gThis._ConnectFontStyle(gField);
			}
			else if (gField instanceof GFormBorder) {
				gThis._ConnectBorder(gField);
			}
			else if (gField instanceof GFormSelect) {
				gThis._ConnectSelect(gField);
			}
			else if (gField instanceof GFormLocalFile) {
				gThis._ConnectLocalFile(gField);
			}
			else if (gField instanceof GFormTextField) {
				gThis._ConnectTextField(gField);
			}
		}
		gThis.Update({});
	};

	gThis._ConnectColourSchemePicker = function(gField) {
		gField.m_jFieldColourType.change(gThis.Update);
		gField.m_jFieldColourStart.change(gThis.Update);
		gField.m_jFieldColourEnd.change(gThis.Update);
		gField.m_jFileField.change(gThis.Update);
	};

	gThis._ConnectFontStyle = function(gField) {
		gField.m_jFieldFontFamily.change(gThis.Update);
		gField.m_jFieldFontStyleBold.change(gThis.Update);
		gField.m_jFieldFontStyleUnderline.change(gThis.Update);
		gField.m_jFieldFontStyleItalic.change(gThis.Update);
		gField.m_jFieldFontStyleUppercase.change(gThis.Update);
		gField.m_jFieldFontColour.change(gThis.Update);
		gField.m_jFieldFontSize.change(gThis.Update);
	};

	gThis._ConnectBorder = function(gField) {
		gField.m_fOnUpdate = gThis.Update;
	};

	gThis._ConnectSelect = function(gField) {
		gField.m_jField.change(gThis.Update);
	};

	gThis._ConnectTextField = function(gField) {
		gField.m_jField.change(gThis.Update);
	};

	gThis._ConnectLocalFile = function(gField) {
		gField.m_jField.change(gThis.Update);
	};

	gThis.Update = GEventHandler(function(eEvent) {
		gThis.m_oValues = {};
		for (var i in gThis.m_oOptions.asTriggers) {
			var gField = gThis.m_gForm.GetField(gThis.m_oOptions.asTriggers[i]);
			if (gField instanceof GFormColourSchemePicker) {
				gThis._UpdateColourSchemePicker(gField);
			}
			else if (gField instanceof GFormFontStyle) {
				gThis._UpdateFontStyle(gField);
			}
			else if (gField instanceof GFormBorder) {
				gThis._UpdateBorder(gField);
			}
			else if (gField instanceof GFormSelect) {
				gThis._UpdateSelect(gField);
			}
			else if (gField instanceof GFormLocalFile) {
				gThis._UpdateLocalFile(gField);
			}
			else if (gField instanceof GFormTextField) {
				gThis._UpdateTextField(gField);
			}
		}
		gThis.Refresh();
	});

	gThis._UpdateColourSchemePicker = function(gField) {
		var sSelector = gField.m_oOptions.sSelector;
		if ((sSelector == undefined) || !sSelector.length) {
			return;
		}
		if (gThis.m_oValues[sSelector] == undefined) {
			gThis.m_oValues[sSelector] = {};
		}
		switch (gField.m_jFieldColourType.val()) {
			case '3':
				gThis.m_oValues[sSelector]['background-color'] = '#' + gField.m_jFieldColourStart.val();
				if (gField.m_jFileField.val().length) {
					gThis.m_oValues[sSelector]['background-image'] = 'url(\'' + GCore.DESIGN_PATH.substr(0, GCore.DESIGN_PATH.lastIndexOf('/', GCore.DESIGN_PATH.length - 2)) + '/' + gField.m_oOptions.sFilePath + gField.m_jFileField.val() + '\')';
					gThis.m_oValues[sSelector]['background-position'] = '0 0';
					gThis.m_oValues[sSelector]['background-repeat'] = 'repeat-x';
				}
				else {
					gThis.m_oValues[sSelector]['background-image'] = 'none';
				}
				break;
			case '2':
				gThis.m_oValues[sSelector]['background-gradient'] = '#' + gField.m_jFieldColourStart.val();
				gThis.m_oValues[sSelector]['background-color'] = '#' + gField.m_jFieldColourEnd.val();
				gThis.m_oValues[sSelector]['background-image'] = 'none';
				break;
			default:
				gThis.m_oValues[sSelector]['background-color'] = '#' + gField.m_jFieldColourStart.val();
				gThis.m_oValues[sSelector]['background-image'] = 'none';
		}
	};

	gThis._UpdateFontStyle = function(gField) {
		var sSelector = gField.m_oOptions.sSelector;
		if ((sSelector == undefined) || !sSelector.length) {
			return;
		}
		if (gThis.m_oValues[sSelector] == undefined) {
			gThis.m_oValues[sSelector] = {};
		}
		gThis.m_oValues[sSelector]['color'] = '#' + gField.m_jFieldFontColour.val();
		gThis.m_oValues[sSelector]['font-family'] = gField.m_jFieldFontFamily.val();
		gThis.m_oValues[sSelector]['font-weight'] = (gField.m_jFieldFontStyleBold.val() == '1') ? 'bold' : 'normal';
		gThis.m_oValues[sSelector]['font-style'] = (gField.m_jFieldFontStyleItalic.val() == '1') ? 'italic' : 'normal';
		gThis.m_oValues[sSelector]['text-decoration'] = (gField.m_jFieldFontStyleUnderline.val() == '1') ? 'underline' : 'none';
		gThis.m_oValues[sSelector]['text-transform'] = (gField.m_jFieldFontStyleUppercase.val() == '1') ? 'uppercase': 'none';
		gThis.m_oValues[sSelector]['font-size'] = gField.m_jFieldFontSize.val() + 'px';
	};

	gThis._UpdateBorder = function(gField) {
		var sSelector = gField.m_oOptions.sSelector;
		if ((sSelector == undefined) || !sSelector.length) {
			return;
		}
		if (gThis.m_oValues[sSelector] == undefined) {
			gThis.m_oValues[sSelector] = {};
		}
		var asSides = ['top', 'right', 'bottom', 'left'];
		for (var i in asSides) {
			var iSize = parseInt(gField.m_oSizeField[asSides[i]].val());
			if (iSize == 0) {
				gThis.m_oValues[sSelector]['border-' + asSides[i]] = 'none';
			}
			else {
				gThis.m_oValues[sSelector]['border-' + asSides[i]] = 'solid ' + iSize + 'px #' + gField.m_oColourField[asSides[i]].val();
			}
		}
	};

	gThis._UpdateSelect = function(gField) {
		var sSelector = gField.m_oOptions.sSelector;
		if ((sSelector == undefined) || !sSelector.length) {
			return;
		}
		var sAttribute = gField.m_oOptions.sCssAttribute;
		if ((sAttribute == undefined) || !sAttribute.length) {
			return;
		}
		if (gThis.m_oValues[sSelector] == undefined) {
			gThis.m_oValues[sSelector] = {};
		}
		switch (sAttribute) {
			case 'border-radius':
				if (gThis.m_oValues[sSelector + ' .layout-box-header'] == undefined) {
					gThis.m_oValues[sSelector + ' .layout-box-header'] = {};
				}
				if (gThis.m_oValues[sSelector + ' .layout-box-content'] == undefined) {
					gThis.m_oValues[sSelector + ' .layout-box-content'] = {};
				}
				var iNewValue = Math.max(0, parseInt(gField.m_jField.val()) - 1) + 'px';
				gThis.m_oValues[sSelector]['BorderRadius'] = gField.m_jField.val();
				gThis.m_oValues[sSelector + ' .layout-box-header']['BorderTopLeftRadius'] = iNewValue;
				gThis.m_oValues[sSelector + ' .layout-box-header']['BorderTopRightRadius'] = iNewValue;
				gThis.m_oValues[sSelector + ' .layout-box-content']['BorderBottomLeftRadius'] = iNewValue;
				gThis.m_oValues[sSelector + ' .layout-box-content']['BorderBottomRightRadius'] = iNewValue;
				gThis.m_oValues[sSelector]['MozBorderRadius'] = gField.m_jField.val();
				gThis.m_oValues[sSelector + ' .layout-box-header']['MozBorderRadiusTopleft'] = iNewValue;
				gThis.m_oValues[sSelector + ' .layout-box-header']['MozBorderRadiusTopright'] = iNewValue;
				gThis.m_oValues[sSelector + ' .layout-box-content']['MozBorderRadiusBottomleft'] = iNewValue;
				gThis.m_oValues[sSelector + ' .layout-box-content']['MozBorderRadiusBottomright'] = iNewValue;
				gThis.m_oValues[sSelector]['WebkitBorderTopLeftRadius'] = gField.m_jField.val();
				gThis.m_oValues[sSelector]['WebkitBorderTopRightRadius'] = gField.m_jField.val();
				gThis.m_oValues[sSelector]['WebkitBorderBottomLeftRadius'] = gField.m_jField.val();
				gThis.m_oValues[sSelector]['WebkitBorderBottomRightRadius'] = gField.m_jField.val();
				gThis.m_oValues[sSelector + ' .layout-box-header']['WebkitBorderTopLeftRadius'] = iNewValue;
				gThis.m_oValues[sSelector + ' .layout-box-header']['WebkitBorderTopRightRadius'] = iNewValue;
				gThis.m_oValues[sSelector + ' .layout-box-content']['WebkitBorderBottomLeftRadius'] = iNewValue;
				gThis.m_oValues[sSelector + ' .layout-box-content']['WebkitBorderBottomRightRadius'] = iNewValue;
				break;
			default:
				gThis.m_oValues[sSelector][sAttribute] = gField.m_jField.val();
		}
	};

	gThis._UpdateTextField = function(gField) {
		var sSelector = gField.m_oOptions.sSelector;
		if ((sSelector == undefined) || !sSelector.length) {
			return;
		}
		var sAttribute = gField.m_oOptions.sCssAttribute;
		if ((sAttribute == undefined) || !sAttribute.length) {
			return;
		}
		if (gThis.m_oValues[sSelector] == undefined) {
			gThis.m_oValues[sSelector] = {};
		}
		switch (sAttribute) {
			case 'line-height':
				if (gThis.m_oValues[sSelector + ' .layout-box-icon'] == undefined) {
					gThis.m_oValues[sSelector + ' .layout-box-icon'] = {};
				}
				gThis.m_oValues[sSelector][sAttribute] = gField.m_jField.val() + 'px';
				gThis.m_oValues[sSelector]['height'] = gField.m_jField.val() + 'px';
				gThis.m_oValues[sSelector + ' .layout-box-icon']['height'] = gField.m_jField.val() + 'px';
				break;
			default:
				gThis.m_oValues[sSelector][sAttribute] = gField.m_jField.val();
		}
	};

	gThis._UpdateLocalFile = function(gField) {
		var sSelector = gField.m_oOptions.sSelector;
		if ((sSelector == undefined) || !sSelector.length) {
			return;
		}
		if (gThis.m_oValues[sSelector] == undefined) {
			gThis.m_oValues[sSelector] = {};
		}
		gThis.m_oValues[sSelector]['background'] = 'transparent url(\'' + GCore.DESIGN_PATH.substr(0, GCore.DESIGN_PATH.lastIndexOf('/', GCore.DESIGN_PATH.length - 2)) + '/' + 'design/_images_frontend/upload/' + gField.m_jField.val() + '\') center center no-repeat';
	};

	gThis.Refresh = function() {
		if (!gThis.m_bWindowLoaded) {
			return;
		}
		gThis.m_jWindow.contents().find('body [style]').attr('style', '');
		gThis.m_jWindow.contents().find('.gradient').each(function() {
			$(this).parent().html($(this).next('div').html());
		});
		for (var i in gThis.m_oValues) {
			for (var j in gThis.m_oValues[i]) {
				if (j == 'background-gradient') {
					gThis.m_jWindow.contents().find(i).each(function() {
						$(this).append().gradient({
						from: gThis.m_oValues[i][j].substr(1),
						to: gThis.m_oValues[i]['background-color'].substr(1),
						direction: 'horizontal'
					})});
				}
				else {
					gThis.m_jWindow.contents().find(i).css(j, gThis.m_oValues[i][j]);
				}
			}
		}
	};

	gThis.Focus = function() { return false; };

}, oDefaults);
/*
* PREVIEW
*/

var oDefaults = {
	sLabel: '',
	sUrl: '',
	iWidth: 400,
	iHeight: 250,
	oClasses: {
		sFieldClass: 'field-preview'
	}
};

var GFormPreview = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_jTrigger;
	gThis.m_wWindow;

	gThis._PrepareNode = function() {
		if (!gThis.m_oOptions.sLabel.length) {
			gThis.m_oOptions.sLabel = GForm.Language.preview_trigger_label;
		}
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jTrigger = $('<a href="#">' + gThis.m_oOptions.sLabel + '</a>');
		gThis.m_jNode.append(gThis.m_jTrigger);
	};

	gThis._InitializeEvents = function() {
		gThis.m_jTrigger.click(gThis.OnClick);
	};

	gThis.OnClick = GEventHandler(function(eEvent) {
		gThis.m_wWindow = window.open('', gThis.GetId(), 'width=' + gThis.m_oOptions.iWidth + 'px, height=' + gThis.m_oOptions.iHeight + 'px, location=false, menubar=false, status=false, toolbar=false');
		gThis.m_wWindow.focus();
		gThis._WriteFormAndSubmitIt();
	});

	gThis._WriteFormAndSubmitIt = function() {
		gThis.m_wWindow.document.open();
		gThis.m_wWindow.document.write('<html><head><title>...</title></head><body>');
		gThis.m_wWindow.document.write('<form style="display: none;" id="form" action="' + gThis.m_oOptions.sUrl + '" method="post">');
		gThis.m_wWindow.document.write('</form>');
		gThis.m_wWindow.document.write('</body></html>');
		gThis.m_wWindow.document.close();
		var jFormElements = gThis.m_jNode.closest('.GForm').find('[name]');
		$(gThis.m_wWindow.document.getElementById('form')).append(jFormElements.clone()).submit();
	};

	gThis.Focus = function() { return false; };

}, oDefaults);
/*
* RADIO GROUP
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-radio-group',
		sFieldSpanClass: 'field',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: ''
};

var GFormRadioGroup = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bResized;

	gThis._Constructor = function() {
		gThis.m_bResized = false;
	};

	gThis.GetValue = function() {
		return gThis.m_jField.filter(':checked').attr('value');
	};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label class="' + gThis._GetClass('Group') + '" for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		gThis.m_jField = $();
		for (var i = 0; i < gThis.m_oOptions.aoOptions.length; i++) {
			var oOption = gThis.m_oOptions.aoOptions[i];
			var jInput = $('<input type="radio" name="' + gThis.GetName() + '" value="' + oOption.sValue + '">');
			gThis.m_jField.add(jInput);
			gThis.m_jNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append($('<label>' + oOption.sLabel + '</label>').prepend(jInput)));
		}
	};

	gThis.SetValue = function(mValue) {
		if ((gThis.m_jField != undefined) && (gThis.m_jField instanceof $)) {
			gThis.m_jField.find(':radio[value="' + mValue + '"]').click();
		}
	};

	gThis.Reset = function() {
	};

}, oDefaults);
/*
* RADIO VALUE GROUP
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-radio-group',
		sFieldSpanClass: 'field',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting'
	},
	oImages: {
		sCalendarIcon: 'images/icons/buttons/calendar.png'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: ''
};

var GFormRadioValueGroup = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bResized;

	gThis._Constructor = function() {
		gThis.m_bResized = false;
	};

	gThis.GetValue = function() {
		return gThis.m_jField.filter(':checked').attr('value');
	};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label class="' + gThis._GetClass('Group') + '" for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		for (var i = 0; i < gThis.m_oOptions.aoOptions.length; i++) {
			var oOption = gThis.m_oOptions.aoOptions[i];
			var jInput = $('<input type="radio" name="' + gThis.GetName() + '[value]" value="' + oOption.sValue + '">');
			if (gThis.m_jField instanceof $) {
				gThis.m_jField = gThis.m_jField.add(jInput);
			}
			else {
				gThis.m_jField = jInput;
			}
			var iPosition;
			if ((iPosition = oOption.sLabel.indexOf('%input%')) != -1) {
				var jLabel = $('<label/>');
				jLabel.append('<span>' + oOption.sLabel.substr(0, iPosition) + '</span>');
				var jInnerInput = $('<input type="text" name="' + gThis.GetName() + '[' + oOption.sValue + ']" value=""/>');
				jLabel.append($('<span class="inner-field-text"/>').append(jInnerInput));
				jLabel.append('<span>' + oOption.sLabel.substr(iPosition + 7) + '</span>');
			}
			else if ((iPosition = oOption.sLabel.indexOf('%date%')) != -1) {
				var jLabel = $('<label/>');
				jLabel.append('<span>' + oOption.sLabel.substr(0, iPosition) + '</span>');
				var jInnerInput = $('<input class="date" type="text" name="' + gThis.GetName() + '[' + oOption.sValue + ']" value=""/>');
				var jTrigger = $('<img style="width: 16px; height: 16px; float: left; margin: 0 5px 0 0;" src="' + gThis._GetImage('CalendarIcon') + '" alt=""/>');
				jTrigger.css('cursor', 'pointer');
				jLabel.append($('<span class="inner-field-text"/>').append(jInnerInput)).append(jTrigger);
				jLabel.append('<span>' + oOption.sLabel.substr(iPosition + 6) + '</span>');
			}
			else if ((iPosition = oOption.sLabel.indexOf('%select%')) != -1) {
				var jLabel = $('<label/>');
				jLabel.append('<span>' + oOption.sLabel.substr(0, iPosition) + '</span>');
				var jInnerInput = $('<select name="' + gThis.GetName() + '[' + oOption.sValue + ']"/>');
				for (var j in gThis.m_oOptions.oSuboptions[oOption.sValue]) {
					var oSuboption = gThis.m_oOptions.oSuboptions[oOption.sValue][j];
					jInnerInput.append('<option value="' + oSuboption.value + '">' + oSuboption.label + '</option>');
				}
				jLabel.append($('<span class="inner-field-select"/>').append($('<span class="field"/>').append(jInnerInput)));
				jLabel.append('<span>' + oOption.sLabel.substr(iPosition + 8) + '</span>');
			}
			else {
				var jLabel = $('<label>' + oOption.sLabel + '</label>');
			}
			gThis.m_jNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jLabel.prepend(jInput)));
		}
	};

	gThis._InitializeEvents = function() {
		var f = function(eEvent) {
			if ($(this).is(':checked')) {
				$(this).closest('.field').find('input:text').focus();
			}
		};
		gThis.m_jField.change(f).click(f);
		gThis.m_jField.closest('.field').find('select').GSelect();
		gThis.m_jField.closest('.field').find('.inner-field-text input').focus(function(eEvent) {
			$(this).parent().addClass('focus');
			$(this).closest('.field').find('input:radio:not(:checked)').click();
		}).blur(function(eEvent) {
			$(this).parent().removeClass('focus');
		});
		gThis.m_jField.closest('.field').find('.inner-field-select select').focus(function(eEvent) {
			$(this).parent().addClass('focus');
		}).blur(function(eEvent) {
			$(this).parent().removeClass('focus');
			$(this).closest('.field').find('input:radio:not(:checked)').click();
		}).change(function(eEvent) {
			$(this).closest('.field').find('input:radio:not(:checked)').click();
		});
		gThis.m_jNode.find('input.date').datepicker();
	};

	gThis.SetValue = function(mValue) {
		for (var i in mValue) {
			if (i == 'value') {
				if ((gThis.m_jField != undefined) && (gThis.m_jField.length)) {
					gThis.m_jField.filter('[value="' + mValue[i] + '"]').click();
				}
			}
			else {
				gThis.m_jNode.find('input:text[name="' + gThis.GetName() + '[' + i + ']"]').val(mValue[i]);
				gThis.m_jNode.find('select[name="' + gThis.GetName() + '[' + i + ']"]').val(mValue[i]).change();
			}
		}
	};

	gThis.Reset = function() {
	};

}, oDefaults);
/*
* SELECT
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-select',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sDisabledClass: 'disabled',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition'
	},
	oImages: {
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	sSelector: '',
	sCssAttribute: '',
	sAddItemPrompt: '',
	bAddable: false,
	fOnAdd: GCore.NULL,
	sAddItemPrompt: '',
};

var GFormSelect = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_bResized = false;

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		return gThis._GetField(sRepetition).find('option:selected').attr('value');
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		var jField = gThis._GetField(sRepetition);
		jField.val(mValue);
		if ((jField.get(0) != undefined) && (jField.get(0).Update != undefined)) {
			jField.get(0).Update.apply(jField.get(0));
		}
	};

	gThis.ExchangeOptions = function(aoNewOptions) {
		var sOldValueId = gThis.m_jField.val();
		gThis.m_oOptions.aoOptions = aoNewOptions;
		var jOldNode = gThis.m_jNode;
		gThis.m_jField = GCore.NULL;
		gThis._PrepareNode();
		gThis.m_jNode.addClass('GFormNode').get(0).gNode = gThis;
		jOldNode.replaceWith(gThis.m_jNode);
		gThis.m_bShown = false;
		gThis.m_bResized = false;
		gThis.OnShow();
		if (gThis.m_jField.find('option[value="' + sOldValueId + '"]').length) {
			gThis.m_jField.val(sOldValueId);
		}
		gThis._InitializeDependencies();
		gThis.m_jField.change();
	};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		if (!gThis.m_bRepeatable) {
			gThis.m_jNode.append(gThis._AddField());
		}
		else {
			gThis.AddRepetition();
		}
		if ((gThis.m_oOptions.sSelector != undefined) && (gThis.m_oOptions.sSelector.length)) {
			gThis.m_jField.attr('name', gThis.GetName() + '[value]');
			gThis.m_jNode.append('<input type="hidden" name="' + gThis.GetName() + '[selector]" value="' + gThis.m_oOptions.sSelector + '"/>');
		}
		if ((gThis.m_oOptions.sCssAttribute != undefined) && (gThis.m_oOptions.sCssAttribute.length)) {
			gThis.m_jField.attr('name', gThis.GetName() + '[value]');
			gThis.m_jNode.append('<input type="hidden" name="' + gThis.GetName() + '[css_attribute]" value="' + gThis.m_oOptions.sCssAttribute + '"/>');
		}
	};

	gThis._AddField = function(sId) {
		var jField = $('<select name="' + gThis.GetName(sId) + '" id="' + gThis.GetId(sId) + '"/>');
		for (var i = 0; i < gThis.m_oOptions.aoOptions.length; i++) {
			var oOption = gThis.m_oOptions.aoOptions[i];
			jField.append('<option value="' + oOption.sValue + '">' + oOption.sLabel + '</option>');
		}
		if ((gThis.m_jField instanceof $) && gThis.m_jField.length) {
			gThis.m_jField = gThis.m_jField.add(jField);
		}
		else {
			gThis.m_jField = jField;
		}
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		if (gThis.m_oOptions.sPrefix != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.sPrefix);
			jRepetitionNode.append(jPrefix);
		}
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jRepetitionNode.append(jSuffix);
		}

		if (gThis.m_oOptions.bAddable && (gThis.m_oOptions.fOnAdd instanceof Function)) {
			gThis.m_jTrigger = $('<a href="#" class="' + gThis._GetClass('AddRepetition') + '"/>').append('<img src="' + gThis._GetImage('AddRepetition') + '" alt="' + GForm.Language.add_field_repetition + '" title="' + GForm.Language.add_field_repetition + '"/>');
			jRepetitionNode.append(gThis.m_jTrigger);
		}
		var jError = $('<span class="' + gThis._GetClass('Required') + '"/>');
		jRepetitionNode.append(jError);
		gThis.jRepetitionNode = jRepetitionNode;
		return gThis.jRepetitionNode;
	};

	gThis.OnInitRepetition = function(sRepetition) {
		if (!gThis.m_bShown) {
			return;
		}
		gThis._GetField(sRepetition).GSelect();
	};

	gThis.OnShow = function() {
		gThis._UpdateRepetitionButtons();
		if (!gThis.m_bShown && gThis.m_bRepeatable) {
			gThis._InitializeEvents('new-0');
		}
		gThis.m_bShown = true;
		if (gThis.m_bRepeatable) {
			for (var i in gThis.m_oRepetitions) {
				if (!gThis.m_oRepetitions[i].m_bResized) {
					gThis.m_oRepetitions[i].m_bResized = true;
					gThis.OnInitRepetition(i);
				}
			}
		}
		else {
			if (!gThis.m_bResized) {
				gThis.m_bResized = true;
				gThis.OnInitRepetition();
			}
		}
		if (gThis.m_oOptions.bAddable && (gThis.m_oOptions.fOnAdd instanceof Function)) {
			gThis.m_jTrigger.click(function() {
				GAlert.DestroyAll();
				GPrompt(gThis.m_oOptions.sAddItemPrompt, function(sName) {
					GCore.StartWaiting();
					gThis.m_oOptions.fOnAdd({
						name: sName
					}, GCallback(function(eEvent) {
						GCore.StopWaiting();
						GAlert.DestroyAll();
						if(!eEvent.error){
							gThis.ExchangeOptions(eEvent.options);
							gThis.SetValue(eEvent.id);
							gThis.m_jField.triggerHandler('change');
							if(eEvent.vat){
								GCore.aoVatValues = eEvent.vat;
								$(window).trigger('OnVatChange');
							}
						}else{
							GError(eEvent.error);
						}
					}));
				});
				return false;
			});
		}
	};

	gThis.OnFocus = function(eEvent) {
		$(eEvent.currentTarget).closest('.' + gThis._GetClass('FieldSpan')).addClass(gThis._GetClass('Focused'));
		gThis._ActivateFocusedTab(eEvent);
	};

	gThis.OnBlur = function(eEvent) {
		$(eEvent.currentTarget).closest('.' + gThis._GetClass('FieldSpan')).removeClass(gThis._GetClass('Focused'));
	};

	gThis.Reset = function() {
		gThis.m_jField.val(gThis.m_oOptions.sDefault).change();
	};

	gThis._InitializeEvents = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (gThis.m_bRepeatable && (sRepetition == undefined)) {
			return;
		}
		var jField = gThis._GetField(sRepetition);
		jField.focus(gThis.OnFocus);
		jField.blur(gThis.OnBlur);
		jField.each(function() {
			$(this).change(GEventHandler(function(eEvent) {
				gThis.Validate(false, this.sRepetition);
			}));
		});
		jField.keydown(function(eEvent) {
			var dSelect = this;
			setTimeout(function() {
				dSelect.Update();
			}, 50);
			return true;
		});
		if (gThis.m_jNode.closest('.statusChange').length) {
			gThis.OnShow();
		}
	};

}, oDefaults);
/*
* SORTABLE LIST
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-tree',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sItemNameClass: 'item-name',
		sExpanderClass: 'expander',
		sExpandedClass: 'expanded',
		sActiveClass: 'active',
		sButtonClass: 'button',
		sExpandAllClass: 'expand-all',
		sRetractAllClass: 'retract-all'
	},
	oImages: {
		sAdd: 'images/icons/buttons/add.png',
		sDelete: 'images/icons/buttons/delete.png',
		sSave: 'images/icons/buttons/save.png',
		sRestore: 'images/icons/buttons/clean.png',
		sWaiting: 'images/icons/loading/indicator.gif'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	bSortable: false,
	bClickable: false,
	bDeletable: false,
	oItems: {},
	fOnClick: GCore.NULL,
	fOnSaveOrder: GCore.NULL,
	fOnAdd: GCore.NULL,
	fOnAfterAdd: GCore.NULL,
	fOnDelete: GCore.NULL,
	fOnAfterDelete: GCore.NULL,
	sActive: '',
	sAddItemPrompt: '',
	bPreventDuplicates: true
};

var GFormSortableList = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_jTree;
	gThis.m_jOptions;
	gThis.m_oItems;
	gThis.m_jFieldWrapper;
	gThis.m_jItemPlaceholder;
	gThis.m_jItemDragged;
	gThis.m_oItems = {};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jField = $('<input type="hidden"/>');
		gThis.m_jNode.append(gThis.m_jField);
		gThis.m_jFieldWrapper = $('<div/>');
		gThis.m_jNode.append(gThis.m_jFieldWrapper);
		gThis.m_jNode.append('<label>' + gThis.m_oOptions.sLabel + '</label>');
		gThis.m_jTree = $('<ul/>');
		if(gThis.m_oOptions.iTotal > 0){
			gThis.m_jNode.append($('<div class="tree-wrapper"/>').append(gThis.m_jTree));
		}
		gThis.Update();
		gThis._PrepareOptions();
		window.setTimeout(gThis.ResetExpansion, 500);
	};

	gThis._PrepareOptions = function() {
		var jA;
		gThis.m_jOptions = $('<div class="options"/>');

		if (gThis.m_oOptions.bSortable && (gThis.m_oOptions.fOnSaveOrder instanceof Function)) {
			jA = $('<a class="' + gThis._GetClass('Button') + '" href="#"/>');
			jA.append('<span><img src="' + gThis._GetImage('Save') + '" alt=""/>' + GForm.Language.tree_save_order + '</span>');
			jA.click(function(eEvent) {
				GCore.StartWaiting();
				gThis.m_oOptions.fOnSaveOrder({
					items: gThis.GetOrder()
				}, GCallback(function(eEvent) {
					GCore.StopWaiting();
					GMessage(eEvent.status);
				}));
				return false;
			});
			gThis.m_jOptions.append($('<p/>').append(jA));

			jA = $('<a class="' + gThis._GetClass('Button') + '" href="#"/>');
			jA.append('<span><img src="' + gThis._GetImage('Restore') + '" alt=""/>' + GForm.Language.tree_restore_order + '</span>');
			jA.click(function(eEvent) {
				gThis.Update();
				return false;
			});
			gThis.m_jOptions.append($('<p/>').append(jA));

		}

		if (gThis.m_oOptions.bAddable && (gThis.m_oOptions.fOnAdd instanceof Function)) {

			jA = $('<a class="' + gThis._GetClass('Button') + '" href="#"/>');
			jA.append('<span><img src="' + gThis._GetImage('Add') + '" alt=""/>' + GForm.Language.tree_add_item + '</span>');
			jA.click(function(eEvent) {
				GAlert.DestroyAll();
				GPrompt(gThis.m_oOptions.sAddItemPrompt, function(sName) {
					if (gThis.m_oOptions.bPreventDuplicates) {
						var jSiblings = gThis.m_jTree.children('li');
						for (var i = 0; i < jSiblings.length; i++) {
							if (sName == jSiblings.eq(i).children('a').text()) {
								GAlert.DestroyThis.apply(this);
								GError(GForm.Language.tree_duplicate_entry, GForm.Language.tree_duplicate_entry_description);
								return;
							}
						}
					}
					GCore.StartWaiting();
					gThis.m_oOptions.fOnAdd({
						name: sName
					}, GCallback(function(eEvent) {
						GCore.StopWaiting();
						if (gThis.m_oOptions.fOnAfterAdd instanceof Function) {
							gThis.m_oOptions.fOnAfterAdd(eEvent.id);
						}
					}));
				});
				return false;
			});
			gThis.m_jOptions.append($('<p/>').append(jA));

		}

		if (gThis.m_oOptions.bDeletable && (gThis.m_oOptions.fOnDelete instanceof Function) && gThis.m_jTree.find('.' + gThis._GetClass('Active')).length) {

			var sId = gThis.m_jTree.find('.' + gThis._GetClass('Active')).get(0).sId;
			jA = $('<a class="' + gThis._GetClass('Button') + ' delete" href="#"/>');
			jA.append('<span><img src="' + gThis._GetImage('Delete') + '" alt=""/>' + GForm.Language.tree_delete_item + '</span>');
			jA.click(function(eEvent) {
				GAlert.DestroyAll();
				GWarning(gThis.m_oOptions.sDeleteItemPrompt,'', {
					bAutoExpand: true,
					aoPossibilities: [
						{mLink: function() {
							GCore.StartWaiting();
							gThis.m_oOptions.fOnDelete({
								id: sId
							}, GCallback(function(eEvent) {
								GCore.StopWaiting();
								if (gThis.m_oOptions.fOnAfterDelete instanceof Function) {
									gThis.m_oOptions.fOnAfterDelete();
								}
							}));
						}, sCaption: GForm.Language.tree_ok},
						{mLink: GAlert.DestroyThis, sCaption: GForm.Language.tree_cancel}
					]
				});
				return false;
			});
			gThis.m_jOptions.append($('<p/>').append(jA));

		}

		gThis.m_jNode.append(gThis.m_jOptions);
	};

	gThis.GetOrder = function() {
		var jItems = gThis.m_jTree.find('li');
		var aoItems = [];
		for (var i = 0; i < jItems.length; i++) {
			var sId = jItems.eq(i).get(0).sId;
			var sParent = '';
			if (jItems.eq(i).parent().closest('li').length) {
				sParent = jItems.eq(i).parent().closest('li').get(0).sId;
			}
			var jSiblings = jItems.eq(i).parent().children('li');
			var iWeight = jSiblings.index(jItems.eq(i));
			aoItems.push({
				id: sId,
				parent: sParent,
				weight: iWeight
			});
		}
		return aoItems;
	};

	gThis.ResetExpansion = function() {
		gThis.m_jTree.find('li').removeClass(gThis._GetClass('Expanded'));
		gThis.m_jTree.find('li.' + gThis._GetClass('Active')).parents('li').andSelf().filter(':has(li)').addClass(gThis._GetClass('Expanded'));
		gThis.m_jTree.find('li > label > input:checked').parents('li').andSelf().filter(':has(li)').addClass(gThis._GetClass('Expanded'));
	};

	gThis._WriteSubtree = function(jParent, sParent) {
		if (sParent == undefined) {
			sParent = null;
		}
		var oItems = GCore.FilterObject(gThis.m_oOptions.oItems, function(oItem) {return (oItem.parent == sParent);});
		var aIterationArray = GCore.GetIterationArray(oItems, function(oA, oB) {return (oA.weight - oB.weight);});
		var iLength = aIterationArray.length;
		for (var i = 0; i < iLength; i++) {
			var sId = aIterationArray[i];
			var oItem = oItems[sId];
			jParent.append(gThis._WriteItem(sId, oItem));
		}
	};

	gThis._WriteItem = function(sId, oItem) {
		var jLi = $('<li/>');
		jLi.get(0).sId = sId;
		if (gThis.m_oOptions.sActive == sId) {
			jLi.addClass(gThis._GetClass('Active'));
		}

		if (gThis.m_oOptions.bClickable) {
			var jA = $('<a href="#" class="' + gThis._GetClass('ItemName') + '">' + oItem.name + '</a>');
			jLi.append(jA);
		}
		else {
			jLi.append('<span class="' + gThis._GetClass('ItemName') + '">' + oItem.name + '</span>');
		}
		var jUl = $('<ul/>');
		gThis._WriteSubtree(jUl, sId);
		var jExpander = $('<span class="' + gThis._GetClass('Expander') + '"/>');
		jLi.prepend(jExpander);
		jLi.append(jUl);
		jExpander.css('display', 'none');
		if (oItem.hasChildren || jUl.children('li').length) {
			jExpander.css('display', 'block');
		}
		return jLi;
	};

	gThis.UpdateExpanders = function() {
		gThis.m_jTree.find('li::not(:has(li))').removeClass(gThis._GetClass('Expanded')).children('.' + gThis._GetClass('Expander')).css('display', 'none');
		gThis.m_jTree.find('li:has(li) > .' + gThis._GetClass('Expander')).css('display', 'block');
	};

	gThis.Update = function() {
		gThis.m_jTree.empty();
		gThis._WriteSubtree(gThis.m_jTree);
		gThis.m_jTree.sortable();
		gThis._InitializeNodeEvents();
		gThis.ResetExpansion();
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis.m_bShown = true;
		}
	};

	gThis._OnClick = GEventHandler(function(eEvent) {
		GCore.StartWaiting();
	});

	gThis._InitializeEvents = function(sRepetition) {
		gThis._InitializeNodeEvents();
	};

	gThis._InitializeNodeEvents = function() {
		gThis.m_jTree.find('.' + gThis._GetClass('Expander')).unbind('click').click(function() {
			if ($(this).closest('li').hasClass(gThis._GetClass('Expanded'))) {
				$(this).closest('li').find('li').andSelf().removeClass(gThis._GetClass('Expanded'));
			}
			else {
				$(this).closest('li').addClass(gThis._GetClass('Expanded'));
				gThis._Expand($(this).closest('li'));
			}
		});
		if (gThis.m_oOptions.bClickable) {
			gThis.m_jTree.find('li').unbind('click').unbind('mousedown').each(function() {
				var sId = $(this).closest('li').get(0).sId;
				$(this).children('a').click(GEventHandler(function(eEvent) {
					if (gThis.m_bIgnoreClick) {
						return false;
					}
					gThis.m_jTree.find('li').removeClass(gThis._GetClass('Active'));
					$(this).closest('li').addClass(gThis._GetClass('Active'));
					gThis._OnClick.apply(this, [eEvent]);
					if (gThis.m_oOptions.fOnClick instanceof Function) {
						gThis.m_oOptions.fOnClick(sId);
					}
					return false;
				}));
			});
		}
		gThis.m_jTree.find('input').unbind('click').click(gThis._OnSelect);
	};

	gThis._OnChildrenLoaded = GEventHandler(function(eEvent) {
		var jUl = $('<ul/>');
		gThis.m_oItems[eEvent.parentNode.get(0).sId] = true;
		for (var i in eEvent.children) {
			jUl.append(gThis._WriteItem(i, eEvent.children[i]));
		}
		eEvent.parentNode.find('ul').remove();
		eEvent.parentNode.append(jUl);
		gThis._InitializeNodeEvents();
	});

}, oDefaults);
/*
* STATIC IMAGE
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	sAlt: '',
	sSrc: '',
	oClasses: {
		sFieldClass: 'field-static-image'
	}
};

var GFormStaticImage = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jNode.append('<img id="' + gThis.GetId() + '" src="' + gThis.m_oOptions.sSrc + '" alt="' + gThis.m_oOptions.sAlt + '"/>');
	};

	gThis.Focus = function() { return false; };

}, oDefaults);
/*
* STATIC LISTING
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	sTitle: '',
	bCollapsible: false,
	bExpanded: true,
	oClasses: {
		sFieldClass: 'field-static-listing'
	}
};

var GFormStaticListing = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_jListing;
	gThis.m_jCollapseTrigger;
	gThis.m_bExpanded;
	gThis.m_bShown = false;

	gThis._PrepareNode = function() {
		gThis.m_bExpanded = gThis.m_oOptions.bExpanded;
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		if ((gThis.m_oOptions.sLabel != undefined) && gThis.m_oOptions.sLabel.length) {
			gThis.m_jNode.append('<label>' + gThis.m_oOptions.sLabel + '</label>');
		}
		gThis.m_jListing = $('<span class="repetition"/>');
		gThis.m_jNode.append(gThis.m_jListing.empty().append(gThis._MakeListing(gThis.m_oOptions.sTitle, gThis.m_oOptions.aoValues)));
	};

	gThis._MakeListing = function(sTitle, aoValues) {
		var jListing = $('<div/>');
		jListing.append('<h3>' + sTitle + '</h3>');
		if (gThis.m_oOptions.bCollapsible) {
			if (gThis.m_bExpanded) {
				gThis.m_jCollapseTrigger = $('<a class="trigger" href="#">' + GForm.Language.static_listing_collapse + '</a>');
			}
			else {
				gThis.m_jCollapseTrigger = $('<a class="trigger" href="#">' + GForm.Language.static_listing_expand + '</a>');
			}
			jListing.append(gThis.m_jCollapseTrigger);
		}
		var jDl = $('<dl/>');
		if (!gThis.m_bExpanded) {
			jDl.css('display', 'none');
		}
		var iLength = aoValues.length;
		for (var i = 0; i < iLength; i++) {
			jDl.append('<dt>' + aoValues[i].sCaption + '</dt>');
			jDl.append('<dd>' + aoValues[i].sValue + '</dd>');
		}
		jListing.append(jDl);
		return jListing;
	};

	gThis.OnShow = function() {
		if (gThis.m_bShown) {
			return;
		}
		gThis.m_bShown = true;
		gThis._InitializeExpansion();
	};

	gThis.ChangeItems = function(aoItems, sTitle) {
		if (sTitle == undefined) {
			sTitle = gThis.m_oOptions.sTitle;
		}
		gThis.m_jListing.empty().append(gThis._MakeListing(sTitle, aoItems));
		if (gThis.m_bShown) {
			gThis._InitializeExpansion();
		}
	};

	gThis._InitializeExpansion = function() {
		if (gThis.m_jCollapseTrigger != undefined) {
			gThis.m_jCollapseTrigger.click(GEventHandler(function(eEvent) {
				gThis.m_bExpanded = !gThis.m_bExpanded;
				if (gThis.m_bExpanded) {
					gThis.m_jListing.find('dl').slideDown(300);
					gThis.m_jCollapseTrigger.text(GForm.Language.static_listing_collapse);
				}
				else {
					gThis.m_jListing.find('dl').slideUp(300);
					gThis.m_jCollapseTrigger.text(GForm.Language.static_listing_expand);
				}
				return false;
			}));
		}
	};

	gThis.Focus = function() { return false; };

}, oDefaults);
/*
* STATIC TEXT
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-static-text'
	}
};

var GFormStaticText = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jNode.append(gThis.m_oOptions.sText);
	};

	gThis.Focus = function() { return false; };

}, oDefaults);
/*
* SUBMIT
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-submit',
		sButtonClass: 'button'
	},
	sIcon: ''
};

var GFormSubmit = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jNode.append('<button class="' + gThis._GetClass('Button') + '" type="submit" name="' + gThis.GetName() + '"><span>' + gThis.m_oOptions.sLabel + '</span></button>');
		//gThis.m_jNode.append('<span class="' + gThis._GetClass('Button') + '"><span>' + ((gThis.m_oOptions.sIcon != '') ? '<img src="' + GCore.DESIGN_PATH + gThis.m_oOptions.sIcon + '" alt=""/>' : '') + '<input type="submit" name="' + gThis.GetName() + '" value="' + gThis.m_oOptions.sLabel + '"/></span></span>');
	};

}, oDefaults);
/*
* TECHNICAL DATA EDITOR
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-technical-data-editor',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sDisabledClass: 'disabled',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-repetition',
		sRemoveRepetitionClass: 'remove-repetition',
		sGroupClass: 'group',
		sAttributeClass: 'attribute'
	},
	oImages: {
		sDeleteIcon: 'images/icons/datagrid/delete.png',
		sSaveIcon: 'images/icons/datagrid/save.png',
		sAddIcon: 'images/icons/datagrid/add.png',
		sBlankIcon: 'images/icons/buttons/blank.png',
		sEditIcon: 'images/icons/datagrid/edit.png',
		sDelete: 'images/buttons/small-delete.png',
		sAdd: 'images/buttons/small-add.png'
	},
	fGetSets: GCore.NULL,
	fGetTechnicalAttributesForSet: GCore.NULL,
	fSaveSet: GCore.NULL,
	fDeleteSet: GCore.NULL,
	fSaveAttribute: GCore.NULL,
	fDeleteAttribute: GCore.NULL,
	fSaveAttributeGroup: GCore.NULL,
	fDeleteAttributeGroup: GCore.NULL,
	fGetValuesForAttribute: GCore.NULL,
	sFieldType: 'text',
	sDefault: '',
	aoRules: [],
	sComment: '',
	aTechnicalAttributes: [],
	aAttributeGroups: []
};

var GFormTechnicalDataEditor = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_bResized = false;

	gThis.m_bSetAltered = false;
	gThis.m_bIgnoreSetChange = false;

	gThis.m_aoSets = [];
	gThis.m_aoAttributes = [];
	gThis.m_oValues = {};

	gThis.m_sCurrentSet = '';

	gThis.m_jSets;
	gThis.m_jAttributes;
	gThis.m_jAdd;
	gThis.m_jFields;

	gThis.m_sGroupOptions;
	gThis.m_sAttributeOptions;

	gThis.m_iLoads = ((gThis.m_oOptions.sSetId != undefined) && gThis.m_oOptions.sSetId) ? 0 : 1;

	gThis._PrepareNode = function() {

		gThis.m_sCurrentSet = gThis.m_oOptions.sSetId;
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jSets = $('<div/>');
		gThis.m_jAttributes = $('<fieldset/>');

		gThis.m_jFields = $('<div/>');

		gThis.m_jNode.append(gThis.m_jSets);
		gThis.m_jNode.append($('<div class="technical-data-info"><div class="groups">Grupa atrybutów</div><div class="attributes">Atrybuty</div><div class="values">Wartości</div></div>'));
		gThis.m_jNode.append(gThis.m_jAttributes);
		gThis.m_jNode.append(gThis.m_jFields);

	};

	gThis.UpdateFields = function() {
		gThis.m_jFields.empty();
		var sFields = '';
		sFields += ('<input type="hidden" name="' + gThis.GetName() + '[set]" value="' + gThis.m_sCurrentSet + '"/>');
		for (var i = 0; (gThis.m_aoAttributes[i] != undefined); i++) {
			sFields += ('<input type="hidden" name="' + gThis.GetName() + '[groups][' + i + '][id]" value="' + gThis.m_aoAttributes[i].id + '"/>');
			if (String(gThis.m_aoAttributes[i].id).substr(0, 3) == 'new') {
				for (var l in GCore.aoLanguages) {
					sFields += ('<input type="hidden" name="' + gThis.GetName() + '[groups][' + i + '][caption][' + l + ']" value="' + ((gThis.m_aoAttributes[i].caption[l] != undefined) ? gThis.m_aoAttributes[i].caption[l] : '') + '"/>');
				}
			}
			for (var j = 0; (gThis.m_aoAttributes[i].children[j] != undefined); j++) {
				sFields += ('<input type="hidden" name="' + gThis.GetName() + '[groups][' + i + '][attributes][' + j + '][id]" value="' + gThis.m_aoAttributes[i].children[j].id + '"/>');
				sFields += ('<input type="hidden" name="' + gThis.GetName() + '[groups][' + i + '][attributes][' + j + '][type]" value="' + gThis.m_aoAttributes[i].children[j].type + '"/>');
				if (String(gThis.m_aoAttributes[i].children[j].id).substr(0, 3) == 'new') {
					for (var l in GCore.aoLanguages) {
						var caption = ((gThis.m_aoAttributes[i].children[j].caption[l] != undefined) ? gThis.m_aoAttributes[i].children[j].caption[l] : '');
						sFields += ('<input type="hidden" name="' + gThis.GetName() + '[groups][' + i + '][attributes][' + j + '][caption][' + l + ']" value="' + caption.replace('"',"''") + '"/>');
					}
				}
				switch (gThis.m_aoAttributes[i].children[j].type) {
					case GFormTechnicalDataEditor.FIELD_STRING:
						sFields += ('<input type="hidden" name="' + gThis.GetName() + '[groups][' + i + '][attributes][' + j + '][value]" value="' + ((gThis.m_aoAttributes[i].children[j].value != undefined) ? gThis.m_aoAttributes[i].children[j].value : '') + '"/>');
						break;
					case GFormTechnicalDataEditor.FIELD_MULTILINGUAL_STRING:
						for (var l in GCore.aoLanguages) {
							sFields += ('<input type="hidden" name="' + gThis.GetName() + '[groups][' + i + '][attributes][' + j + '][value][' + l + ']" value="' + (((gThis.m_aoAttributes[i].children[j].value != undefined) && (gThis.m_aoAttributes[i].children[j].value[l] != undefined)) ? gThis.m_aoAttributes[i].children[j].value[l] : '') + '"/>');
						}
						break;
					case GFormTechnicalDataEditor.FIELD_TEXT:
						sFields += ('<input type="hidden" name="' + gThis.GetName() + '[groups][' + i + '][attributes][' + j + '][value]" value="' + ((gThis.m_aoAttributes[i].children[j].value != undefined) ? gThis.m_aoAttributes[i].children[j].value : '') + '"/>');
						break;
					case GFormTechnicalDataEditor.FIELD_IMAGE:
						sFields += ('<input type="hidden" name="' + gThis.GetName() + '[groups][' + i + '][attributes][' + j + '][value]" value="' + ((gThis.m_aoAttributes[i].children[j].value != undefined) ? gThis.m_aoAttributes[i].children[j].value : '') + '"/>');
						break;
					case GFormTechnicalDataEditor.FIELD_BOOLEAN:
						sFields += ('<input type="hidden" name="' + gThis.GetName() + '[groups][' + i + '][attributes][' + j + '][value]" value="' + (gThis.m_aoAttributes[i].children[j].value ? '1' : '0') + '"/>');
						break;
				}
			}
		}
		gThis.m_jFields.html(sFields);
	};

	gThis.OnShow = function() {
		if (gThis.m_bShown) {
			return;
		}
		gThis.m_bShown = true;
		gThis.LoadSets();
	};

	gThis.OnFocus = function(eEvent) {
		gThis._ActivateFocusedTab(eEvent);
	};

	gThis.OnBlur = function(eEvent) {
	};

	gThis.OnReset = function() {
		gThis.m_sCurrentSet = gThis.m_oOptions.sSetId;
		gThis.m_iLoads = 0;
		gThis.LoadSets();
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (mValue == undefined) {
			return;
		}
		gThis.m_aoAttributes = [];
		for (var i = 0; i < mValue.length; i++) {
			var bFound = false;
			var l;
			for (l in gThis.m_oOptions.aAttributeGroups) {
				if (gThis.m_oOptions.aAttributeGroups[l].id == mValue[i].id) {
					bFound = true;
					break;
				}
			}
			if (!bFound) {
				continue;
			}
			var aoChildren = [];
			if (mValue[i].children != undefined) {
				for (var j = 0; j < mValue[i].children.length; j++) {
					var oAttribute = mValue[i].children[j];
					var bFound = false;
					var k;
					for (k in gThis.m_oOptions.aTechnicalAttributes) {
						if (gThis.m_oOptions.aTechnicalAttributes[k].id == oAttribute.id) {
							bFound = true;
							break;
						}
					}
					if (!bFound) {
						continue;
					}
					aoChildren.push($.extend({}, gThis.m_oOptions.aTechnicalAttributes[k], {
						value: oAttribute.value,
						set_id: oAttribute.set_id
					}));
				}
			}
			gThis.m_aoAttributes.push($.extend({},gThis.m_oOptions.aAttributeGroups[l], {
				children: aoChildren,
				set_id: mValue[i].set_id
			}));
		}
		gThis._WriteTechnicalAttributes();
	};

	gThis._InitializeEvents = function(sRepetition) {
	};

	gThis.LoadSets = function(fOnSuccess) {
		gThis.m_jSets.html('<div class="field-select"><label>' + GForm.Language.technical_data_choose_set + '</label><span class="repetition"><span class="waiting"></span></span></div>');
		var sProductId = gThis.m_oOptions.sProductId;
		var asCategoryIds = [];
		gThis.m_oOptions.fGetSets({
			productId: sProductId,
			categoryIds: asCategoryIds
		}, GCallback(gThis._OnSetsLoad, {
			fOnSuccess: fOnSuccess
		}));
	};

	gThis._OnSetsLoad = GEventHandler(function(eEvent) {
		gThis.m_aoSets = eEvent.aoSets;
		gThis._WriteSets();
		if ((gThis.m_sCurrentSet == undefined) && (gThis.m_aoSets.length > 0)) {
			//gThis.LoadTechnicalAttributesForSet(gThis.m_aoSets[0].id);
		}
		else {
			var bFound = false;
			for (var i in gThis.m_aoSets) {
				if (gThis.m_aoSets[i].id == gThis.m_sCurrentSet) {
					bFound = true;
					break;
				}
			}
			if (bFound) {
				gThis.LoadTechnicalAttributesForSet(gThis.m_sCurrentSet);
			}
			else {
//				gThis.m_bSetAltered = false;
			}
		}
		if (eEvent.fOnSuccess != undefined) {
			eEvent.fOnSuccess(eEvent);
		}
	});

	gThis._WriteSets = function() {
		gThis.m_jSets.empty();
		var jSelect = $('<select id="' + gThis.GetName() + '__set"/>');
		jSelect.append('<option value="">---</option>');
		for (var i = 0; i < gThis.m_aoSets.length; i++) {
			var oSet = gThis.m_aoSets[i];
			jSelect.append('<option' + ((oSet.id == gThis.m_sCurrentSet) ? ' selected="selected"' : '') + ' value="' + oSet.id + '"' + (oSet.recommended ? ' class="strong"' : '') + '>' + oSet.caption + '</option>');
		}
		var jField = $('<div class="field-select"><label for="' + gThis.GetName() + '__set">' + GForm.Language.technical_data_choose_set + '</label><span class="repetition"><span class="field"></span></span></div>');

		jField.find('.field').append(jSelect).after($('<span class="suffix"></span>'));
		gThis.m_jSets.append(jField);
		jSelect.GSelect();
		jSelect.change(function(eEvent) {
			gThis._OnSetchange(eEvent);
		});

	};

	gThis._OnSetchange = new GEventHandler(function(eEvent) {
		var sChosenSet = $(eEvent.currentTarget).val();
		if (gThis.m_bIgnoreSetChange) {
			gThis.m_bIgnoreSetChange = false;
			return;
		}
		if (sChosenSet == '') {
			gThis.m_sCurrentSet = '';
			gThis.UpdateFields();
			return;
		}
		if (gThis.m_bSetAltered) {
			GAlert(GForm.Language.technical_data_unsaved_changes, GForm.Language.technical_data_unsaved_changes_description, {
				aoPossibilities: [
					{
						mLink: GEventHandler(function(eEvent) {
							GAlert.DestroyAll();
							gThis.LoadTechnicalAttributesForSet(sChosenSet);
						}),
						sCaption: GForm.Language.technical_data_unsaved_changes_discard
					},
					{
						mLink: GEventHandler(function(eEvent) {
							GAlert.DestroyAll();
							gThis.m_bIgnoreSetChange = true;
							gThis.m_jSets.find('select').val(gThis.m_sCurrentSet).change();
						}),
						sCaption: GForm.Language.technical_data_unsaved_changes_cancel
					}
				]
			});
		}
		else {
			gThis.LoadTechnicalAttributesForSet(sChosenSet);
		}
	});

	gThis.LoadTechnicalAttributesForSet = function(sId) {
		gThis.m_sCurrentSet = sId;
		if (gThis.m_iLoads++ < 1) {
			gThis._WriteTechnicalAttributes();
			return;
		}
		gThis.m_oOptions.fGetTechnicalAttributesForSet({
			setId: gThis.m_sCurrentSet
		}, GCallback(gThis._OnTechnicalAttributesLoad));
	};

	gThis._OnTechnicalAttributesLoad = GEventHandler(function(eEvent) {
		gThis.m_aoAttributes = eEvent.aoAttributes;
		gThis.m_bSetAltered = false;
		gThis._WriteTechnicalAttributes();
	});

	gThis._WriteTechnicalAttributes = function() {
		gThis._UpdateGroupOptions();
		gThis._UpdateAttributeOptions();
		gThis.m_jAttributes.empty();
		gThis.m_jAdd = $('<a href="#" class="add-repetition"/>');
		gThis.m_jAdd.append('<img src="' + gThis._GetImage('Add') + '" alt="' + GForm.Language.technical_data_add_new_group + '" title="' + GForm.Language.technical_data_add_new_group + '"/>');
		gThis.m_jAttributes.append(gThis.m_jAdd);
		gThis.m_jAdd.click(GEventHandler(function(eEvent) {
			var oGroup = gThis._CreateAttributeGroup();
			gThis.m_aoAttributes.push(oGroup);
			gThis.m_bSetAltered = true;
			gThis._UpdateGroupOptions();
			gThis.AddAttributeGroup(oGroup);
			gThis._UpdateIndices();
			gThis.UpdateFields();
			return false;
		}));
		for (var i = 0; (gThis.m_aoAttributes[i] != undefined); i++) {
			var oGroup = gThis.m_aoAttributes[i];
			gThis.AddAttributeGroup(oGroup);
		}
		gThis._UpdateIndices();
		gThis.UpdateValues();
	};

	gThis._CreateAttributeGroup = function() {
		var oGroup = {
			id: 'new-' + GFormTechnicalDataEditor.s_iNewId++,
			caption: {},
			children: []
		};
		for (var l in GCore.aoLanguages) {
			oGroup.caption[l] = '';
		}
		return oGroup;
	};

	gThis._CreateAttribute = function() {
		var oAttribute = {
			id: 'new-' + GFormTechnicalDataEditor.s_iNewId++,
			caption: {},
			type: GFormTechnicalDataEditor.FIELD_STRING,
			value: ''
		};
		for (var l in GCore.aoLanguages) {
			oAttribute.caption[l] = '';
		}
		return oAttribute;
	};

	gThis.DeleteAttributeGroup = function(iGroup) {
		gThis.m_aoAttributes.splice(iGroup, 1);
		gThis.m_jAttributes.children('.group:eq(' + iGroup + ')').remove();
		gThis._UpdateGroupOptions();
		gThis._UpdateIndices();
		gThis.UpdateFields();
	};

	gThis.DeleteAttribute = function(iGroup, iAttribute) {
		gThis.m_aoAttributes[iGroup].children.splice(iAttribute, 1);
		gThis.m_jAttributes.children('.group:eq(' + (iGroup + 1) + ') .attributes .attribute:eq(' + iAttribute + ')').remove();
		gThis._UpdateAttributeOptions();
		gThis._UpdateIndices();
		gThis.UpdateFields();
	};

	gThis._UpdateAttributeOptions = function() {
		gThis.m_sAttributeOptions = '';
		for (var j = 0; j < gThis.m_oOptions.aTechnicalAttributes.length; j++) {
			var oTechnicalAttribute = gThis.m_oOptions.aTechnicalAttributes[j];
			gThis.m_sAttributeOptions += '<option value="' + oTechnicalAttribute.id + '">' + oTechnicalAttribute.caption[GCore.iActiveLanguage] + '</option>';
		}
	};

	gThis._UpdateGroupOptions = function() {
		gThis.m_sGroupOptions = '';

		var aSelectedAttributes = [];
		$.each(gThis.m_aoAttributes, function(a, attribute){
			aSelectedAttributes.push(attribute.id);
		});
		gThis.m_sGroupOptions += '<option value="">---</option>';
		for (var j = 0; j < gThis.m_oOptions.aAttributeGroups.length; j++) {
			var oAttributeGroup = gThis.m_oOptions.aAttributeGroups[j];
			if ($.inArray(oAttributeGroup.id, aSelectedAttributes) != -1) {
				continue;
			}
			if(gThis.m_sCurrentSet > 0){
				if(oAttributeGroup.set_id != undefined && oAttributeGroup.set_id == gThis.m_sCurrentSet){
					gThis.m_sGroupOptions += '<option value="' + oAttributeGroup.id + '">' + oAttributeGroup.caption[GCore.iActiveLanguage] +'</option>';
				}
			}else{
				gThis.m_sGroupOptions += '<option value="' + oAttributeGroup.id + '">' + oAttributeGroup.caption[GCore.iActiveLanguage] +'</option>';
			}
		}
	};

	gThis.AddAttributeGroup = function(oGroup) {
		if (oGroup == undefined) {
			oGroup = {};
		}
		var jGroup = $('<div class="' + gThis._GetClass('Group') + ' GFormRepetition"/>');
		var jGroupSelect = $('<select/>').addClass('attribute-group');
		jGroupSelect.html(gThis.m_sGroupOptions);
		if(oGroup.set_id > 0){
			jGroup.append($('<div class="field-technical-group"/>').prepend($('<span class="constant" />').html(oGroup.caption[GCore.iActiveLanguage])));
			gThis.m_jAttributes.append(jGroup);
			var jAttributes = $('<div class="attributes"/>');
			jGroup.append(jAttributes);
			var jAddAttribute = $('<a href="#" class="add-attribute"><img src="' + gThis._GetImage('Icon') + '"/></a>');
			jAttributes.append(jAddAttribute);
			jAddAttribute.hide();
			if (oGroup.children != undefined) {
				for (var j = 0; (oGroup.children[j] != undefined); j++) {
					var oAttribute = oGroup.children[j];
					gThis.AddAttribute(jAttributes, oAttribute, oGroup.id);
				}
			}
		}else{
			var jGroupEdit = $('<img class="edit" src="' + gThis._GetImage('EditIcon') + '" alt="' + GForm.Language.technical_data_edit_group + '" title="' + GForm.Language.technical_data_edit_group + '"/>');
			jGroup.append($('<div class="field-select"/>').append($('<span class="suffix"/>').append(jGroupEdit)).prepend($('<span class="field"/>').append(jGroupSelect)));
			jGroupEdit.click(gThis._OnGroupEditClick);
			jGroupSelect.GComboBox();
			jGroupSelect.val(oGroup.id).change();
			jGroupSelect.change(GEventHandler(function(eEvent) {
				$(this).closest('.field-select').find('input:text').change();
			}));
			if (oGroup.caption != undefined) {
				jGroup.find('input:text').val(oGroup.caption[GCore.iActiveLanguage]);
			}
			jGroup.find('input:text').change(gThis._OnGroupChange);
			gThis.m_jAttributes.append(jGroup);
			var jAttributes = $('<div class="attributes"/>');
			jGroup.append(jAttributes);
			var jAddAttribute = $('<a href="#" class="add-attribute"><img src="' + gThis._GetImage('AddIcon') + '" title="' + GForm.Language.technical_data_add_new_attribute + '" alt="' + GForm.Language.technical_data_add_new_attribute + '"/></a>');
			jAttributes.append(jAddAttribute);
			jAddAttribute.click(gThis._OnAttributeAddClick);
			if (oGroup.children != undefined) {
				for (var j = 0; (oGroup.children[j] != undefined); j++) {
					var oAttribute = oGroup.children[j];
					gThis.AddAttribute(jAttributes, oAttribute);
				}
			}
			var jDelete = $('<a href="#" class="delete-repetition"/>');
			jDelete.append('<img src="' + gThis._GetImage('Delete') + '" alt="' + GForm.Language.technical_data_delete_group + '" title="' + GForm.Language.technical_data_delete_group + '"/>');
			jDelete.click(gThis._OnGroupDeleteClick);
			jGroup.append(jDelete);
		}

	};

	gThis._OnGroupEditClick = GEventHandler(function(eEvent) {
		var iGroupIndex = $(this).closest('.group').data('iGroupIndex');
		var oGroup = gThis.m_aoAttributes[iGroupIndex];
		var jOverlay = $('<div class="technical-data-detail-editor"/>').data('iGroupIndex', iGroupIndex);
		$('body').append(jOverlay);
		jOverlay.GShadow();
		jOverlay.GOverlay({
			fClick: GEventHandler(function(eEvent) {
				jOverlay.remove();
			})
		});
		jOverlay.css({
			left: $(this).offset().left - 161,
			top: $(this).offset().top + 21
		});
		for (var l in GCore.aoLanguages) {
			var jLanguage = $('<div class="field-text"><span class="prefix"><img src="' + GCore.DESIGN_PATH + '_images_common/icons/images/languages//' + GCore.aoLanguages[l].flag + '" alt="' + GCore.aoLanguages[l].name + '"/></span><span class="field"><input class="language-' + l + '" type="text" value="' + ((oGroup.caption[l] == undefined) ? '' : oGroup.caption[l]) + '"/></span></div>');
			jOverlay.append(jLanguage);
		}
		var jSaveButton = $('<a class="button ok" href="#"><span>' + GForm.Language.technical_data_save_group + '</span></a>');
		jSaveButton.click(GEventHandler(function(eEvent) {
			var iGroupIndex = $(this).closest('.technical-data-detail-editor').data('iGroupIndex');
			for (var l in GCore.aoLanguages) {
				gThis.m_aoAttributes[iGroupIndex].caption[l] = $(this).closest('.technical-data-detail-editor').find('.language-' + l).val();
			}
			GOverlay.RemoveAll();
			gThis.m_oOptions.fSaveAttributeGroup({
				attributeGroupId: oGroup.id,
				attributeGroupName: oGroup.caption
			}, GCallback(gThis._OnAttributeGroupSave, {
				iGroupIndex: iGroupIndex
			}));
			return false;
		}));
		var jDeleteButton = $('<a class="button delete" href="#"><span>' + GForm.Language.technical_data_delete_group_permanently + '</span></a>');
		jDeleteButton.click(GEventHandler(function(eEvent) {
			var iGroupIndex = $(this).closest('.technical-data-detail-editor').data('iGroupIndex');
			var sAttributeGroup = gThis.m_aoAttributes[iGroupIndex].id;
			GOverlay.RemoveAll();
			GAlert(GForm.Language.technical_data_delete_attribute_group, GForm.Language.technical_data_delete_attribute_group_description, {
				aoPossibilities: [
					{
						mLink: GEventHandler(function(eEvent) {
							GAlert.DestroyAll();
							for (var i in gThis.m_oOptions.aAttributeGroups) {
								if (gThis.m_oOptions.aAttributeGroups[i].id == gThis.m_aoAttributes[iGroupIndex].id) {
									gThis.m_oOptions.aAttributeGroups.splice(i, 1);
									break;
								}
							}
							gThis.DeleteAttributeGroup(iGroupIndex);
							gThis.m_oOptions.fDeleteAttributeGroup({
								attributeGroupId: sAttributeGroup
							}, GCallback(gThis._OnAttributeGroupDeleted));
						}),
						sCaption: GMessageBar.Language.ok
					},
					{
						mLink: GEventHandler(function(eEvent) {
							GAlert.DestroyAll();
						}),
						sCaption: GMessageBar.Language.cancel
					}
				]
			});
		}));
		jOverlay.append(jSaveButton).append(jDeleteButton);
	});

	gThis._OnGroupDeleteClick = GEventHandler(function(eEvent) {
		gThis.DeleteAttributeGroup($(this).closest('.group').data('iGroupIndex'));
		gThis.m_bSetAltered = true;
		return false;
	});

	gThis._OnGroupChange = GEventHandler(function(eEvent) {
		gThis.m_bSetAltered = true;
		var bFound = false;
		for (var k in gThis.m_oOptions.aAttributeGroups) {
			if (gThis.m_oOptions.aAttributeGroups[k].caption[GCore.iActiveLanguage] == $(this).val()) {
				bFound = true;
				break;
			}
		}
		if (bFound) {
			gThis.m_aoAttributes[$(this).closest('.group').data('iGroupIndex')].id = gThis.m_oOptions.aAttributeGroups[k].id;
			for (var l in GCore.aoLanguages) {
				gThis.m_aoAttributes[$(this).closest('.group').data('iGroupIndex')].caption[l] = (gThis.m_oOptions.aAttributeGroups[k].caption[l] == undefined) ? '' : gThis.m_oOptions.aAttributeGroups[k].caption[l];
			}
		}
		else {
			gThis.m_aoAttributes[$(this).closest('.group').data('iGroupIndex')].id = 'new-' + GFormTechnicalDataEditor.s_iNewId++;
			for (var l in GCore.aoLanguages) {
				if (l == GCore.iActiveLanguage) {
					gThis.m_aoAttributes[$(this).closest('.group').data('iGroupIndex')].caption[l] = $(this).val();
					continue;
				}
				gThis.m_aoAttributes[$(this).closest('.group').data('iGroupIndex')].caption[l] = '';
			}
		}
		gThis.UpdateFields();
	});

	gThis._OnAttributeAddClick = GEventHandler(function(eEvent) {
		var oNewAttribute = gThis._CreateAttribute();
		gThis.m_aoAttributes[$(this).closest('.group').data('iGroupIndex')].children.push(oNewAttribute);
		gThis.AddAttribute($(this).closest('.group').children('.attributes:first'), oNewAttribute, gThis.m_aoAttributes[$(this).closest('.group').data('iGroupIndex')].id);
		gThis._UpdateIndices();
		gThis.UpdateFields();
		return false;
	});

	gThis.AddAttribute = function(jGroup, oAttribute, iGroupIndex) {
		if (oAttribute == undefined) {
			oAttribute = {};
		}
		var jAttribute = $('<div class="' + gThis._GetClass('Attribute') + '"/>');
		var jAttributeSelect = $('<select/>');

		var aoActiveGroupAttributes = [];
		for (var j = 0; j < gThis.m_oOptions.aAttributeGroups.length; j++) {
			var oGroup = gThis.m_oOptions.aAttributeGroups[j];
			if(oGroup.id == iGroupIndex){
				aoActiveGroupAttributes = oGroup.attributes;
			}
		}

		var sAttributeOptions = '<option value="">---</option>';
		for (var j = 0; j < gThis.m_oOptions.aTechnicalAttributes.length; j++) {
			var oTechnicalAttribute = gThis.m_oOptions.aTechnicalAttributes[j];
			if ($.inArray(oTechnicalAttribute.id, aoActiveGroupAttributes) != -1) {
				sAttributeOptions += '<option value="' + oTechnicalAttribute.id + '">' + oTechnicalAttribute.caption[GCore.iActiveLanguage] + '</option>';
			}
		}

		jAttributeSelect.html(sAttributeOptions);
		if(oAttribute.set_id > 0){
			jAttribute.append($('<div class="field-technical-attribute"/>').prepend($('<span class="constant"/>').html(oAttribute.caption[GCore.iActiveLanguage])));
			jGroup.children('.add-attribute').before(jAttribute);
			var jDelete = $('<img src="' + gThis._GetImage('BlankIcon') + '" />');
			jAttribute.find('.field-select:first').prepend($('<span class="prefix"/>').append(jDelete));
			var jValue = $('<div class="value"/>');
			jAttribute.append(jValue);
		}else{
			var jAttributeEdit = $('<img class="edit" src="' + gThis._GetImage('EditIcon') + '" alt="' + GForm.Language.technical_data_edit_attribute + '" title="' + GForm.Language.technical_data_edit_attribute + '"/>');
			jAttribute.append($('<div class="field-select"/>').append($('<span class="suffix"/>').append(jAttributeEdit)).prepend($('<span class="field"/>').append(jAttributeSelect)));
			jAttributeEdit.click(gThis._OnAttributeEditClick);
			jAttributeSelect.GComboBox();
			jAttributeSelect.val(oAttribute.id).change();
			jAttributeSelect.change(GEventHandler(function(eEvent) {
				$(this).closest('.field-select').find('input:text').change();
			}));
			if (oAttribute.caption != undefined) {
				jAttribute.find('input:text').val(oAttribute.caption[GCore.iActiveLanguage]);
			}
			jAttribute.find('input:text').change(gThis._OnAttributeChange);
			jGroup.children('.add-attribute').before(jAttribute);
			var jDelete = $('<a href="#"/>');
			jDelete.append('<img src="' + gThis._GetImage('DeleteIcon') + '" alt="' + GForm.Language.technical_data_delete_attribute + '" title="' + GForm.Language.technical_data_delete_attribute + '"/>');
			jDelete.click(gThis._OnAttributeDeleteClick);
			jAttribute.find('.field-select:first').prepend($('<span class="prefix"/>').append(jDelete));
			var jValue = $('<div class="value"/>');
			jAttribute.append(jValue);
		}

		gThis._UpdateValueField(oAttribute, jAttribute);
	};

	gThis._OnAttributeEditClick = GEventHandler(function(eEvent) {
		var iGroupIndex = $(this).closest('.group').data('iGroupIndex');
		var iAttributeIndex = $(this).closest('.attribute').data('iAttributeIndex');
		var oAttribute = gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex];
		var jOverlay = $('<div class="technical-data-detail-editor"/>').data('iGroupIndex', iGroupIndex).data('iAttributeIndex', iAttributeIndex);
		$('body').append(jOverlay);
		jOverlay.GShadow();
		jOverlay.GOverlay({
			fClick: GEventHandler(function(eEvent) {
				jOverlay.remove();
			})
		});
		jOverlay.css({
			left: $(this).offset().left - 161,
			top: $(this).offset().top + 21
		});
		for (var l in GCore.aoLanguages) {
			var jLanguage = $('<div class="field-text"><span class="prefix"><img src="' + GCore.DESIGN_PATH + 'images/languages/' + GCore.aoLanguages[l].flag + '" alt="' + GCore.aoLanguages[l].name + '"/></span><span class="field"><input class="language-' + l + '" type="text" value="' + ((oAttribute.caption[l] == undefined) ? '' : oAttribute.caption[l]) + '"/></span></div>');
			jOverlay.append(jLanguage);
		}
		var jTypeSelect = $('<select class="type"/>');
		var aoTypes = [
			{id: GFormTechnicalDataEditor.FIELD_STRING, caption: GForm.Language.technical_data_value_type_string},
			{id: GFormTechnicalDataEditor.FIELD_MULTILINGUAL_STRING, caption: GForm.Language.technical_data_value_type_multilingual_string},
			{id: GFormTechnicalDataEditor.FIELD_TEXT, caption: GForm.Language.technical_data_value_type_text},
			//{id: GFormTechnicalDataEditor.FIELD_IMAGE, caption: GForm.Language.technical_data_value_type_image},
			{id: GFormTechnicalDataEditor.FIELD_BOOLEAN, caption: GForm.Language.technical_data_value_type_boolean}
		];
		for (var i = 0; i < aoTypes.length; i++) {
			jTypeSelect.append('<option' + ((aoTypes[i].id == oAttribute.type) ? ' selected="selected"' : '') + ' value="' + aoTypes[i].id + '">' + aoTypes[i].caption + '</option>');
		}
		jOverlay.append($('<div class="field-select"/>').append($('<span class="field"/>').append(jTypeSelect)));
		jTypeSelect.GSelect();
		var jSaveButton = $('<a class="button ok" href="#"><span>' + GForm.Language.technical_data_save_attribute + '</span></a>');
		jSaveButton.click(GEventHandler(function(eEvent) {
			var iAttributeIndex = $(this).closest('.technical-data-detail-editor').data('iAttributeIndex');
			var iGroupIndex = $(this).closest('.technical-data-detail-editor').data('iGroupIndex');
			for (var i in gThis.m_aoAttributes) {
				for (var j in gThis.m_aoAttributes[i].children) {
					if (gThis.m_aoAttributes[i].children[j].id != gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].id) {
						continue;
					}
					gThis.m_aoAttributes[i].children[j].type = parseInt($(this).closest('.technical-data-detail-editor').find('.type').val());
					for (var l in GCore.aoLanguages) {
						gThis.m_aoAttributes[i].children[j].caption[l] = $(this).closest('.technical-data-detail-editor').find('.language-' + l).val();
					}
				}
			}
			oAttribute = gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex];
			GOverlay.RemoveAll();
			gThis.m_oOptions.fSaveAttribute({
				attributeId: oAttribute.id,
				attributeName: oAttribute.caption,
				attributeType: oAttribute.type
			}, GCallback(gThis._OnAttributeSave, {
				iGroupIndex: iGroupIndex,
				iAttributeIndex: iAttributeIndex
			}));
			return false;
		}));
		var jDeleteButton = $('<a class="button delete" href="#"><span>' + GForm.Language.technical_data_delete_attribute_permanently + '</span></a>');
		jDeleteButton.click(GEventHandler(function(eEvent) {
			var iGroupIndex = $(this).closest('.technical-data-detail-editor').data('iGroupIndex');
			var iAttributeIndex = $(this).closest('.technical-data-detail-editor').data('iAttributeIndex');
			var sAttribute = gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].id;
			GOverlay.RemoveAll();
			GAlert(GForm.Language.technical_data_delete_attribute, GForm.Language.technical_data_delete_attribute_description, {
				aoPossibilities: [
					{
						mLink: GEventHandler(function(eEvent) {
							GAlert.DestroyAll();
							for (var i in gThis.m_oOptions.aTechnicalAttributes) {
								if (gThis.m_oOptions.aTechnicalAttributes[i].id == gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].id) {
									gThis.m_oOptions.aTechnicalAttributes.splice(i, 1);
									break;
								}
							}
							gThis.DeleteAttribute(iGroupIndex, iAttributeIndex);
							gThis.m_oOptions.fDeleteAttribute({
								attributeId: sAttribute
							}, GCallback(gThis._OnAttributeDeleted));
						}),
						sCaption: GMessageBar.Language.ok
					},
					{
						mLink: GEventHandler(function(eEvent) {
							GAlert.DestroyAll();
						}),
						sCaption: GMessageBar.Language.cancel
					}
				]
			});
		}));
		jOverlay.append(jSaveButton).append(jDeleteButton);
	});

	gThis._OnAttributeDeleteClick = GEventHandler(function(eEvent) {
		gThis.DeleteAttribute($(this).closest('.attribute').data('iGroupIndex'), $(this).closest('.attribute').data('iAttributeIndex'));
		gThis.m_bSetAltered = true;
		return false;
	});

	gThis._OnAttributeChange = GEventHandler(function(eEvent) {
		gThis.m_bSetAltered = true;
		var iGroupIndex = $(this).closest('.attribute').data('iGroupIndex');
		var iAttributeIndex = $(this).closest('.attribute').data('iAttributeIndex');
		var bFound = false;
		for (var k in gThis.m_oOptions.aTechnicalAttributes) {
			if (gThis.m_oOptions.aTechnicalAttributes[k].caption[GCore.iActiveLanguage] == $(this).val()) {
				bFound = true;
				break;
			}
		}
		if (bFound) {
			gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].id = gThis.m_oOptions.aTechnicalAttributes[k].id;
			gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].type = gThis.m_oOptions.aTechnicalAttributes[k].type;
			gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].value = '';
			for (var l in GCore.aoLanguages) {
				gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].caption[l] = (gThis.m_oOptions.aTechnicalAttributes[k].caption[l] == undefined) ? '' : gThis.m_oOptions.aTechnicalAttributes[k].caption[l];
			}
		}
		else {
			gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].id = 'new-' + GFormTechnicalDataEditor.s_iNewId++;
			gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].type = GFormTechnicalDataEditor.FIELD_STRING;
			gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].value = '';
			for (var l in GCore.aoLanguages) {
				if (l == GCore.iActiveLanguage) {
					gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].caption[l] = $(this).val();
					continue;
				}
				gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].caption[l] = '';
			}
			gThis.m_oOptions.aTechnicalAttributes.push(gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex]);
		}
		gThis._UpdateValueField(gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex], $(this).closest('.attribute'));
		gThis.UpdateFields();
	});

	gThis._UpdateValueField = function(oAttribute, jAttribute) {

		var jValue = jAttribute.find('.value').empty();
		switch (oAttribute.type) {
			case GFormTechnicalDataEditor.FIELD_STRING:
				gThis._WriteValueTypeString(jValue);
				break;
			case GFormTechnicalDataEditor.FIELD_MULTILINGUAL_STRING:
				gThis._WriteValueTypeMultilingualString(jValue);
				break;
			case GFormTechnicalDataEditor.FIELD_TEXT:
				gThis._WriteValueTypeTextArea(jValue);
				break;
			case GFormTechnicalDataEditor.FIELD_IMAGE:
				gThis._WriteValueTypeImage(jValue);
				break;
			case GFormTechnicalDataEditor.FIELD_BOOLEAN:
				gThis._WriteValueTypeBoolean(jValue);
				break;
			case GFormTechnicalDataEditor.FIELD_SELECT:
				gThis._WriteValueTypeSelect(jValue);
				break;
		}
	};

	gThis._WriteValueTypeString = function(jTarget) {
		var jInput = $('<input type="text"/>');
		jInput.focus(GEventHandler(function(eEvent) {
			$(this).closest('.field').addClass('focus');
		})).blur(GEventHandler(function(eEvent) {
			$(this).closest('.field').removeClass('focus');
		}));
		var jInputNode = $('<div class="field-text"><span class="field"/></div>').append($('<span class="suffix"/>')).find('.field').append(jInput);
		jTarget.append(jInputNode.parent());
		jInput.change(gThis._OnChangeValue);
	};

	gThis._WriteValueTypeSelect = function(jTarget) {
		var jInput = $('<input type="text"/>');
		jInput.focus(GEventHandler(function(eEvent) {
			$(this).closest('.field').addClass('focus');
		})).blur(GEventHandler(function(eEvent) {
			$(this).closest('.field').removeClass('focus');
		}));
		var jInputNode = $('<div class="field-text"><span class="field"/></div>').append($('<span class="suffix"/>')).find('.field').append(jInput);
		jTarget.append(jInputNode.parent());
		jInput.change(gThis._OnChangeValue);
	};

	gThis._WriteValueTypeImage = function(jTarget) {
		gThis.m_jFileSelector = $('<div style="clear: both; padding-top: 10px;"/>');
		gThis.m_jSelectedFileName = $('<span class="filename"/>');
		gThis.m_jFileSelector.append(gThis.m_jSelectedFileName);
		gThis.m_jSwfUpload = $('<div class="' + gThis._GetClass('AddFiles') + '"/>').append('<span id="' + gThis.GetId() + '__upload"/>');
		gThis.m_jFileSelector.append(gThis.m_jSwfUpload);
		gThis.m_jChooseButton = $('<a href="#" class="button"><span><img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GForm.Language.localfile_select + '</span></a>');
		gThis.m_jFileSelector.append($('<span class="browse-pictures"/>').append(gThis.m_jChooseButton));
		gThis.m_jQueue = $('<ul class="' + gThis._GetClass('Queue') + '"/>');
		gThis.m_jFileSelector.append(gThis.m_jQueue);
		gThis.m_jFilesDatagrid = $('<div/>');
		gThis.m_jFileSelector.append(gThis.m_jFilesDatagrid);
		gThis.m_jSelectedFiles = $('<div class="' + gThis._GetClass('SelectedTable') + '"/>');
		gThis.m_jFileSelector.append(gThis.m_jSelectedFiles);
		gThis.m_jFileField = $('<input type="hidden" name="' + gThis.GetName() + '[file]"/>');
		gThis.m_jFileSelector.append(gThis.m_jFileField);
		jTarget.append(gThis.m_jFileSelector);
	};

	gThis._WriteValueTypeTextArea = function(jTarget) {
		var jInput = $('<textarea rows="5" cols="5" style="width: 485px;" />');
		jInput.focus(GEventHandler(function(eEvent) {
			$(this).closest('.field').addClass('focus');
		})).blur(GEventHandler(function(eEvent) {
			$(this).closest('.field').removeClass('focus');
		}));
		var jInputNode = $('<div class="field-textarea"><span class="field"/></div>').append($('<span class="suffix"/>')).find('.field').append(jInput);
		jTarget.append(jInputNode.parent());
		jInput.change(gThis._OnChangeValue);
	};

	gThis._WriteValueTypeMultilingualString = function(jTarget) {
		var jInput = $('<input type="text"/>');
		jInput.focus(GEventHandler(function(eEvent) {
			$(this).closest('.field').addClass('focus');
		})).blur(GEventHandler(function(eEvent) {
			$(this).closest('.field').removeClass('focus');
		}));
		var jEdit = $('<img class="edit" src="' + gThis._GetImage('EditIcon') + '" alt="' + GForm.Language.technical_data_edit_multilingual_value + '" title="' + GForm.Language.technical_data_edit_multilingual_value + '"/>');
		jEdit.click(GEventHandler(function(eEvent) {
			var iGroupIndex = $(this).closest('.attribute').data('iGroupIndex');
			var iAttributeIndex = $(this).closest('.attribute').data('iAttributeIndex');
			var oAttribute = gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex];
			var jOverlay = $('<div class="technical-data-detail-editor"/>').data('iGroupIndex', iGroupIndex).data('iAttributeIndex', iAttributeIndex);
			$('body').append(jOverlay);
			jOverlay.GShadow();
			jOverlay.GOverlay({
				fClick: GEventHandler(function(eEvent) {
					jOverlay.remove();
				})
			});
			jOverlay.css({
				left: $(this).offset().left - 161,
				top: $(this).offset().top + 21
			});
			for (var l in GCore.aoLanguages) {
				var jLanguage = $('<div class="field-text"><span class="prefix"><img src="' + GCore.DESIGN_PATH + 'images/languages/' + GCore.aoLanguages[l].flag + '" alt="' + GCore.aoLanguages[l].name + '"/></span><span class="field"><input class="language-' + l + '" type="text" value="' + (((oAttribute.value == undefined) || (oAttribute.value[l] == undefined)) ? '' : oAttribute.value[l]) + '"/></span></div>');
				jOverlay.append(jLanguage);
			}
			var jSaveButton = $('<a class="button wide" href="#"><span>' + GForm.Language.technical_data_save_attribute + '</span></a>');
			jSaveButton.click(GEventHandler(function(eEvent) {
				var iAttributeIndex = $(this).closest('.technical-data-detail-editor').data('iAttributeIndex');
				var iGroupIndex = $(this).closest('.technical-data-detail-editor').data('iGroupIndex');
				gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].value = {};
				for (var l in GCore.aoLanguages) {
					gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].value[l] = $(this).closest('.technical-data-detail-editor').find('.language-' + l).val();
				}
				gThis.UpdateValues();
				GOverlay.RemoveAll();
				return false;
			}));
			jOverlay.append(jSaveButton);
		}));
		var jInputNode = $('<div class="field-text"><span class="field"/></div>').append($('<span class="suffix"/>').append(jEdit)).find('.field').append(jInput);
		jTarget.append(jInputNode.parent());
		jInput.change(gThis._OnChangeValue);
	};

	gThis._WriteValueTypeBoolean = function(jTarget) {
		var jInput = $('<input type="checkbox"/>');
		var jInputNode = $('<div class="field-checkbox"><span class="field"/></div>').find('.field').append(jInput);
		jTarget.append(jInputNode.parent());
		jInput.change(gThis._OnChangeValue);
	};

	gThis._OnChangeValue = GEventHandler(function(eEvent) {
		var iGroupIndex = $(this).closest('.attribute').data('iGroupIndex');
		var iAttributeIndex = $(this).closest('.attribute').data('iAttributeIndex');
		switch (gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].type) {
			case GFormTechnicalDataEditor.FIELD_STRING:
				gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].value = $(this).val();
				break;
			case GFormTechnicalDataEditor.FIELD_MULTILINGUAL_STRING:
				if (!(gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].value instanceof Object)) {
					gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].value = {};
				}
				gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].value[GCore.iActiveLanguage] = $(this).val();
				break;
			case GFormTechnicalDataEditor.FIELD_TEXT:
				gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].value = $(this).val();
				break;
			case GFormTechnicalDataEditor.FIELD_IMAGE:
				gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].value = $(this).val();
				break;
			case GFormTechnicalDataEditor.FIELD_BOOLEAN:
				gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].value = $(this).is(':checked');
				break;
		}
		gThis.UpdateFields();
	});

	gThis.UpdateValues = function() {
		for (var i in gThis.m_aoAttributes) {
			for (var j in gThis.m_aoAttributes[i].children) {
				if (gThis.m_aoAttributes[i].children[j].value != undefined) {
					gThis._UpdateValue(i, j, gThis.m_aoAttributes[i].children[j].value);
				}
			}
		}
		gThis.UpdateFields();
	};

	gThis._UpdateValue = function(iGroupIndex, iAttributeIndex, mValue) {
		switch (gThis.m_aoAttributes[iGroupIndex].children[iAttributeIndex].type) {
			case GFormTechnicalDataEditor.FIELD_STRING:
				gThis.m_jAttributes.find('.group:eq(' + iGroupIndex + ') .attribute:eq(' + iAttributeIndex + ') .value input:text').val(mValue);
				break;
			case GFormTechnicalDataEditor.FIELD_MULTILINGUAL_STRING:
				gThis.m_jAttributes.find('.group:eq(' + iGroupIndex + ') .attribute:eq(' + iAttributeIndex + ') .value input:text').val(mValue[GCore.iActiveLanguage]);
				break;
			case GFormTechnicalDataEditor.FIELD_TEXT:
				gThis.m_jAttributes.find('.group:eq(' + iGroupIndex + ') .attribute:eq(' + iAttributeIndex + ') .value textarea').val(mValue);
				break;
			case GFormTechnicalDataEditor.FIELD_IMAGE:
				gThis.m_jAttributes.find('.group:eq(' + iGroupIndex + ') .attribute:eq(' + iAttributeIndex + ') .value input:text').val(mValue);
				break;
			case GFormTechnicalDataEditor.FIELD_BOOLEAN:
				if (Number(mValue)) {
					gThis.m_jAttributes.find('.group:eq(' + iGroupIndex + ') .attribute:eq(' + iAttributeIndex + ') .value').checkCheckboxes();
				}
				else {
					gThis.m_jAttributes.find('.group:eq(' + iGroupIndex + ') .attribute:eq(' + iAttributeIndex + ') .value').unCheckCheckboxes();
				}
				break;
		}
	};

	gThis._OnAttributeGroupSave = GEventHandler(function(eEvent) {
		gThis.m_aoAttributes[eEvent.iGroupIndex].id = eEvent.attributeGroupId;
		GMessage(GForm.Language.technical_data_save_group_success, GForm.Language.technical_data_save_group_success_description);
		var bFound = false;
		for (var i in gThis.m_oOptions.aAttributeGroups) {
			if (gThis.m_oOptions.aAttributeGroups[i].id == eEvent.attributeGroupId) {
				gThis.m_oOptions.aAttributeGroups[i] = $.extend({}, gThis.m_aoAttributes[eEvent.iGroupIndex]);
				bFound = true;
				break;
			}
		}
		if (!bFound) {
			gThis.m_oOptions.aAttributeGroups.push($.extend({}, gThis.m_aoAttributes[eEvent.iGroupIndex]));
		}
		gThis._WriteTechnicalAttributes();
	});

	gThis._OnAttributeGroupDeleted = GEventHandler(function(eEvent) {
		GMessage(GForm.Language.technical_data_delete_group_success, GForm.Language.technical_data_delete_group_success_description);
		gThis._WriteTechnicalAttributes();
	});

	gThis._OnAttributeSave = GEventHandler(function(eEvent) {
		gThis.m_aoAttributes[eEvent.iGroupIndex].children[eEvent.iAttributeIndex].id = eEvent.attributeId;
		GMessage(GForm.Language.technical_data_save_attribute_success, GForm.Language.technical_data_save_attribute_success_description);
		var bFound = false;
		for (var i in gThis.m_oOptions.aTechnicalAttributes) {
			if (gThis.m_oOptions.aTechnicalAttributes[i].id == eEvent.attributeId) {
				gThis.m_oOptions.aTechnicalAttributes[i] = $.extend({}, gThis.m_aoAttributes[eEvent.iGroupIndex].children[eEvent.iAttributeIndex]);
				bFound = true;
				break;
			}
		}
		if (!bFound) {
			gThis.m_oOptions.aTechnicalAttributes.push($.extend({}, gThis.m_aoAttributes[eEvent.iGroupIndex].children[eEvent.iAttributeIndex]));
		}
		gThis._WriteTechnicalAttributes();
	});

	gThis._OnAttributeDeleted = GEventHandler(function(eEvent) {
		GMessage(GForm.Language.technical_data_delete_attribute_success, GForm.Language.technical_data_delete_attribute_success_description);
		gThis._WriteTechnicalAttributes();
	});

	gThis._UpdateIndices = function() {
		gThis.m_jAttributes.children('.group').each(function(i) {
			$(this).data('iGroupIndex', i);
			$(this).find('.attribute').each(function(j) {
				$(this).data('iAttributeIndex', j);
				$(this).data('iGroupIndex', $(this).closest('.group').data('iGroupIndex'));
			});
		});
	};

}, oDefaults);

GFormTechnicalDataEditor.FIELD_STRING = 1;
GFormTechnicalDataEditor.FIELD_MULTILINGUAL_STRING = 2;
GFormTechnicalDataEditor.FIELD_TEXT = 3;
GFormTechnicalDataEditor.FIELD_IMAGE = 4;
GFormTechnicalDataEditor.FIELD_BOOLEAN = 5;
GFormTechnicalDataEditor.FIELD_SELECT = 6;
//GFormTechnicalDataEditor.FIELD_MULTISELECT = 7;

GFormTechnicalDataEditor.s_iNewId = 0;
/*
* TEXTFIELD
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-text',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sDisabledClass: 'disabled',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition'
	},
	oImages: {
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png'
	},
	sFieldType: 'text',
	sDefault: '',
	aoRules: [],
	sComment: ''
};

var GFormTextField = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_bResized = false;

	gThis._PrepareNode = function() {

		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		if (!gThis.m_bRepeatable) {
			gThis.m_jNode.append(gThis._AddField());
		}
		else {
			gThis.AddRepetition();
		}
		if ((gThis.m_oOptions.sSelector != undefined) && (gThis.m_oOptions.sSelector.length)) {
			gThis.m_jField.attr('name', gThis.GetName() + '[value]');
			gThis.m_jNode.append('<input type="hidden" name="' + gThis.GetName() + '[selector]" value="' + gThis.m_oOptions.sSelector + '"/>');
		}
		if ((gThis.m_oOptions.sCssAttribute != undefined) && (gThis.m_oOptions.sCssAttribute.length)) {
			gThis.m_jField.attr('name', gThis.GetName() + '[value]');
			gThis.m_jNode.append('<input type="hidden" name="' + gThis.GetName() + '[css_attribute]" value="' + gThis.m_oOptions.sCssAttribute + '"/>');
		}

	};

	gThis._AddField = function(sId) {
		var jField = $('<input type="' + gThis.m_oOptions.sFieldType + '" name="'+ gThis.GetName(sId) + '" id="' + gThis.GetId(sId) + '"/>');

		if ((gThis.m_jField instanceof $) && gThis.m_jField.length) {
			gThis.m_jField = gThis.m_jField.add(jField);
		}
		else {
			gThis.m_jField = jField;
		}
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		if (gThis.m_oOptions.sPrefix != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.sPrefix);
			jRepetitionNode.append(jPrefix);
		}
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		if (gThis.m_oOptions.sSuffix != undefined && gThis.m_oOptions.sSuffix != '') {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jRepetitionNode.append(jSuffix);
		}
		var jError = $('<span class="' + gThis._GetClass('Required') + '"/>');
		jRepetitionNode.append(jError);
		gThis.jRepetitionNode = jRepetitionNode;
		return gThis.jRepetitionNode;
	};

	gThis.OnShow = function() {
		gThis._UpdateRepetitionButtons();
		if (!gThis.m_bShown && gThis.m_bRepeatable) {
			gThis._InitializeEvents('new-0');
		}
		gThis.m_bShown = true;
		if (gThis.m_bRepeatable) {
			for (var i in gThis.m_oRepetitions) {
				if (!gThis.m_oRepetitions[i].m_bResized) {
					gThis.m_oRepetitions[i].m_bResized = true;
					var iWidth = parseInt(gThis._GetField(i).css('width'));
					if (gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Prefix')).length) {
						iWidth -= (gThis._GetField(i).offset().left - gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
					}
					if (gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Suffix')).length) {
						iWidth -= gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Suffix')).width() + 4;
					}
					gThis._GetField(i).eq(i).css('width', iWidth);
				}
			}
		}
		else {
			if (!gThis.m_bResized) {
				gThis.m_bResized = true;
				var iWidth = parseInt(gThis.m_jField.css('width'));
				if (gThis.m_jNode.find('.' + gThis._GetClass('Prefix')).length) {
					iWidth -= (gThis.m_jField.offset().left - gThis.m_jNode.find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
				}
				if (gThis.m_jNode.find('.' + gThis._GetClass('Suffix')).length) {
					iWidth -= gThis.m_jNode.find('.' + gThis._GetClass('Suffix')).width() + 4;
				}
				gThis.m_jField.css('width', iWidth);
			}
		}
	};

	gThis.OnFocus = function(eEvent) {
		var jField = $(eEvent.currentTarget);
		jField.closest('.' + gThis._GetClass('FieldSpan')).addClass(gThis._GetClass('Focused'));
		gThis._ActivateFocusedTab(eEvent);
	};

	gThis.OnBlur = function(eEvent) {
		var jField = $(eEvent.currentTarget);
		jField.closest('.' + gThis._GetClass('FieldSpan')).removeClass(gThis._GetClass('Focused'));
	};

	gThis.Reset = function() {
		gThis.m_jField.val(gThis.m_oOptions.sDefault);
	};

	gThis._InitializeEvents = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (gThis.m_bRepeatable && (sRepetition == undefined)) {
			return;
		}
		var jField = gThis._GetField(sRepetition);
		jField.focus(gThis.OnFocus);
		jField.blur(gThis.OnBlur);
		jField.each(function() {
			$(this).unbind('change', gThis.OnValidate).change(gThis.OnValidate);
		});

	};


}, oDefaults);

/*
 * SLUGFIELD
 */

var oDefaults = {
    sName: '',
    sLabel: '',
    oClasses: {
        sFieldClass: 'field-text',
        sFieldSpanClass: 'field',
        sPrefixClass: 'prefix',
        sSuffixClass: 'suffix',
        sFocusedClass: 'focus',
        sInvalidClass: 'invalid',
        sDisabledClass: 'disabled',
        sRequiredClass: 'required',
        sWaitingClass: 'waiting',
        sFieldRepetitionClass: 'repetition',
        sAddRepetitionClass: 'add-field-repetition',
        sRemoveRepetitionClass: 'remove-field-repetition'
    },
    oImages: {
        sAddRepetition: 'images/icons/buttons/add.png',
        sRemoveRepetition: 'images/icons/buttons/delete.png',
        sRefreshButton: 'images/icons/datagrid/refresh.png'
    },
    sFieldType: 'text',
    sDefault: '',
    aoRules: [],
    sComment: '',
    sGenerateRoute: '',
    sNameField: '',
    sClass: ''
};

var GFormSlugField = GCore.ExtendClass(GFormTextField, function () {

    var gThis = this;

    gThis.m_bShown = false;
    gThis.m_bResized = false;

    gThis._PrepareNode = function () {

        gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
        var jLabel = $('<label for="' + gThis.GetId() + '"/>');
        jLabel.text(gThis.m_oOptions.sLabel);
        if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
            jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
        }

        gThis.m_jNode.append(jLabel);
        if (!gThis.m_bRepeatable) {
            gThis.m_jNode.append(gThis._AddField());
        }
        else {
            gThis.AddRepetition();
        }
        if ((gThis.m_oOptions.sSelector != undefined) && (gThis.m_oOptions.sSelector.length)) {
            gThis.m_jField.attr('name', gThis.GetName() + '[value]');
            gThis.m_jNode.append('<input type="hidden" name="' + gThis.GetName() + '[selector]" value="' + gThis.m_oOptions.sSelector + '"/>');
        }
        if ((gThis.m_oOptions.sCssAttribute != undefined) && (gThis.m_oOptions.sCssAttribute.length)) {
            gThis.m_jField.attr('name', gThis.GetName() + '[value]');
            gThis.m_jNode.append('<input type="hidden" name="' + gThis.GetName() + '[css_attribute]" value="' + gThis.m_oOptions.sCssAttribute + '"/>');
        }
    };

    gThis._AddField = function (sId) {

        var jField = $('<input type="' + gThis.m_oOptions.sFieldType + '" name="' + gThis.GetName(sId) + '" id="' + gThis.GetId(sId) + '" class="' + gThis.m_oOptions.sClass + '" />');

        if ((gThis.m_jField instanceof $) && gThis.m_jField.length) {
            gThis.m_jField = gThis.m_jField.add(jField);
        }
        else {
            gThis.m_jField = jField;
        }

        var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
        if (gThis.m_oOptions.sPrefix != undefined) {
            var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
            jPrefix.html(gThis.m_oOptions.sPrefix);
            jRepetitionNode.append(jPrefix);
        }
        jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
        if (gThis.m_oOptions.sSuffix != undefined) {
            var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
            jSuffix.html(gThis.m_oOptions.sSuffix);
            jRepetitionNode.append(jSuffix);
        }

        var jError = $('<span class="' + gThis._GetClass('Required') + '"/>');
        jRepetitionNode.append(jError);

        if(gThis.m_oOptions.sTranslatableId > 0){
            sRefreshLink = $('<img src="' + gThis._GetImage('RefreshButton') + '" />').css({
                'cursor': 'pointer',
                'margin-top': '3px',
                'margin-left': '3px',
                'position': 'relative',
                'top': '5px'
            });

            sRefreshLink.click(gThis.OnRefreshClick);
            jRepetitionNode.append(sRefreshLink);
        }

        gThis.jRepetitionNode = jRepetitionNode;
        return gThis.jRepetitionNode;
    };

    gThis.OnNameFieldChange = function (eEvent) {

    	var lock = gThis.m_gForm.Lock(Translator.trans('admin.form.locked.title', {}, 'admin'), Translator.trans('admin.form.locked.message', {}, 'admin'));

        var locale = $(eEvent.currentTarget).closest('.GFormRepetition').find('.locale').attr('data-locale');

        var fields = [];
        $('.' + gThis.m_oOptions.sClass).each(function(){
        	if($(this).attr('id') != gThis.GetId()){
        		fields.push($(this).val());
        	}
        });

        var oRequest = {
            'id': gThis.m_oOptions.sTranslatableId,
            'name': $(eEvent.currentTarget).val(),
            'locale': locale,
            'fields': fields
        };

        GF_Ajax_Request(Routing.generate(gThis.m_oOptions.sGenerateRoute), oRequest, function (oData) {
            gThis.m_jField.val(oData.slug);
            gThis.m_gForm.Unlock(lock);
        });
    };

    gThis.OnRefreshClick = function (eEvent) {
        var sSlugField = $(eEvent.currentTarget).parent().find('.' + gThis._GetClass('FieldSpan')).find('input:text');
        var sSlugFieldId = gThis.GetId();
        var sNameFieldId = sSlugFieldId.replace(gThis.m_oOptions.sName, gThis.m_oOptions.sNameField);
        var sNameField = $('#' + sNameFieldId);
        var locale = $(eEvent.currentTarget).closest('.GFormRepetition').find('.locale').attr('data-locale');

        var fields = [];
        $('.' + gThis.m_oOptions.sClass).each(function(){
        	if($(this).attr('id') != gThis.GetId()){
        		fields.push($(this).val());
        	}
        });

        var oRequest = {
            'id': gThis.m_oOptions.sTranslatableId,
            'name': sNameField.val(),
            'locale': locale,
            'fields': fields
        };

        GF_Ajax_Request(Routing.generate(gThis.m_oOptions.sGenerateRoute), oRequest, function (oData) {
            sSlugField.val(oData.slug);
            GNotification('Link SEO został odświeżony');
        });

        return false;
    };

    gThis.OnShow = function () {
        gThis._UpdateRepetitionButtons();
        if (!gThis.m_bShown && gThis.m_bRepeatable) {
            gThis._InitializeEvents('new-0');
        }
        gThis.m_bShown = true;
        if (gThis.m_bRepeatable) {
            for (var i in gThis.m_oRepetitions) {
                if (!gThis.m_oRepetitions[i].m_bResized) {
                    gThis.m_oRepetitions[i].m_bResized = true;
                    var iWidth = parseInt(gThis._GetField(i).css('width'));
                    if (gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Prefix')).length) {
                        iWidth -= (gThis._GetField(i).offset().left - gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
                    }
                    if (gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Suffix')).length) {
                        iWidth -= gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Suffix')).width() + 4;
                    }
                    gThis._GetField(i).eq(i).css('width', iWidth);
                }
            }
        }
        else {
            if (!gThis.m_bResized) {
                gThis.m_bResized = true;
                var iWidth = parseInt(gThis.m_jField.css('width'));
                if (gThis.m_jNode.find('.' + gThis._GetClass('Prefix')).length) {
                    iWidth -= (gThis.m_jField.offset().left - gThis.m_jNode.find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
                }
                if (gThis.m_jNode.find('.' + gThis._GetClass('Suffix')).length) {
                    iWidth -= gThis.m_jNode.find('.' + gThis._GetClass('Suffix')).width() + 4;
                }
                gThis.m_jField.css('width', iWidth);
            }
        }
    };

    gThis.OnFocus = function (eEvent) {
        var jField = $(eEvent.currentTarget);
        jField.closest('.' + gThis._GetClass('FieldSpan')).addClass(gThis._GetClass('Focused'));
        gThis._ActivateFocusedTab(eEvent);
    };

    gThis.OnBlur = function (eEvent) {
        var jField = $(eEvent.currentTarget);
        jField.closest('.' + gThis._GetClass('FieldSpan')).removeClass(gThis._GetClass('Focused'));
    };

    gThis.Reset = function () {
        gThis.m_jField.val(gThis.m_oOptions.sDefault);
    };

    gThis._InitializeEvents = function (sRepetition) {
        if (gThis.m_jField == undefined) {
            return;
        }
        if (gThis.m_bRepeatable && (sRepetition == undefined)) {
            return;
        }
        var jField = gThis._GetField(sRepetition);
        jField.focus(gThis.OnFocus);
        jField.blur(gThis.OnBlur);
        jField.each(function () {
            $(this).unbind('change', gThis.OnValidate).change(gThis.OnValidate);
        });

        if(gThis.m_oOptions.sTranslatableId == null) {
            var sNameFieldId = gThis.GetId().replace(gThis.m_oOptions.sName, gThis.m_oOptions.sNameField);
            var sNameField = $('#' + sNameFieldId);
            sNameField.change(gThis.OnNameFieldChange);
        }

    };
}, oDefaults);

/**
 * CSRF
 */
var GFormTextFieldCSRF = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_bResized = false;

	gThis._PrepareNode = function() {

		gThis.m_jNode = $('<div/>');

		if (!gThis.m_bRepeatable) {
			gThis.m_jNode.append(gThis._AddField());
		}
		else {
			gThis.AddRepetition();
		}

	};

	gThis._AddField = function(sId) {
		var jField = $('<input type="hidden" name="'+ gThis.GetName(sId) + '" id="' + gThis.GetId(sId) + '"/>');

		if ((gThis.m_jField instanceof $) && gThis.m_jField.length) {
			gThis.m_jField = gThis.m_jField.add(jField);
		}
		else {
			gThis.m_jField = jField;
		}

		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));

		var jError = $('<span class="' + gThis._GetClass('Required') + '"/>');
		jRepetitionNode.append(jError);
		gThis.jRepetitionNode = jRepetitionNode;

		return gThis.jRepetitionNode;
	};

	gThis.OnShow = function() {
		gThis._UpdateRepetitionButtons();
		if (!gThis.m_bShown && gThis.m_bRepeatable) {
			gThis._InitializeEvents('new-0');
		}
		gThis.m_bShown = true;
		if (gThis.m_bRepeatable) {
			for (var i in gThis.m_oRepetitions) {
				if (!gThis.m_oRepetitions[i].m_bResized) {
					gThis.m_oRepetitions[i].m_bResized = true;
					var iWidth = parseInt(gThis._GetField(i).css('width'));
					if (gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Prefix')).length) {
						iWidth -= (gThis._GetField(i).offset().left - gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
					}
					if (gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Suffix')).length) {
						iWidth -= gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Suffix')).width() + 4;
					}
					gThis._GetField(i).eq(i).css('width', iWidth);
				}
			}
		}
		else {
			if (!gThis.m_bResized) {
				gThis.m_bResized = true;
				var iWidth = parseInt(gThis.m_jField.css('width'));
				if (gThis.m_jNode.find('.' + gThis._GetClass('Prefix')).length) {
					iWidth -= (gThis.m_jField.offset().left - gThis.m_jNode.find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
				}
				if (gThis.m_jNode.find('.' + gThis._GetClass('Suffix')).length) {
					iWidth -= gThis.m_jNode.find('.' + gThis._GetClass('Suffix')).width() + 4;
				}
				gThis.m_jField.css('width', iWidth);
			}
		}
	};

	gThis.OnFocus = function(eEvent) {
		var jField = $(eEvent.currentTarget);
		jField.closest('.' + gThis._GetClass('FieldSpan')).addClass(gThis._GetClass('Focused'));
		gThis._ActivateFocusedTab(eEvent);
	};

	gThis.OnBlur = function(eEvent) {
		var jField = $(eEvent.currentTarget);
		jField.closest('.' + gThis._GetClass('FieldSpan')).removeClass(gThis._GetClass('Focused'));
	};

	gThis.Reset = function() {
		gThis.m_jField.val(gThis.m_oOptions.sDefault);
	};

	gThis._InitializeEvents = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (gThis.m_bRepeatable && (sRepetition == undefined)) {
			return;
		}
		var jField = gThis._GetField(sRepetition);
		jField.focus(gThis.OnFocus);
		jField.blur(gThis.OnBlur);
		jField.each(function() {
			$(this).unbind('change', gThis.OnValidate).change(gThis.OnValidate);
		});

	};


}, oDefaults);
/*
* TIP
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-tip',
		sArrowClass: 'tip',
		sHideButtonClass: 'hide',
		sRetractableClass: 'retractable',
		sSwitchClass: 'switch'
	},
	sTip: '',
	sShortTip: '',
	bRetractable: false,
	sDirection: 'down',
	sDefaultState: 'retracted'
};

var GFormTip = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field')).addClass(gThis.m_oOptions.sDirection);
		gThis.m_jNode.append('<div class="' + gThis._GetClass('Arrow') + '"/>');
		gThis.m_jNode.append($('<div class="long"/>').append('<p>' + gThis.m_oOptions.sTip + '</p>'));
		if (gThis.m_oOptions.bRetractable) {
			gThis.m_jNode.addClass(gThis._GetClass('Retractable'));
			if (gThis.m_oOptions.sDefaultState == 'retracted') {
				gThis.m_jNode.addClass('retracted');
			}
			gThis.m_jNode.append($('<div class="' + gThis._GetClass('Switch') + '"/>'));
			gThis.m_jNode.append($('<div class="short"/>').append(gThis.m_oOptions.sShortTip));
		}
	};

	gThis._InitializeEvents = function() {
		gThis.m_jNode.find('.' + gThis._GetClass('Switch')).click(function() {
			gThis.m_jNode.toggleClass('retracted');
			return false;
		});
	};

	gThis.Focus = function() { return false; };

}, oDefaults);

/*
* SORTABLE TREE
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-tree',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sItemNameClass: 'item-name',
		sExpanderClass: 'expander',
		sExpandedClass: 'expanded',
		sActiveClass: 'active',
		sButtonClass: 'button',
		sExpandAllClass: 'expand-all',
		sRetractAllClass: 'retract-all'
	},
	oImages: {
		sAdd: 'images/icons/buttons/add.png',
		sDuplicate: 'images/icons/buttons/duplicate.png',
		sDelete: 'images/icons/buttons/delete.png',
		sSave: 'images/icons/buttons/save.png',
		sRestore: 'images/icons/buttons/clean.png',
		sWaiting: 'images/icons/loading/indicator.gif'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	bSortable: false,
	iTotal: 0,
	iRestrict: 0,
	bSelectable: true,
	bChoosable: false,
	bClickable: false,
	bDeletable: false,
	bRetractable: true,
	oItems: {},
	fOnClick: GCore.NULL,
	fOnDuplicate: GCore.NULL,
	fOnSaveOrder: GCore.NULL,
	fOnAdd: GCore.NULL,
	fOnAfterAdd: GCore.NULL,
	fOnDelete: GCore.NULL,
	fOnAfterDelete: GCore.NULL,
	sOnAfterDeleteId: 0,
	sActive: '',
	sAddItemPrompt: '',
	bPreventDuplicates: true,
	bPreventDuplicatesOnAllLevels: false
};

var GFormTree = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_jTree;
	gThis.m_jOptions;
	gThis.m_oItems;
	gThis.m_jExpandAll;
	gThis.m_jRetractAll;
	gThis.m_jFieldWrapper;
	gThis.m_jItemPlaceholder;
	gThis.m_jItemDragged;
	gThis.m_oItems = {};
	gThis.m_jUnmodified;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jField = $('<input type="hidden"/>');
		gThis.m_jNode.append(gThis.m_jField);
		gThis.m_jFieldWrapper = $('<div/>');
		gThis.m_jNode.append(gThis.m_jFieldWrapper);
		gThis.m_jNode.append('<label>' + gThis.m_oOptions.sLabel + '</label>');
		gThis.m_jExpandAll = $('<a href="#"/>').text(GForm.Language.tree_expand_all);
		gThis.m_jRetractAll = $('<a href="#"/>').text(GForm.Language.tree_retract_all).css('visibility','hidden');
		if(gThis.m_oOptions.bRetractable){
			gThis.m_jNode.append($('<p class="' + gThis._GetClass('RetractAll') + '"/>').append(gThis.m_jRetractAll));
		}
		gThis.m_jTree = $('<ul/>');
		if(gThis.m_oOptions.iTotal > 0){
			gThis.m_jNode.append($('<div class="tree-wrapper"/>').append(gThis.m_jTree));
		}
		gThis.Update();
		gThis._PrepareOptions();
		window.setTimeout(gThis.ResetExpansion, 500);
		gThis.m_jUnmodified = $('<input type="hidden" name="' + gThis.GetName() + '[unmodified]" value="1"/>');
		if (!gThis.m_oOptions.bChoosable){
			gThis.m_jNode.append(gThis.m_jUnmodified);
		}
	};


	gThis.OnRetractAll = function() {
		gThis.m_jTree.find('li:has(li)').removeClass(gThis._GetClass('Expanded'));
		return false;
	};

	gThis._PrepareOptions = function() {
		var jA;
		gThis.m_jOptions = $('<div class="options"/>');

		if (gThis.m_oOptions.bAddable && (gThis.m_oOptions.fOnAdd instanceof Function)) {

			jA = $('<a id="add-category" class="' + gThis._GetClass('Button') + '" href="#"/>');
			jA.append('<span><img src="' + gThis._GetImage('Add') + '" alt=""/>' + gThis.m_oOptions.sAddLabel + '</span>');
			jA.click(function(eEvent) {
				GAlert.DestroyAll();
				GPrompt(gThis.m_oOptions.sAddItemPrompt, function(sName) {
					if (gThis.m_oOptions.bPreventDuplicatesOnAllLevels) {
						var jSiblings = gThis.m_jTree.find('li');
						for (var i = 0; i < jSiblings.length; i++) {
							if (sName == jSiblings.eq(i).children('a').text()) {
								GAlert.DestroyThis.apply(this);
								GError(GForm.Language.tree_duplicate_entry_all_levels, GForm.Language.tree_duplicate_entry_all_levels_description);
								return;
							}
						}
					}
					else if (gThis.m_oOptions.bPreventDuplicates) {
						var jSiblings = gThis.m_jTree.children('li');
						for (var i = 0; i < jSiblings.length; i++) {
							if (sName == jSiblings.eq(i).children('a').text()) {
								GAlert.DestroyThis.apply(this);
								GError(GForm.Language.tree_duplicate_entry, GForm.Language.tree_duplicate_entry_description);
								return;
							}
						}
					}
					GCore.StartWaiting();
					gThis.m_oOptions.fOnAdd({
						name: sName
					}, GCallback(function(eEvent) {
						GCore.StopWaiting();
						if (gThis.m_oOptions.fOnAfterAdd instanceof Function) {
							gThis.m_oOptions.fOnAfterAdd(eEvent.id);
						}
					}));
				});
				return false;
			});
			gThis.m_jOptions.append($('<p/>').append(jA));

			if (gThis.m_oOptions.fOnDuplicate instanceof Function) {
				jB = $('<a class="' + gThis._GetClass('Button') + ' duplicate" href="#"/>');
				jB.append('<span><img src="' + gThis._GetImage('Duplicate') + '" alt=""/>' + GForm.Language.tree_duplicate_item + '</span>');
				jB.click(function(eEvent) {
					if (gThis.m_oOptions.fOnDuplicate instanceof Function) {
						gThis.m_oOptions.fOnDuplicate(sId);
					}
				});
				if (gThis.m_jTree.find('.' + gThis._GetClass('Active')).length) {
					gThis.m_jOptions.append($('<p/>').append(jB));
				}
			}


			if (gThis.m_jTree.find('.' + gThis._GetClass('Active')).length) {

				var sId = gThis.m_jTree.find('.' + gThis._GetClass('Active')).get(0).sId;
				jA = $('<a class="' + gThis._GetClass('Button') + '" href="#"/>');
				jA.append('<span><img src="' + gThis._GetImage('Add') + '" alt=""/>' + GForm.Language.tree_add_subitem + '</span>');
				jA.click(function(eEvent) {
					GAlert.DestroyAll();
					GPrompt(gThis.m_oOptions.sAddItemPrompt, function(sName) {
						if (gThis.m_oOptions.bPreventDuplicatesOnAllLevels) {
							var jSiblings = gThis.m_jTree.find('li > a');
							for (var i = 0; i < jSiblings.length; i++) {
								if (sName == jSiblings.eq(i).text()) {
									GAlert.DestroyThis.apply(this);
									GError(GForm.Language.tree_duplicate_entry_all_levels, GForm.Language.tree_duplicate_entry_all_levels_description);
									return;
								}
							}
						}
						else if (gThis.m_oOptions.bPreventDuplicates) {
							var jSiblings = gThis.m_jTree.find('li.' + gThis._GetClass('Active') + ' > ul > li > a');
							for (var i = 0; i < jSiblings.length; i++) {
								if (sName == jSiblings.eq(i).text()) {
									GAlert.DestroyThis.apply(this);
									GError(GForm.Language.tree_duplicate_entry, GForm.Language.tree_duplicate_entry_description);
									return;
								}
							}
						}
						GCore.StartWaiting();
						gThis.m_oOptions.fOnAdd({
							parent: sId,
							name: sName
						}, GCallback(function(eEvent) {
							GCore.StopWaiting();
							if (gThis.m_oOptions.fOnAfterAdd instanceof Function) {
								gThis.m_oOptions.fOnAfterAdd(eEvent.id);
							}
						}));
					});
					return false;
				});
				gThis.m_jOptions.append($('<p/>').append(jA));

			}

		}

		if (gThis.m_oOptions.bDeletable && (gThis.m_oOptions.fOnDelete instanceof Function) && gThis.m_jTree.find('.' + gThis._GetClass('Active')).length) {

			var sId = gThis.m_jTree.find('.' + gThis._GetClass('Active')).get(0).sId;
			jA = $('<a id="delete-category" class="' + gThis._GetClass('Button') + ' delete" href="#"/>');
			jA.append('<span><img src="' + gThis._GetImage('Delete') + '" alt=""/>' + GForm.Language.tree_delete_item + '</span>');
			jA.click(function(eEvent) {
				GAlert.DestroyAll();
				GWarning(GForm.Language.tree_delete_item_warning, GForm.Language.tree_delete_item_warning_description, {
					bAutoExpand: true,
					aoPossibilities: [
						{mLink: function() {
							GCore.StartWaiting();
							gThis.m_oOptions.fOnDelete({
								id: sId
							}, function() {
								GCore.StopWaiting();
								if (gThis.m_oOptions.fOnAfterDelete instanceof Function) {
									gThis.m_oOptions.fOnAfterDelete(gThis.m_oOptions.sOnAfterDeleteId);
								}
							});
						}, sCaption: GForm.Language.tree_ok},
						{mLink: GAlert.DestroyThis, sCaption: GForm.Language.tree_cancel}
					]
				});
				return false;
			});
			gThis.m_jOptions.append($('<p/>').append(jA));

		}

		gThis.m_jNode.append(gThis.m_jOptions);
	};

	gThis.GetOrder = function() {
		var jItems = gThis.m_jTree.find('li');
		var aoItems = [];
		for (var i = 0; i < jItems.length; i++) {
			var sId = jItems.eq(i).get(0).sId;
			var sParent = '';
			if (jItems.eq(i).parent().closest('li').length) {
				sParent = jItems.eq(i).parent().closest('li').get(0).sId;
			}
			var jSiblings = jItems.eq(i).parent().children('li');
			var iWeight = jSiblings.index(jItems.eq(i));
			aoItems.push({
				id: sId,
				parent: sParent,
				weight: iWeight
			});
		}
		return aoItems;
	};

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_oOptions.bChoosable) {
			return gThis.m_jFieldWrapper.find('input:first').attr('value');
		}
		if (gThis.m_jField == undefined) {
			return '';
		}
		var aValues = [];
		var jValues = gThis._GetField(sRepetition).filter(':checked');
		for (var i in jValues) {
			aValues.push(jValues.eq(i).attr('value'));
		}
		return aValues;
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		gThis._GetField(sRepetition).val(mValue).change();
	};

	gThis.ResetExpansion = function() {
		gThis.m_jTree.find('li').removeClass(gThis._GetClass('Expanded'));
		gThis.m_jTree.find('li.' + gThis._GetClass('Active')).parents('li').andSelf().filter(':has(li)').addClass(gThis._GetClass('Expanded'));
		gThis.m_jTree.find('li > label > input:checked').parents('li').andSelf().filter(':has(li)').addClass(gThis._GetClass('Expanded'));
	};

	gThis._WriteSubtree = function(jParent, sParent) {
		if (sParent == undefined) {
			sParent = null;
		}
		var oItems = GCore.FilterObject(gThis.m_oOptions.oItems, function(oItem) {return (oItem.parent == sParent);});
		var aIterationArray = GCore.GetIterationArray(oItems, function(oA, oB) {return (oA.weight - oB.weight);});
		var iLength = aIterationArray.length;
		for (var i = 0; i < iLength; i++) {
			var sId = aIterationArray[i];
			var oItem = oItems[sId];
			jParent.append(gThis._WriteItem(sId, oItem));
		}
	};

	gThis._WriteItem = function(sId, oItem) {
		var jLi = $('<li/>');
		jLi.get(0).sId = sId;
		if (gThis.m_oOptions.sActive == sId) {
			jLi.addClass(gThis._GetClass('Active'));
			if(oItem.hasChildren){
				gThis._Expand(jLi);
			}
		}
		if (gThis.m_oOptions.bSelectable) {
			var jField = $('<input type="checkbox" value="' + sId + '"/>');
			if (gThis.m_jFieldWrapper.find('input[value="' + sId + '"]').length) {
				jField.click();
				jField.attr('checked', 'checked');
			}
			if((gThis.m_oOptions.bGlobal == true) && GCore.iActiveView > 0){
				jField.attr('disabled','disabled');
			}
			if((oItem.allow != undefined) && (oItem.allow == 0) && GCore.iActiveView > 0){
				jField.attr('disabled','disabled');
			}
			jLi.append($('<label class="' + gThis._GetClass('ItemName') + '"/>').append(jField).append(oItem.name));
		}
		else if (gThis.m_oOptions.bChoosable) {
			var jField = $('<input type="radio" name="' + gThis.GetName() + '" value="' + sId + '"/>');
			if (gThis.m_jFieldWrapper.find('input[value="' + sId + '"]').length) {
				jField.click();
				jField.attr('checked', 'checked');
			}
			if((gThis.m_oOptions.iRestrict > 0) && gThis.m_oOptions.iRestrict == sId){
				jField.attr('disabled','disabled');
			}
			jLi.append($('<label class="' + gThis._GetClass('ItemName') + '"/>').append(jField).append(oItem.name));
		}
		else if (gThis.m_oOptions.bClickable) {
			var jA = $('<a href="#" class="' + gThis._GetClass('ItemName') + '">' + oItem.name + '</a>');
			jLi.append(jA);
		}
		else {
			jLi.append('<span class="' + gThis._GetClass('ItemName') + '">' + oItem.name + '</span>');
		}
		var jUl = $('<ul/>');
		gThis._WriteSubtree(jUl, sId);
		var jExpander = $('<span class="' + gThis._GetClass('Expander') + '"/>');
		jLi.prepend(jExpander);
		jLi.append(jUl);
		jExpander.css('display', 'none');
		if (oItem.hasChildren || jUl.children('li').length) {
			jExpander.css('display', 'block');
		}
		return jLi;
	};

	gThis.UpdateExpanders = function() {
		gThis.m_jTree.find('li::not(:has(li))').removeClass(gThis._GetClass('Expanded')).children('.' + gThis._GetClass('Expander')).css('display', 'none');
		gThis.m_jTree.find('li:has(li) > .' + gThis._GetClass('Expander')).css('display', 'block');
	};

	gThis.Update = function() {
		gThis.m_jTree.empty();
		gThis._WriteSubtree(gThis.m_jTree);
		if (gThis.m_oOptions.bSortable) {
			gThis.m_jTree.sortable({
				items: 'li',
				placeholder: 'item-faux-placeholder',
				opacity: .5,
				tolerance: 'cursor',
				cursor: 'move',
				cursorAt: 'left',
				delay: 200,
				start: function(e, ui) {
					gThis.m_bIgnoreClick = true;
					gThis.m_jItemPlaceholder = $('<li class="item-placeholder"/>');
				},
				change: function(e, ui) {
				},
				sort: function(e, ui) {
					gThis.m_jTree.find('li').removeClass('temporarly-expanded');
					if (ui.offset.left > $(ui.placeholder).prev().offset().left + 15) {
						$(ui.placeholder).prev().addClass('temporarly-expanded');
						gThis.m_jItemPlaceholder.appendTo($(ui.placeholder).prev().children('ul'));
					}
					else {
						gThis.m_jItemPlaceholder.insertAfter($(ui.placeholder));
					}
				},
				beforeStop: function(e, ui) {
					gThis.m_jTree.find('li.temporarly-expanded').removeClass('temporarly-expanded').addClass('expanded');
					gThis.m_jItemPlaceholder.replaceWith($(ui.helper));
					gThis.UpdateExpanders();
				},
				stop: function(e, ui) {
					if (gThis.m_oOptions.bPreventDuplicates) {
						var jLis = gThis.m_jTree.find('li');
						for (var i = 0; i < jLis.length; i++) {
							var jSiblings = jLis.eq(i).nextAll('li');
							var sItem = jLis.eq(i).children('a').text();
							for (var j = 0; j < jSiblings.length; j++) {
								if (sItem == jSiblings.eq(j).children('a').text()) {
									GError(GForm.Language.tree_found_duplicates + ': "' + sItem + '"', GForm.Language.tree_found_duplicates_description);
									return;
								}
							}
						}
					}
					GCore.StartWaiting();
					gThis.m_oOptions.fOnSaveOrder({
						items: gThis.GetOrder()
					}, GCallback(function(eEvent) {
						GCore.StopWaiting();
					}));

					setTimeout(function() {
						gThis.m_bIgnoreClick = false;
					}, 500);
				}
			});
		}
		gThis._InitializeNodeEvents();
		gThis.ResetExpansion();
	};

	gThis.Populate = function(mValue) {
		if ((mValue == undefined) || (mValue == '')) {
			mValue = [];
		}

		if (gThis.m_oOptions.bChoosable) {
			gThis.m_jFieldWrapper.empty();
			for (var i in mValue) {
				if (i == 'toJSON') {
					continue;
				}
				gThis.m_jFieldWrapper.append('<input type="hidden" name="' + gThis.GetName() + '" value="' + mValue[i] + '"/>');
				gThis.m_jNode.find('input:radio[value="' + mValue[i] + '"]').click();
			}
		}
		else if (gThis.m_oOptions.bSelectable) {
			gThis.m_jNode.unCheckCheckboxes();
			gThis.m_jFieldWrapper.empty();
			for (var i in mValue) {
				if (i == 'unmodified') {
					continue;
				}
				gThis.m_jFieldWrapper.append('<input type="hidden" name="' + gThis.GetName() + '[' + mValue[i] + ']" value="' + mValue[i] + '"/>');
				gThis.m_jNode.find('input:checkbox[value="' + mValue[i] + '"]').parent().checkCheckboxes();
			}
		}
		gThis.ResetExpansion();
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis.m_bShown = true;
			gThis.m_jUnmodified.val('0');
		}
	};

	gThis._OnClick = GEventHandler(function(eEvent) {
		GCore.StartWaiting();
	});

	gThis._InitializeEvents = function(sRepetition) {
		gThis.m_jExpandAll.click(gThis.OnExpandAll);
		gThis.m_jRetractAll.click(gThis.OnRetractAll);
		gThis._InitializeNodeEvents();
	};

	gThis._OnSelect = GEventHandler(function(eEvent) {
		if ($(this).is(':radio')) {
			gThis.m_jFieldWrapper.find('input').remove();
		}
		else {
			gThis.m_jFieldWrapper.find('input[value="' + $(this).attr('value') + '"]').remove();
		}
		if ($(this).is(':checked')) {
			var jInput = $('<input type="hidden" name="' + gThis.GetName() + ($(this).is(':radio') ? '' : '[' + $(this).attr('value') + ']') + '" value="' + $(this).attr('value') + '"/>');
			gThis.m_jFieldWrapper.append(jInput);
			for (var i in gThis.m_afDependencyTriggers) {
				gThis.m_afDependencyTriggers[i].apply(jInput.get(0), [{
					data: {
						gNode: gThis
					}
				}]);
			}
		}
	});

	gThis._InitializeNodeEvents = function() {
		gThis.m_jTree.find('.' + gThis._GetClass('Expander')).unbind('click').click(function() {
			if ($(this).closest('li').hasClass(gThis._GetClass('Expanded'))) {
				$(this).closest('li').find('li').andSelf().removeClass(gThis._GetClass('Expanded'));
			}
			else {
				$(this).closest('li').addClass(gThis._GetClass('Expanded'));
				gThis._Expand($(this).closest('li'));
			}

			if(gThis.m_jTree.find('.' + gThis._GetClass('Expanded')).size() == 0){
				gThis.m_jRetractAll.css('visibility','hidden');
			}else{
				gThis.m_jRetractAll.css('visibility','visible');
			}
		});
		if (gThis.m_oOptions.bClickable) {
			gThis.m_jTree.find('li').unbind('click').unbind('mousedown').each(function() {
				var sId = $(this).closest('li').get(0).sId;
				$(this).children('a').click(GEventHandler(function(eEvent) {
					if (gThis.m_bIgnoreClick) {
						return false;
					}
					gThis.m_jTree.find('li').removeClass(gThis._GetClass('Active'));
					$(this).closest('li').addClass(gThis._GetClass('Active'));
					gThis._OnClick.apply(this, [eEvent]);
					if (gThis.m_oOptions.fOnClick instanceof Function) {
						gThis.m_oOptions.fOnClick(sId);
					}
					return false;
				}));
			});
		}
		gThis.m_jTree.find('input').unbind('click').click(gThis._OnSelect);
	};

	gThis._Expand = function(jParentLi) {
		var sId = jParentLi.get(0).sId;
		if (gThis.m_oItems[sId] != undefined) {
			return;
		}
	};

	gThis._OnChildrenLoaded = GEventHandler(function(eEvent) {
		var jUl = $('<ul/>');
		gThis.m_oItems[eEvent.parentNode.get(0).sId] = true;
		var aIterationArray = GCore.GetIterationArray(eEvent.children, function(oA, oB) {return (oA.weight - oB.weight);});
		var iLength = aIterationArray.length;
		for (var i = 0; i < iLength; i++) {
			var sId = aIterationArray[i];
			jUl.append(gThis._WriteItem(sId, eEvent.children[sId]));
		}
		eEvent.parentNode.find('ul').remove();
		eEvent.parentNode.append(jUl);
		gThis._InitializeNodeEvents();
	});

}, oDefaults);

/*
* BORDER
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-border',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition',
		sColourTypeClass: 'colour-type',
		sColourStartClass: 'colour-start',
		sColourEndClass: 'colour-end',
		sColourPreviewClass: 'colour-preview'
	},
	oImages: {
		sBold: 'images/icons/font-style-bold.png',
		sUnderline: 'images/icons/font-style-underline.png',
		sItalic: 'images/icons/font-style-italic.png',
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png',
		sSideAll: 'images/icons/buttons/border-all.png',
		sSide_top: 'images/icons/buttons/border-top.png',
		sSide_right: 'images/icons/buttons/border-right.png',
		sSide_bottom: 'images/icons/buttons/border-bottom.png',
		sSide_left: 'images/icons/buttons/border-left.png'
	},
	sFieldType: 'text',
	sDefault: '',
	aoRules: [],
	sComment: '',
	sSelector: ''
};

var GFormBorder = GCore.ExtendClass(GFormTextField, function() {

	var gThis = this;

	gThis.m_oSides = {};
	gThis.m_oSizeField = {};
	gThis.m_oColourField = {};
	gThis.m_oColourPreviewFields = {};

	gThis.m_jGlobalSide;
	gThis.m_jSeparationTrigger;

	gThis.m_bSeparated = false;

	gThis.m_fOnUpdate = GCore.NULL;

	gThis.m_asSides = ['top', 'right', 'bottom', 'left'];

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
				jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jLabel = jLabel;
		gThis.m_jNode.append(jLabel);
		gThis.m_jNode.append(gThis._AddField());
		for (var i = 0; i < gThis.m_asSides.length; i++) {
			gThis.m_jNode.append(gThis._AddSideOptions(gThis.m_asSides[i]));
		}
		if ((gThis.m_oOptions.sSelector != undefined) && (gThis.m_oOptions.sSelector.length)) {
			gThis.m_jNode.append('<input type="hidden" name="' + gThis.GetName() + '[selector]" value="' + gThis.m_oOptions.sSelector + '"/>');
		}
		gThis.SetValue({});
	};

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		return gThis.m_jField.eq(0).val();
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (mValue == undefined) {
			return;
		}
		var bSeparate = false;
		for (var i in gThis.m_asSides) {
			var sSide = gThis.m_asSides[i];
			var sColour;
			var sSize;
			if (mValue[sSide] != undefined) {
				gThis.m_oColourField[sSide].val((mValue[sSide].colour == undefined) ? '000000' : mValue[sSide].colour);
				gThis.m_oSizeField[sSide].val((mValue[sSide].size == undefined) ? '1' : mValue[sSide].size).change();
			}
			else {
				gThis.m_oColourField[sSide].val('000000');
				gThis.m_oSizeField[sSide].val('1').change();
			}
			if (sColour == undefined) {
				sColour = gThis.m_oColourField[sSide].val();
			}
			else if (sColour != gThis.m_oColourField[sSide].val()) {
				bSeparate = true;
			}
			if (sSize == undefined) {
				sSize = gThis.m_oSizeField[sSide].val();
			}
			else if (sSize != gThis.m_oSizeField[sSide].val()) {
				bSeparate = true;
			}
		}
		gThis.UpdateSeparation(bSeparate);
	};

	gThis.UpdateSeparation = function(bSeparate) {
		gThis.m_bSeparated = bSeparate;
		if (bSeparate) {
			gThis.m_jSeparationTrigger.removeClass('active');
			gThis.m_jNode.find('.side').slideDown(250);
			gThis.m_jGlobalSide.find('.field:not(.icon)').css('display', 'none');
			gThis.m_oColourPreviewFields['all'].css('visibility', 'hidden');
		}
		else {
			gThis.m_jSeparationTrigger.addClass('active');
			gThis.m_oColourField['all'].val(gThis.m_oColourField['top'].val()).change();
			gThis.m_oSizeField['all'].val(gThis.m_oSizeField['top'].val()).change();
			gThis.m_jNode.find('.side').css('display', 'none');
			gThis.m_jGlobalSide.find('.field:not(.icon)').css('display', 'inline');
			gThis.m_oColourPreviewFields['all'].css('visibility', 'visible');
		}
		gThis.UpdatePreview();
	};

	gThis.UpdatePreview = function(sSide) {
		for (var i in gThis.m_oColourField) {
			gThis.m_oColourPreviewFields[i].css('background-color', '#' + gThis.m_oColourField[i].val());
		}
		if (gThis.m_bSeparated) {
			gThis.m_oColourPreviewFields['all'].css('background-color', 'transparent').parent().addClass('none');
		}
		else {
			gThis.m_oColourPreviewFields['all'].parent().removeClass('none');
		}
		if (gThis.m_fOnUpdate instanceof Function) {
			gThis.m_fOnUpdate.apply(gThis, [{}]);
		}
	};

	gThis._AddSideOptions = function(sSide) {
		var jSide = $('<div class="side"/>');

		var jColourPreviewNode = $('<span class="' + gThis._GetClass('ColourPreview') + '"/>');

		var jSizeField = $('<select name="' + gThis.GetName() + '[' + sSide + '][size]" />');
		jSizeField.append('<option value="0">' + GForm.Language.border_none + '</option>');
		for (var i = 1; i < 5; i++) {
			jSizeField.append('<option value="' + i + '">' + i + ' px</option>');
		};

		var jColourField = $('<input type="text" name="' + gThis.GetName() + '[' + sSide + '][colour]" />');

		jSide.append('<label>' + GForm.Language['border_side_' + sSide] + '</label>');
		var jRepetition = $('<span class="repetition"/>');
		//jRepetition.append(jColourPreviewNode);
		jRepetition.append($('<span class="' + gThis._GetClass('ColourPreview') + '-container"/>').append(jColourPreviewNode));
		jRepetition.append('<span class="field icon"><img src="' + gThis._GetImage('Side_' + sSide) + '" alt="' + GForm.Language['border_side_' + sSide] + '"/></span>');
		jRepetition.append($('<span class="field size"/>').append(jSizeField));
		jRepetition.append($('<span class="field colour"/>').append(jColourField));
		jSide.append(jRepetition);

		gThis.m_oSides[sSide] = jSide;
		gThis.m_oSizeField[sSide] = jSizeField;
		gThis.m_oColourField[sSide] = jColourField;
		gThis.m_oColourPreviewFields[sSide] = jColourPreviewNode;
		return jSide;
	};

	gThis._AddField = function(sId) {

		var jSide = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		gThis.m_jGlobalSide = jSide;

		var jColourPreviewNode = $('<span class="' + gThis._GetClass('ColourPreview') + '"/>');

		var jSizeField = $('<select/>');
		jSizeField.append('<option value="0">' + GForm.Language.border_none + '</option>');
		for (var i = 1; i < 5; i++) {
			jSizeField.append('<option value="' + i + '">' + i + ' px</option>');
		};

		var jColourField = $('<input type="text"/>');

		//jSide.append(jColourPreviewNode);
		jSide.append($('<span class="' + gThis._GetClass('ColourPreview') + '-container"/>').append(jColourPreviewNode));

		gThis.m_jSeparationTrigger = $('<span class="field icon"><img src="' + gThis._GetImage('SideAll') + '" alt="' + GForm.Language['border_separate'] + '" title="' + GForm.Language['border_separate'] + '"/></span>');
		jSide.append(gThis.m_jSeparationTrigger);
		jSide.append($('<span class="field size"/>').append(jSizeField));
		jSide.append($('<span class="field colour"/>').append(jColourField));

		gThis.m_oSides['all'] = jSide;
		gThis.m_oSizeField['all'] = jSizeField;
		gThis.m_oColourField['all'] = jColourField;
		gThis.m_oColourPreviewFields['all'] = jColourPreviewNode;

		return jSide;
	};

	gThis.OnShow = function() {
		if (gThis.m_bShown) {
			return;
		}
		gThis.m_bShown = true;
		for (var i in gThis.m_oSizeField) {
			gThis.m_oSizeField[i].GSelect();
		}
	};

	gThis._Initialize = function() {
		gThis.UpdatePreview();
	};

	gThis._InitializeEvents = function() {

		gThis.m_jSeparationTrigger.css('cursor', 'pointer').click(GEventHandler(function(eEvent) {
			gThis.UpdateSeparation(!gThis.m_bSeparated);
		}));

		for (var i in gThis.m_oColourField) {
			gThis.m_oColourField[i].ColorPicker({
				color: '#' + gThis.m_oColourField[i].val(),
				onBeforeShow: function () {
					$(this).ColorPickerSetColor(this.value);
				},
				onShow: function(colpkr) {
					$(colpkr).fadeIn(250);
					$(this).closest('.field').addClass('focus');
					$(colpkr).data('field', $(this));
					return false;
				},
				onHide: function (colpkr) {
					$(colpkr).fadeOut(250);
					$(colpkr).data('field').triggerHandler('change');
					$(colpkr).data('field').closest('.field').removeClass('focus');
					return false;
				},
				onChange: function(hsb, hex, rgb) {
					$(this).data('field').val(hex);
					$(this).data('field').closest('.side, .repetition').find('.colour-preview').css('background-color', '#' + hex);
				}
			}).change(GEventHandler(function(eEvent) {
				gThis.UpdatePreview();
			}));
			gThis.m_oSizeField[i].change(GEventHandler(function(eEvent) {
				gThis.UpdatePreview();
			})).triggerHandler('change');
		}

		gThis.m_oColourField['all'].change(GEventHandler(function() {
			var sValue = $(this).val();
			for (var i in gThis.m_oColourField) {
				gThis.m_oColourPreviewFields[i].css('background-color', '#' + sValue);
				gThis.m_oColourField[i].val(sValue);
			}
			gThis.m_oColourField['top'].change();
		}));

		gThis.m_oSizeField['all'].change(GEventHandler(function() {
			var sValue = $(this).val();
			for (var i in gThis.m_oSizeField) {
				if (i == 'all') {
					continue;
				}
				gThis.m_oColourPreviewFields[i].css('background-color', '#' + sValue);
				gThis.m_oSizeField[i].val(sValue).change();
			}
			if (!parseInt(sValue)) {
				gThis.m_oColourPreviewFields['all'].css('background-color', 'transparent').parent().addClass('none');
			}
			else {
				gThis.m_oColourPreviewFields['all'].parent().removeClass('none');
			}
		})).triggerHandler('change');

		for (var i in gThis.m_oSizeField) {
			if (i == 'all') {
				continue;
			}
			gThis.m_oSizeField[i].bind('change', {i: i}, GEventHandler(function(eEvent) {
				var sValue = $(this).val();
				if (!parseInt(sValue)) {
					gThis.m_oColourPreviewFields[eEvent.data.i].css('background-color', 'transparent').parent().addClass('none');
				}
				else {
					gThis.m_oColourPreviewFields[eEvent.data.i].parent().removeClass('none');
				}
			}));
		}

		gThis.m_oColourField['all'].change(GEventHandler(function() {
			var sValue = $(this).val();
			for (var i in gThis.m_oColourField) {
				if (i == 'all') {
					continue;
				}
				gThis.m_oColourPreviewFields[i].css('background-color', '#' + sValue);
				gThis.m_oColourField[i].val(sValue).change();
			}
		}));
	};

	gThis.Reset = function() {
		gThis.m_jField.eq(0).val(gThis.m_oOptions.sDefault).change();
	};

}, oDefaults);
/*
* COLOUR SCHEME PICKER
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-colour',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition',
		sColourTypeClass: 'colour-type',
		sColourStartClass: 'colour-start',
		sColourEndClass: 'colour-end',
		sColourPreviewClass: 'colour-preview',
		sAddFilesClass: 'add-pictures',
		sQueueClass: 'upload-queue',
		sProgressClass: 'progress',
		sProgressBarClass: 'progress-bar',
		sProgressBarIndicatorClass: 'indicator',
		sUploadErrorClass: 'upload-error',
		sUploadSuccessClass: 'upload-success'
	},
	oImages: {
		sChooseIcon: 'images/icons/datagrid/edit.png',
		sDeleteIcon: 'images/icons/datagrid/delete.png',
		sUploadButton: 'images/buttons/add-pictures.png'
	},
	sFieldType: 'text',
	sDefault: '',
	aoRules: [],
	sComment: '',
	aoTypes: [
		{sValue: '1', sLabel: 'colour_scheme_picker_colour', sFlag: 'bAllowColour'},
		{sValue: '2', sLabel: 'colour_scheme_picker_gradient', sFlag: 'bAllowGradient'},
		{sValue: '3', sLabel: 'colour_scheme_picker_image', sFlag: 'bAllowImage'}
	],
	bAllowColour: true,
	bAllowGradient: true,
	bAllowImage: false,
	sUploadUrl: '',
	sSessionId: '',
	sSessionName: '',
	asFileTypes: [],
	sFileTypesDescription: '',
	fDeleteFile: GCore.NULL,
	fLoadFiles: GCore.NULL,
	sSwfUploadUrl: '_data_panel/swfupload.swf',
	iWidth: 131,
	iHeight: 34,
	iMaxFileSize: 100 * 1024,	// kB
	sSelector: '',
	iGradientHeight: 16
};

var GFormColourSchemePicker = GCore.ExtendClass(GFormTextField, function() {

	var gThis = this;

	gThis.m_jRepetitionNode;
	gThis.m_jColourTypeNode;
	gThis.m_jColourStartNode;
	gThis.m_jColourEndNode;
	gThis.m_jColourPreviewNode;
	gThis.m_jFieldColourType;
	gThis.m_jFieldColourStart;
	gThis.m_jFieldColourEnd;

	gThis.m_jFileField;
	gThis.m_bShown = false;
	gThis.m_jFilesDatagrid;
	gThis.m_gDataProvider;
	gThis.m_gFilesDatagrid;
	gThis.m_jSelectedFiles;
	gThis.m_jSwfUpload;
	gThis.m_jQueue;
	gThis.m_iUploadsInProgress = 0;
	gThis.m_iLockId = -1;
	gThis.m_bLoadedDefaults = false;
	gThis.m_jChooseButton;
	gThis.m_jSelectedFileName;
	gThis.m_jFileSelector;
	gThis.m_jFilePosition;
	gThis.m_jFileRepeat;
	gThis.m_jFileRepeatField;

	gThis.m_sCWD;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		gThis.m_jNode.append(gThis._AddField());
		if ((gThis.m_oOptions.sSelector != undefined) && (gThis.m_oOptions.sSelector.length)) {
			gThis.m_jNode.append('<input type="hidden" name="' + gThis.GetName() + '[selector]" value="' + gThis.m_oOptions.sSelector + '"/>');
		}
		gThis.m_jNode.append('<input type="hidden" name="' + gThis.GetName() + '[gradient_height]" value="' + gThis.m_oOptions.iGradientHeight + '"/>');
	};

	gThis.Populate = function(mValue) {
		if (gThis.m_gFilesDatagrid) {
			gThis._UpdateDatagridSelection(mValue['file']);
		}
		gThis.SetValue(mValue);
	};

	gThis._UpdateDatagridSelection = function(mValue) {
		if (!(mValue instanceof Array)) {
			if ((mValue == undefined) || !mValue.length) {
				mValue = [];
			}
			else {
				mValue = [mValue];
			}
		}
		gThis.m_gFilesDatagrid.m_asSelected = [];
		for (var i = 0; i < mValue.length; i++) {
			gThis.m_gFilesDatagrid.m_asSelected[i] = mValue[i];
		}
		if (gThis.m_bShown) {
			gThis.m_gFilesDatagrid.LoadData();
		}
	};

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jFileField == undefined) {
			return {};
		}
		return {
			file: gThis.m_jFileField.val()
		};
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (mValue == undefined) {
			return;
		}
		if (mValue['type'] != undefined) {
			gThis.m_jFieldColourType.val(mValue.type).triggerHandler('change');
			gThis.m_jFieldColourStart.val(mValue.start);
			gThis.m_jFieldColourEnd.val(mValue.end);
		}
		if (mValue['repeat'] != undefined) {
			gThis.m_jFileRepeatField.val(mValue['repeat']);
		}
		if (mValue['position'] != undefined) {
			gThis.m_jFilePosition.find('input[value="' + mValue['position'] + '"]').click();
		}
		if (mValue['file'] == undefined) {
			gThis.m_jFileField.val('');
			gThis.m_jSelectedFileName.html('<span class="none">' + GForm.Language.localfile_none_selected + '</span>');
		}
		else {
			gThis.m_jFileField.val(mValue['file']).triggerHandler('change');
			gThis.m_jSelectedFileName.text(mValue['file']);
			if (gThis.m_jFieldColourType.val() == '3') {
				gThis.m_jColourPreviewNode.css({
					'background-image': 'url(\'' + GCore.DESIGN_PATH.substr(0, GCore.DESIGN_PATH.lastIndexOf('/', GCore.DESIGN_PATH.length - 2)) + '/' + gThis.m_oOptions.sFilePath + gThis.m_jFileField.val() + '\')'
				});
			}
			if (gThis.m_gFilesDatagrid) {
				gThis.m_gFilesDatagrid.m_asSelected = [gThis.m_oOptions.sFilePath + mValue['file']];
			}
		}
		gThis.UpdatePreview();
	};

	gThis.UpdatePreview = function() {
		gThis.m_jColourPreviewNode.empty();
		gThis.m_jColourPreviewNode.css({
			'background-color': (gThis.m_jFieldColourStart.val() == 'transparent') ? 'transparent' : "#" + gThis.m_jFieldColourStart.val(),
			'background-image': 'none'
		});
		switch(gThis.m_jFieldColourType.val()) {
			case '1': //kolor
				gThis.m_jColourEndNode.css('visibility', 'hidden');
				gThis.m_jFileSelector.css('display', 'none');
				gThis.m_jFilePosition.css('display', 'none');
				gThis.m_jFileRepeat.css('display', 'none');
				break;

			case '2': //gradient
				gThis.m_jColourEndNode.css('visibility', 'visible');
				gThis.m_jFileSelector.css('display', 'none');
				gThis.m_jFilePosition.css('display', 'none');
				gThis.m_jFileRepeat.css('display', 'none');
				gThis.m_jColourPreviewNode.gradient({
					from:      gThis.m_jFieldColourStart.val(),
					to:        gThis.m_jFieldColourEnd.val(),
					direction: 'horizontal'
				});
				break;

			case '3': //plik
				gThis.m_jColourPreviewNode.css({
					'background-image': 'url(\'' + GCore.DESIGN_PATH.substr(0, GCore.DESIGN_PATH.lastIndexOf('/', GCore.DESIGN_PATH.length - 2)) + '/' + gThis.m_oOptions.sFilePath + gThis.m_jFileField.val() + '\')',
					'background-repeat': gThis.m_jFileRepeatField.find('option:selected').attr('value'),
					'background-position': gThis.m_jFilePosition.find('input:checked').attr('value')
				});
				gThis.m_jColourStartNode.css('visibility', 'visible');
				gThis.m_jColourEndNode.css('visibility', 'hidden');
				gThis.m_jFileSelector.css('display', 'block');
				gThis.m_jFilePosition.css('display', 'block');
				gThis.m_jFileRepeat.css('display', 'block');
				break;
		}
	};

	gThis._AddField = function(sId) {

		var jColourTypeNode = $('<span class="' + gThis._GetClass('ColourType') + ' ' + gThis._GetClass('FieldSpan') +  '"/>');
		var jColourStartNode = $('<span class="' + gThis._GetClass('ColourStart') + '"/>');
		var jColourEndNode = $('<span class="' + gThis._GetClass('ColourEnd') + '"/>');

		var jColourPreviewNode = $('<span class="' + gThis._GetClass('ColourPreview') + '"/>');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');

		var jFieldColourType = $('<select id="'+gThis.GetId()+'" name="' + gThis.GetName() + '[type]" />');
		for (var i = 0; i < gThis.m_oOptions.aoTypes.length; i++) {
			var oType = gThis.m_oOptions.aoTypes[i];
			if (gThis.m_oOptions[oType.sFlag]) {
				jFieldColourType.append('<option value="' + oType.sValue + '">' + GForm.Language[oType.sLabel] + '</option>');
			}
		}

		var jFieldColourStart = $('<input type="text" name="' + gThis.GetName() + '[start]" />');
		var jFieldColourEnd = $('<input type="text" name="' + gThis.GetName() + '[end]" />');


		jColourTypeNode.append(jFieldColourType);
		jColourStartNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldColourStart));
		jColourEndNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldColourEnd));

		jRepetitionNode.append($('<span class="' + gThis._GetClass('ColourPreview') + '-container"/>').append(jColourPreviewNode)).append(jColourTypeNode).append(jColourStartNode).append(jColourEndNode);

		gThis.m_jRepetitionNode = jRepetitionNode;
		gThis.m_jColourTypeNode = jColourTypeNode;
		gThis.m_jColourStartNode = jColourStartNode;
		gThis.m_jColourEndNode = jColourEndNode;
		gThis.m_jColourPreviewNode = jColourPreviewNode;
		gThis.m_jFieldColourType = jFieldColourType;
		gThis.m_jFieldColourStart = jFieldColourStart;
		gThis.m_jFieldColourEnd = jFieldColourEnd;

		gThis.m_jFileSelector = $('<div style="clear: both; padding-top: 10px;"/>');

		gThis.m_jSelectedFileName = $('<span class="filename"/>');
		gThis.m_jFileSelector.append(gThis.m_jSelectedFileName);
		gThis.m_jSwfUpload = $('<div class="' + gThis._GetClass('AddFiles') + '"/>').append('<span id="' + gThis.GetId() + '__upload"/>');
		gThis.m_jFileSelector.append(gThis.m_jSwfUpload);
		gThis.m_jChooseButton = $('<a href="#" class="button"><span><img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GForm.Language.localfile_select + '</span></a>');
		gThis.m_jFileSelector.append($('<span class="browse-pictures"/>').append(gThis.m_jChooseButton));
        gThis.m_jQueue = $('<ul class="' + gThis._GetClass('Queue') + '" id="' + gThis.GetId() + '__queue"/>');
		gThis.m_jFileSelector.append(gThis.m_jQueue);
		gThis.m_jFilesDatagrid = $('<div/>');
		gThis.m_jFileSelector.append(gThis.m_jFilesDatagrid);
		gThis.m_jSelectedFiles = $('<div class="' + gThis._GetClass('SelectedTable') + '"/>');
		gThis.m_jFileSelector.append(gThis.m_jSelectedFiles);
		gThis.m_jFileField = $('<input type="hidden" name="' + gThis.GetName() + '[file]"/>');
		gThis.m_jFileSelector.append(gThis.m_jFileField);
		jRepetitionNode.append(gThis.m_jFileSelector);

		gThis.m_jFileRepeat = $('<div class="bg-repeat"/>').append('<label for="' + gThis.GetId() + '__position">' + GForm.Language.colour_scheme_picker_background_repeat + '</label>');
		gThis.m_jFileRepeatField = $('<select name="' + gThis.GetName() + '[repeat]" id="' + gThis.GetId() + '__position"/>');
		var asRepeatModes = [
			['no-repeat', GForm.Language.colour_scheme_picker_background_repeat_no],
			['repeat-x', GForm.Language.colour_scheme_picker_background_repeat_x],
			['repeat-y', GForm.Language.colour_scheme_picker_background_repeat_y],
			['repeat', GForm.Language.colour_scheme_picker_background_repeat_xy]
		];
		for (var i = 0; i < asRepeatModes.length; i++) {
			gThis.m_jFileRepeatField.append('<option value="' + asRepeatModes[i][0] + '"' + ((asRepeatModes[i][0] == 'repeat-x') ? ' selected="selected"' : '') + '>' + asRepeatModes[i][1] + '</option>');
		}
		gThis.m_jFileRepeat.append($('<span class="field"/>').append(gThis.m_jFileRepeatField));
		jRepetitionNode.append(gThis.m_jFileRepeat);

		gThis.m_jFilePosition = $('<div class="bg-position"/>').append('<label>' + GForm.Language.colour_scheme_picker_background_position + '</label>');
		jPositionRadios = $('<div/>');
		var asPositions = [
			'0 0', 'center 0', 'right 0',
			'0 center', 'center center', 'right center',
			'0 bottom', 'center bottom', 'right bottom'
		];
		for (var i = 0; i < asPositions.length; i++) {
			jPositionRadios.append('<input type="radio" name="' + gThis.GetName() + '[position]" value="' + asPositions[i] + '"' + ((asPositions[i] == '0 0') ? ' checked="checked"' : '') + '/>');
		}
		gThis.m_jFilePosition.append(jPositionRadios);
		jRepetitionNode.append(gThis.m_jFilePosition);

		gThis.m_jField = jRepetitionNode.find('input');

		return jRepetitionNode;
	};

	gThis._OnChoose = GEventHandler(function(eEvent) {
		gThis.m_jFilesDatagrid.slideToggle(250);
		if (!gThis.m_gFilesDatagrid) {
			gThis._InitFilesDatagrid();
		}
		return false;
	});

	gThis._InitializeEvents = function() {

		gThis.m_jChooseButton.click(gThis._OnChoose);

		gThis.m_jFieldColourType.change(function() {
			gThis.UpdatePreview();
		});

		gThis.m_jFieldColourStart.ColorPicker({
			color: '#' + gThis.m_jFieldColourStart.val(),
			onBeforeShow: function () {
				$(this).ColorPickerSetColor(this.value);
			},
			onShow: function(colpkr) {
				$(colpkr).fadeIn(250);
				gThis.m_jFieldColourStart.closest('.field').addClass('focus');
				return false;
			},
			onHide: function (colpkr) {
				$(colpkr).fadeOut(250);
				gThis.m_jFieldColourStart.triggerHandler('change');
				gThis.m_jFieldColourStart.closest('.field').removeClass('focus');
				return false;
			},
			onChange: function(hsb, hex, rgb) {
				gThis.UpdatePreview();
				gThis.m_jFieldColourStart.val(hex);
			}
		}).change(GEventHandler(function(eEvent) {
			gThis.UpdatePreview();
		}));
		gThis.m_jFieldColourEnd.ColorPicker({
			color: '#' + gThis.m_jFieldColourEnd.val(),
			onBeforeShow: function () {
				$(this).ColorPickerSetColor(this.value);
			},
			onShow: function(colpkr) {
				$(colpkr).fadeIn(250);
				gThis.m_jFieldColourEnd.closest('.field').addClass('focus');
				return false;
			},
			onHide: function(colpkr) {
				$(colpkr).fadeOut(250);
				gThis.m_jFieldColourEnd.triggerHandler('change');
				gThis.m_jFieldColourEnd.closest('.field').removeClass('focus');
				return false;
			},
			onChange: function(hsb, hex, rgb) {
				gThis.UpdatePreview();
				gThis.m_jFieldColourEnd.val(hex);
			}
		}).change(GEventHandler(function(eEvent) {
			gThis.UpdatePreview();
		}));

		gThis.m_jFieldColourType.GSelect().focus(GEventHandler(function(eEvent) {
			$(this).closest('.field').addClass('focus');
		})).blur(GEventHandler(function(eEvent) {
			$(this).closest('.field').removeClass('focus');
		}));

		gThis.m_jFileRepeatField.GSelect().focus(GEventHandler(function(eEvent) {
			$(this).closest('.field').addClass('focus');
		})).blur(GEventHandler(function(eEvent) {
			$(this).closest('.field').removeClass('focus');
		})).change(GEventHandler(function(eEvent) {
			gThis.UpdatePreview();
		}));

		gThis.m_jFilePosition.find('input').click(GEventHandler(function(eEvent) {
			gThis.UpdatePreview();
		}));

	};

	gThis.Reset = function() {
		gThis.m_jField.eq(0).val(gThis.m_oOptions.sDefault).change();
		gThis.UpdatePreview();
	};

	gThis.Focus = function() {
		return true;
	};

	gThis._OnClickRow = function(gDg, sId) {
		var oFile = gThis.m_gFilesDatagrid.GetRow(sId);
		if (oFile.dir) {
			if (oFile.name == '..') {
				gThis.m_sCWD = gThis.m_sCWD.substr(0, gThis.m_sCWD.lastIndexOf('/', gThis.m_sCWD.length - 2));
			}
			else {
				gThis.m_sCWD += oFile.name + '/';
			}
			gThis.m_jSwfUpload.swfupload('addPostParam', 'path', gThis.m_sCWD);
			gThis._RefreshFiles();
			return false;
		}
		return true;
	};

	gThis._OnSelect = function(gDg, sId) {
		var oFile = gDg.GetRow(sId);
		if (!oFile.dir) {
			gThis.SetValue({
				file: oFile.path.substr(gThis.m_oOptions.sFilePath.length)
			});
		}
	};

	gThis._OnDeselect = function(gDg, sId) {
		gThis.SetValue('');
		gThis.m_jFileField.triggerHandler('change');
	};

	gThis._Initialize = function() {
		var oValue = gThis.GetValue();
		var sPath = gThis.m_oOptions.sFilePath + oValue.file;
		sPath = sPath.substr(0, sPath.lastIndexOf('/') + 1);
		gThis.m_sCWD = sPath;
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis._InitUploader();
			gThis.m_bShown = true;
		}
	};

	gThis._ProcessFile = function(oRow) {
		if (oRow.dir) {
			if (oRow.name == '..') {
				oRow.thumbpreview = '<img src="' + gThis.m_oOptions.oTypeIcons['cdup'] + '" alt=""/>';
			}
			else {
				oRow.thumbpreview = '<img src="' + gThis.m_oOptions.oTypeIcons['directory'] + '" alt=""/>';
			}
		}
		else {
			var sExtension = oRow.name.substr(oRow.name.lastIndexOf('.') + 1);
			if (gThis.m_oOptions.oTypeIcons[sExtension] == undefined) {
				sExtension = 'unknown';
			}
			if ((sExtension == 'png') || (sExtension == 'jpg') || (sExtension == 'gif')) {
				oRow.thumbpreview = '<a href="' + GCore.DESIGN_PATH.substr(0, GCore.DESIGN_PATH.lastIndexOf('/', GCore.DESIGN_PATH.length - 2)) + '/' + oRow.path + '" class="show-thumb"><img src="' + gThis.m_oOptions.oTypeIcons[sExtension] + '" style="vertical-align: middle;" alt="' + GForm.Language.file_selector_show_thumb + '"/></a>';
			}
			else {
				oRow.thumbpreview = '<img src="' + gThis.m_oOptions.oTypeIcons[sExtension] + '" alt=""/>';
			}
		}
		return oRow;
	};

    gThis._InitUploader = function() {
        var uploader = new plupload.Uploader({
            runtimes : 'html5',
            browse_button : gThis.GetId() + '__upload',
            container: document.getElementById(gThis.GetId() + '__queue'),
            url : gThis.m_oOptions.sUploadUrl,
            filters : {
                max_file_size : '10mb',
                mime_types: [{
                    title : "Image files",
                    extensions : "jpg,gif,png"
                }]
            },
            init: {
                FilesAdded: function(up, files) {
                    plupload.each(files, function(file) {
                        gThis.OnFileQueued(file);
                    });
                    up.start();
                },
                FileUploaded: function(up, files, response) {
                    gThis.OnUploadSuccess(files, response);
                },
                UploadProgress: function(up, file) {
                    gThis.OnUploadProgress(file);
                },

                Error: function(up, err) {
                    gThis.OnUploadProgress(err);
                },
                UploadComplete: function(){
                    gThis.OnUploadComplete();
                }
            }
        });

        uploader.init();
    };

    gThis.OnFileQueued = function(oFile) {
        if (gThis.m_iUploadsInProgress++ == 0) {
            gThis.m_iLockId = gThis.m_gForm.Lock(GForm.Language.file_selector_form_blocked, GForm.Language.file_selector_form_blocked_description);
        }
        var jLi = $('<li class="upload__' + oFile.id + '"/>');
        jLi.append('<h4>' + oFile.name + '</h4>');
        jLi.append('<p class="' + gThis._GetClass('Progress') + '"/>');
        jLi.append('<div class="' + gThis._GetClass('ProgressBar') + '"><div class="' + gThis._GetClass('ProgressBarIndicator') + '"></div>');
        gThis.m_jQueue.append(jLi);
    };

    gThis.OnDelete = function() {
        gThis.m_jSwfUpload.swfupload('cancelUpload', sFid);
    };

    gThis.OnUploadProgress = function(oFile) {
        var jLi = gThis.m_jQueue.find('.upload__' + oFile.id);
        jLi.find('.' + gThis._GetClass('Progress')).text(oFile.percent + '%');
        jLi.find('.' + gThis._GetClass('ProgressBarIndicator')).css('width', oFile.percent + '%');
    };

    gThis.OnUploadError = function(oError) {
        GAlert(GForm.Language.file_selector_upload_error, oError.message);
    };

    gThis.OnUploadSuccess = function(oFile, oResponse) {
        var jLi = gThis.m_jQueue.find('.upload__' + oFile.id);
		jLi.addClass(gThis._GetClass('UploadSuccess'));
		jLi.find('.' + gThis._GetClass('Progress')).text(GForm.Language.file_selector_upload_success);
		jLi.find('.' + gThis._GetClass('ProgressBarIndicator')).css('width', '100%');
		if (oResponse.sFilename == undefined) {
			gThis.OnUploadError(eEvent, oFile, 0, GForm.Language.localfile_processing_error);
			return;
		}
		gThis.SetValue({
			file: (gThis.m_sCWD + oResponse.sFilename).substr(gThis.m_oOptions.sFilePath.length)
		});
		gThis._RefreshFiles();
		if (gThis.m_gFilesDatagrid) {
			gThis.m_gFilesDatagrid.LoadData();
		}
		jLi.delay(2000).fadeOut(250, function() {
			$(this).remove();
		});
	};

	gThis.OnUploadComplete = function(eEvent, oFile) {
        if (--gThis.m_iUploadsInProgress <= 0) {
            gThis.m_iUploadsInProgress = 0;
            gThis.m_gForm.Unlock(gThis.m_iLockId);
        }
	};

	gThis._InitColumns = function() {

	  var column_path = new GF_Datagrid_Column({
			id: 'path',
			caption: GForm.Language.localfile_fullpath,
			appearance: {
				width: 70,
				visible: false,
				align: GF_Datagrid.ALIGN_LEFT
			}
		});

		var column_thumb = new GF_Datagrid_Column({
			id: 'preview',
			caption: GForm.Language.file_selector_thumb,
			appearance: {
				width: 30,
				no_title: true
			}
		});

		var column_name = new GF_Datagrid_Column({
			id: 'name',
			caption: GForm.Language.localfile_filename,
			appearance: {
				width: 150,
				align: GF_Datagrid.ALIGN_LEFT
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_size = new GF_Datagrid_Column({
			id: 'size',
			appearance: {
				width: 65,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			caption: GForm.Language.localfile_filesize
		});

		var column_mtime = new GF_Datagrid_Column({
			id: 'mtime',
			appearance: {
				width: 120,
				visible: false
			},
			caption: GForm.Language.localfile_filemtime
		});

		var column_owner = new GF_Datagrid_Column({
			id: 'owner',
			appearance: {
				width: 70,
				visible: false
			},
			caption: GForm.Language.localfile_fileowner
		});

		return [
			column_path,
			column_thumb,
			column_name,
			column_size,
			column_mtime,
			column_owner
		];

	};

	gThis._RefreshFiles = function() {
		gThis.m_oOptions.fLoadFiles({
			path: gThis.m_sCWD
		}, GCallback(gThis._OnFilesLoaded));
	};

	gThis._OnFilesLoaded = GEventHandler(function(eEvent) {
		if ((eEvent == undefined) || (eEvent.files == undefined) || (eEvent.cwd == undefined)) {
			return;
		}
		gThis.m_sCWD = eEvent.cwd;
		if (gThis.m_gDataProvider) {
			gThis.m_gDataProvider.ChangeData(eEvent.files);
			gThis.m_gFilesDatagrid.LoadData();
		}
	});

	gThis._Delete = function(iDg, sId) {
		var iAlertId = GWarning(GForm.Language.localfile_delete_warning, GForm.Language.localfile_delete_warning_description, {
			bAutoExpand: true,
			aoPossibilities: [
				{mLink: function() {
					GCore.StartWaiting();
					GAlert.Destroy(iAlertId);
					gThis.m_oOptions.fDeleteFile({
						file: sId
					}, GCallback(function(eEvent) {
						GCore.StopWaiting();
						var oValue = gThis.GetValue();
						if (sId == gThis.m_oOptions.sFilePath + oValue.file) {
							gThis.m_gFilesDatagrid.ClearSelection();
						}
						gThis._RefreshFiles();
					}));
				}, sCaption: GForm.Language.localfile_ok},
				{mLink: GAlert.DestroyThis, sCaption: GForm.Language.localfile_cancel}
			]
		});
	};

	gThis._OnDataLoaded = function(dDg) {
		dDg.m_jBody.find('.show-thumb').mouseenter(GTooltip.ShowThumbForThis).mouseleave(GTooltip.HideThumbForThis);
	};

	gThis._InitFilesDatagrid = function() {

		var aoColumns = gThis._InitColumns();

		gThis.m_gDataProvider = new GF_Datagrid_Data_Provider({
			key: 'path'
		}, []);

		var gActionDelete = new GF_Action({
			img: gThis._GetImage('DeleteIcon'),
			caption: GForm.Language.localfile_delete,
			action: gThis._Delete,
			condition: function(oRow) {
				return !oRow.dir;
			}
		});

    var oOptions = {
			id: gThis.GetId(),
			mechanics: {
				rows_per_page: 30,
				key: 'path',
				only_one_selected: true,
				persistent: false
			},
			event_handlers: {
				load: function(oRequest, sResponseHandler) {
					return gThis.m_gDataProvider.Load(oRequest, sResponseHandler);
				},
				loaded: gThis._OnDataLoaded,
				process: gThis._ProcessFile,
				select: gThis._OnSelect,
				deselect: gThis._OnDeselect,
				click_row: gThis._OnClickRow
			},
			row_actions: [
				gActionDelete
			],
			columns: aoColumns
    };

		gThis.m_gFilesDatagrid = new GF_Datagrid(gThis.m_jFilesDatagrid, oOptions);

		var oValue = gThis.GetValue();
		var sFile = oValue.file;
		if (sFile != '') {
			gThis.m_gFilesDatagrid.m_asSelected = [gThis.m_oOptions.sFilePath + sFile];
		}

		gThis._RefreshFiles();
	};

}, oDefaults);
/*
* COLUMNS
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sColumnsClass: 'layout-two-columns',
		sColumnClass: 'column'
	},
	aoFields: [],
	agFields: [],
	sClass: ''
};

var GFormColumns = GCore.ExtendClass(GFormContainer, function() {

	var gThis = this;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>');
		gThis.m_jNode.addClass(gThis._GetClass('Columns'));
		gThis.m_jNode.addClass(gThis.m_oOptions.sClass);
		gThis.m_jNode.attr('id', gThis.m_oOptions.sName);
		gThis.m_jNode.append(gThis.RenderChildren());
		gThis.m_jNode.children().addClass(gThis._GetClass('Column'));
	};

	gThis._InitializeEvents = function() {
		gThis.m_jNode.bind('GFormShow', function() {
			gThis.m_gForm.m_bFocused = false;
			gThis.OnShow();
		});
	};

	gThis.OnShow = function() {
		if (gThis.m_gForm.m_bDontFocus || (gThis.m_gForm != gThis.m_gParent)) {
			gThis.m_gForm.m_bFocused = true;
			gThis.m_gForm.m_bDontFocus = false;
		}
		for (var i = 0; i < gThis.m_oOptions.agFields.length; i++) {
			gThis.m_oOptions.agFields[i].OnShow();
			if (!gThis.m_gForm.m_bFocused) {
				gThis.m_gForm.m_bFocused = gThis.m_oOptions.agFields[i].Focus();
			}
		}
		return gThis.m_gForm.m_bFocused;
	};

}, oDefaults);
/*
* CONSTANT
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-text',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition'
	},
	oImages: {
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png'
	},
	sFieldType: 'text',
	sDefault: '',
	aoRules: [],
	sComment: ''
};

var GFormConstant = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_bResized = false;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field')).addClass('field-constant');
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		if (!gThis.m_bRepeatable) {
			gThis.m_jNode.append(gThis._AddField());
		}
		else {
			gThis.AddRepetition();
		}
	};

	gThis._AddField = function(sId) {
		var jField = $('<input type="' + gThis.m_oOptions.sFieldType + '" name="' + gThis.GetName(sId) + '" id="' + gThis.GetId(sId) + '" disabled="disabled"/>');
		if ((gThis.m_jField instanceof $) && gThis.m_jField.length) {
			gThis.m_jField = gThis.m_jField.add(jField);
		}
		else {
			gThis.m_jField = jField;
		}
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		if (gThis.m_oOptions.sPrefix != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.sPrefix);
			jRepetitionNode.append(jPrefix);
		}
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jRepetitionNode.append(jSuffix);
		}
		return jRepetitionNode;
	};

	gThis.OnShow = function() {
		gThis._UpdateRepetitionButtons();
		if (!gThis.m_bShown && gThis.m_bRepeatable) {
			gThis._InitializeEvents('new-0');
		}
		gThis.m_bShown = true;
		if (gThis.m_bRepeatable) {
			for (var i in gThis.m_oRepetitions) {
				if (!gThis.m_oRepetitions[i].m_bResized) {
					gThis.m_oRepetitions[i].m_bResized = true;
					var iWidth = parseInt(gThis._GetField(i).css('width'));
					if (gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Prefix')).length) {
						iWidth -= (gThis._GetField(i).offset().left - gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
					}
					if (gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Suffix')).length) {
						iWidth -= gThis.m_oRepetitions[i].find('.' + gThis._GetClass('Suffix')).width() + 4;
					}
					gThis._GetField(i).eq(i).css('width', iWidth);
				}
			}
		}
		else {
			if (!gThis.m_bResized) {
				gThis.m_bResized = true;
				var iWidth = parseInt(gThis.m_jField.css('width'));
				if (gThis.m_jNode.find('.' + gThis._GetClass('Prefix')).length) {
					iWidth -= (gThis.m_jField.offset().left - gThis.m_jNode.find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
				}
				if (gThis.m_jNode.find('.' + gThis._GetClass('Suffix')).length) {
					iWidth -= gThis.m_jNode.find('.' + gThis._GetClass('Suffix')).width() + 4;
				}
				gThis.m_jField.css('width', iWidth);
			}
		}
	};

	gThis.OnFocus = function(eEvent) {
		var jField = $(eEvent.currentTarget);
		jField.closest('.' + gThis._GetClass('FieldSpan')).addClass(gThis._GetClass('Focused'));
		gThis._ActivateFocusedTab(eEvent);
	};

	gThis.OnBlur = function(eEvent) {
		var jField = $(eEvent.currentTarget);
		jField.closest('.' + gThis._GetClass('FieldSpan')).removeClass(gThis._GetClass('Focused'));
	};

	gThis.Reset = function() {
		gThis.m_jField.val(gThis.m_oOptions.sDefault);
	};

}, oDefaults);
/*
* DATE
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-text',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition'
	},
	oImages: {
		sCalendarIcon: 'images/icons/buttons/calendar.png'
	},
	sFieldType: 'text',
	sDefault: '',
	aoRules: [],
	sComment: '',
	sMinDate: null,
	sMaxDate: null
};

var GFormDate = GCore.ExtendClass(GFormTextField, function() {

	var gThis = this;

	gThis.m_jTrigger;

	gThis._Constructor = function() {
		gThis.m_jTrigger = $('<img style="width: 16px; height: 16px;" src="' + gThis._GetImage('CalendarIcon') + '" alt=""/>');
		gThis.m_oOptions.sSuffix = gThis.m_jTrigger.css('cursor', 'pointer');
	};

	gThis.OnShow = function() {
		gThis.m_bShown = true;
		if (!gThis.m_bResized) {
			gThis.m_bResized = true;
			var iWidth = parseInt(gThis.m_jField.css('width'));
			if (gThis.m_jNode.find('.' + gThis._GetClass('Prefix')).length) {
				iWidth -= (gThis.m_jField.offset().left - gThis.m_jNode.find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
			}
			if (gThis.m_jNode.find('.' + gThis._GetClass('Suffix')).length) {
				iWidth -= 20;
			}
			gThis.m_jField.css('width', iWidth);
			gThis.m_jField.datepicker({
				minDate: gThis.m_oOptions.sMinDate,
				maxDate: gThis.m_oOptions.sMaxDate
			});
		}
	};

	gThis._InitializeEvents = function() {
		gThis.m_jTrigger.click(function() {
			gThis.m_jField.datepicker('show');
		});

		gThis.m_jField.unbind('change', gThis.OnValidate).change(gThis.OnValidate);
	};

}, oDefaults);
/*
* FAVOURITE CATEGORIES TREE
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-tree',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sItemNameClass: 'item-name',
		sExpanderClass: 'expander',
		sExpandedClass: 'expanded',
		sActiveClass: 'active',
		sButtonClass: 'button',
		sExpandAllClass: 'expand-all',
		sRetractAllClass: 'retract-all',
		sListClass: 'selected-list'
	},
	oImages: {
		sAdd: 'images/icons/buttons/add.png',
		sDelete: 'images/icons/buttons/delete.png',
		sSave: 'images/icons/buttons/save.png',
		sRestore: 'images/icons/buttons/clean.png',
		sWaiting: 'images/icons/loading/indicator.gif'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	bSortable: false,
	bSelectable: true,
	bChoosable: false,
	bClickable: false,
	bDeletable: false,
	oItems: {},
	fOnClick: GCore.NULL,
	fOnSaveOrder: GCore.NULL,
	fOnAdd: GCore.NULL,
	fOnAfterAdd: GCore.NULL,
	fOnDelete: GCore.NULL,
	fOnAfterDelete: GCore.NULL,
	sActive: '',
	sAddItemPrompt: '',
	bPreventDuplicates: true
};

var GFormFavouriteCategories = GCore.ExtendClass(GFormTree, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_jTree;
	gThis.m_jOptions;
	gThis.m_oItems;
	gThis.m_jExpandAll;
	gThis.m_jRetractAll;
	gThis.m_jFieldWrapper;
	gThis.m_jItemPlaceholder;
	gThis.m_jItemDragged;
	gThis.m_oItems = {};
	gThis.m_jList;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jFieldWrapper = $('<div/>');
		gThis.m_jNode.append(gThis.m_jFieldWrapper);
		gThis.m_jExpandAll = $('<a href="#"/>').text(GForm.Language.tree_expand_all);
		gThis.m_jRetractAll = $('<a href="#"/>').text(GForm.Language.tree_retract_all);
		gThis.m_jNode.append(gThis._CreateSelectedList());
		if (gThis.m_oOptions.fGetChildren instanceof Function) {
			gThis.m_jNode.append($('<p class="' + gThis._GetClass('ExpandAll') + '"/>').append(gThis.m_jRetractAll));
		}
		else {
			//gThis.m_jNode.append($('<p class="' + gThis._GetClass('ExpandAll') + '"/>').append(gThis.m_jExpandAll));
			gThis.m_jNode.append($('<p class="' + gThis._GetClass('RetractAll') + '"/>').append(gThis.m_jRetractAll));
		}
		gThis.m_jTree = $('<ul/>');
		gThis.m_jNode.append($('<div class="tree-wrapper"/>').append(gThis.m_jTree));
		gThis.Update();
		gThis._PrepareOptions();
		window.setTimeout(gThis.ResetExpansion, 500);
	};

	gThis._CreateSelectedList = function() {
		gThis.m_jList = $('<div/>').addClass(gThis._GetClass('List'));
		var jTable = $('<table cellspacing="0"/>');
		var jThead = $('<thead/>');
		var jTr = $('<tr/>');
		var i;
		for (i = 0; i < gThis.m_oOptions.aoColumns.length; i++) {
			jTr.append($('<th>' + gThis.m_oOptions.aoColumns[i].caption + '</th>').css('width', (gThis.m_oOptions.aoColumns[i].width != undefined) ? gThis.m_oOptions.aoColumns[i].width + 'px' : 'auto'));
		}
		jTr.append('<th style="width: 16px;">&nbsp;</th>');
		jThead.append(jTr);
		jTable.append(jThead);
		var jBody = $('<tbody/>');
		jTable.append(jBody);
		gThis.m_jList.append('<label>' + gThis.m_oOptions.sLabel + '</label>');
		gThis.m_jList.append(jTable);
		return gThis.m_jList;
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis.m_bShown = true;
			var iSelected = gThis.m_jFieldWrapper.find('input').length;
			var fGetInfo = gThis.m_oOptions.fGetSelectedInfo;
			gThis.m_oOptions.fGetSelectedInfo = GCore.NULL;
			var asIds = [];
			for (var i = 0; i < iSelected; i++) {
				var sId = gThis.m_jFieldWrapper.find('input').eq(i).attr('value');
				gThis._AddToList(sId);
				asIds.push(sId);
				gThis.m_jList.find('tr.id__' + sId + ' td:first').html('<img src="' + gThis._GetImage('Waiting') + '" alt=""/>');
			};
			if (asIds.length) {
				fGetInfo({
					id: asIds
				}, GCallback(gThis._OnInfoLoaded));
			}
			gThis.m_oOptions.fGetSelectedInfo = fGetInfo;
		}
	};

	gThis._OnSelect = GEventHandler(function(eEvent) {
		gThis.m_jFieldWrapper.find('input[value="' + $(this).attr('value') + '"]').remove();
		if ($(this).is(':checked')) {
			gThis.m_jFieldWrapper.append('<input type="hidden" name="' + gThis.GetName() + '[]" value="' + $(this).attr('value') + '"/>');
			gThis._AddToList($(this).attr('value'));
		}
		else {
			gThis._RemoveFromList($(this).attr('value'));
		}
	});

	gThis._AddToList = function(sId) {
		if (gThis.m_jList.find('tr.id__' + sId).length) {
			return;
		}
		var jTr = $('<tr class="id__' + sId + '"/>');
		for (var i in gThis.m_oOptions.aoColumns) {
			var oColumn = gThis.m_oOptions.aoColumns;
			var jTd = $('<td/>');
			jTr.append(jTd);
		}
		jTd = $('<td/>');
		var jTrigger = $('<a href="#" title="' + GForm.Language.tree_deselect + '"/>');
		jTrigger.click(GEventHandler(function(eEvent) {
			var sId = $(this).closest('tr').attr('class').substr(4);
			gThis.m_jTree.find('input:checkbox[value="' + sId + '"]:checked').click();
			gThis.m_jFieldWrapper.find('input[value="' + sId + '"]').remove();
			gThis._RemoveFromList(sId);
			return false;
		}));
		jTrigger.append('<img src="' + gThis._GetImage('Delete') + '" alt="' + GForm.Language.tree_deselect + '"/>');
		jTd.append(jTrigger);
		jTr.append(jTd);
		if (gThis.m_oOptions.fGetSelectedInfo instanceof Function) {
			jTr.find('td:first').html('<img src="' + gThis._GetImage('Waiting') + '" alt=""/>');
			gThis.m_oOptions.fGetSelectedInfo({
				id: sId
			}, GCallback(gThis._OnInfoLoaded));
		}
		else {
			jTr.find('td:first').text(gThis.m_jTree.find('label:has(input:checkbox[value="' + sId + '"])').text());
		}
		gThis.m_jList.find('tbody').append(jTr);
	};

	gThis._OnInfoLoaded = GEventHandler(function(eEvent) {
		for (var j in eEvent.rows) {
			var jColumns = gThis.m_jList.find('tr.id__' + eEvent.rows[j].id + ' td');
			for (var i in gThis.m_oOptions.aoColumns) {
				if (eEvent.rows[j].values[i] != undefined) {
					jColumns.eq(i).html(eEvent.rows[j].values[i]);
				}
			}
		}
	});

	gThis._RemoveFromList = function(sId) {
		var jTr = gThis.m_jList.find('tr.id__' + sId);
		jTr.remove();
	};

}, oDefaults);
/*
* FIELDSET REPEATABLE
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sRepetitionClass: 'GFormRepetition',
		sAddButtonClass: 'add-repetition',
		sDeleteButtonClass: 'delete-repetition'
	},
	oImages: {
		sDelete: 'images/buttons/small-delete.png',
		sAdd: 'images/buttons/small-add.png'
	},
	aoFields: [],
	agFields: [],
	oRepeat: {
		iMin: 1,
		iMax: 1
	}
};

var GFormRepeatableFieldset = GCore.ExtendClass(GFormNestedFieldset, function() {

}, oDefaults);
/*
* FILE
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-file',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition'
	},
	oImages: {
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png'
	},
	sFieldType: 'file',
	sDefault: '',
	aoRules: [],
	sComment: ''
};

var GFormFile = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_bResized = false;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
	};

}, oDefaults);
/*
* FONT STYLE
*/

var oDefaults = {
		sName: '',
		sLabel: '',
		oClasses: {
			sFieldClass: 'field-font',
			sFieldSpanClass: 'field',
			sPrefixClass: 'prefix',
			sSuffixClass: 'suffix',
			sFocusedClass: 'focus',
			sInvalidClass: 'invalid',
			sRequiredClass: 'required',
			sWaitingClass: 'waiting',
			sFieldRepetitionClass: 'repetition',
			sAddRepetitionClass: 'add-field-repetition',
			sRemoveRepetitionClass: 'remove-field-repetition',
			sColourTypeClass: 'colour-type',
			sColourStartClass: 'colour-start',
			sColourEndClass: 'colour-end',
			sColourPreviewClass: 'colour-preview',
			sFontPreviewClass: 'font-preview'
		},
		oImages: {
			sBold: 'images/icons/font-style-bold.png',
			sUnderline: 'images/icons/font-style-underline.png',
			sItalic: 'images/icons/font-style-italic.png',
			sUppercase: 'images/icons/font-style-uppercase.png',
			sAddRepetition: 'images/icons/buttons/add.png',
			sRemoveRepetition: 'images/icons/buttons/delete.png'
		},
		sFieldType: 'text',
		sDefault: '',
		aoRules: [],
		sComment: '',
		sSelector: ''
};

var GFormFontStyle = GCore.ExtendClass(GFormTextField, function() {

		var gThis = this;

		gThis.m_jFieldFontFamily;
		gThis.m_jFieldFontStyleBold;
		gThis.m_jFieldFontStyleUnderline;
		gThis.m_jFieldFontStyleItalic;
		gThis.m_jFieldFontStyleUppercase;
		gThis.m_jFieldFontColour;
		gThis.m_jFieldFontSize;

		gThis._PrepareNode = function() {
			gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
			var jLabel = $('<label for="' + gThis.GetId() + '"/>');
			jLabel.text(gThis.m_oOptions.sLabel);
			if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
					jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
			}
			gThis.m_jLabel = jLabel;
			gThis.m_jNode.append(jLabel);
			gThis.m_jNode.append(gThis._AddField());
			if ((gThis.m_oOptions.sSelector != undefined) && (gThis.m_oOptions.sSelector.length)) {
				gThis.m_jNode.append('<input type="hidden" name="' + gThis.GetName() + '[selector]" value="' + gThis.m_oOptions.sSelector + '"/>');
			}
		};

		gThis.GetValue = function(sRepetition) {
			if (gThis.m_jField == undefined) {
					return '';
			}
			return gThis.m_jField.eq(0).val();
		};

		gThis.SetValue = function(mValue, sRepetition) {
			if (mValue == undefined) {
				return;
			}
			gThis.m_jFieldFontFamily.val(mValue.family).triggerHandler('change');
			gThis.m_jFieldFontStyleBold.val(mValue.bold);
			gThis.m_jFieldFontStyleUnderline.val(mValue.underline);
			gThis.m_jFieldFontStyleItalic.val(mValue.italic);
			gThis.m_jFieldFontStyleUppercase.val(mValue.uppercase);
			gThis.m_jFieldFontColour.val(mValue.colour);
			gThis.m_jFieldFontSize.val(mValue.size).triggerHandler('change');
			gThis.UpdatePreview();
		};

		gThis.UpdatePreview = function(){

			var bold;
			var underline;
			var italic;
			var uppercase;
			var colour;
			var bDarkBg;

			if(gThis.m_jFieldFontColour.val().substr(0, 11) == 'transparent'){
				var r = '00';
				var g = '00';
				var b = '00';
			}else{
				var r = gThis.m_jFieldFontColour.val().substr(0, 2);
				var g = gThis.m_jFieldFontColour.val().substr(2, 2);
				var b = gThis.m_jFieldFontColour.val().substr(4, 2);
				eval('bDarkBg = (0x' + (r ? r : '00') + ' + 0x' + (g ? g : '00') + ' + 0x' + (b ? b : '00') + ') / 3 > 127;');
			}

			gThis.m_jColourPreviewNode.css({
				'background-color': "#" + gThis.m_jFieldFontColour.val()
			});

			if(gThis.m_jFieldFontStyleBold.val()==1){
				gThis.m_jImgFontStyleBold.css({'background-color':'#efefef'});
				bold = 'bold';
			}
			else{
				gThis.m_jImgFontStyleBold.css({'background-color':'#ffffff'});
				bold = 'normal';
			}

			if(gThis.m_jFieldFontStyleUnderline.val()==1){
				gThis.m_jImgFontStyleUnderline.css({'background-color':'#efefef'});
				underline = 'underline';
			}else{
				gThis.m_jImgFontStyleUnderline.css({'background-color':'#ffffff'});
				underline = 'none';
			}

			if(gThis.m_jFieldFontStyleItalic.val()==1){
				italic = 'italic';
				gThis.m_jImgFontStyleItalic.css({'background-color':'#efefef'});
			}else{
				gThis.m_jImgFontStyleItalic.css({'background-color':'#ffffff'});
				italic = 'normal';
			}

			if(gThis.m_jFieldFontStyleUppercase.val()==1){
				uppercase = 'uppercase';
				gThis.m_jImgFontStyleUppercase.css({'background-color':'#efefef'});
			}else{
				gThis.m_jImgFontStyleUppercase.css({'background-color':'#ffffff'});
				uppercase = 'none';
			}

			gThis.m_jFontPreviewNode.css({
				'font-weight': bold,
				'text-decoration': underline,
				'font-style': italic,
				'font-family': gThis.m_jFieldFontFamily.val(),
				'font-size': gThis.m_jFieldFontSize.val()+"px",
				'color': "#"+gThis.m_jFieldFontColour.val(),
				'text-transform': uppercase,
				'background-color': bDarkBg ? '#000000' : '#ffffff'
			});

		};

		gThis._AddField = function(sId) {


			var jFontStyleNode = $('<span class="' + gThis._GetClass('FieldSpan') + ' style"/>');
			var jFontFamilyNode = $('<span class="' + gThis._GetClass('FieldSpan') + ' family"/>');
			var jFontSizeNode = $('<span class="' + gThis._GetClass('FieldSpan') + ' size"/>');
			var jFontPreviewNode = $('<span class="' + gThis._GetClass('FontPreview') + '"/>');
			var jFontColourNode = $('<span class="' + gThis._GetClass('FieldSpan') + ' colour"/>');
			var jColourPreviewNode = $('<span class="' + gThis._GetClass('ColourPreview') + '"/>');

			var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');

			var opt = {'cursor':'pointer'};

			var jImgFontStyleBold = $('<img src="'+gThis._GetImage('Bold')+'" />').css(opt);
			var jFieldFontStyleBold = $('<input type="hidden" name="' + gThis.GetName() + '[bold]" value="0"/>');

			var jImgFontStyleUnderline = $('<img src="'+gThis._GetImage('Underline')+'" />').css(opt);
			var jFieldFontStyleUnderline = $('<input type="hidden" name="' + gThis.GetName() + '[underline]" value="0"/>');

			var jImgFontStyleItalic = $('<img src="'+gThis._GetImage('Italic')+'" />').css(opt);
			var jFieldFontStyleItalic = $('<input type="hidden" name="' + gThis.GetName() + '[italic]" value="0"/>');

			var jImgFontStyleUppercase = $('<img src="'+gThis._GetImage('Uppercase')+'" />').css(opt);
			var jFieldFontStyleUppercase = $('<input type="hidden" name="' + gThis.GetName() + '[uppercase]" value="0"/>');

			var jFieldFontFamily = $('<select name="' + gThis.GetName() + '[family]" />');
			for (var i = 0; i < gThis.m_oOptions.aoTypes.length; i++) {
					var oType = gThis.m_oOptions.aoTypes[i];
					jFieldFontFamily.append('<option value="' + oType.sValue + '">' + oType.sLabel + '</option>');
			}

			var jFieldFontSize = $('<select name="' + gThis.GetName() + '[size]" />');
			for (var i = 5; i < 25; i++) {
					var oType = gThis.m_oOptions.aoTypes[i];
					jFieldFontSize.append('<option value="' + i + '">' + i + ' px</option>');
			}
			var jFieldFontColour = $('<input type="text" name="' + gThis.GetName() + '[colour]" />');

			jFontPreviewNode.html('Lorem ipsum');

			jFontStyleNode.append(jImgFontStyleBold).append(jImgFontStyleUnderline).append(jImgFontStyleItalic).append(jImgFontStyleUppercase);
			jFontStyleNode.append(jFieldFontStyleBold).append(jFieldFontStyleUnderline).append(jFieldFontStyleItalic).append(jFieldFontStyleUppercase);

			jFontFamilyNode.append(jFieldFontFamily);
			jFontSizeNode.append(jFieldFontSize);
			jFontColourNode.append(jFieldFontColour);

			jRepetitionNode.append($('<span class="' + gThis._GetClass('ColourPreview') + '-container"/>').append(jColourPreviewNode)).append(jFontFamilyNode).append(jFontColourNode).append(jFontStyleNode).append(jFontSizeNode).append(jFontPreviewNode);
			gThis.m_jField = jRepetitionNode.find('input,select');

			gThis.m_jRepetitionNode = jRepetitionNode;
			gThis.m_jFontFamilyNode = jFontFamilyNode;
			gThis.m_jFontSizeNode = jFontSizeNode;
			gThis.m_jFieldFontFamily = jFieldFontFamily;
			gThis.m_jFieldFontSize = jFieldFontSize;
			gThis.m_jImgFontStyleBold = jImgFontStyleBold;
			gThis.m_jImgFontStyleUnderline = jImgFontStyleUnderline;
			gThis.m_jImgFontStyleItalic = jImgFontStyleItalic;
			gThis.m_jImgFontStyleUppercase = jImgFontStyleUppercase;
			gThis.m_jFieldFontStyleBold = jFieldFontStyleBold;
			gThis.m_jFieldFontStyleUnderline = jFieldFontStyleUnderline;
			gThis.m_jFieldFontStyleItalic = jFieldFontStyleItalic;
			gThis.m_jFieldFontStyleUppercase = jFieldFontStyleUppercase;
			gThis.m_jFontPreviewNode = jFontPreviewNode;
			gThis.m_jFontColourNode = jFontColourNode;
			gThis.m_jFieldFontColour = jFieldFontColour;
			gThis.m_jColourPreviewNode = jColourPreviewNode;

			return jRepetitionNode;
		};

		gThis.OnShow = function() {
				gThis.m_bShown = true;
		};

		gThis._InitializeEvents = function() {
			gThis.m_jField.bind('change keyup',function(){
				gThis.UpdatePreview();
			});

			gThis.m_jImgFontStyleBold.click(function(){
				if(gThis.m_jFieldFontStyleBold.val()==1){
					gThis.m_jImgFontStyleBold.css({'background-color':'#ffffff'});
					gThis.m_jFieldFontStyleBold.val(0).triggerHandler('change');
				}
				else{
					gThis.m_jImgFontStyleBold.css({'background-color':'#efefef'});
					gThis.m_jFieldFontStyleBold.val(1).triggerHandler('change');
				}
				gThis.UpdatePreview();
			});

			gThis.m_jImgFontStyleUnderline.click(function(){
				if(gThis.m_jFieldFontStyleUnderline.val()==1){
					gThis.m_jImgFontStyleUnderline.css({'background-color':'#ffffff'});
					gThis.m_jFieldFontStyleUnderline.val(0).triggerHandler('change');
				}
				else{
					gThis.m_jImgFontStyleUnderline.css({'background-color':'#efefef'});
					gThis.m_jFieldFontStyleUnderline.val(1).triggerHandler('change');
				}
				gThis.UpdatePreview();
			});

			gThis.m_jImgFontStyleItalic.click(function(){
				if(gThis.m_jFieldFontStyleItalic.val()==1){
					gThis.m_jImgFontStyleItalic.css({'background-color':'#ffffff'});
					gThis.m_jFieldFontStyleItalic.val(0).triggerHandler('change');
				}
				else{
					gThis.m_jImgFontStyleItalic.css({'background-color':'#efefef'});
					gThis.m_jFieldFontStyleItalic.val(1).triggerHandler('change');
				}
				gThis.UpdatePreview();
			});

			gThis.m_jImgFontStyleUppercase.click(function(){
				if(gThis.m_jFieldFontStyleUppercase.val()==1){
					gThis.m_jImgFontStyleUppercase.css({'background-color':'#ffffff'});
					gThis.m_jFieldFontStyleUppercase.val(0).triggerHandler('change');
				}
				else{
					gThis.m_jImgFontStyleUppercase.css({'background-color':'#efefef'});
					gThis.m_jFieldFontStyleUppercase.val(1).triggerHandler('change');
				}
				gThis.UpdatePreview();
			});

			gThis.m_jFieldFontFamily.GSelect().focus(GEventHandler(function(eEvent) {
				$(this).closest('.field').addClass('focus');
			})).blur(GEventHandler(function(eEvent) {
				$(this).closest('.field').removeClass('focus');
			}));

			gThis.m_jFieldFontSize.GSelect().focus(GEventHandler(function(eEvent) {
				$(this).closest('.field').addClass('focus');
			})).blur(GEventHandler(function(eEvent) {
				$(this).closest('.field').removeClass('focus');
			}));

			gThis.m_jFieldFontColour.ColorPicker({
				color: '#' + gThis.m_jFieldFontColour.val(),
				onBeforeShow: function () {
					$(this).ColorPickerSetColor(this.value);
				},
				onShow: function(colpkr) {
					$(colpkr).fadeIn(250);
					gThis.m_jFieldFontColour.closest('.field').addClass('focus');
					return false;
				},
				onHide: function (colpkr) {
					$(colpkr).fadeOut(250);
					gThis.m_jFieldFontColour.triggerHandler('change');
					gThis.m_jFieldFontColour.closest('.field').removeClass('focus');
					return false;
				},
				onChange: function(hsb, hex, rgb) {
					gThis.UpdatePreview();
					gThis.m_jFieldFontColour.val(hex);
				}
			}).change(GEventHandler(function(eEvent) {
				gThis.UpdatePreview();
			}));

			gThis.UpdatePreview();
		};


		gThis.Reset = function() {
			gThis.m_jField.eq(0).val(gThis.m_oOptions.sDefault).change();
		};

}, oDefaults);
/*
* LAYOUT BOXES LIST
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	sComment: '',
	aoBoxes: [],
	oClasses: {
		sFieldClass: 'field-layout-boxes-list',
		sFieldTextClass: 'field-text',
		sFieldPriceClass: 'field-price',
		sFieldCheckboxClass: 'field-checkbox',
		sFieldSelectClass: 'field-select',
		sFieldSpanClass: 'field',
		sRangeColumnClass: 'price',
		sMinColumnClass: 'min',
		sMaxColumnClass: 'max',
		sOptionsColumnClass: 'options',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition',
		sNetPriceClass: 'net-price',
		sGrossPriceClass: 'gross-price'
	},
	oImages: {
		sAdd: 'images/icons/buttons/add.png',
		sRemove: 'images/icons/buttons/delete.png'
	},
	sFieldType: 'text',
	sDefault: '',
	aoRules: [],
	sComment: ''
};

var GFormLayoutBoxesList = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_oBoxes = {};
	gThis.m_aBoxes = [];

	gThis.GetValue = function(sRepetition) {
		if (sRepetition == undefined) {
			var aoValues = [];
			var iLayoutBoxes = gThis.m_aBoxes.length;
			for (var i = 0; i < iLayoutBoxes; i++) {
				aoValues.push(gThis.GetValue(gThis.m_aBoxes[i]));
			}
			return aoValues;
		}
		else {
			var oBox = gThis.m_oBoxes[sRepetition];
			if (oBox == undefined) {
				return;
			}
			return {
				box: oBox.jBoxSelect.find('option:selected').attr('value'),
				span: isNaN(parseInt(oBox.jSpan.val())) ? 1 : parseInt(oBox.jSpan.val()),
				collapsed: oBox.jCollapsed.is(':checked')
			};
		}
	};

	gThis.Populate = function(mData) {
		while (gThis.m_aBoxes.length) {
			gThis.RemoveBox(gThis.m_aBoxes[0]);
		}
		gThis.SetValue(mData);
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (sRepetition == undefined) {
			if (mValue == '') {
				return;
			}
			for (var i in mValue) {
				gThis.SetValue(mValue[i], i);
			}
		}
		else {
			var oBox = gThis.m_oBoxes[sRepetition];
			if (oBox == undefined) {
				gThis.AddRepetition(sRepetition);
				oBox = gThis.m_oBoxes[sRepetition];
			}
			oBox.jSpan.val(mValue.span);
			if (mValue.collapsed == 1) {
				oBox.jCollapsed.parent().checkCheckboxes();
			}
			else {
				oBox.jCollapsed.parent().unCheckCheckboxes();
			}
			oBox.jBoxSelect.val(mValue.box).change();
		}
	};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
	};

	gThis._AddField = function(sId) {
		var jBoxSelect = $('<select name="'+ gThis.GetName(sId) + '[layoutbox]" id="' + gThis.GetId(sId) + '__layoutbox"/>');
		var iLayoutBoxes = gThis.m_oOptions.aoBoxes.length;
		for (var i = 0; i < iLayoutBoxes; i++) {
			var oBox = gThis.m_oOptions.aoBoxes[i];
			jBoxSelect.append('<option value="' + oBox.value + '">' + oBox.label + '</option>');
		}
		var jSpan = $('<input type="text" name="'+ gThis.GetName(sId) + '[span]" id="' + gThis.GetId(sId) + '__span" value="1"/>');
		var jCollapsed = $('<input type="checkbox" name="'+ gThis.GetName(sId) + '[collapsed]" id="' + gThis.GetId(sId) + '__collapsed" value="1"/>');

		if ((gThis.m_jField instanceof $) && gThis.m_jField.length) {
			gThis.m_jField = gThis.m_jField.add(jBoxSelect);
		}
		else {
			gThis.m_jField = jBoxSelect;
		}
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="box-select"/>').append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jBoxSelect)));
		jRepetitionNode.append($('<span class="box-span"/>').append('<label for="' + gThis.GetId(sId) + '__span">' + GForm.Language.layout_boxes_list_span + '</label>').append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jSpan)));
		jRepetitionNode.append($('<span class="box-collapsed"/>').append($('<span class=""/>').append(jCollapsed)).append('<label for="' + gThis.GetId(sId) + '__collapsed">' + GForm.Language.layout_boxes_list_collapsed + '</label>'));

		gThis.m_oBoxes[sId] = {
			jBoxSelect: jBoxSelect,
			jSpan: jSpan,
			jCollapsed: jCollapsed,
			iPosition: GCore.ObjectLength(gThis.m_oBoxes)
		};
		gThis.m_aBoxes.push(sId);

		return jRepetitionNode;
	};

	gThis._UpdateIcons = function() {

		gThis.m_jNode.find('.icon').remove();

		var iLayoutBoxes = gThis.m_aBoxes.length;

		for (var i = 0; i < iLayoutBoxes; i++) {

			var oBox = gThis.m_oBoxes[gThis.m_aBoxes[i]];

			var jRemove = $('<a class="icon" href="#"/>');
			jRemove.append('<img src="' + gThis._GetImage('Remove') + '" alt="' + GForm.Language.layout_boxes_list_remove + '" title="' + GForm.Language.layout_boxes_list_remove + '"/>');
			oBox.jCollapsed.closest('.repetition').append(jRemove);
			jRemove.bind('click', {i:gThis.m_aBoxes[i]}, GEventHandler(function(eEvent) {
				gThis.RemoveBox(eEvent.data.i);
				return false;
			}));

		}

		var jAdd = $('<a class="add-box icon" href="#"/>');
		jAdd.append('<img src="' + gThis._GetImage('Add') + '" alt="' + GForm.Language.layout_boxes_list_add + '" title="' + GForm.Language.layout_boxes_list_add + '"/>');
		gThis.m_jNode.append(jAdd);
		jAdd.bind('click', GEventHandler(function(eEvent) {
			gThis.AddBox();
			return false;
		}));
	};

	gThis.RemoveBox = function(sId) {
		var oBox = gThis.m_oBoxes[sId];
		gThis.RemoveRepetition(sId);
		var iBoxes = gThis.m_aBoxes.length;
		for (var i = 0; i < iBoxes; i++) {
			if (gThis.m_aBoxes[i] == sId) {
				gThis.m_aBoxes.splice(i, 1);
				break;
			}
		}
		delete gThis.m_oBoxes[sId];
	};

	gThis.AddBox = function() {
		gThis.AddRepetition();
	};

	gThis._InitializeEvents = function(sRepetition) {
		if (sRepetition != undefined) {
			gThis.m_oBoxes[sRepetition].jBoxSelect.GSelect();
			gThis.m_oBoxes[sRepetition].jSpan.focus(GEventHandler(function(eEvent) {
				$(this).closest('.field').addClass('focus');
			})).blur(GEventHandler(function(eEvent) {
				$(this).closest('.field').removeClass('focus');
			}));
		}
		gThis._UpdateIcons();
	};

}, oDefaults);
/*
* LIST OF SELECTS
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-select',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition'
	},
	aoSelects: [],
	sDefault: '',
	aoRules: [],
	sComment: ''
};

var GFormListOfSelects = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_bResized = false;

	gThis.m_aoSelects = [];

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		return gThis._GetField(sRepetition).find('option:selected').attr('value');
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		var jField = gThis._GetField(sRepetition);
		jField.val(mValue);
		if ((jField.get(0) != undefined) && (jField.get(0).Update != undefined)) {
			jField.get(0).Update.apply(jField.get(0));
		}
	};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>');
		gThis.m_aoSelects = gThis.m_oOptions.aoSelects;
		gThis.UpdateSelects();
	};

	gThis.UpdateSelects = function() {
		gThis.m_jNode.empty();
		gThis.m_jField.empty();
		var iSelects = gThis.m_aoSelects.length;
		for (var i = 0; i < iSelects; i++) {
			gThis.m_jNode.append(gThis._AddField(gThis.m_aoSelects[i]));
		}
	};

	gThis.ReplaceSelects = function(aoSelects) {
		gThis.m_aoSelects = aoSelects;
		gThis.UpdateSelects();
		gThis.m_bShown = false;
		gThis.m_bResized = false;
		gThis.OnShow();
		gThis._InitializeEvents();
	};

	gThis._AddField = function(oSelect) {
		var jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(oSelect.label);
		if ((oSelect.comment != undefined) && (oSelect.comment.length)) {
			jLabel.append(' <small>' + oSelect.comment + '</small>');
		}
		jNode.append(jLabel);
		var jField = $('<select name="' + gThis.GetName(oSelect.name) + '" id="' + gThis.GetId(oSelect.name) + '"/>');
		for (var i = 0; i < oSelect.options.length; i++) {
			var oOption = oSelect.options[i];
			jField.append('<option value="' + oOption.value + '"' + (((oSelect.default_value != undefined) && (oOption.value == oSelect.default_value)) ? ' selected="selected"' : '') + '>' + oOption.label + '</option>');
		}
		if ((gThis.m_jField instanceof $) && gThis.m_jField.length) {
			gThis.m_jField = gThis.m_jField.add(jField);
		}
		else {
			gThis.m_jField = jField;
		}
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		if (oSelect.prefix != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(oSelect.prefix);
			jRepetitionNode.append(jPrefix);
		}
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		if (oSelect.suffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(oSelect.suffix);
			jRepetitionNode.append(jSuffix);
		}
		return jNode.append(jRepetitionNode);
	};

	gThis.OnInitRepetition = function(sRepetition) {
		if (!gThis.m_bShown) {
			return;
		}
		gThis._GetField(sRepetition).GSelect();
		var iSelects = gThis.m_aoSelects.length;
		for (var i = 0; i < iSelects; i++) {
			if (gThis.m_aoSelects[i].default_value != undefined) {
				gThis.m_jField.filter('[id$="' + gThis.m_aoSelects[i].name + '"]').val(gThis.m_aoSelects[i].default_value).triggerHandler('change');
			}
		}
	};

	gThis.OnShow = function() {
		gThis._UpdateRepetitionButtons();
		if (!gThis.m_bShown && gThis.m_bRepeatable) {
			gThis._InitializeEvents('new-0');
		}
		gThis.m_bShown = true;
		if (gThis.m_bRepeatable) {
			for (var i in gThis.m_oRepetitions) {
				if (!gThis.m_oRepetitions[i].m_bResized) {
					gThis.m_oRepetitions[i].m_bResized = true;
					gThis.OnInitRepetition(i);
				}
			}
		}
		else {
			if (!gThis.m_bResized) {
				gThis.m_bResized = true;
				gThis.OnInitRepetition();
			}
		}
	};

	gThis.OnFocus = function(eEvent) {
		$(eEvent.currentTarget).closest('.' + gThis._GetClass('FieldSpan')).addClass(gThis._GetClass('Focused'));
		gThis._ActivateFocusedTab(eEvent);
	};

	gThis.OnBlur = function(eEvent) {
		$(eEvent.currentTarget).closest('.' + gThis._GetClass('FieldSpan')).removeClass(gThis._GetClass('Focused'));
	};

	gThis.Reset = function() {
		gThis.ReplaceSelects(gThis.m_oOptions.aoSelects);
		//gThis.m_jField.val(gThis.m_oOptions.sDefault).change();
	};

	gThis._InitializeEvents = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (gThis.m_bRepeatable && (sRepetition == undefined)) {
			return;
		}
		var jField = gThis._GetField(sRepetition);
		jField.focus(gThis.OnFocus);
		jField.blur(gThis.OnBlur);
		jField.each(function() {
			$(this).change(GEventHandler(function(eEvent) {
				gThis.Validate(false, this.sRepetition);
			}));
		});
		jField.keydown(function(eEvent) {
			var dSelect = this;
			setTimeout(function() {
				dSelect.Update();
			}, 50);
			return true;
		});
		if (gThis.m_jNode.closest('.statusChange').length) {
			gThis.OnShow();
		}
	};

}, oDefaults);
/*
* MULTISELECT
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-multiselect',
		sFieldSpanClass: 'field',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition'
	},
	oImages: {
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: ''
};

var GFormMultiSelect = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_jUnmodified;

	gThis._Constructor = function() {
		gThis.m_bResized = false;
	};

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		var aValues = [];
		var jValues = gThis._GetField(sRepetition).filter(':checked');
		for (var i in jValues) {
			aValues.push(jValues.eq(i).attr('value'));
		}
		return aValues;
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		gThis._GetField(sRepetition).val(mValue).change();
	};

	gThis.ExchangeOptions = function(aoNewOptions) {
		gThis.m_oOptions.aoOptions = aoNewOptions;
		var jOldNode = gThis.m_jNode;
		gThis._PrepareNode();
		jOldNode.replaceWith(gThis.m_jNode);
		gThis.m_bShown = false;
		gThis.m_bResized = false;
		gThis.OnShow();
		gThis.m_jField.change();
	};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '" class="' + gThis._GetClass('Group') + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		gThis.m_jNode.append(gThis._AddField());
		gThis.m_jUnmodified = $('<input type="hidden" name="' + gThis.GetName() + '[unmodified]" value="1"/>');
		gThis.m_jNode.append(gThis.m_jUnmodified);
	};

	gThis._AddField = function(sId) {
		var jField = $('<ul/>');
		for (var i = 0; i < gThis.m_oOptions.aoOptions.length; i++) {
			var oOption = gThis.m_oOptions.aoOptions[i];
			jField.append('<li><label><input type="checkbox" name="' + gThis.GetName(sId) + '['+ oOption.sValue +']" value="' + oOption.sValue + '"/>' + oOption.sLabel + '</label></li>');
		}
		if (gThis.m_oOptions.bAddable && (gThis.m_oOptions.fOnAdd instanceof Function)) {
			gThis.m_jTrigger = $('<li><a style="padding-left: 8px;line-height: 19px;"href="#" class="' + gThis._GetClass('AddRepetition') + '"><img src="' + gThis._GetImage('AddRepetition') + '" alt="' + GForm.Language.add_field_repetition + '" title="' + GForm.Language.add_field_repetition + '"/> Dodaj nowy</a></li>');
			jField.append(gThis.m_jTrigger);
		}
		if ((gThis.m_jField instanceof $) && gThis.m_jField.length) {
			gThis.m_jField = gThis.m_jField.add(jField);
		}
		else {
			gThis.m_jField = jField;
		}
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		return jRepetitionNode;
	};

	gThis.OnReset = function() {
		gThis.m_jNode.find('input').parent().unCheckCheckboxes();
	};

	gThis.OnShow = function() {
		if (gThis.m_oOptions.bAddable && (gThis.m_oOptions.fOnAdd instanceof Function)) {
			gThis.m_jTrigger.click(function() {
				GAlert.DestroyAll();
				GPrompt(gThis.m_oOptions.sAddItemPrompt, function(sName) {
					GCore.StartWaiting();
					gThis.m_oOptions.fOnAdd({
						name: sName
					}, GCallback(function(eEvent) {
						GCore.StopWaiting();
						GAlert.DestroyAll();
						if(!eEvent.error){
							gThis.ExchangeOptions(eEvent.options);
							gThis.Populate(eEvent.id);
						}else{
							GError(eEvent.error);
						}
					}));
				});
				return false;
			});
		}
		gThis.m_jUnmodified.val('0');
	};

	gThis.Populate = function(mValue) {
		gThis.m_jNode.unCheckCheckboxes();
		for (var i in mValue) {
			if (i == 'unmodified') {
				continue;
			}
			gThis.m_jNode.find('input[value="' + mValue[i] + '"]').click();
		}
	};

	gThis.Focus = function() {
		if (gThis.m_jField == undefined) {
			return;
		}
		gThis.m_jField.eq(0).focus();
	};

}, oDefaults);
/*
* PASSWORD
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-text',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition'
	},
	oImages: {
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png'
	},
	sFieldType: 'password',
	sDefault: '',
	aoRules: []
};

var GFormPassword = GCore.ExtendClass(GFormTextField, function() {

	var gThis = this;

}, oDefaults);
/*
* PRICE
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-price',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sDisabledClass: 'disabled',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition',
		sNetPriceClass: 'net-price',
		sGrossPriceClass: 'gross-price'
	},
	oImages: {
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png'
	},
	sFieldType: 'text',
	sDefault: '',
	aoRules: [],
	sComment: ''
};

var GFormPriceEditor = GCore.ExtendClass(GFormTextField, function() {

	var gThis = this;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		gThis.m_jNode.append(gThis._AddField());
		$(window).bind('OnVatChange', function(){
			gThis._CalculateNetPrice();
		});
	};

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		return gThis.m_jField.eq(1).val();
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}

		gThis.m_jField.eq(1).val(mValue).change();
	};

	gThis._AddField = function(sId) {
		var jFieldNet = $('<input type="text" id="' + gThis.GetId() + '__net"/>');
		var jFieldGross = $('<input type="text" name="' + gThis.GetName() + '" id="' + gThis.GetId() + '"/>');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		var jNetNode = $('<span class="' + gThis._GetClass('NetPrice') + '"/>');
		var jGrossNode = $('<span class="' + gThis._GetClass('GrossPrice') + '"/>');
		if (gThis.m_oOptions.asPrefixes[0] != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.asPrefixes[0]);
			jNetNode.append(jPrefix);
		}
		jNetNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldNet));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jNetNode.append(jSuffix);
		}
		if (gThis.m_oOptions.asPrefixes[1] != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.asPrefixes[1]);
			jGrossNode.append(jPrefix);
		}
		jGrossNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldGross));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jGrossNode.append(jSuffix);
		}

		var jError = $('<span class="' + gThis._GetClass('Required') + '"/>');
		jNetNode.append(jError);

		jRepetitionNode.append(jNetNode).append(jGrossNode);
		gThis.m_jField = jRepetitionNode.find('input');
		gThis.jRepetitionNode = jRepetitionNode;
		return gThis.jRepetitionNode;
	};

	gThis.OnShow = function() {
		gThis._CalculateNetPrice(gThis.m_jField.eq(1).val());
		gThis.m_bShown = true;
		if (!gThis.m_bResized) {
			gThis.m_bResized = true;
			gThis.m_jField.each(function() {
				var iWidth = Math.floor(parseInt($(this).css('width')) / 2) - 20;
				var jParent = $(this).closest('.' + gThis._GetClass('NetPrice') + ', .' + gThis._GetClass('GrossPrice'));
				if (jParent.find('.' + gThis._GetClass('Prefix')).length) {
					iWidth -= ($(this).offset().left - jParent.find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
				}
				if (jParent.find('.' + gThis._GetClass('Suffix')).length) {
					iWidth -= jParent.find('.' + gThis._GetClass('Suffix')).width() + 4;
				}
				$(this).css('width', iWidth);
			});
		}
	};

	gThis._CalculateGrossPrice = function(sPrice) {
		var gVat = gThis.m_gForm.GetField(gThis.m_oOptions.sVatField);
		var iVatId = parseInt(gVat.GetValue());
		var fVat = 0;
		if (GCore.aoVatValues[iVatId] != undefined) {
			fVat = parseFloat(GCore.aoVatValues[iVatId]);
		}
		if (sPrice == undefined) {
			var sPrice = gThis.m_jField.eq(0).val();
		}
		var fPrice = parseFloat(sPrice.replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : fPrice;
		gThis.m_jField.eq(1).val((fPrice * (1 + fVat / 100)).toFixed(2));
	};

	gThis._CalculateNetPrice = function(sPrice) {
		var gVat = gThis.m_gForm.GetField(gThis.m_oOptions.sVatField);
		var iVatId = gVat.GetValue();
		var fVat = 0;
		if (GCore.aoVatValues[iVatId] != undefined) {
			fVat = parseFloat(GCore.aoVatValues[iVatId]);
		}
		if (sPrice == undefined) {
			var sPrice = gThis.m_jField.eq(1).val();
		}
		var fPrice = parseFloat(sPrice.replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : fPrice;
		gThis.m_jField.eq(0).val((fPrice / (1 + fVat / 100)).toFixed(2));
	};

	gThis._Initialize = function() {

		var fHandler = GEventHandler(function(eEvent) {
			setTimeout(function() {
				gThis._CalculateGrossPrice($(eEvent.currentTarget).val());
			}, 5);
		});
		gThis.m_jField.eq(0).keypress(fHandler).blur(fHandler).change(gThis.ValidateField);

		fHandler = GEventHandler(function(eEvent) {
			setTimeout(function() {
				gThis._CalculateNetPrice($(eEvent.currentTarget).val());
			}, 5);
		});
		gThis.m_jField.eq(1).keypress(fHandler).blur(fHandler).change(gThis.ValidateField);
		gThis.m_gForm.GetField(gThis.m_oOptions.sVatField).m_jField.change(GEventHandler(function(eEvent) {
			gThis._CalculateNetPrice();
		}));
		gThis._CalculateNetPrice();
		gThis.m_jField.eq(1).change();
	};

	gThis.ValidateField = GEventHandler(function(eEvent) {
		var fPrice = parseFloat($(eEvent.currentTarget).val().replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : fPrice;
		$(eEvent.currentTarget).val(fPrice.toFixed(2));
	});

	gThis.Reset = function() {
		gThis.m_jField.eq(1).val(gThis.m_oOptions.sDefault).change();
		gThis._CalculateNetPrice();
	};


}, oDefaults);
/*
* PRODUCT AGGREGATOR
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-product-aggregator',
		sFieldPriceClass: 'field-price',
		sFieldConstantClass: 'field-text',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sNetPriceClass: 'net-price',
		sGrossPriceClass: 'gross-price'
	},
	sFieldType: 'text',
	sProductsSourceField: '',
	fLoadProductData: GCore.NULL
};

var GFormProductAggregator = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_jProducts;
	gThis.m_aoProducts = [];
	gThis.m_iLockId = -1;
	gThis.m_jNetSum;
	gThis.m_jGrossSum;
	gThis.m_jCount;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jProducts = $('<div/>');
		gThis.m_jNode.append(gThis._AddProductCount(0));
		gThis.m_jNode.append(gThis.m_jProducts);
		gThis.m_jNode.append(gThis._AddSummary(0, 0));
	};

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		return gThis.m_jField.eq(0).val();
	};

	gThis.SetValue = function(mValue, sRepetition) {
		return;
	};

	gThis._RewriteProducts = function() {
		gThis.m_jProducts.empty();
		var iCount = gThis.m_aoProducts.length;
		var fNetSum = 0;
		var fGrossSum = 0;
		for (var i = 0; i < iCount; i++) {
			var oProduct = gThis.m_aoProducts[i];
			var jProductRow = gThis._AddProduct(oProduct);
			fNetSum += isNaN(parseFloat(jProductRow.find('input:text:eq(0)').val())) ? 0 : parseFloat(jProductRow.find('input:text:eq(0)').val());
			fGrossSum += isNaN(parseFloat(jProductRow.find('input:text:eq(1)').val())) ? 0 : parseFloat(jProductRow.find('input:text:eq(1)').val());
			gThis.m_jProducts.append(jProductRow);
		}
		gThis._UpdateWidths();
		gThis.UpdateCount(iCount);
		gThis.UpdateSum(fNetSum, fGrossSum);
	};

	gThis.UpdateSum = function(fNetSum, fGrossSum) {
		gThis.m_jNetSum.val(fNetSum.toFixed(2)).change();
		gThis.m_jGrossSum.val(fGrossSum.toFixed(2));
	};

	gThis.UpdateCount = function(iCount) {
		gThis.m_jCount.val(iCount).change();
	};

	gThis._AddProductCount = function(iCount) {
		var jElement = $('<div/>').addClass(gThis._GetClass('FieldConstant'));
		var jLabel = $('<label/>').css('font-weight', 'bold');
		var sLabel = GForm.Language.product_aggregator_count;
		jLabel.text(sLabel);
		jElement.append(jLabel);
		var jField = $('<input type="' + gThis.m_oOptions.sFieldType + '" disabled="disabled" value="' + iCount + '"/>').css('cursor', 'default');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		jElement.append(jRepetitionNode);
		gThis.m_jCount = jField;
		return jElement;
	};

	gThis._AddSummary = function(fNetSum, fGrossSum) {
		var jElement = $('<div/>').addClass(gThis._GetClass('FieldPrice'));
		var jLabel = $('<label/>').css('font-weight', 'bold');
		var sLabel = GForm.Language.product_aggregator_sum;
		jLabel.text(sLabel);
		jElement.append(jLabel);
		var jFieldNet = $('<input disabled="disabled" type="text" name="' + gThis.GetName() + '" value="' + fNetSum.toFixed(2) + '"/>').css('cursor', 'default');
		gThis.m_jField = jFieldNet;
		var jFieldGross = $('<input disabled="disabled" type="text" value="' + fGrossSum.toFixed(2) + '"/>').css('cursor', 'default');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		var jNetNode = $('<span class="' + gThis._GetClass('NetPrice') + '"/>');
		var jGrossNode = $('<span class="' + gThis._GetClass('GrossPrice') + '"/>');
		if (gThis.m_oOptions.asPrefixes[0] != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.asPrefixes[0]);
			jNetNode.append(jPrefix);
		}
		jNetNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldNet));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jNetNode.append(jSuffix);
		}
		if (gThis.m_oOptions.asPrefixes[1] != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.asPrefixes[1]);
			jGrossNode.append(jPrefix);
		}
		jGrossNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldGross));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jGrossNode.append(jSuffix);
		}
		jRepetitionNode.append(jNetNode).append(jGrossNode);
		jElement.append(jRepetitionNode);
		gThis.m_jNetSum = jFieldNet;
		gThis.m_jGrossSum = jFieldGross;
		return jElement;
	};

	gThis._AddProduct = function(oProduct) {
		var jElement = $('<div/>').addClass(gThis._GetClass('FieldPrice'));
		var jLabel = $('<label/>');
		var sLabel = oProduct.name;
		if (parseInt(oProduct.quantity) > 1) {
			sLabel = oProduct.quantity + ' ' + String.fromCharCode(0xd7) + ' ' + sLabel;
		}
		jLabel.text(sLabel);
		jElement.append(jLabel);
		jElement.append(gThis._AddPrice(oProduct));
		return jElement;
	};

	gThis._AddPrice = function(oProduct) {
		var jFieldNet = $('<input disabled="disabled" type="text" value="' + oProduct.sellprice + '"/>').css('cursor', 'default');
		var jFieldGross = $('<input disabled="disabled" type="text" value="' + oProduct.sellprice_gross + '"/>').css('cursor', 'default');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		var jNetNode = $('<span class="' + gThis._GetClass('NetPrice') + '"/>');
		var jGrossNode = $('<span class="' + gThis._GetClass('GrossPrice') + '"/>');
		if (gThis.m_oOptions.asPrefixes[0] != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.asPrefixes[0]);
			jNetNode.append(jPrefix);
		}
		jNetNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldNet));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jNetNode.append(jSuffix);
		}
		if (gThis.m_oOptions.asPrefixes[1] != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.asPrefixes[1]);
			jGrossNode.append(jPrefix);
		}
		jGrossNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldGross));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jGrossNode.append(jSuffix);
		}
		jRepetitionNode.append(jNetNode).append(jGrossNode);
		//gThis.m_jField = jRepetitionNode.find('input');
		return jRepetitionNode;
	};

	gThis.OnShow = function() {
		gThis.m_bShown = true;
		gThis._UpdateWidths();
		gThis.Update();
	};

	gThis._UpdateWidths = function() {
		gThis.m_jNode.find('input:text').each(function(i) {
			if (i == 0) {
				return;
			}
			var iWidth = Math.floor(parseInt($(this).css('width')) / 2) - 20;
			var jParent = $(this).closest('.' + gThis._GetClass('NetPrice') + ', .' + gThis._GetClass('GrossPrice'));
			if (jParent.find('.' + gThis._GetClass('Prefix')).length) {
				iWidth -= ($(this).offset().left - jParent.find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
			}
			if (jParent.find('.' + gThis._GetClass('Suffix')).length) {
				iWidth -= jParent.find('.' + gThis._GetClass('Suffix')).width() + 4;
			}
			$(this).css('width', iWidth);
		});
	};

	gThis._CalculateGrossPrice = function(sPrice) {
		/*var gVat = gThis.m_gForm.GetField(gThis.m_oOptions.sVatField);
		var iVatId = gVat.GetValue();
		var fVat = 0;
		for (var i in gThis.m_oOptions.aoVatValues) {
			if (gThis.m_oOptions.aoVatValues[i].id == iVatId) {
				fVat = gThis.m_oOptions.aoVatValues[i].value;
				break;
			}
		}
		if (sPrice == undefined) {
			var sPrice = gThis.m_jField.eq(0).val();
		}
		var fPrice = parseFloat(sPrice.replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : fPrice;
		//gThis.m_jField.eq(0).val(fPrice.toFixed(2));
		gThis.m_jField.eq(1).val((fPrice * (1 + fVat / 100)).toFixed(2));*/
	};

	gThis._CalculateNetPrice = function(sPrice) {
		/*var gVat = gThis.m_gForm.GetField(gThis.m_oOptions.sVatField);
		var iVatId = gVat.GetValue();
		var fVat = 0;
		for (var i in gThis.m_oOptions.aoVatValues) {
			if (gThis.m_oOptions.aoVatValues[i].id == iVatId) {
				fVat = gThis.m_oOptions.aoVatValues[i].value;
				break;
			}
		}
		if (sPrice == undefined) {
			var sPrice = gThis.m_jField.eq(0).val();
		}
		var fPrice = parseFloat(sPrice.replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : fPrice;
		//gThis.m_jField.eq(1).val(fPrice.toFixed(2));
		gThis.m_jField.eq(0).val((fPrice / (1 + fVat / 100)).toFixed(2));*/
	};

	gThis.StartWaiting = function() {
		gThis.m_jNode.css('opacity', .5);
	};

	gThis.EndWaiting = function() {
		gThis.m_jNode.css('opacity', 1);
	};

	gThis.Update = function() {
		var jProducts = gThis.m_gForm.GetField(gThis.m_oOptions.sProductsSourceField).m_jField.find('input');
		gThis.m_iLockId = gThis.m_gForm.Lock(GForm.Language.product_aggregator_form_blocked, GForm.Language.product_aggregator_form_blocked_description);
		gThis.StartWaiting();
		var aoProducts = [];
		for (var i = 0; i < jProducts.length - 2; i += 3) {
			aoProducts.push({
				id: jProducts.eq(i + 0).attr('value'),
				quantity: jProducts.eq(i + 1).attr('value'),
				variant: jProducts.eq(i + 2).attr('value')
			});
		}
		gThis.m_oOptions.fLoadProductData({
			products: aoProducts
		}, GCallback(GEventHandler(function(eEvent) {
			gThis.m_aoProducts = eEvent.products;
			gThis._RewriteProducts();
			gThis.m_gForm.Unlock(gThis.m_iLockId);
			gThis.EndWaiting();
		})));
	};

	gThis.Reset = function() {
		gThis.Update();
	};

	gThis.Focus = function() {
		return false;
	};

}, oDefaults);

/*
 * CONSOLE OUTPUT
 */

var oDefaults = {
    sName: '',
    sLabel: '',
    oClasses: {
        sFieldClass: 'field-console-output',
        sFieldSpanClass: 'field',
        sButtonClass: 'button',
        sGroupClass: 'group',
        sFocusedClass: 'focus',
        sInvalidClass: 'invalid',
        sRequiredClass: 'required',
        sWaitingClass: 'waiting',
        sFieldRepetitionClass: 'repetition',
        sThumbClass: 'thumb',
        sNameClass: 'name',
        sSelectedTableClass: 'selected',
        sAddFilesClass: 'add-pictures',
        sQueueClass: 'upload-queue',
        sProgressClass: 'progress',
        sProgressBarClass: 'progress-bar',
        sProgressBarIndicatorClass: 'indicator',
        sUploadErrorClass: 'upload-error',
        sUploadSuccessClass: 'upload-success'
    },
    oImages: {
        sDeleteIcon: 'images/icons/datagrid/delete.png',
        sUploadButton: 'images/buttons/add-pictures.png'
    },
    aoOptions: [],
    sDefault: '',
    aoRules: [],
    sComment: '',
    iWidth: 121,
    iPort: 0,
    iHeight: 27,
};

var GFormConsoleOutput = GCore.ExtendClass(GFormFile, function() {

    var gThis = this;

    gThis.m_bShown = false;
    gThis.oSocket;
    gThis.oAjaxRequest;

    gThis._PrepareNode = function() {
        gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
        gThis.m_jNode.css({marginBottom:20});

        gThis.m_jButton = $('<a class="' + gThis._GetClass('Button') + '" href="#"/>');
        gThis.m_jButton.append('<span>' + Translator.trans('package.button.run',{}, 'wellcommerce') + '</span>');
    	gThis.m_jNode.append($('<p></p>').append('<br />').append(gThis.m_jButton));

        gThis.m_jButton.css({
            top:-20,
            position: 'relative',
            marginBottom: -5
        });

        gThis.m_jNode.append('<h4>' + Translator.trans('package.label.output',{},'wellcommerce') + '</h4>');

        gThis.m_jConsoleOutput = $('<div/>').addClass(gThis._GetClass('Field'));
        gThis.m_jNode.append(gThis.m_jConsoleOutput);
        gThis.m_jConsoleOutput.append('<strong>' + Translator.trans('server.connection.starting',{},'wellcommerce') + '</strong>' + gThis.m_oOptions.iPort + '<br />');
    };

    gThis.OnProcess = function(){
        gThis.m_jButton.hide();
        var url = 'ws://127.0.0.1:' + gThis.m_oOptions.iPort + '/';
        gThis.oSocket = new WebSocket(url);
        gThis.oSocket.onmessage = function(msg) {
            gThis.m_jConsoleOutput.html(msg.data);
        };

        gThis.oSocket.onopen = function(eEvent) {
            console.log(eEvent);
            gThis.m_jConsoleOutput.append('<strong>' + Translator.trans('server.connection.open',{},'wellcommerce') + '</strong><br />');
        };

        gThis.oSocket.onclose = function(eEvent) {
            console.log(eEvent);
            gThis.m_jConsoleOutput.append('<strong>' + Translator.trans('server.connection.closed',{},'wellcommerce') + '</strong><br />');
        };

        gThis.oSocket.onerror = function(eEvent) {
            console.log(eEvent);
            gThis.m_jConsoleOutput.append('<strong>' + Translator.trans('server.connection.error',{},'wellcommerce') + ': ' + error + '</strong><br />');
        }
    };

    gThis._InitializeEvents = function(sRepetition) {
        $('.navigation .button').remove();
        gThis.m_jButton.click(gThis.OnProcess);
  	};

    gThis.OnShow = function() {
        gThis.m_bShown = true;

        gThis.oAjaxRequest = GF_Ajax_Request(gThis.m_oOptions.sConsoleUrl, {}, function(oResponse){
            if(oResponse.code == 0){
                GMessage(Translator.trans('package.flash.install_success',{},'wellcommerce'));
            }else{
                GError(Translator.trans('package.flash.install_failed',{},'wellcommerce'), Translator.trans('package.flash.exit_code',{},'wellcommerce') + ': '+ oResponse.code);
            }

            gThis.oSocket.onclose = function () {};
            gThis.oSocket.close();
            gThis.oAjaxRequest.abort();
        });

        $(window).bind("beforeunload",function(event){
            gThis.oAjaxRequest.abort();
            gThis.oSocket.onclose = function () {};
            gThis.oSocket.close();
            gThis.m_jConsoleOutput.append('<strong>'+ Translator.trans('package.flash.request_terminated',{},'wellcommerce') +'</strong>');
            return Translator.trans('console.message.confirm',{},'wellcommerce');
        });
    };

}, oDefaults);

/*
* PROGRESS INDICATOR
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-image',
		sFieldSpanClass: 'field',
		sButtonClass: 'button',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sThumbClass: 'thumb',
		sNameClass: 'name',
		sSelectedTableClass: 'selected',
		sAddFilesClass: 'add-pictures',
		sQueueClass: 'upload-queue',
		sProgressClass: 'progress',
		sProgressBarClass: 'progress-bar',
		sProgressBarIndicatorClass: 'indicator',
		sUploadErrorClass: 'upload-error',
		sUploadSuccessClass: 'upload-success'
	},
	oImages: {
		sDeleteIcon: 'images/icons/datagrid/delete.png',
		sUploadButton: 'images/buttons/add-pictures.png'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	iWidth: 121,
	iHeight: 27
};

var GFormProgressIndicator = GCore.ExtendClass(GFormFile, function() {

	var gThis = this;

	gThis.m_bShown = false;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}

		gThis.m_jNode.append('<h4>' + gThis.m_oOptions.sLabel + '</h4>');
		gThis.m_jNode.append('<p class="' + gThis._GetClass('Progress') + '"/>');
		gThis.m_jNode.append('<div class="' + gThis._GetClass('ProgressBar') + '"><div class="' + gThis._GetClass('ProgressBarIndicator') + '"></div>');
		gThis.m_jNode.find('.' + gThis._GetClass('Progress')).text(GForm.Language.progress_indicator_run_comment);
		gThis.m_jNode.find('.' + gThis._GetClass('ProgressBarIndicator')).css('width', 0 + '%');

		if(gThis.m_oOptions.bPreventSubmit){
			jA = $('<a class="' + gThis._GetClass('Button') + '" href="#"/>');
			jA.append('<span>' + GForm.Language.progress_indicator_run + '</span>');
			gThis.m_jNode.append($('<p></p>').append('<br />').append(jA));
		}else{
			window.setTimeout(gThis.OnLoad, 1500);
		}
	};

	gThis._InitializeEvents = function(sRepetition) {
		$('.navigation').remove();
		if(gThis.m_oOptions.bPreventSubmit){
			jA.click(gThis.OnLoad);
		}

	};

	gThis.OnLoad = function(){
		if(gThis.m_oOptions.bPreventSubmit){
			jA.hide();
		}

		gThis.m_oOptions.fLoadRecords({
			iStartFrom: 0
		}, GCallback(gThis.OnDataLoaded));
	};

	gThis.OnStartProcess = function(iFrom){
		GXajaxInterface.Invoke(gThis.m_oOptions.fProcessRecords, [
			{
				iStartFrom: iFrom,
				iChunks: gThis.m_oOptions.iChunks,
				iTotal: gThis.iTotal
			},
			GCallback(gThis.OnProcess)
		], function(eEvent) {
			GError('Serwer zwrócił niepoprawną odpowiedź', 'Czy spróbować jeszcze raz?', {
				aoPossibilities: [
					{
						mLink: GEventHandler(function(eEvent) {
							GAlert.DestroyAll();
							gThis.OnStartProcess(iFrom);
						}),
						sCaption: 'Ponów próbę'
					},
					{
						mLink: GAlert.DestroyThis,
						sCaption: GMessageBar.Language.cancel
					}
				]
			});
		});
	};

	gThis.UpdateIndicator = function(completed){
		var iCompleted = completed;
		if (gThis.iTotal == undefined) {
			return;
		}
		var iTotal = gThis.iTotal;
		var iPercentage = Math.round(iCompleted / iTotal * 100);
		gThis.m_jNode.find('.' + gThis._GetClass('Progress')).text(iPercentage + '%: ' + iCompleted  + ' / ' + iTotal + ' ' + gThis.m_oOptions.sComment);
		gThis.m_jNode.find('.' + gThis._GetClass('ProgressBarIndicator')).css('width', (iCompleted / iTotal * 100) + '%');
	};

	gThis.OnDataLoaded = GEventHandler(function(eEvent) {
		var iCompleted = eEvent.iCompleted;
		var iTotal = eEvent.iTotal;
		var iPercentage = Math.round(iCompleted / iTotal * 100);
		gThis.m_jNode.find('.' + gThis._GetClass('Progress')).text(iPercentage + '%: ' + iCompleted  + ' / ' + iTotal + ' ' + gThis.m_oOptions.sComment);
		gThis.iTotal = iTotal;
		gThis.m_jNode.find('h4').text('Przetwarzanie danych');
		gThis.OnStartProcess(iCompleted, 0);
	});

	gThis.OnProcess = GEventHandler(function(eEvent) {
		gThis.UpdateIndicator(eEvent.iStartFrom);
		if ((eEvent.bFinished != undefined) && eEvent.bFinished) {
			gThis.m_oOptions.fSuccessRecords({
			   bFinished: eEvent.bFinished
			}, GCallback(gThis.OnProcessSucceded));
			return;
		}
		if(eEvent.iStartFrom > 0){
			gThis.OnStartProcess(eEvent.iStartFrom);
		}
	});

	gThis.OnProcessSucceded = GEventHandler(function(eEvent) {
		if ((eEvent.bCompleted != undefined) && eEvent.bCompleted) {
			GAlert(GForm.Language.progress_indicator_success);
			return;
		}
	});

}, oDefaults);
/*
* PROGRESS BAR
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-image',
		sFieldSpanClass: 'field',
		sButtonClass: 'button',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sThumbClass: 'thumb',
		sNameClass: 'name',
		sSelectedTableClass: 'selected',
		sAddFilesClass: 'add-pictures',
		sQueueClass: 'upload-queue',
		sProgressClass: 'progress',
		sProgressBarClass: 'progress-bar',
		sProgressBarIndicatorClass: 'indicator',
		sUploadErrorClass: 'upload-error',
		sUploadSuccessClass: 'upload-success'
	},
	oImages: {
		sDeleteIcon: 'images/icons/datagrid/delete.png',
		sUploadButton: 'images/buttons/add-pictures.png'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	iWidth: 121,
	iHeight: 27,
};

var GFormProgressBar = GCore.ExtendClass(GFormFile, function() {

	var gThis = this;

	gThis.m_bShown = false;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jNode.css({marginBottom:20});
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		var iTotal = gThis.m_oOptions.iTotal;
		var iCompleted = gThis.m_oOptions.iCompleted;
		var iPercentage = Math.round(iCompleted / iTotal * 100);

		gThis.m_jNode.append('<h4>' + gThis.m_oOptions.sLabel + '</h4>');

		gThis.m_jNode.append('<p class="' + gThis._GetClass('Progress') + '"/>');

		gThis.m_jNode.append('<div class="' + gThis._GetClass('ProgressBar') + ((parseInt(iCompleted) > parseInt(iTotal) && parseInt(iTotal) > 0) ? ' error' : '') +'"><div class="' + gThis._GetClass('ProgressBarIndicator') + '"></div>');

		if(iTotal == 0){
			gThis.m_jNode.find('.' + gThis._GetClass('Progress')).text('Brak limitu');
		}else{
			gThis.m_jNode.find('.' + gThis._GetClass('Progress')).text(Math.round(gThis.m_oOptions.iCompleted / gThis.m_oOptions.iTotal * 100) + '%: ' + gThis.m_oOptions.iCompleted  + ' / ' + gThis.m_oOptions.iTotal + ' ' + gThis.m_oOptions.sComment);
		}

	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			var percentage = gThis.m_oOptions.iCompleted / gThis.m_oOptions.iTotal * 100;
			gThis.m_jNode.find('.' + gThis._GetClass('ProgressBarIndicator')).animate({
				width: (percentage > 100) ? '100%' : percentage + '%'
			}, 500);
		}
		gThis.m_bShown = true;
	};

}, oDefaults);

/*
* RANGE EDITOR
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	asPrefixes: [],
	sSuffix: '',
	aoVatValues: [],
	oClasses: {
		sFieldClass: 'field-range-editor',
		sFieldTextClass: 'field-text',
		sFieldPriceClass: 'field-price',
		sFieldCheckboxClass: 'field-checkbox',
		sFieldSelectClass: 'field-select',
		sFieldSpanClass: 'field',
		sRangeColumnClass: 'price',
		sMinColumnClass: 'min',
		sMaxColumnClass: 'max',
		sOptionsColumnClass: 'options',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition',
		sNetPriceClass: 'net-price',
		sGrossPriceClass: 'gross-price'
	},
	oImages: {
		sAdd: 'images/icons/buttons/add.png',
		sRemove: 'images/icons/buttons/delete.png'
	},
	sFieldType: 'text',
	sDefault: '',
	aoRules: [],
	aoOptions: [],
	sComment: '',
	iPricePrecision: 4,
	iRangePrecision: 4
};

var GFormRangeEditor = GCore.ExtendClass(GFormField, function() {

	var gThis = this;
	gThis.m_jTable;
	gThis.m_jVat;
	gThis.m_jUseVat;
	gThis.m_jVatField;
	gThis.m_jUseVatField;
	gThis.m_jRangeFields;
	gThis.m_jPriceFields;
	gThis.m_jNetPriceFields;
	gThis.m_jGrossPriceFields;
	gThis.m_aoRanges = [];

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis._AddVatCheckbox();
		gThis._AddVat();
		gThis._AddTable();
	};

	gThis._AddTable = function() {
		gThis.m_jTable = $('<table cellspacing="0"/>');
		gThis.m_jNode.append(gThis.m_jTable);
	};

	gThis._WriteTable = function() {
		if (!(gThis.m_aoRanges instanceof Array) || !gThis.m_aoRanges.length) {
			gThis.m_aoRanges = [{
				min: (0).toFixed(gThis.m_oOptions.iRangePrecision),
				max: (0).toFixed(gThis.m_oOptions.iRangePrecision),
				price: (gThis.m_oOptions.aoOptions.length) ? gThis.m_oOptions.aoOptions[0].sValue : (0).toFixed(gThis.m_oOptions.iPricePrecision)
			}];
		}
		gThis.m_jTable.find('tbody').remove();
		gThis.m_jGrossPriceFields = $();
		gThis.m_jNetPriceFields = $();
		var jBody = $('<tbody/>');
		var iRanges = gThis.m_aoRanges.length;
		for (var i = 0; i < iRanges; i++) {
			var jTr = $('<tr/>');
			var jMin = $('<td class="' + gThis._GetClass('RangeColumn') + ' ' + gThis._GetClass('MinColumn') + '"/>');
            jMin.append(gThis._AddMin(i, gThis.m_aoRanges[i]));

			var jMax = $('<td class="' + gThis._GetClass('RangeColumn') + ' ' + gThis._GetClass('MaxColumn') + '"/>');
			if (i < iRanges ) {
				jMax.append(gThis._AddMax(i, gThis.m_aoRanges[i]));
			}
			var jPrice = $('<td/>');
			if (gThis.m_oOptions.aoOptions.length) {
				jPrice.append(gThis._AddSelect(i, gThis.m_aoRanges[i]));
			}
			else if (gThis.m_jUseVatField.is(':checked')) {
				jPrice.append(gThis._AddPriceWithVat(i, gThis.m_aoRanges[i]));
			}
			else {
				jPrice.append(gThis._AddPrice(i, gThis.m_aoRanges[i]));
			}
			jOptions = $('<td class="' + gThis._GetClass('OptionsColumn') + '"/>');
			var jAdd = $('<a tabindex="-1" href="#"/>');
			jAdd.append('<img src="' + gThis._GetImage('Add') + '" alt="' + GForm.Language.range_editor_add_range + '" title="' + GForm.Language.range_editor_add_range + '"/>');
			jOptions.append(jAdd);
			jAdd.bind('click', {i:i}, GEventHandler(function(eEvent) {
				gThis.AddNewRange(eEvent.data.i);
				return false;
			}));
			if (iRanges > 1) {
				var jRemove = $('<a tabindex="-1" href="#"/>');
				jRemove.append('<img src="' + gThis._GetImage('Remove') + '" alt="' + GForm.Language.range_editor_remove_range + '" title="' + GForm.Language.range_editor_remove_range + '"/>');
				jOptions.append(jRemove);
				jRemove.bind('click', {i:i}, GEventHandler(function(eEvent) {
					gThis.RemoveRange(eEvent.data.i);
					return false;
				}));
			}
			jTr.append(jMin);
			jTr.append(jMax);
			jTr.append(jPrice);
			jTr.append(jOptions);
			jBody.append(jTr);
		}
		gThis.m_jTable.append(jBody);
		gThis.InitTable();
	};

	gThis.AddNewRange = function(iAfterWhich) {
		var fOffset = 1 / Math.pow(10, gThis.m_oOptions.iRangePrecision);
		var oRange = {
			min: (parseFloat(gThis.m_aoRanges[iAfterWhich].max) + fOffset).toFixed(gThis.m_oOptions.iRangePrecision),
			max: (9999).toFixed(gThis.m_oOptions.iRangePrecision),
			price: (gThis.m_oOptions.aoOptions.length) ? gThis.m_oOptions.aoOptions[0].sValue : (0).toFixed(gThis.m_oOptions.iPricePrecision)
		};
		if (gThis.m_aoRanges[iAfterWhich + 1] != undefined) {
			var fRange = Math.max(fOffset, parseFloat(gThis.m_aoRanges[iAfterWhich + 1].max) - parseFloat(oRange.min));
			oRange.max = (parseFloat(oRange.min) + fRange / 2).toFixed(gThis.m_oOptions.iRangePrecision);
			gThis.m_aoRanges[iAfterWhich + 1].min = (parseFloat(oRange.max) + fOffset).toFixed(gThis.m_oOptions.iRangePrecision);
		}
		var aoRanges = gThis.m_aoRanges.slice(0, iAfterWhich + 1).concat(oRange, gThis.m_aoRanges.slice(iAfterWhich + 1));
		gThis.m_aoRanges = aoRanges;
		gThis._WriteTable();
	};

	gThis.RemoveRange = function(iWhich) {
		gThis.m_aoRanges.splice(iWhich, 1);
		var fOffset = 1 / Math.pow(10, gThis.m_oOptions.iRangePrecision);
		if ((gThis.m_aoRanges[iWhich] != undefined) && (gThis.m_aoRanges[iWhich - 1] != undefined)) {
			gThis.m_aoRanges[iWhich].min = gThis.m_aoRanges[iWhich - 1].max;
			gThis.m_aoRanges[iWhich].min = (parseFloat(gThis.m_aoRanges[iWhich].min) + fOffset).toFixed(gThis.m_oOptions.iRangePrecision);
		}
		gThis._WriteTable();
	};

	gThis._AddMin = function(sId, oRange) {
		var jPrice = $('<div/>').addClass(gThis._GetClass('FieldText'));
		var jFieldNet = $('<input type="text" name="' + gThis.GetName() + '[ranges][' + sId + '][min]" id="' + gThis.GetId() + '__' + sId + '__min" value="' + oRange.min + '"/>');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
		jPrefix.html(GForm.Language.range_editor_from);
		jRepetitionNode.append(jPrefix);
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldNet));
		if (gThis.m_oOptions.sRangeSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sRangeSuffix);
			jRepetitionNode.append(jSuffix);
		}
		jPrice.append(jRepetitionNode);
		return jPrice;
	};

	gThis._AddMax = function(sId, oRange) {
		var jPrice = $('<div/>').addClass(gThis._GetClass('FieldText'));
		var jFieldNet = $('<input type="text" name="' + gThis.GetName() + '[ranges][' + sId + '][max]" id="' + gThis.GetId() + '__' + sId + '__max" value="' + oRange.max + '"/>');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
		jPrefix.html(GForm.Language.range_editor_to);
		jRepetitionNode.append(jPrefix);
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldNet));
		if (gThis.m_oOptions.sRangeSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sRangeSuffix);
			jRepetitionNode.append(jSuffix);
		}
		jPrice.append(jRepetitionNode);
		return jPrice;
	};

	gThis.InitTable = function() {

		gThis.m_jTable.find('tbody input').focus(GEventHandler(function(eEvent) {
			$(this).closest('.' + gThis._GetClass('FieldSpan')).addClass(gThis._GetClass('Focused'));
		})).blur(GEventHandler(function(eEvent) {
			$(this).closest('.' + gThis._GetClass('FieldSpan')).removeClass(gThis._GetClass('Focused'));
		}));
		gThis._ResizeFields();

		var fHandler = GEventHandler(function(eEvent) {
			setTimeout(function() {
				var jNet = $(eEvent.currentTarget);
				jNet.closest('td').find('.' + gThis._GetClass('GrossPrice') + ' input').val(gThis._CalculateGrossPrice(jNet.val()));
			}, 5);
		});
		gThis.m_jTable.find('tbody .' + gThis._GetClass('NetPrice') + ' input').keypress(fHandler).blur(fHandler).change(gThis.ValidatePrice).change(GEventHandler(function(eEvent) {
			var i = gThis.m_jTable.find('tbody tr').index($(this).closest('tr'));
			gThis.m_aoRanges[i].price = $(this).val();
		}));
		gThis.m_jTable.find('.' + gThis._GetClass('NetPrice') + ' input').each(function() {
			$(this).triggerHandler('blur');
		});

		fHandler = GEventHandler(function(eEvent) {
			setTimeout(function() {
				var jGross = $(eEvent.currentTarget);
				jGross.closest('td').find('.' + gThis._GetClass('NetPrice') + ' input').val(gThis._CalculateNetPrice(jGross.val()));
			}, 5);
		});
		gThis.m_jTable.find('tbody .' + gThis._GetClass('GrossPrice') + ' input').keypress(fHandler).blur(fHandler).change(gThis.ValidatePrice).change(GEventHandler(function(eEvent) {
			var i = gThis.m_jTable.find('tbody tr').index($(this).closest('tr'));
			gThis.m_aoRanges[i].price = $(this).closest('td').find('.' + gThis._GetClass('NetPrice') + ' input').val();
		}));

		fHandler = GEventHandler(function(eEvent) {
			setTimeout(function() {
				var fValue = Math.abs(parseFloat($(eEvent.currentTarget).val().replace(/,/, '.')));
				if (isNaN(fValue)) {
					return;
				}
				$(eEvent.currentTarget).closest('tr').prev('tr').find('.' + gThis._GetClass('MaxColumn') + ' input').val((fValue - 1 / Math.pow(10, gThis.m_oOptions.iRangePrecision)).toFixed(gThis.m_oOptions.iRangePrecision)).change();
			}, 5);
		});
		gThis.m_jTable.find('tbody tr .' + gThis._GetClass('MinColumn') + ' input').keypress(fHandler).blur(fHandler).change(gThis.ValidateRange).change(GEventHandler(function(eEvent) {
			var i = gThis.m_jTable.find('tbody tr').index($(this).closest('tr'));
			gThis.m_aoRanges[i].min = $(this).val();
		}));

		fHandler = GEventHandler(function(eEvent) {
			setTimeout(function() {
				var fValue = parseFloat($(eEvent.currentTarget).val().replace(/,/, '.'));
				if (isNaN(fValue)) {
					return;
				}
				$(eEvent.currentTarget).closest('tr').next('tr').find('.' + gThis._GetClass('MinColumn') + ' input').val((fValue + 1 / Math.pow(10, gThis.m_oOptions.iRangePrecision)).toFixed(gThis.m_oOptions.iRangePrecision)).change();
			}, 5);
		});
		gThis.m_jTable.find('tbody tr .' + gThis._GetClass('MaxColumn') + ' input').keypress(fHandler).blur(fHandler).change(gThis.ValidateRange).change(GEventHandler(function(eEvent) {
			var i = gThis.m_jTable.find('tbody tr').index($(this).closest('tr'));
			gThis.m_aoRanges[i].max = $(this).val();
		}));

		gThis.m_jTable.find('select').each(function(i) {
			$(this).bind('change', {i: i}, GEventHandler(function(eEvent) {
				gThis.m_aoRanges[i].price = $(this).find('option:selected').attr('value');
			})).GSelect();
		});

	};

	gThis._AddVat = function() {
		gThis.m_jVat = $('<div/>').addClass(gThis._GetClass('FieldSelect'));
		var jLabel = $('<label for="' + gThis.GetId() + '__vat"/>');
		jLabel.text(GForm.Language.range_editor_vat);
		gThis.m_jVat.append(jLabel);
		var jField = $('<select name="' + gThis.GetName() + '[vat]" id="' + gThis.GetId() + '__vat"/>');
		for (var i in gThis.m_oOptions.aoVatValues) {
			jField.append('<option value="' + i + '">' + gThis.m_oOptions.aoVatValues[i] + '</option>');
		}
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
		jSuffix.text('%');
		jRepetitionNode.append(jSuffix);
		gThis.m_jVat.append(jRepetitionNode);
		gThis.m_jNode.append(gThis.m_jVat);
		gThis.m_jVatField = jField;
	};

	gThis._AddVatCheckbox = function() {
		if (!gThis.m_oOptions.aoVatValues.length) {
			gThis.m_jUseVatField = $('<div/>');
			return;
		}
		gThis.m_jUseVat = $('<div/>').addClass(gThis._GetClass('FieldCheckbox'));
		var jLabel = $('<label for="' + gThis.GetId() + '__use_vat"/>');
		jLabel.text(GForm.Language.range_editor_use_vat);
		gThis.m_jUseVat.append(jLabel);
		var jField = $('<input type="checkbox" name="' + gThis.GetName() + '[use_vat]" id="' + gThis.GetId() + '__use_vat" value="1"/>');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		gThis.m_jUseVat.append(jRepetitionNode);
		gThis.m_jNode.append(gThis.m_jUseVat);
		gThis.m_jUseVatField = jField;
	};

	gThis.GetValue = function(sRepetition) {
		return {
			use_vat: gThis.m_jUseVatField.is(':checked'),
			vat: gThis.m_jVatField.find('option:selected').attr('value'),
			ranges: gThis.m_aoRanges
		};
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (mValue != undefined) {
			if ((mValue['use_vat'] && !gThis.m_jUseVatField.is(':checked')) || (!mValue['use_vat'] && gThis.m_jUseVatField.is(':checked'))) {
				gThis.m_jUseVatField.click();
			}
			mValue['vat'] && gThis.m_jVatField.val(mValue['vat']).change();
			if ((mValue['ranges'] == undefined) || !(mValue['ranges'] instanceof Array)) {
				mValue['ranges'] = [];
			}
			gThis.m_aoRanges = mValue['ranges'];
		}

		gThis._WriteTable();
		gThis.m_jUseVatField.triggerHandler('click');
	};

	gThis._AddPriceWithVat = function(sId, oRange) {
		var jPrice = $('<div/>').addClass(gThis._GetClass('FieldPrice'));
		var jFieldNet = $('<input type="text" name="' + gThis.GetName() + '[ranges][' + sId + '][price]" id="' + gThis.GetId() + '__' + sId +'__price" value="' + oRange.price + '"/>');
		var jFieldGross = $('<input type="text" id="' + gThis.GetId() + '__' + sId + '__gross"/>');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		var jNetNode = $('<span class="' + gThis._GetClass('NetPrice') + '"/>');
		var jGrossNode = $('<span class="' + gThis._GetClass('GrossPrice') + '"/>');
		if (gThis.m_oOptions.asPrefixes[0] != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.asPrefixes[0]);
			jNetNode.append(jPrefix);
		}
		jNetNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldNet));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jNetNode.append(jSuffix);
		}
		if (gThis.m_oOptions.asPrefixes[1] != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.asPrefixes[1]);
			jGrossNode.append(jPrefix);
		}
		jGrossNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldGross));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jGrossNode.append(jSuffix);
		}
		jRepetitionNode.append(jNetNode).append(jGrossNode);
		if ((gThis.m_jNetPriceFields instanceof $) && gThis.m_jNetPriceFields.length) {
			gThis.m_jNetPriceFields.add(jRepetitionNode.find('input:eq(0)'));
		}
		else {
			gThis.m_jNetPriceFields = jRepetitionNode.find('input:eq(0)');
		}
		if ((gThis.m_jGrossPriceFields instanceof $) && gThis.m_jGrossPriceFields.length) {
			gThis.m_jGrossPriceFields.add(jRepetitionNode.find('input:eq(1)'));
		}
		else {
			gThis.m_jGrossPriceFields = jRepetitionNode.find('input:eq(1)');
		}
		jPrice.append(jRepetitionNode);
		return jPrice;
	};

	gThis._AddPrice = function(sId, oRange) {
		var jPrice = $('<div/>').addClass(gThis._GetClass('FieldText'));
		var jFieldNet = $('<input type="text" name="' + gThis.GetName() + '[ranges][' + sId + '][price]" id="' + gThis.GetId() + '__' + sId +'__price" value="' + oRange.price + '"/>');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldNet));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jRepetitionNode.append(jSuffix);
		}
		if ((gThis.m_jNetPriceFields instanceof $) && gThis.m_jNetPriceFields.length) {
			gThis.m_jNetPriceFields.add(jRepetitionNode.find('input:eq(0)'));
		}
		else {
			gThis.m_jNetPriceFields = jRepetitionNode.find('input:eq(0)');
		}
		jPrice.append(jRepetitionNode);
		return jPrice;
	};

	gThis._AddSelect = function(sId, oRange) {
		var jPrice = $('<div/>').addClass(gThis._GetClass('FieldSelect'));
		var jFieldNet = $('<select name="' + gThis.GetName() + '[ranges][' + sId + '][price]" id="' + gThis.GetId() + '__' + sId +'__price"/>');
		for (var i = 0; i < gThis.m_oOptions.aoOptions.length; i++) {
			jFieldNet.append('<option value="' + gThis.m_oOptions.aoOptions[i].sValue + '"' + ((oRange.price == gThis.m_oOptions.aoOptions[i].sValue) ? ' selected="selected"' : '') + '>' + gThis.m_oOptions.aoOptions[i].sLabel + '</option>');
		}
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldNet));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jRepetitionNode.append(jSuffix);
		}
		if ((gThis.m_jNetPriceFields instanceof $) && gThis.m_jNetPriceFields.length) {
			gThis.m_jNetPriceFields.add(jRepetitionNode.find('input:eq(0)'));
		}
		else {
			gThis.m_jNetPriceFields = jRepetitionNode.find('input:eq(0)');
		}
		jPrice.append(jRepetitionNode);
		return jPrice;
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis.m_jVatField.GSelect();
		}
		gThis.m_bShown = true;
		if (!gThis.m_bResized) {
			gThis.m_bResized = true;
			gThis._ResizeFields();
		}
		gThis.m_jUseVatField.triggerHandler('click');
	};

	gThis._ResizeFields = function() {
		gThis.m_jTable.find('.' + gThis._GetClass('NetPrice') + ' input, .' + gThis._GetClass('GrossPrice') + ' input').each(function() {
			var iWidth = Math.floor(parseInt($(this).css('width')) / 2) - 20;
			var jParent = $(this).closest('.' + gThis._GetClass('NetPrice') + ', .' + gThis._GetClass('GrossPrice'));
			if (jParent.find('.' + gThis._GetClass('Prefix')).length) {
				iWidth -= ($(this).offset().left - jParent.find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
			}
			if (jParent.find('.' + gThis._GetClass('Suffix')).length) {
				iWidth -= jParent.find('.' + gThis._GetClass('Suffix')).width() + 4;
			}
			$(this).css('width', iWidth);
		});
	};

	gThis._CalculateGrossPrice = function(sPrice) {
		var iVatId = gThis.m_jVatField.find('option:selected').attr('value');
		var fVat = gThis.m_oOptions.aoVatValues[iVatId];
		var fPrice = parseFloat(sPrice.replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : fPrice;
		return (fPrice * (1 + fVat / 100)).toFixed(gThis.m_oOptions.iPricePrecision);
	};

	gThis._CalculateNetPrice = function(sPrice) {
		var iVatId = gThis.m_jVatField.find('option:selected').attr('value');
		var fVat = gThis.m_oOptions.aoVatValues[iVatId];
		var fPrice = parseFloat(sPrice.replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : fPrice;
		return (fPrice / (1 + fVat / 100)).toFixed(gThis.m_oOptions.iPricePrecision);
	};

	gThis._Initialize = function() {
		if (gThis.m_oOptions.aoVatValues.length) {
			gThis.m_jUseVatField.click(GEventHandler(function(eEvent) {
				gThis._WriteTable();
				if ($(this).is(':checked')) {
					gThis.m_jVat.slideDown(100);
					gThis.m_jTable.find('.' + gThis._GetClass('NetPrice') + ' input').each(function() {
						$(this).triggerHandler('blur');
					});
				}
				else {
					gThis.m_jVat.slideUp(100);
				}
			}));
			gThis.m_jVatField.change(GEventHandler(function(eEvent) {
				gThis._WriteTable();
			}));
		}
		else {
			gThis.m_jVat.css('display', 'none');
		}
	};

	gThis.ValidatePrice = GEventHandler(function(eEvent) {
		var fPrice = parseFloat($(eEvent.currentTarget).val().replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : Math.abs(fPrice);
		$(eEvent.currentTarget).val(fPrice.toFixed(gThis.m_oOptions.iPricePrecision));
	});

	gThis.ValidateRange = GEventHandler(function(eEvent) {
		var fPrice = parseFloat($(eEvent.currentTarget).val().replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : Math.abs(fPrice);
		$(eEvent.currentTarget).val(fPrice.toFixed(gThis.m_oOptions.iRangePrecision));
	});

	gThis.Reset = function() {
		gThis.SetValue(gThis.m_oOptions.sDefault);
	};

}, oDefaults);
/*
* TEXTAREA
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-textarea',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition'
	},
	oImages: {
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png'
	},
	iRows: 3,
	iCols: 60,
	sDefault: '',
	aoRules: [],
	sComment: ''
};

var GFormTextArea = GCore.ExtendClass(GFormTextField, function() {

	var gThis = this;

	gThis.m_bResized;

	gThis._Constructor = function() {
		gThis.m_bResized = false;
	};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		if (!gThis.m_bRepeatable) {
			gThis.m_jNode.append(gThis._AddField());
		}
		else {
			gThis.AddRepetition();
		}
	};

	gThis._AddField = function(sId) {
		var jField = $('<textarea name="' + gThis.GetName() + '" id="' + gThis.GetId() + '" rows="' + gThis.m_oOptions.iRows + '" cols="' + gThis.m_oOptions.iCols + '"/>');
		if ((gThis.m_jField instanceof $) && gThis.m_jField.length) {
			gThis.m_jField = gThis.m_jField.add(jField);
		}
		else {
			gThis.m_jField = jField;
		}
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		return jRepetitionNode;
	};

	gThis.OnShow = function() {};

}, oDefaults);
/*
* CODE EDITOR
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-textarea',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition'
	},
	oImages: {
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png'
	},
	iRows: 3,
	iCols: 60,
	sDefault: '',
	aoRules: [],
	sComment: ''
};

var GFormCodeEditor = GCore.ExtendClass(GFormTextField, function() {

	var gThis = this;

	gThis.m_bResized;

	gThis._Constructor = function() {
		gThis.m_bResized = false;
		gThis.m_bShown = false;
	};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		if (!gThis.m_bRepeatable) {
			gThis.m_jNode.append(gThis._AddField());
		}
		else {
			gThis.AddRepetition();
		}

	};

	gThis._AddField = function(sId) {
		var jField = $('<textarea name="' + gThis.GetName() + '" id="' + gThis.GetId() + '" rows="' + gThis.m_oOptions.iRows + '" cols="' + gThis.m_oOptions.iCols + '"/>');
		if ((gThis.m_jField instanceof $) && gThis.m_jField.length) {
			gThis.m_jField = gThis.m_jField.add(jField);
		}
		else {
			gThis.m_jField = jField;
		}
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		return jRepetitionNode;
	};

	gThis.OnShow = function() {
		if(gThis.m_bShown){
			return;
		}else{
			CodeMirror.modeURL = GCore.DESIGN_PATH + '_js_libs/codemirror/mode/%N/%N.js';
			var editor = CodeMirror.fromTextArea(document.getElementById(gThis.GetId()), {
				width: '450px',
				tabMode: "indent",
				lineNumbers: true,
			});
			editor.setOption("mode", gThis.m_oOptions.sMode);
			CodeMirror.autoLoadMode(editor, gThis.m_oOptions.sMode);
			gThis.m_bShown = true;
		}
	};

}, oDefaults);

/*
* CLIENT SELECT
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-client-select',
		sFieldSpanClass: 'field',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sHiddenClass: 'hidden',
		sButtonClass: 'button',
		sTriggerClass: 'trigger'
	},
	oImages: {
		sAddIcon: 'images/icons/buttons/add-customer.png',
		sDeselectIcon: 'images/icons/datagrid/delete.png'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	sLoadClientsRoute: GCore.NULL,
	sGetClientDetailsRoute: GCore.NULL
};

var GFormClientSelect = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;

	gThis.m_fLoadClients;
	gThis.m_fProcessProduct;
	gThis.m_jDatagrid;
	gThis.m_jDatagridWrapper;
	gThis.m_jTrigger;
	gThis.m_jSelectedDatagrid;
	gThis.m_gDatagrid;
	gThis.m_gSelectedDatagrid;
	gThis.m_gDataProvider;
	gThis.m_bFirstLoad = true;
	gThis.m_jClientName;
	gThis.m_jClientEmail;
	gThis.m_jClientGroup;
	gThis.m_aoAddresses = [];
	gThis.m_agListeners = [];

	gThis.m_bFirstLoad = true;

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		if (gThis.m_bRepeatable) {
			if (sRepetition != undefined) {
				return gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '"]').val();
			}
			var aValues = [];
			var jValues = gThis.m_jField.find('input');
			for (var i = 0; i < jValues.length; i++) {
				aValues.push(jValues.eq(i).val());
			}
			return aValues;
		}
		else {
			return gThis.m_jField.val();
		}
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (gThis.m_bRepeatable) {
			for (var i in mValue) {
				gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName(i) + '" value="' + mValue[i] + '"/>');
			}
		}
		else {
			gThis.m_jField.val(mValue).change();
		}
	};

	gThis._OnDataLoaded = function(oData) {
		gThis.m_jClientName.text(oData.name);
		gThis.m_jClientEmail.text(oData.email);
		gThis.m_jClientGroup.text(oData.group);

		$('#address_data__billing_data__firstname').val(oData.billing_address.firstname);
		$('#address_data__billing_data__surname').val(oData.billing_address.surname);
		$('#address_data__billing_data__street').val(oData.billing_address.street);
		$('#address_data__billing_data__streetno').val(oData.billing_address.streetno);
		$('#address_data__billing_data__placeno').val(oData.billing_address.placeno);
		$('#address_data__billing_data__place').val(oData.billing_address.placename);
		$('#address_data__billing_data__postcode').val(oData.billing_address.postcode);
		$('#address_data__billing_data__companyname').val(oData.billing_address.companyname);
		$('#address_data__billing_data__nip').val(oData.billing_address.nip);
		$('#address_data__billing_data__email').val(oData.email);
		$('#address_data__billing_data__phone').val(oData.phone);

		$('#address_data__shipping_data__firstname').val(oData.delivery_address.firstname);
		$('#address_data__shipping_data__surname').val(oData.delivery_address.surname);
		$('#address_data__shipping_data__street').val(oData.delivery_address.street);
		$('#address_data__shipping_data__streetno').val(oData.delivery_address.streetno);
		$('#address_data__shipping_data__placeno').val(oData.delivery_address.placeno);
		$('#address_data__shipping_data__place').val(oData.delivery_address.placename);
		$('#address_data__shipping_data__postcode').val(oData.delivery_address.postcode);
		$('#address_data__shipping_data__companyname').val(oData.delivery_address.companyname);
		$('#address_data__shipping_data__nip').val(oData.delivery_address.nip);
		$('#address_data__shipping_data__email').val(oData.email);
		$('#address_data__shipping_data__phone').val(oData.phone);

		gThis.m_bFirstLoad = false;
	};

	gThis._OnSelect = function(gDg, sId) {
		gThis.SetValue(sId);
		gThis.m_oOptions.fLoadClientData({
			client: sId
		}, GCallback(gThis._OnDataLoaded));
	};

	gThis._OnDeselect = function(gDg, sId) {

	};

	gThis._OnChange = function(eEvent) {
		if (gThis.m_bRepeatable) {
			gThis.m_jField.empty();
		}
		var aoData = [];
		for (var i in eEvent.rows) {
			aoData.push({
				id: eEvent.rows[i].idproduct,
				quantity: eEvent.rows[i].quantity,
				variant: eEvent.rows[i].variant
			});
		}
		gThis.SetValue(aoData);
	};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jField = $('<input type="hidden" name="' + gThis.GetName() + '"/>');
		gThis.m_jDatagrid = $('<div/>');
		gThis.m_jNode.append(gThis.m_jField);
		gThis.m_jDatagridWrapper = $('<div class="existing-users"/>');
		gThis.m_jDatagridWrapper.append(gThis.m_jDatagrid);
		gThis.m_jNode.append(gThis.m_jDatagridWrapper);
		gThis.m_jDatagridWrapper.addClass(gThis._GetClass('Hidden'));
		gThis.m_jTrigger = $('<p class="' + gThis._GetClass('Trigger') + '"/>');

		var jA = $('<a href="#" id="__select" class="' + gThis._GetClass('Button') + '"/>');
		jA.append('<span><img src="' + gThis._GetImage('AddIcon') + '" alt=""/>' + Translator.trans('client.button.client_select_expand', {}, 'wellcommerce') + '</span>');
		jA.click(GEventHandler(function(eEvent) {
			var jImg = gThis.m_jTrigger.find('a#__select span img');
			if (gThis.m_jDatagridWrapper.hasClass(gThis._GetClass('Hidden'))) {
				gThis.m_jDatagridWrapper.css('display', 'none').removeClass(gThis._GetClass('Hidden'));
			}
			if (!gThis.m_jDatagridWrapper.get(0).bHidden) {
				gThis.m_gDatagrid.LoadData();
				gThis.m_jDatagridWrapper.get(0).bHidden = true;
				gThis.m_jTrigger.find('a#__select span').empty().append(jImg).append(Translator.trans('client.button.client_select_collapse', {}, 'wellcommerce'));
			}
			else {
				gThis.m_jDatagridWrapper.get(0).bHidden = false;
				gThis.m_jTrigger.find('a#__select span').empty().append(jImg).append(Translator.trans('client.button.client_select_expand', {}, 'wellcommerce'));
			}
			gThis.m_jDatagridWrapper.slideToggle(250);
			return false;
		}));

		var jAdd = $('<a style="margin-left: 20px;" href="#" class="' + gThis._GetClass('Button') + '"/>');
		jAdd.append('<span>' + GForm.Language.client_select_add_client + '</span>');
		jAdd.click(GEventHandler(function(eEvent) {
			if(gThis.m_jDatagridWrapper.get(0).bHidden){
				jA.click();
			}
			window.open(GCore.sAdminUrl + 'client/add');
		}));

		gThis.m_jTrigger.append(jA);
		gThis.m_jTrigger.append(jAdd);
		gThis.m_jNode.append(gThis.m_jTrigger);
		var jColumns = $('<div class="layout-two-columns"/>');
		var jLeftColumn = $('<div class="column"/>');
		jColumns.append(jLeftColumn);
		gThis.m_jClientName = $('<span class="constant"/>');
		jLeftColumn.append($('<div class="field-text"/>').append('<label>' + Translator.trans('client.label.client_name', {}, 'wellcommerce') + '</label>').append($('<span class="repetition"/>').append(gThis.m_jClientName)));
		gThis.m_jClientEmail = $('<span class="constant"/>');
		jLeftColumn.append($('<div class="field-text"/>').append('<label>' + Translator.trans('client.label.email', {}, 'wellcommerce') + '</label>').append($('<span class="repetition"/>').append(gThis.m_jClientEmail)));
		gThis.m_jClientGroup = $('<span class="constant"/>');
		jLeftColumn.append($('<div class="field-text"/>').append('<label>' + Translator.trans('client.label.group_name', {}, 'wellcommerce') + '</label>').append($('<span class="repetition"/>').append(gThis.m_jClientGroup)));
		gThis.m_jNode.append(jColumns);
	};

	gThis.OnReset = function() {
		gThis.m_bFirstLoad = true;
	};

	gThis.Populate = function(mValue) {
		if (!gThis.m_gDatagrid) {
			return;
		}
		if (gThis.m_bRepeatable) {
			gThis.m_jField.empty();
			gThis.m_oOptions.asDefaults = GCore.Duplicate(mValue);
		}
		else {
			gThis.m_oOptions.sDefault = mValue;
		}
		gThis._UpdateDatagridSelection(mValue);
		gThis.SetValue(mValue);
		if (gThis.m_bRepeatable) {
			gThis.m_gSelectedDatagrid.LoadData();
		}
	};

	gThis._UpdateDatagridSelection = function(mValue) {
		if (!(mValue instanceof Array)) {
			if ((mValue == undefined) || !mValue.length) {
				mValue = [];
			}
			else {
				mValue = [mValue];
			}
		}
		gThis.m_gDatagrid.m_asSelected = [];
		for (var i = 0; i < mValue.length; i++) {
			gThis.m_gDatagrid.m_asSelected[i] = mValue[i];
		}
		if (gThis.m_bShown) {
			gThis.m_gDatagrid.LoadData();
		}
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis._InitDatagrid();
			if (gThis.m_bRepeatable) {
				gThis._InitSelectedDatagrid();
				gThis.Populate(gThis.m_oOptions.asDefaults);
			}
			else {
				gThis.Populate(gThis.m_oOptions.sDefault);
			}
			gThis.m_bShown = true;
			if (gThis.GetValue()) {
				// gThis.m_oOptions.fLoadClientData({
				// 	client: gThis.GetValue()
				// }, GCallback(gThis._OnDataLoaded));
			}
		}
	};

	gThis._InitColumns = function() {

		var column_id = new GF_Datagrid_Column({
			id: 'id',
			caption: Translator.trans('client.label.id', {}, 'wellcommerce'),
			appearance: {
				width: 90
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_first_name = new GF_Datagrid_Column({
			id: 'firstName',
			caption: Translator.trans('client.label.first_name', {}, 'wellcommerce'),
			appearance: {
				width: 200
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_last_name = new GF_Datagrid_Column({
			id: 'lastName',
			caption: Translator.trans('client.label.last_name', {}, 'wellcommerce'),
			appearance: {
				width: 200
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_email = new GF_Datagrid_Column({
			id: 'email',
			caption: Translator.trans('client.label.email', {}, 'wellcommerce'),
			appearance: {
				width: 180,
				visible: false
			}
		});

		var column_phone = new GF_Datagrid_Column({
			id: 'phone',
			caption: Translator.trans('client.label.phone', {}, 'wellcommerce'),
			appearance: {
				width: 110
			}
		});

		var column_group_name = new GF_Datagrid_Column({
			id: 'groupName',
			caption: Translator.trans('client.label.group_name', {}, 'wellcommerce'),
		});

		return [
			column_id,
			column_last_name,
			column_first_name,
			column_group_name,
			column_email,
			column_phone
		];

	};

	gThis._InitDatagrid = function() {
		var aoColumns = gThis._InitColumns();

        var oOptions = {
			id: gThis.GetId(),
			mechanics: {
				rows_per_page: 15,
				key: 'id',
				only_one_selected: !gThis.m_bRepeatable,
				persistent: false
			},
			event_handlers: {
                load: function(oRequest){
                    gThis.m_gDatagrid.MakeRequest(Routing.generate(gThis.m_oOptions.sLoadClientsRoute), oRequest, GF_Datagrid.ProcessIncomingData);
                },
				select: gThis._OnSelect,
				deselect: gThis._OnDeselect
			},
			columns: aoColumns
    };

    gThis.m_gDatagrid = new GF_Datagrid(gThis.m_jDatagrid, oOptions);

	};

	gThis._Deselect = function(iDg, mId) {
		if (!(mId instanceof Array)) {
			mId = [mId];
		}
		for (var i = 0; i < mId.length; i++) {
			gThis.m_gDatagrid.DeselectRow(mId[i]);
		}
		gThis.m_gSelectedDatagrid.ClearSelection();
		gThis.m_gDatagrid.LoadData();
	};

	gThis._InitSelectedDatagrid = function() {

		gThis.m_gDataProvider = new GF_Datagrid_Data_Provider({
			key: 'id',
			event_handlers: {
				change: gThis._OnChange
			}
		}, []);

		var aoColumns = gThis._InitColumns();

		var gActionDeselect = new GF_Action({
			img: gThis._GetImage('DeselectIcon'),
			caption: GForm.Language.product_select_deselect,
			action: gThis._Deselect
		});

        var oOptions = {
			id: gThis.GetId() + '_selected',
			mechanics: {
				rows_per_page: 15,
				key: 'id',
				persistent: false
			},
			event_handlers: {
				load: function(oRequest, sResponseHandler) {
					if (gThis.m_bFirstLoad) {
						gThis.m_bFirstLoad = false;
						gThis._LoadSelected(oRequest, sResponseHandler);
					}
					else {
						gThis.m_gDataProvider.Load(oRequest, sResponseHandler);
					}
				},
				update_row: function(sId, oRow) {
					gThis.m_gDataProvider.UpdateRow(sId, oRow);
				},
				process: gThis._ProcessSelectedProduct
			},
			columns: aoColumns,
			row_actions: [
				gActionDeselect
			],
			context_actions: [
				gActionDeselect
			],
			group_actions: [
				gActionDeselect
			]
        };

		gThis.m_gSelectedDatagrid = new GF_Datagrid(gThis.m_jSelectedDatagrid, oOptions);

	};

	gThis._LoadSelected = function(oRequest, sResponseHandler) {
		oRequest.where = [{
			column: 'id',
			value: gThis.m_oOptions.asDefaults,
			operator: 'IN'
		}];

        GF_Ajax_Request(Routing.generate(gThis.m_oOptions.sLoadClientsRoute), oRequest, function(eEvent){
            gThis.m_gDataProvider.ChangeData(eEvent.rows);
			gThis.m_gSelectedDatagrid.LoadData();
        });
	};

	gThis.GetAddress = function(sAddress) {
		for (var i in gThis.m_aoAddresses) {
			if (gThis.m_aoAddresses[i]._id == sAddress) {
				return GCore.Duplicate(gThis.m_aoAddresses[i], true);
			}
		}
		return {};
	};

	gThis.AddListener = function(gNode) {
		gThis.m_agListeners.push(gNode);
	};

}, oDefaults);

/*
* DATAGRID SELECT
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-datagrid-select',
		sFieldSpanClass: 'field',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition'
	},
	oImages: {
		sDeselectIcon: 'images/icons/datagrid/delete.png'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	fLoadRecords: GCore.NULL,
	bAdvancedEditor: false
};

var GFormDatagridSelect = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;

	gThis.m_fLoadRecords;
	gThis.m_fProcessRecords;
	gThis.m_jDatagrid;
	gThis.m_jSelectedDatagrid;
	gThis.m_gDatagrid;
	gThis.m_gSelectedDatagrid;
	gThis.m_gDataProvider;
	gThis.m_bFirstLoad = true;

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		if (gThis.m_bRepeatable) {
			if (sRepetition != undefined) {
				return gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '"]').val();
			}
			var aValues = [];
			var jValues = gThis.m_jField.find('input');
			for (var i = 0; i < jValues.length; i++) {
				aValues.push(jValues.eq(i).val());
			}
			return aValues;
		}
		else {
			return gThis.m_jField.val();
		}
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (gThis.m_bRepeatable) {
			for (var i in mValue) {
				gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName(i) + '" value="' + mValue[i] + '"/>');
			}
		}
		else {
			gThis.m_jField.val(mValue).change();
		}
	};

	gThis._OnSelect = function(gDg, sId) {
		if (gThis.m_bRepeatable) {
			var oSelectedRow = gDg.GetRow(sId);
			gThis.m_gDataProvider.AddRow(oSelectedRow);
			gThis.m_gSelectedDatagrid.LoadData();
		}
		else {
			gThis.SetValue(sId);
		}
	};

	gThis._OnDeselect = function(gDg, sId) {
		if (gThis.m_bRepeatable) {
			gThis.m_gDataProvider.DeleteRow(sId);
			gThis.m_gSelectedDatagrid.LoadData();
		}
		else {
			gThis.SetValue('');
		}
	};

	gThis._OnChange = function(eEvent) {
		if (gThis.m_bRepeatable) {
			gThis.m_jField.empty();
		}
		var aoData = [];
		for (var i in eEvent.rows) {
			aoData.push(eEvent.rows[i][gThis.m_oOptions.sKey]);
		}
		gThis.SetValue(aoData);
	};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		if (gThis.m_bRepeatable) {
			gThis.m_jField = $('<div/>');
			gThis.m_jDatagrid = $('<div/>');
			jLabel = $('<label/>');
			jLabel.text(GForm.Language.datagrid_select_selected + ':');
			gThis.m_jSelectedDatagrid = $('<div/>');
			gThis.m_jNode.append(gThis.m_jDatagrid);
			gThis.m_jNode.append(jLabel);
			gThis.m_jNode.append(gThis.m_jSelectedDatagrid);
		}
		else {
			gThis.m_jField = $('<input type="hidden" name="' + gThis.GetName() + '"/>');
			gThis.m_jDatagrid = $('<div/>');
			gThis.m_jNode.append(gThis.m_jDatagrid);
		}
		gThis.m_jNode.append(gThis.m_jField);
	};

	gThis.OnReset = function() {
		gThis.m_bFirstLoad = true;
	};

	gThis.Populate = function(mValue) {
		if (!gThis.m_gDatagrid) {
			return;
		}
		if (gThis.m_bRepeatable) {
			gThis.m_jField.empty();
			gThis.m_oOptions.asDefaults = GCore.Duplicate(mValue);
		}
		else {
			gThis.m_oOptions.sDefault = mValue;
		}
		gThis._UpdateDatagridSelection(mValue);
		gThis.SetValue(mValue);
		if (gThis.m_bRepeatable) {
			gThis.m_gSelectedDatagrid.LoadData();
		}
	};

	gThis._UpdateDatagridSelection = function(mValue) {
		if (!(mValue instanceof Array)) {
			if ((mValue == undefined) || !mValue.length) {
				mValue = [];
			}
			else {
				mValue = [mValue];
			}
		}
		gThis.m_gDatagrid.m_asSelected = [];
		for (var i = 0; i < mValue.length; i++) {
			gThis.m_gDatagrid.m_asSelected[i] = mValue[i];
		}
		if (gThis.m_bShown) {
			gThis.m_gDatagrid.LoadData();
		}
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis._InitDatagrid();
			if (gThis.m_bRepeatable) {
				gThis._InitSelectedDatagrid();
				gThis.Populate(gThis.m_oOptions.asDefaults);
			}
			else {
				gThis.Populate(gThis.m_oOptions.sDefault);
			}
			gThis.m_bShown = true;
		}
	};

	gThis._ProcessRecord = function(oRecord) {
		return oRecord;
	};

	gThis._ProcessSelectedRecord = function(oRecord) {
		oRecord = gThis.m_fProcessRecords(oRecord);
		return oRecord;
	};

	gThis._InitOptions = function(aoOptions) {
		var agOptions = [];
		for (var i in aoOptions) {
			agOptions.push(new GF_Datagrid_Column(aoOptions[i]));
		}
		return agOptions;
	};

	gThis._InitDatagrid = function() {

		gThis.m_fProcessRecords = gThis._ProcessRecord;
		gThis.m_fLoadRecords = gThis.m_oOptions.fLoadRecords;

		var aoColumns = gThis._InitOptions(gThis.m_oOptions.aoColumns);

    var oOptions = {
			id: gThis.GetId(),
			mechanics: {
				rows_per_page: 15,
				key: gThis.m_oOptions.sKey,
				only_one_selected: !gThis.m_bRepeatable,
				persistent: false
			},
			event_handlers: {
				load: gThis.m_fLoadRecords,
				process: gThis.m_fProcessRecords,
				select: gThis._OnSelect,
				deselect: gThis._OnDeselect//,
				//selection_changed: gThis._OnChange
			},
			columns: aoColumns
    };

		try {
			gThis.m_gDatagrid = new GF_Datagrid(gThis.m_jDatagrid, oOptions);
		}
		catch (xException) {
			GException.Handle(xException);
		}

	};

	gThis._Deselect = function(iDg, mId) {
		if (!(mId instanceof Array)) {
			mId = [mId];
		}
		for (var i = 0; i < mId.length; i++) {
			gThis.m_gDatagrid.DeselectRow(mId[i]);
		}
		gThis.m_gSelectedDatagrid.ClearSelection();
		gThis.m_gDatagrid.LoadData();
	};

	gThis._InitSelectedDatagrid = function() {

		gThis.m_gDataProvider = new GF_Datagrid_Data_Provider({
			key: gThis.m_oOptions.sKey,
			event_handlers: {
				change: gThis._OnChange
			}
		}, []);

		if (gThis.m_oOptions.aoSelectedColumns == undefined) {
			var aoColumns = gThis._InitOptions(gThis.m_oOptions.aoColumns);
		}
		else {
			var aoColumns = gThis._InitOptions(gThis.m_oOptions.aoSelectedColumns);
		}

		var gActionDeselect = new GF_Action({
			img: gThis._GetImage('DeselectIcon'),
			caption: GForm.Language.datagrid_select_deselect,
			action: gThis._Deselect
		});

    var oOptions = {
			id: gThis.GetId() + '_selected',
			mechanics: {
				rows_per_page: 500,
				key: gThis.m_oOptions.sKey,
				persistent: false
			},
			event_handlers: {
				load: function(oRequest, sResponseHandler) {
					if (gThis.m_bFirstLoad) {
						gThis.m_bFirstLoad = false;
						gThis._LoadSelected(oRequest, sResponseHandler);
					}
					else {
						gThis.m_gDataProvider.Load(oRequest, sResponseHandler);
					}
				},
				update_row: function(sId, oRow) {
					gThis.m_gDataProvider.UpdateRow(sId, oRow);
				},
				process: gThis._ProcessSelectedRecord
			},
			columns: aoColumns,
			row_actions: [
				gActionDeselect
			],
			context_actions: [
				gActionDeselect
			],
			group_actions: [
				gActionDeselect
			]
    };

		try {
			gThis.m_gSelectedDatagrid = new GF_Datagrid(gThis.m_jSelectedDatagrid, oOptions);
		}
		catch (xException) {
			GException.Handle(xException);
		}

	};

	gThis._LoadSelected = function(oRequest, sResponseHandler) {
		oRequest.where = [{
			column: gThis.m_oOptions.sKey,
			value: gThis.m_oOptions.asDefaults,
			operator: 'IN'
		}];
		gThis.m_fLoadRecords(oRequest, GCallback(function(eEvent) {
			gThis.m_gDataProvider.ChangeData(eEvent.rows);
			gThis.m_gSelectedDatagrid.LoadData();
		}));
	};

}, oDefaults);
/*
* DATETIME
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-datetime',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition'
	},
	oImages: {
		sCalendarIcon: 'images/icons/buttons/calendar.png'
	},
	sFieldType: 'text',
	sDefault: '',
	aoRules: [],
	sComment: '',
	sMinDate: null,
	sMaxDate: null
};

var GFormDateTime = GCore.ExtendClass(GFormDate, function() {

	var gThis = this;

	gThis.m_jTrigger;

	gThis._Constructor = function() {
		gThis.m_jTrigger = $('<img style="width: 16px; height: 16px;" src="' + gThis._GetImage('CalendarIcon') + '" alt=""/>');
		gThis.m_oOptions.sSuffix = gThis.m_jTrigger.css('cursor', 'pointer');
	};

	gThis._AddField = function(sId) {
		var jField = $('<input type="' + gThis.m_oOptions.sFieldType + '" name="' + gThis.GetName(sId) + '[d]" id="' + gThis.GetId(sId) + '_d"/>');
		if ((gThis.m_jField instanceof $) && gThis.m_jField.length) {
			gThis.m_jField = gThis.m_jField.add(jField);
		}
		else {
			gThis.m_jField = jField;
		}
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jSuffix.append(' ' + GForm.Language.datetime_hour);
			jRepetitionNode.append(jSuffix);
		}

		jField = $('<select name="' + gThis.GetName(sId) + '[h]" id="' + gThis.GetId(sId) + '_h"/>');
		for (var i = 0; i < 24; i++) {
			jField.append('<option value="' + i  + '">' + ((i < 10) ? '0' + i : i) + '</option>');
		}
		gThis.m_jField = gThis.m_jField.add(jField);
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));

		jField = $('<select name="' + gThis.GetName(sId) + '[m]" id="' + gThis.GetId(sId) + '_m"/>');
		for (var i = 0; i < 60; i++) {
			jField.append('<option value="' + i  + '">' + ((i < 10) ? '0' + i : i) + '</option>');
		}
		gThis.m_jField = gThis.m_jField.add(jField);
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));

		return jRepetitionNode;
	};

	gThis.OnShow = function() {
		if (gThis.m_bShown) {
			return;
		}
		gThis.m_bShown = true;
		gThis.m_jField.filter('input').datepicker({
			minDate: gThis.m_oOptions.sMinDate,
			maxDate: gThis.m_oOptions.sMaxDate
		});
		var jField = gThis.m_jField.filter('select');
		jField.focus(gThis.OnFocus);
		jField.blur(gThis.OnBlur);
		jField.each(function() {
			$(this).change(GEventHandler(function(eEvent) {
				gThis.Validate(false, this.sRepetition);
			}));
		});
		jField.keydown(function(eEvent) {
			var dSelect = this;
			setTimeout(function() {
				dSelect.Update();
			}, 50);
			return true;
		});
	};

	gThis._InitializeEvents = function() {
		gThis.m_jTrigger.click(function() {
			gThis.m_jField.filter('input').datepicker('show');
		});
		gThis.m_jField.filter('select').GSelect();
	};

	gThis.SetValue = function(mValue) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (mValue != undefined) {
			gThis.m_jField.filter('input[name$="[d]"]').val(mValue.d);
			gThis.m_jField.filter('select[name$="[h]"]').val(mValue.h);
			gThis.m_jField.filter('select[name$="[m]"]').val(mValue.m);
		}
	};

}, oDefaults);
/*
* DOWNLOADER
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-image',
		sFieldSpanClass: 'field',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sThumbClass: 'thumb',
		sNameClass: 'name',
		sSelectedTableClass: 'selected',
		sAddFilesClass: 'add-pictures',
		sQueueClass: 'upload-queue',
		sProgressClass: 'progress',
		sProgressBarClass: 'progress-bar',
		sProgressBarIndicatorClass: 'indicator',
		sUploadErrorClass: 'upload-error',
		sUploadSuccessClass: 'upload-success'
	},
	oImages: {
		sChooseIcon: 'images/icons/filetypes/directory.png',
		sDeleteIcon: 'images/icons/datagrid/delete.png',
		sUploadButton: 'images/buttons/add-pictures.png'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	sUploadUrl: '',
	sSessionId: '',
	sSessionName: '',
	asFileTypes: [],
	sFileTypesDescription: '',
	fDeleteHandler: GCore.NULL,
	fLoadFiles: GCore.NULL,
	sSwfUploadUrl: '_data_panel/swfupload.swf',
	iWidth: 131,
	iHeight: 34,
	iMaxFileSize: 100 * 1024,	// kB
	sMainId: 0
};

var GFormDownloader = GCore.ExtendClass(GFormFile, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_jFilesDatagrid;
	gThis.m_gFilesDatagrid;
	gThis.m_jSelectedFiles;
	gThis.m_jSwfUpload;
	gThis.m_jQueue;
	gThis.m_iUploadsInProgress = 0;
	gThis.m_iLockId = -1;
	gThis.m_bLoadedDefaults = false;
	gThis.m_jUnmodified;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jSwfUpload = $('<div class="' + gThis._GetClass('AddFiles') + '"/>').append('<span id="' + gThis.GetId() + '__upload"/>');
		gThis.m_jNode.append(gThis.m_jSwfUpload);
		gThis.m_jChooseButton = $('<a href="#" class="button expand"><span><img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GForm.Language.localfiles_select + '</span></a>');
		gThis.m_jNode.append($('<span class="browse-pictures" style="float: right;margin-right: 5px;"/>').append(gThis.m_jChooseButton));
		gThis.m_jQueue = $('<ul class="' + gThis._GetClass('Queue') + '"/>');
		gThis.m_jNode.append(gThis.m_jQueue);
		gThis.m_jFilesDatagrid = $('<div/>').css('display', 'none');
		gThis.m_jNode.append(gThis.m_jFilesDatagrid);
		if (gThis.m_bRepeatable) {
			var jTable = $('<table class="' + gThis._GetClass('SelectedTable') + '" cellspacing="0"/>');
			var jThead = $('<thead/>');
			jThead.append('<th>' + GForm.Language.file_selector_selected_image + '</th>');
			jThead.append('<th>' + GForm.Language.file_selector_photo_cancel + '</th>');
			gThis.m_jSelectedFiles = $('<tbody/>');
			jTable.append(jThead);
			jTable.append(gThis.m_jSelectedFiles);
			gThis.m_jNode.append(jTable);
			gThis.m_jField = $('<div/>');
		}
		else {
			gThis.m_jSelectedFiles = $('<div class="' + gThis._GetClass('SelectedTable') + '"/>');
			gThis.m_jNode.append(gThis.m_jSelectedFiles);
			gThis.m_jField = $('<input type="hidden" name="' + gThis.GetName() + '[0]"/>');
		}
		gThis.m_jNode.append(gThis.m_jField);
		gThis.m_jUnmodified = $('<input type="hidden" name="' + gThis.GetName() + '[unmodified]" value="1"/>');
		gThis.m_jNode.append(gThis.m_jUnmodified);
	};

	gThis._InitializeEvents = function() {
		gThis.m_jChooseButton.click(gThis._OnChoose);
	};

	gThis._OnChoose = GEventHandler(function(eEvent) {
		gThis.m_jFilesDatagrid.slideToggle(250);
		gThis.m_jChooseButton.toggleClass('expand');
		if(gThis.m_jChooseButton.hasClass('expand')){
			gThis.m_jChooseButton.find('span').html('<img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GForm.Language.localfile_select);
		}else{
			gThis.m_jChooseButton.find('span').html('<img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GForm.Language.localfile_unselect);
		}
		return false;
	});

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		if (gThis.m_bRepeatable) {
			if (sRepetition != undefined) {
				return gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '"]').val();
			}
			var aValues = [];
			var jValues = gThis.m_jField.find('input');
			for (var i = 0; i < jValues.length; i++) {
				aValues.push(jValues.eq(i).val());
			}
			return aValues;
		}
		else {
			return gThis.m_jField.val();
		}
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (gThis.m_bRepeatable) {
			for (var i in mValue) {
				gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName(i) + '" value="' + mValue[i] + '"/>');
			}
		}
		else {
			gThis.m_jField.val(mValue);
		}
	};

	gThis.Populate = function(mValue) {
		if (!gThis.m_gFilesDatagrid) {
			return;
		}
		if (gThis.m_bRepeatable) {
			gThis.m_jField.empty();
			gThis.m_oOptions.asDefaults = GCore.Duplicate(mValue);
		}
		else {
			gThis.m_oOptions.sDefault = mValue;
		}
		gThis._UpdateDatagridSelection(mValue);
		gThis.SetValue(mValue);
	};

	gThis._UpdateDatagridSelection = function(mValue) {
		if (!(mValue instanceof Array)) {
			if ((mValue == undefined) || !mValue.length) {
				mValue = [];
			}
			else {
				mValue = [mValue];
			}
		}
		gThis.m_gFilesDatagrid.m_asSelected = [];
		for (var i = 0; i < mValue.length; i++) {
			gThis.m_gFilesDatagrid.m_asSelected[i] = mValue[i];
		}
		if (gThis.m_bShown) {
			gThis.m_gFilesDatagrid.LoadData();
		}
	};

	gThis._OnSelect = function(gDg, sId) {
		var oFile = gDg.GetRow(sId);
		gThis._AddImage(sId, oFile);
	};

	gThis._AddImage = function(sId, oFile) {
		if (gThis.m_bRepeatable) {
			var jFileTr = $('<tr class="file__' + sId + '"/>');
			jFileTr.append('<th scope="row"><span class="' + gThis._GetClass('Name') + '">' + oFile.filename + '</span></th>');
			var jRemove = $('<a href="#"/>');
			jRemove.click(function() {
				var sId = $(this).closest('tr').attr('class').substr(6);
				gThis.m_gFilesDatagrid.DeselectRow(sId);
				return false;
			});
			jRemove.append('<img src="' + gThis._GetImage('DeleteIcon') + '" alt="' + GForm.Language.file_selector_deselect + '" title="' + GForm.Language.file_selector_deselect + '"/>');
			jFileTr.append($('<td></td>').append(jRemove));
			gThis.m_jSelectedFiles.append(jFileTr);
		}
		else {
			gThis.m_jSelectedFiles.empty().append('<h4>' + GForm.Language.file_selector_selected_image + '</h4>').append('<img src="' + oFile.thumb + '" alt=""/>');
		}
	};

	gThis._OnDeselect = function(gDg, sId) {
		gThis._RemoveImage(sId);
	};

	gThis._RemoveImage = function(sId, oFile) {
		if (gThis.m_bRepeatable) {
			var bCheck = false;
			var jFileTr = gThis.m_jSelectedFiles.find('tr.file__' + sId);
			if (jFileTr.find('input[name="' + gThis.GetName() + '[main]"]:checked').length) {
				bCheck = true;
			}
			jFileTr.remove();
			if (bCheck) {
				gThis.m_jSelectedFiles.find('tr:first input[name="' + gThis.GetName() + '[main]"]').click();
			}
		}
		else {
			gThis.m_jSelectedFiles.empty();
		}
	};

	gThis._OnChange = function(iDg, asIds) {
		if (gThis.m_bRepeatable) {
			gThis.m_jField.empty();
		}
		gThis.SetValue(asIds);
	};

	gThis.OnReset = function() {
		gThis.m_bLoadedDefaults = false;
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis._InitFilesDatagrid();
			gThis._InitUploader();
			if (gThis.m_bRepeatable) {
				gThis.Populate(gThis.m_oOptions.asDefaults);
			}
			else {
				gThis.Populate(gThis.m_oOptions.sDefault);
			}
			gThis.m_bShown = true;
			gThis.m_jUnmodified.val('0');
		}
	};

	gThis._ProcessFile = function(oRow) {
		if (oRow.thumb != '') {
			oRow.thumbpreview = '<a href="' + oRow.thumb + '" class="show-thumb"><img src="' + GCore.DESIGN_PATH + 'images/icons/datagrid/details.png" style="vertical-align: middle;" alt="' + GForm.Language.file_selector_show_thumb + '"/></a>';
		}
		return oRow;
	};

	gThis._InitUploader = function() {
		var sFileTypes = '';
		for (var i = 0; i < gThis.m_oOptions.asFileTypes.length; i++) {
			sFileTypes += '; *.' + gThis.m_oOptions.asFileTypes[i];
		}
		sFileTypes = sFileTypes.substr(2);
		var oPostParams = {};
		oPostParams[gThis.m_oOptions.sSessionName] = gThis.m_oOptions.sSessionId;
		gThis.m_jSwfUpload.swfupload({
			upload_url: gThis.m_oOptions.sUploadUrl,
			file_size_limit: gThis.m_oOptions.iMaxFileSize,
			file_types: sFileTypes,
			file_types_description: gThis.m_oOptions.sFileTypesDescription,
			file_upload_limit: 0,
			file_queue_limit: 0,
			button_image_url: gThis._GetImage('UploadButton'),
			button_placeholder_id: gThis.GetId() + '__upload',
			button_width: gThis.m_oOptions.iWidth,
			button_height: gThis.m_oOptions.iHeight,
			button_window_mode: SWFUpload.WINDOW_MODE.TRANSPARENT,
			flash_url: GCore.DESIGN_PATH + gThis.m_oOptions.sSwfUploadUrl,
			post_params: oPostParams
		});
		gThis.m_jSwfUpload.bind("fileQueued", gThis.OnFileQueued);
		gThis.m_jSwfUpload.bind("uploadComplete", gThis.OnUploadComplete);
		gThis.m_jSwfUpload.bind("uploadSuccess", gThis.OnUploadSuccess);
		gThis.m_jSwfUpload.bind("uploadProgress", gThis.OnUploadProgress);
		gThis.m_jSwfUpload.bind("uploadError", gThis.OnUploadError);
	};

	gThis.OnFileQueued = function(eEvent, oFile) {
		if (gThis.m_iUploadsInProgress++ == 0) {
			gThis.m_iLockId = gThis.m_gForm.Lock(GForm.Language.file_selector_form_blocked, GForm.Language.file_selector_form_blocked_description);
		}
		gThis.m_jSwfUpload.swfupload("startUpload");
		var jLi = $('<li class="upload__' + oFile.index + '"/>');
		jLi.append('<h4>' + oFile.name + '</h4>');
		jLi.append('<p class="' + gThis._GetClass('Progress') + '"/>');
		jLi.append('<div class="' + gThis._GetClass('ProgressBar') + '"><div class="' + gThis._GetClass('ProgressBarIndicator') + '"></div>');
		gThis.m_jQueue.append(jLi);
	};

	gThis.OnDelete = function() {
		gThis.m_jSwfUpload.swfupload('cancelUpload', sFid);
	};

	gThis.OnUploadProgress = function(eEvent, oFile, iCompleted, iTotal) {
		var jLi = gThis.m_jQueue.find('.upload__' + oFile.index);
		var iPercentage = Math.round(iCompleted / iTotal * 100);
		jLi.find('.' + gThis._GetClass('Progress')).text(iPercentage + '%: ' + Math.ceil(iCompleted / 1024) + 'kB / ' + Math.ceil(iTotal / 1024) + 'kB');
		jLi.find('.' + gThis._GetClass('ProgressBarIndicator')).css('width', (iCompleted / iTotal * 100) + '%');
	};

	gThis.OnUploadError = function(eEvent, oFile, iErrorCode, sMessage) {
		var jLi = gThis.m_jQueue.find('.upload__' + oFile.index);
		jLi.addClass(gThis._GetClass('UploadError'));
		jLi.find('.' + gThis._GetClass('Progress')).text(GForm.Language.file_selector_upload_error);
		jLi.find('.' + gThis._GetClass('ProgressBarIndicator')).css('width', '100%');
		GAlert(GForm.Language.file_selector_upload_error, sMessage);
		jLi.delay(2000).fadeOut(250, function() {
			$(this).remove();
		});
	};

	gThis.OnUploadSuccess = function(eEvent, oFile, sServerData, sResponse) {
		if (sServerData.substr(0, 11) != 'response = ') {
			gThis.OnUploadError(eEvent, oFile, 0, sServerData);
			return;
		}
		var jLi = gThis.m_jQueue.find('.upload__' + oFile.index);
		jLi.addClass(gThis._GetClass('UploadSuccess'));
		jLi.find('.' + gThis._GetClass('Progress')).text(GForm.Language.file_selector_upload_success);
		jLi.find('.' + gThis._GetClass('ProgressBarIndicator')).css('width', '100%');
		eval("var oResponse = " + sServerData.substr(11) + ";");
		if (!oResponse.sId) {
			gThis.OnUploadError(eEvent, oFile, 0, GForm.Language.file_selector_processing_error);
			return;
		}
		if ((gThis.m_oOptions.oRepeat.iMax == 1) || !(gThis.m_gFilesDatagrid.m_asSelected instanceof Array)) {
			gThis.m_gFilesDatagrid.m_asSelected = [];
		}
		gThis.m_gFilesDatagrid.m_asSelected.push(oResponse.sId);
		gThis._OnChange(0, gThis.m_gFilesDatagrid.m_asSelected);
		gThis._AddImage(oResponse.sId, {
			idfile: oResponse.sId,
			filename: oResponse.sFilename,
			thumb: oResponse.sThumb,
			filetype: oResponse.sFileType,
			fileextension: oResponse.sExtension
		});
		gThis.m_gFilesDatagrid.LoadData();
		jLi.delay(2000).fadeOut(250, function() {
			$(this).remove();
		});
	};

	gThis.OnUploadComplete = function(eEvent, oFile) {
		if (--gThis.m_iUploadsInProgress <= 0) {
			gThis.m_iUploadsInProgress = 0;
			gThis.m_gForm.Unlock(gThis.m_iLockId);
		}
	};

	gThis._InitColumns = function() {

	  var column_id = new GF_Datagrid_Column({
			id: 'idfile',
			caption: GForm.Language.file_selector_id,
			sorting: {
				default_order: GF_Datagrid.SORT_DIR_DESC
			},
			appearance: {
				width: 90,
				visible: false
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_filename = new GF_Datagrid_Column({
			id: 'filename',
			caption: GForm.Language.file_selector_filename,
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}

		});

		var column_fileextension = new GF_Datagrid_Column({
			id: 'fileextension',
			appearance: {
				width: 110,
			},
			caption: GForm.Language.file_selector_extension,
		});

		return [
			column_id,
			column_filename,
			column_fileextension,
		];

	};

	gThis._LoadDefaults = function(oRequest) {
		gThis.m_jSelectedFiles.empty();
		if (gThis.m_bRepeatable) {
			oRequest.where = [{
				column: 'idfile',
				value: gThis.m_oOptions.asDefaults,
				operator: 'IN'
			}];
		}
		else {
			oRequest.where = [{
				column: 'idfile',
				value: gThis.m_oOptions.sDefault,
				operator: 'IN'
			}];
		}
		oRequest.starting_from = 0;
		gThis.m_oOptions.fLoadFiles(oRequest, GCallback(gThis._DefaultsLoaded));
	};

	gThis._DefaultsLoaded = function(oData) {
		for (var i = 0; i < oData.rows.length; i++) {
			gThis._AddImage(oData.rows[i].idfile, oData.rows[i]);
		}
		gThis.m_bLoadedDefaults = true;
	};

	gThis._OnDataLoaded = function(dDg) {
		dDg.m_jBody.find('.show-thumb').mouseenter(GTooltip.ShowThumbForThis).mouseleave(GTooltip.HideThumbForThis);
	};

	gThis._InitFilesDatagrid = function() {

		var aoColumns = gThis._InitColumns();

    var oOptions = {
			id: gThis.GetId(),
			mechanics: {
				rows_per_page: 15,
				key: 'idfile',
				no_column_modification: true,
				only_one_selected: !gThis.m_bRepeatable,
				persistent: false
			},
			event_handlers: {
				load: function(oRequest, sResponseHandler) {
					if (!gThis.m_bLoadedDefaults) {
						gThis._LoadDefaults(GCore.Duplicate(true, oRequest));
						gThis.m_bLoadedDefaults = true;
					}
					gThis.m_oOptions.fLoadFiles(oRequest, sResponseHandler);
				},
				loaded: gThis._OnDataLoaded,
				process: gThis._ProcessFile,
				select: gThis._OnSelect,
				deselect: gThis._OnDeselect,
				selection_changed: gThis._OnChange
			},
			columns: aoColumns
    };

		gThis.m_gFilesDatagrid = new GF_Datagrid(gThis.m_jFilesDatagrid, oOptions);
	};

}, oDefaults);

/*
* IMAGE
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-image',
		sFieldSpanClass: 'field',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sThumbClass: 'thumb',
		sNameClass: 'name',
		sSelectedTableClass: 'selected',
		sAddFilesClass: 'add-pictures',
		sQueueClass: 'upload-queue',
		sProgressClass: 'progress',
		sProgressBarClass: 'progress-bar',
		sProgressBarIndicatorClass: 'indicator',
		sUploadErrorClass: 'upload-error',
		sUploadSuccessClass: 'upload-success'
	},
	oImages: {
		sChooseIcon: 'images/icons/filetypes/directory.png',
		sDeleteIcon: 'images/icons/datagrid/delete.png',
		sUploadButton: 'images/buttons/add-pictures.png'
	},
	aoOptions: [],
	sDefault: '',
	asDefaults: [],
	aoRules: [],
	sComment: '',
	sUploadUrl: '',
	sSessionId: '',
	sSessionName: '',
	asFileTypes: [],
	sFileTypesDescription: '',
	fDeleteHandler: GCore.NULL,
	fLoadFiles: GCore.NULL,
	sSwfUploadUrl: '_js_libs/swfupload.swf',
	iLimit: 100,
	iWidth: 131,
	iHeight: 34,
	iMaxFileSize: 100 * 1024
};

var GFormImage = GCore.ExtendClass(GFormFile, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_jFilesDatagrid;
	gThis.m_gFilesDatagrid;
	gThis.m_jSelectedFiles;
	gThis.m_jSwfUpload;
	gThis.m_jQueue;
	gThis.m_iUploadsInProgress = 0;
	gThis.m_iLockId = -1;
	gThis.m_bLoadedDefaults = false;
	gThis.m_jUnmodified;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jSwfUpload = $('<div class="' + gThis._GetClass('AddFiles') + '"><a href="#" class="button expand"><span id="' + gThis.GetId() + '__upload"><img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GTranslation('media.button.add_from_disk') + '</span></a></div>');
		gThis.m_jNode.append(gThis.m_jSwfUpload);
		gThis.m_jChooseButton = $('<a href="#" class="button expand"><span><img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GTranslation('media.button.select_from_library') + '</span></a>');
		gThis.m_jNode.append($('<span class="browse-pictures" style="float: right;margin-right: 5px;"/>').append(gThis.m_jChooseButton));
		gThis.m_jQueue = $('<ul class="' + gThis._GetClass('Queue') + '" id="' + gThis.GetId() + '__queue"/>');
		gThis.m_jNode.append(gThis.m_jQueue);
		gThis.m_jFilesDatagrid = $('<div/>').css('display', 'none');
		gThis.m_jNode.append(gThis.m_jFilesDatagrid);
		if (gThis.m_bRepeatable) {
			var jTable = $('<table class="' + gThis._GetClass('SelectedTable') + '" cellspacing="0"/>');
			var jThead = $('<thead/>');
			jThead.append('<th>' + GForm.Language.file_selector_photo + '</th>');
			jThead.append('<th>' + GForm.Language.file_selector_photo_main + '</th>');
			jThead.append('<th>' + GForm.Language.file_selector_photo_cancel + '</th>');
			gThis.m_jSelectedFiles = $('<tbody/>');
			jTable.append(jThead);
			jTable.append(gThis.m_jSelectedFiles);
			gThis.m_jNode.append(jTable);
			gThis.m_jField = $('<div/>');
		}
		else {
			gThis.m_jSelectedFiles = $('<div class="' + gThis._GetClass('SelectedTable') + '"/>');
			gThis.m_jNode.append(gThis.m_jSelectedFiles);
			gThis.m_jField = $('<input type="hidden" name="' + gThis.GetName() + '[0]"/>');
		}
		gThis.m_jNode.append(gThis.m_jField);
		gThis.m_jUnmodified = $('<input type="hidden" name="' + gThis.GetName() + '[unmodified]" value="1"/>');
		gThis.m_jNode.append(gThis.m_jUnmodified);
	};

	gThis.GetValue = function(sRepetition) {

		if (gThis.m_jField == undefined) {
			return '';
		}
		if (gThis.m_bRepeatable) {
			if (sRepetition != undefined) {
				return gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '"]').val();
			}
			var aValues = [];
			var jValues = gThis.m_jField.find('input');
			for (var i = 0; i < jValues.length; i++) {
				aValues.push(jValues.eq(i).val());
			}
			return aValues;
		}
		else {
			return gThis.m_jField.val();
		}
	};

	gThis._InitializeEvents = function() {
		gThis.m_jChooseButton.click(gThis._OnChoose);
	};

	gThis._OnChoose = GEventHandler(function(eEvent) {
		gThis.m_jFilesDatagrid.slideToggle(250);
		gThis.m_jChooseButton.toggleClass('expand');
		if(gThis.m_jChooseButton.hasClass('expand')){
			gThis.m_jChooseButton.find('span').html('<img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GForm.Language.localfile_select);
		}else{
			gThis.m_jChooseButton.find('span').html('<img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GForm.Language.localfile_unselect);
		}
		return false;
	});

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (gThis.m_bRepeatable) {
			for (var i in mValue) {
				gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName(i) + '" value="' + mValue[i] + '"/>');
			}
		}
		else {
			gThis.m_jField.val(mValue);
		}
	};

	gThis.Populate = function(mValue) {
		if (gThis.m_bRepeatable) {
			gThis.m_jField.empty();
			gThis.m_oOptions.asDefaults = GCore.Duplicate(mValue);
		}
		else {
			gThis.m_oOptions.sDefault = mValue;
		}

		if (!gThis.m_gFilesDatagrid) {
			return;
		}

		gThis._UpdateDatagridSelection(mValue.photos);
		gThis.SetValue(mValue);
	};

	gThis._UpdateDatagridSelection = function(mValue) {
		if (!(mValue instanceof Array)) {
			if ((mValue == undefined) || !mValue.length) {
				mValue = [];
			}
			else {
				mValue = [mValue];
			}
		}

		gThis.m_gFilesDatagrid.m_asSelected = [];
		for (var i = 0; i < mValue.length; i++) {
			gThis.m_gFilesDatagrid.m_asSelected[i] = mValue[i];
		}
		if (gThis.m_bShown) {
			gThis.m_gFilesDatagrid.LoadData();
		}
	};

	gThis._OnSelect = function(gDg, sId) {
		var oFile = gDg.GetRow(sId);
		gThis._AddImage(sId, oFile);
	};

	gThis._AddImage = function(sId, oFile) {

		if (gThis.m_bRepeatable) {
			var jFileTr = $('<tr class="file__' + sId + '"/>');
			jFileTr.append('<th scope="row"><span class="' + gThis._GetClass('Thumb') + '"><img src="' + oFile.preview + '" alt=""/></span><span class="' + gThis._GetClass('Name') + '">' + oFile.name + '</span></th>');
			var jRadio = $('<input type="radio" name="' + gThis.GetName() + '[main]" value="' + sId + '"/>');
			if (gThis.m_oOptions.asDefaults.main_photo) {

				if (!gThis.m_bLoadedDefaults) {
					if (sId == gThis.m_oOptions.asDefaults.main_photo) {
						jRadio.attr('checked', 'checked');
					}
				}
				else {
					if (sId == gThis.m_oOptions.asDefaults.main_photo) {
						jRadio.attr('checked', 'checked');
					}
					if (!gThis.m_jSelectedFiles.children('tr').length) {
						jRadio.attr('checked', 'checked');
					}
				}
			}
			else if (!gThis.m_jSelectedFiles.children('tr').length) {
				jRadio.attr('checked', 'checked');
			}
			jFileTr.append($('<td/>').append(jRadio));
			var jRemove = $('<a href="#"/>');
			jRemove.click(function() {
				var sId = $(this).closest('tr').attr('class').substr(6);
				gThis.m_gFilesDatagrid.DeselectRow(sId);
				return false;
			});
			jRemove.append('<img src="' + gThis._GetImage('DeleteIcon') + '" alt="' + GForm.Language.file_selector_deselect + '" title="' + GForm.Language.file_selector_deselect + '"/>');
			jFileTr.append($('<td></td>').append(jRemove));
			gThis.m_jSelectedFiles.append(jFileTr);
		}
		else {
			var jRemove = $('<a href="#"/>');
			jRemove.click(function() {
				gThis.m_gFilesDatagrid.DeselectRow(sId);
				gThis.m_jSelectedFiles.empty();
				return false;
			});
			jRemove.append('<img src="' + gThis._GetImage('DeleteIcon') + '" alt="' + GForm.Language.file_selector_deselect + '" title="' + GForm.Language.file_selector_deselect + '"/>');
			gThis.m_jSelectedFiles.empty().append('<h4>' + GForm.Language.file_selector_selected_image + '</h4>').append('<img src="' + oFile.preview + '" alt=""/>').append(jRemove);
		}
	};

	gThis._OnDeselect = function(gDg, sId) {
		gThis._RemoveImage(sId);
	};

	gThis._RemoveImage = function(sId, oFile) {
		if (gThis.m_bRepeatable) {
			var bCheck = false;
			var jFileTr = gThis.m_jSelectedFiles.find('tr.file__' + sId);
			if (jFileTr.find('input[name="' + gThis.GetName() + '[main]"]:checked').length) {
				bCheck = true;
			}
			jFileTr.remove();
			if (bCheck) {
				gThis.m_jSelectedFiles.find('tr:first input[name="' + gThis.GetName() + '[main]"]').click();
			}
		}
		else {
			gThis.m_jSelectedFiles.empty();
		}
	};

	gThis._OnChange = function(iDg, asIds) {
		if (gThis.m_bRepeatable) {
			gThis.m_jField.empty();
		}
		gThis.SetValue(asIds);
	};

	gThis.OnReset = function() {
		gThis.m_bLoadedDefaults = false;
	};

	gThis.OnShow = function() {
		if (gThis.m_bShown === false) {
			gThis._InitFilesDatagrid();
			gThis._InitUploader();
			if (gThis.m_bRepeatable) {
				gThis.Populate(gThis.m_oOptions.asDefaults);
			}
			else {
				gThis.Populate(gThis.m_oOptions.sDefault);
			}
			gThis.m_bShown = true;
			gThis.m_jUnmodified.val('0');
		}
	};

	gThis._ProcessFile = function(oRow) {
		if (oRow.thumb != '') {
			oRow.preview = '<a href="' + oRow.preview + '" ><img src="' + oRow.preview + '" style="vertical-align: middle;" alt="' + GForm.Language.file_selector_show_thumb + '"/></a>';
		}
		return oRow;
	};

	gThis._InitUploader = function() {
		var uploader = new plupload.Uploader({
		    runtimes : 'html5',
		    browse_button : gThis.GetId() + '__upload',
		    container: document.getElementById(gThis.GetId() + '__queue'),
		    url : gThis.m_oOptions.sUploadUrl,
		    filters : {
		        max_file_size : '10mb',
		        mime_types: [{
		        	title : "Image files",
		            extensions : "jpg,gif,png"
		        }]
		    },
		    init: {
		    	FilesAdded: function(up, files) {
		    		plupload.each(files, function(file) {
		    			gThis.OnFileQueued(file);
		    		});
		    		up.start();
		    	},
		    	FileUploaded: function(up, files, response) {
		    		gThis.OnUploadSuccess(files, response);
		        },
		        UploadProgress: function(up, file) {
		        	gThis.OnUploadProgress(file);
		        },
		        Error: function(up, err) {
		        	gThis.OnUploadProgress(err);
		        },
		        UploadComplete: function(){
		        	gThis.OnUploadComplete();
		        }
		    }
		});

		uploader.init();
	};

	gThis.OnFileQueued = function(oFile) {
		if (gThis.m_iUploadsInProgress++ == 0) {
			gThis.m_iLockId = gThis.m_gForm.Lock(GForm.Language.file_selector_form_blocked, GForm.Language.file_selector_form_blocked_description);
		}
		var jLi = $('<li class="upload__' + oFile.id + '"/>');
		jLi.append('<h4>' + oFile.name + '</h4>');
		jLi.append('<p class="' + gThis._GetClass('Progress') + '"/>');
		jLi.append('<div class="' + gThis._GetClass('ProgressBar') + '"><div class="' + gThis._GetClass('ProgressBarIndicator') + '"></div>');
		gThis.m_jQueue.append(jLi);
	};

	gThis.OnDelete = function() {
		gThis.m_jSwfUpload.swfupload('cancelUpload', sFid);
	};

	gThis.OnUploadProgress = function(oFile) {
		var jLi = gThis.m_jQueue.find('.upload__' + oFile.id);
		jLi.find('.' + gThis._GetClass('Progress')).text(oFile.percent + '%');
		jLi.find('.' + gThis._GetClass('ProgressBarIndicator')).css('width', oFile.percent + '%');
	};

	gThis.OnUploadError = function(oError) {
		GAlert(GForm.Language.file_selector_upload_error, oError.message);
	};

	gThis.OnUploadSuccess = function(oFile, oResponse) {
		var oServerResponse = $.parseJSON(oResponse.response);
        if(oServerResponse.sError != undefined){
            return GAlert(oServerResponse.sError, oServerResponse.sMessage);
        }
		var jLi = gThis.m_jQueue.find('.upload__' + oFile.id);
		jLi.addClass(gThis._GetClass('UploadSuccess'));
		jLi.find('.' + gThis._GetClass('Progress')).text(GForm.Language.file_selector_upload_success);
		jLi.find('.' + gThis._GetClass('ProgressBarIndicator')).css('width', '100%');
		if ((gThis.m_oOptions.oRepeat.iMax == 1) || !(gThis.m_gFilesDatagrid.m_asSelected instanceof Array)) {
			gThis.m_gFilesDatagrid.m_asSelected = [];
		}
		gThis.m_gFilesDatagrid.m_asSelected.push(oServerResponse.sId);
		gThis._OnChange(0, gThis.m_gFilesDatagrid.m_asSelected);
		gThis._AddImage(oServerResponse.sId, {
			id: oServerResponse.sId,
			name: oServerResponse.sFilename,
			preview: oServerResponse.sThumb,
			type: oServerResponse.sFileType,
			extension: oServerResponse.sExtension
		});
		gThis.m_gFilesDatagrid.LoadData();
		jLi.delay(2000).fadeOut(250, function() {
			$(this).remove();
		});
	};

	gThis.OnUploadComplete = function() {
		if (--gThis.m_iUploadsInProgress <= 0) {
			gThis.m_iUploadsInProgress = 0;
			gThis.m_gForm.Unlock(gThis.m_iLockId);
		}
	};

	gThis._InitColumns = function() {

	  var column_id = new GF_Datagrid_Column({
			id: 'id',
			caption: GForm.Language.file_selector_id,
			sorting: {
				default_order: GF_Datagrid.SORT_DIR_DESC
			},
			appearance: {
				width: 90,
				visible: false
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_name = new GF_Datagrid_Column({
			id: 'name',
			caption: GForm.Language.file_selector_filename,
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}

		});

		var column_extension = new GF_Datagrid_Column({
			id: 'extension',
			caption: GForm.Language.file_selector_extension
		});

		var column_thumb = new GF_Datagrid_Column({
			id: 'preview',
			caption: GForm.Language.file_selector_thumb,
			appearance: {
				width: 30,
				no_title: true
			}
		});

		return [
			column_id,
			column_thumb,
			column_name,
			column_extension,
		];

	};

	gThis._LoadDefaults = function(oRequest) {
		gThis.m_jSelectedFiles.empty();

		if (gThis.m_bRepeatable) {
			oRequest.where = [{
				column: 'id',
				value: gThis.m_oOptions.asDefaults.photos,
				operator: 'IN'
			}];
		}
		else {
			oRequest.where = [{
				column: 'id',
				value: gThis.m_oOptions.sDefault,
				operator: 'IN'
			}];
		}
		oRequest.id = 0;
		oRequest.starting_from = 0;
		oRequest.limit = gThis.m_oOptions.iLimit;
		oRequest.order_by = 'id';
		oRequest.order_dir = 'desc';
		gThis.LoadFiles(oRequest);
	};

	gThis.LoadFiles = function(oRequest) {
		gThis.m_gFilesDatagrid.MakeRequest(gThis.m_oOptions.sLoadRoute, oRequest, gThis._DefaultsLoaded);
    };

	gThis._DefaultsLoaded = function(oData) {
		for (var i = 0; i < oData.rows.length; i++) {
			gThis._AddImage(oData.rows[i].id, oData.rows[i]);
		}
		gThis.m_bLoadedDefaults = true;
	};

	gThis._OnDataLoaded = function(dDg) {
		dDg.m_jBody.find('.show-thumb').mouseenter(GTooltip.ShowThumbForThis).mouseleave(GTooltip.HideThumbForThis);
	};

	gThis._InitFilesDatagrid = function() {

	var aoColumns = gThis._InitColumns();

    var oOptions = {
			id: gThis.GetId(),
			mechanics: {
				rows_per_page: 15,
				key: 'id',
				only_one_selected: !gThis.m_bRepeatable,
				no_column_modification: true,
				persistent: false
			},
			event_handlers: {
				load: function(oRequest, sResponseHandler) {
					if (!gThis.m_bLoadedDefaults) {
						gThis._LoadDefaults(GCore.Duplicate(true, oRequest));
						gThis.m_bLoadedDefaults = true;
					}
					gThis.m_gFilesDatagrid.MakeRequest(gThis.m_oOptions.sLoadRoute, oRequest, GF_Datagrid.ProcessIncomingData);
				},
				loaded: gThis._OnDataLoaded,
				process: gThis._ProcessFile,
				select: gThis._OnSelect,
				deselect: gThis._OnDeselect,
				selection_changed: gThis._OnChange
			},
			columns: aoColumns
    };

		gThis.m_gFilesDatagrid = new GF_Datagrid(gThis.m_jFilesDatagrid, oOptions);
	};

}, oDefaults);

/*
* LOCAL FILE
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-localfile',
		sFieldSpanClass: 'field',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sThumbClass: 'thumb',
		sNameClass: 'name',
		sSelectedTableClass: 'selected',
		sAddFilesClass: 'add-pictures',
		sQueueClass: 'upload-queue',
		sProgressClass: 'progress',
		sProgressBarClass: 'progress-bar',
		sProgressBarIndicatorClass: 'indicator',
		sUploadErrorClass: 'upload-error',
		sUploadSuccessClass: 'upload-success'
	},
	oImages: {
		sChooseIcon: 'images/icons/filetypes/directory.png',
		sDeleteIcon: 'images/icons/datagrid/delete.png',
		sUploadButton: 'images/buttons/add-pictures.png'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	sUploadUrl: '',
	sSessionId: '',
	sSessionName: '',
	asFileTypes: [],
	sFileTypesDescription: '',
	fDeleteFile: GCore.NULL,
	fLoadFiles: GCore.NULL,
	sSwfUploadUrl: '_data_panel/swfupload.swf',
	iWidth: 131,
	iHeight: 34,
	iMaxFileSize: 100 * 1024	// kB
};

var GFormLocalFile = GCore.ExtendClass(GFormFile, function() {

	var gThis = this;

	gThis.m_bShown = false;
	gThis.m_jFilesDatagrid;
	gThis.m_gDataProvider;
	gThis.m_gFilesDatagrid;
	gThis.m_jSelectedFiles;
	gThis.m_jSwfUpload;
	gThis.m_jQueue;
	gThis.m_iUploadsInProgress = 0;
	gThis.m_iLockId = -1;
	gThis.m_bLoadedDefaults = false;
	gThis.m_jChooseButton;
	gThis.m_jSelectedFileName;

	gThis.m_sCWD;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		gThis.m_jNode.append(gThis._AddField());
		if ((gThis.m_oOptions.sSelector != undefined) && (gThis.m_oOptions.sSelector.length)) {
			gThis.m_jNode.append('<input type="hidden" name="' + gThis.GetName() + '[selector]" value="' + gThis.m_oOptions.sSelector + '"/>');
		}
	};

	gThis._AddField = function() {
		var jRepetition = $('<span class="repetition"/>');
		gThis.m_jSelectedFileName = $('<span class="filename"/>');
		jRepetition.append(gThis.m_jSelectedFileName);
		gThis.m_jSwfUpload = $('<div class="' + gThis._GetClass('AddFiles') + '"><a href="#" class="button expand"><span id="' + gThis.GetId() + '__upload"><img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GForm.Language.localfiles_upload + '</span></a></div>');
		jRepetition.append(gThis.m_jSwfUpload);
		gThis.m_jChooseButton = $('<a href="#" class="button expand"><span><img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GForm.Language.localfile_select + '</span></a>');
		jRepetition.append($('<span class="browse-pictures"/>').append(gThis.m_jChooseButton));
		gThis.m_jQueue = $('<ul class="' + gThis._GetClass('Queue') + '" id="' + gThis.GetId() + '__queue"/>');
		jRepetition.append(gThis.m_jQueue);
		gThis.m_jFilesDatagrid = $('<div/>');
		jRepetition.append(gThis.m_jFilesDatagrid);
		gThis.m_jSelectedFiles = $('<div class="' + gThis._GetClass('SelectedTable') + '"/>');
		jRepetition.append(gThis.m_jSelectedFiles);
		gThis.m_jField = $('<input type="hidden" name="' + gThis.GetName() + '[file]"/>');
		jRepetition.append(gThis.m_jField);
		return jRepetition;
	};

	gThis._OnChoose = GEventHandler(function(eEvent) {
		if (!gThis.m_gFilesDatagrid) {
			gThis._InitFilesDatagrid();
			gThis.m_jFilesDatagrid.slideDown(250);
		}else{
			gThis.m_jFilesDatagrid.slideDown(250);
		}

		gThis.m_jChooseButton.toggleClass('expand');

		if(gThis.m_jChooseButton.hasClass('expand')){
			gThis.m_jChooseButton.find('span').html('<img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GForm.Language.localfile_select);
		}else{
			gThis.m_jChooseButton.find('span').html('<img src="' + gThis._GetImage('ChooseIcon') + '" alt=""/>' + GForm.Language.localfile_unselect);
		}
		return false;
	});

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return {};
		}
		return {
			file: gThis.m_jField.val()
		};
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (mValue == undefined) {
			return;
		}
		if (gThis.m_jField == undefined) {
			return;
		}
		if (mValue['file'] == undefined) {
			gThis.m_jField.val('');
			gThis.m_jSelectedFileName.html('<span class="none">' + GForm.Language.localfile_none_selected + '</span>');
		}
		else {
			gThis.m_jField.val(mValue['file']).change();
			gThis.m_jSelectedFileName.text(mValue['file']);
			if (gThis.m_gFilesDatagrid) {
				gThis.m_gFilesDatagrid.m_asSelected = [gThis.m_oOptions.sFilePath + mValue['file']];
			}
		}
	};

	gThis.Populate = function(mValue) {
		if (gThis.m_gFilesDatagrid) {
			gThis._UpdateDatagridSelection(mValue['file']);
		}
		gThis.SetValue(mValue);
	};

	gThis._UpdateDatagridSelection = function(mValue) {
		if (!(mValue instanceof Array)) {
			if ((mValue == undefined) || !mValue.length) {
				mValue = [];
			}
			else {
				mValue = [mValue];
			}
		}
		gThis.m_gFilesDatagrid.m_asSelected = [];
		for (var i = 0; i < mValue.length; i++) {
			gThis.m_gFilesDatagrid.m_asSelected[i] = mValue[i];
		}
		if (gThis.m_bShown) {
			gThis.m_gFilesDatagrid.LoadData();
		}
	};

	gThis._OnClickRow = function(gDg, sId) {
		var oFile = gThis.m_gFilesDatagrid.GetRow(sId);
		if (oFile.dir) {
			if (oFile.name == '..') {
				gThis.m_sCWD = gThis.m_sCWD.substr(0, gThis.m_sCWD.lastIndexOf('/', gThis.m_sCWD.length - 2));
			}
			else {
				gThis.m_sCWD += oFile.name + '/';
			}
			gThis.m_jSwfUpload.swfupload('addPostParam', 'path', gThis.m_sCWD);
			gThis._RefreshFiles();
			return false;
		}
		return true;
	};

	gThis._OnSelect = function(gDg, sId) {
		var oFile = gDg.GetRow(sId);
		if (!oFile.dir) {
			gThis.SetValue({
				file: oFile.path.substr(gThis.m_oOptions.sFilePath.length)
			});
		}
	};

	gThis._OnDeselect = function(gDg, sId) {
		gThis.SetValue('');
	};

	gThis._Initialize = function() {
		var oValue = gThis.GetValue();
		var sPath = gThis.m_oOptions.sFilePath + oValue.file;
		sPath = sPath.substr(0, sPath.lastIndexOf('/') + 1);
		gThis.m_sCWD = sPath;
	};

	gThis._InitializeEvents = function() {
		gThis.m_jChooseButton.click(gThis._OnChoose);
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis._InitUploader();
			gThis.m_bShown = true;
		}
	};

	gThis._ProcessFile = function(oRow) {
		if (oRow.dir) {
			if (oRow.name == '..') {
				oRow.thumbpreview = '<img src="' + gThis.m_oOptions.oTypeIcons['cdup'] + '" alt=""/>';
			}
			else {
				oRow.thumbpreview = '<img src="' + gThis.m_oOptions.oTypeIcons['directory'] + '" alt=""/>';
			}
		}
		else {
			var sExtension = oRow.name.substr(oRow.name.lastIndexOf('.') + 1);
			if (gThis.m_oOptions.oTypeIcons[sExtension] == undefined) {
				sExtension = 'unknown';
			}
			if ((sExtension == 'png') || (sExtension == 'jpg') || (sExtension == 'gif')) {
				oRow.thumbpreview = '<a href="' + GCore.DESIGN_PATH.substr(0, GCore.DESIGN_PATH.lastIndexOf('/', GCore.DESIGN_PATH.length - 2)) + '/' + oRow.path + '" class="show-thumb"><img src="' + gThis.m_oOptions.oTypeIcons[sExtension] + '" style="vertical-align: middle;" alt="' + GForm.Language.file_selector_show_thumb + '"/></a>';
			}
			else {
				oRow.thumbpreview = '<img src="' + gThis.m_oOptions.oTypeIcons[sExtension] + '" alt=""/>';
			}
		}
		return oRow;
	};

	gThis._InitUploader = function() {
		var uploader = new plupload.Uploader({
		    runtimes : 'html5',
		    browse_button : gThis.GetId() + '__upload',
		    container: document.getElementById(gThis.GetId() + '__queue'),
		    url : gThis.m_oOptions.sUploadUrl,
		    filters : {
		        max_file_size : '10mb',
		        mime_types: [{
		        	title : "Image files",
		            extensions : gThis.m_oOptions.asFileTypes.join(',')
		        }]
		    },
		    init: {
		    	FilesAdded: function(up, files) {
		    		plupload.each(files, function(file) {
		    			gThis.OnFileQueued(file);
		    		});
		    		up.start();
		    	},
		    	FileUploaded: function(up, files, response) {
		    		gThis.OnUploadSuccess(files, response);
		        },
		        UploadProgress: function(up, file) {
		        	gThis.OnUploadProgress(file);
		        },

		        Error: function(up, err) {
		        	gThis.OnUploadProgress(err);
		        },
		        UploadComplete: function(){
		        	gThis.OnUploadComplete();
		        }
		    }
		});

		uploader.init();
	};

	gThis.OnFileQueued = function(oFile) {
		if (gThis.m_iUploadsInProgress++ == 0) {
			gThis.m_iLockId = gThis.m_gForm.Lock(GForm.Language.file_selector_form_blocked, GForm.Language.file_selector_form_blocked_description);
		}
		var jLi = $('<li class="upload__' + oFile.id + '"/>');
		jLi.append('<h4>' + oFile.name + '</h4>');
		jLi.append('<p class="' + gThis._GetClass('Progress') + '"/>');
		jLi.append('<div class="' + gThis._GetClass('ProgressBar') + '"><div class="' + gThis._GetClass('ProgressBarIndicator') + '"></div>');
		gThis.m_jQueue.append(jLi);
	};

	gThis.OnDelete = function() {
		gThis.m_jSwfUpload.swfupload('cancelUpload', sFid);
	};

	gThis.OnUploadProgress = function(oFile) {
		var jLi = gThis.m_jQueue.find('.upload__' + oFile.id);
		jLi.find('.' + gThis._GetClass('Progress')).text(oFile.percent + '%');
		jLi.find('.' + gThis._GetClass('ProgressBarIndicator')).css('width', oFile.percent + '%');
	};

	gThis.OnUploadError = function(oError) {
		GAlert(GForm.Language.file_selector_upload_error, oError.message);
	};

	gThis.OnUploadSuccess = function(oFile, oResponse) {
		var oServerResponse = $.parseJSON(oResponse.response);
		var jLi = gThis.m_jQueue.find('.upload__' + oFile.id);
		jLi.addClass(gThis._GetClass('UploadSuccess'));
		jLi.find('.' + gThis._GetClass('Progress')).text(GForm.Language.file_selector_upload_success);
		jLi.find('.' + gThis._GetClass('ProgressBarIndicator')).css('width', '100%');
		gThis.SetValue({
			file: (gThis.m_sCWD + oResponse.sFilename).substr(gThis.m_oOptions.sFilePath.length)
		});
		gThis._RefreshFiles();
		if (gThis.m_gFilesDatagrid) {
			gThis.m_gFilesDatagrid.LoadData();
		}
		jLi.delay(2000).fadeOut(250, function() {
			$(this).remove();
		});
	};

	gThis.OnUploadComplete = function() {
		if (--gThis.m_iUploadsInProgress <= 0) {
			gThis.m_iUploadsInProgress = 0;
			gThis.m_gForm.Unlock(gThis.m_iLockId);
		}
	};

	gThis._InitColumns = function() {

	  var column_path = new GF_Datagrid_Column({
			id: 'path',
			caption: GForm.Language.localfile_fullpath,
			appearance: {
				width: 70,
				visible: false,
				align: GF_Datagrid.ALIGN_LEFT
			}
		});

		var column_thumb = new GF_Datagrid_Column({
			id: 'thumbpreview',
			caption: GForm.Language.file_selector_thumb,
			appearance: {
				width: 30,
				no_title: true
			}
		});

		var column_name = new GF_Datagrid_Column({
			id: 'name',
			caption: GForm.Language.localfile_filename,
			appearance: {
				width: 150,
				align: GF_Datagrid.ALIGN_LEFT
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_size = new GF_Datagrid_Column({
			id: 'size',
			appearance: {
				width: 65,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			caption: GForm.Language.localfile_filesize
		});

		var column_mtime = new GF_Datagrid_Column({
			id: 'mtime',
			appearance: {
				width: 120,
				visible: false
			},
			caption: GForm.Language.localfile_filemtime
		});

		var column_owner = new GF_Datagrid_Column({
			id: 'owner',
			appearance: {
				width: 70,
				visible: false
			},
			caption: GForm.Language.localfile_fileowner
		});

		return [
			column_path,
			column_thumb,
			column_name,
			column_size,
			column_mtime,
			column_owner
		];

	};

	gThis._RefreshFiles = function() {
		gThis.m_oOptions.fLoadFiles({
			path: gThis.m_sCWD
		}, GCallback(gThis._OnFilesLoaded));
	};

	gThis._OnFilesLoaded = GEventHandler(function(eEvent) {
		if ((eEvent == undefined) || (eEvent.files == undefined) || (eEvent.cwd == undefined)) {
			return;
		}
		gThis.m_sCWD = eEvent.cwd;
		if (gThis.m_gDataProvider) {
			gThis.m_gDataProvider.ChangeData(eEvent.files);
			gThis.m_gFilesDatagrid.LoadData();
		}
	});

	gThis._Delete = function(iDg, sId) {
		var iAlertId = GWarning(GForm.Language.localfile_delete_warning, GForm.Language.localfile_delete_warning_description, {
			bAutoExpand: true,
			aoPossibilities: [
				{mLink: function() {
					GCore.StartWaiting();
					GAlert.Destroy(iAlertId);
					gThis.m_oOptions.fDeleteFile({
						file: sId
					}, GCallback(function(eEvent) {
						GCore.StopWaiting();
						var oValue = gThis.GetValue();
						if (sId == gThis.m_oOptions.sFilePath + oValue.file) {
							gThis.m_gFilesDatagrid.ClearSelection();
						}
						gThis._RefreshFiles();
					}));
				}, sCaption: GForm.Language.localfile_ok},
				{mLink: GAlert.DestroyThis, sCaption: GForm.Language.localfile_cancel}
			]
		});
	};

	gThis._OnDataLoaded = function(dDg) {
		dDg.m_jBody.find('.show-thumb').mouseenter(GTooltip.ShowThumbForThis).mouseleave(GTooltip.HideThumbForThis);
	};

	gThis._InitFilesDatagrid = function() {

		var aoColumns = gThis._InitColumns();

		gThis.m_gDataProvider = new GF_Datagrid_Data_Provider({
			key: 'path'
		}, []);

		var gActionDelete = new GF_Action({
			img: gThis._GetImage('DeleteIcon'),
			caption: GForm.Language.localfile_delete,
			action: gThis._Delete,
			condition: function(oRow) {
				return !oRow.dir;
			}
		});

    var oOptions = {
			id: gThis.GetId(),
			mechanics: {
				rows_per_page: 30,
				key: 'path',
				only_one_selected: true,
				no_column_modification: true,
				persistent: false
			},
			event_handlers: {
				load: function(oRequest, sResponseHandler) {
					return gThis.m_gDataProvider.Load(oRequest, sResponseHandler);
				},
				loaded: gThis._OnDataLoaded,
				process: gThis._ProcessFile,
				select: gThis._OnSelect,
				deselect: gThis._OnDeselect,
				click_row: gThis._OnClickRow
			},
			row_actions: [
				gActionDelete
			],
			columns: aoColumns
    };

		gThis.m_gFilesDatagrid = new GF_Datagrid(gThis.m_jFilesDatagrid, oOptions);

		var oValue = gThis.GetValue();
		var sFile = oValue.file;
		if (sFile != '') {
			gThis.m_gFilesDatagrid.m_asSelected = [gThis.m_oOptions.sFilePath + sFile];
		}

		gThis._RefreshFiles();
	};

}, oDefaults);
/*
* PRICE MODIFIER
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-price-modifier',
		sFieldPriceClass: 'field-price',
		sFieldSelectClass: 'field-select',
		sFieldTextClass: 'field-text',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition',
		sNetPriceClass: 'net-price',
		sGrossPriceClass: 'gross-price'
	},
	oImages: {
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png'
	},
	sFieldType: 'text',
	sDefault: '',
	aoRules: [],
	sComment: '',
	aoVatValues: [],
	oSuffixes: {},
	sVatField: '',
	sBasePriceField: ''
};

var GFormPriceModifier = GCore.ExtendClass(GFormPriceEditor, function() {

	var gThis = this;
	gThis.m_jPrice;
	gThis.m_jModifier;
	gThis.m_jValue;
	gThis.m_jPriceFields;
	gThis.m_jModifierField;
	gThis.m_jValueField;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis._AddModifier();
		gThis._AddValue();
		gThis._AddPrice();
	};

	gThis._AddModifier = function() {
		gThis.m_jValue = $('<div/>').addClass(gThis._GetClass('FieldSelect'));
		var jLabel = $('<label for="' + gThis.GetId() + '__modifier"/>');
		jLabel.text(GForm.Language.price_modifier_value);
		gThis.m_jValue.append(jLabel);
		var jField = $('<select name="' + gThis.GetName() + '[modifier]" id="' + gThis.GetId() + '__modifier"/>');
		for (var i in gThis.m_oOptions.oSuffixes) {
			jField.append('<option value="' + i + '">' + gThis.m_oOptions.oSuffixes[i] + '</option>');
		}
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		gThis.m_jValue.append(jRepetitionNode);
		gThis.m_jNode.append(gThis.m_jValue);
		gThis.m_jModifierField = jField;
	};

	gThis._AddValue = function() {
		gThis.m_jValue = $('<div/>').addClass(gThis._GetClass('FieldText'));
		var jLabel = $('<label for="' + gThis.GetId() + '__value"/>');
		jLabel.text(GForm.Language.price_modifier_value);
		gThis.m_jValue.append(jLabel);
		var jField = $('<input type="text" name="' + gThis.GetName() + '[value]" id="' + gThis.GetId() + '__value"/>');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		jRepetitionNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jField));
		gThis.m_jValue.append(jRepetitionNode);
		gThis.m_jNode.append(gThis.m_jValue);
		gThis.m_jValueField = jField;
	};

	gThis._AddPrice = function() {
		gThis.m_jPrice = $('<div/>').addClass(gThis._GetClass('FieldPrice'));
		var jLabel = $('<label for="' + gThis.GetId() + '"__price/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jPrice.append(jLabel);
		gThis.m_jPrice.append(gThis._AddField());
		gThis.m_jNode.append(gThis.m_jPrice);
	};

	gThis.GetValue = function(sRepetition) {
		return {
			modifier: gThis.m_jModifierField.val(),
			value: gThis.m_jValueField.val()
		};
	};

	gThis.SetValue = function(mValue, sRepetition) {
		gThis.m_jModifierField.val(mValue['modifier']).change();
		gThis.m_jValueField.val(mValue['value']).change();
	};

	gThis._AddField = function(sId) {
		var jFieldNet = $('<input type="text" name="' + gThis.GetName() + '[price]" id="' + gThis.GetId() + '__price"/>');
		var jFieldGross = $('<input type="text" id="' + gThis.GetId() + '__gross"/>');
		var jRepetitionNode = $('<span class="' + gThis._GetClass('FieldRepetition') + '"/>');
		var jNetNode = $('<span class="' + gThis._GetClass('NetPrice') + '"/>');
		var jGrossNode = $('<span class="' + gThis._GetClass('GrossPrice') + '"/>');
		if (gThis.m_oOptions.asPrefixes[0] != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.asPrefixes[0]);
			jNetNode.append(jPrefix);
		}
		jNetNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldNet));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jNetNode.append(jSuffix);
		}
		if (gThis.m_oOptions.asPrefixes[1] != undefined) {
			var jPrefix = $('<span class="' + gThis._GetClass('Prefix') + '"/>');
			jPrefix.html(gThis.m_oOptions.asPrefixes[1]);
			jGrossNode.append(jPrefix);
		}
		jGrossNode.append($('<span class="' + gThis._GetClass('FieldSpan') + '"/>').append(jFieldGross));
		if (gThis.m_oOptions.sSuffix != undefined) {
			var jSuffix = $('<span class="' + gThis._GetClass('Suffix') + '"/>');
			jSuffix.html(gThis.m_oOptions.sSuffix);
			jGrossNode.append(jSuffix);
		}
		jRepetitionNode.append(jNetNode).append(jGrossNode);
		gThis.m_jPriceFields = jRepetitionNode.find('input');
		return jRepetitionNode;
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis.m_jModifierField.GSelect();
		}
		gThis.m_bShown = true;
		if (!gThis.m_bResized) {
			gThis.m_bResized = true;
			gThis.m_jPriceFields.each(function() {
				var iWidth = Math.floor(parseInt($(this).css('width')) / 2) - 20;
				var jParent = $(this).closest('.' + gThis._GetClass('NetPrice') + ', .' + gThis._GetClass('GrossPrice'));
				if (jParent.find('.' + gThis._GetClass('Prefix')).length) {
					iWidth -= ($(this).offset().left - jParent.find('.' + gThis._GetClass('Prefix')).offset().left) - 1;
				}
				if (jParent.find('.' + gThis._GetClass('Suffix')).length) {
					iWidth -= jParent.find('.' + gThis._GetClass('Suffix')).width() + 4;
				}
				$(this).css('width', iWidth);
			});
		}
	};

	gThis._CalculateGrossPrice = function(sPrice) {
		var gVat = gThis.m_gForm.GetField(gThis.m_oOptions.sVatField);
		var iVatId = gVat.GetValue();
		var fVat = 0;
		for (var i in gThis.m_oOptions.aoVatValues) {
			if (gThis.m_oOptions.aoVatValues[i].id == iVatId) {
				fVat = gThis.m_oOptions.aoVatValues[i].value;
				break;
			}
		}
		if (sPrice == undefined) {
			var sPrice = gThis.m_jPriceFields.eq(0).val();
		}
		var fPrice = parseFloat(sPrice.replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : fPrice;
		gThis.m_jPriceFields.eq(1).val((fPrice * (1 + fVat / 100)).toFixed(2));
	};

	gThis._CalculateNetPrice = function(sPrice) {
		var gVat = gThis.m_gForm.GetField(gThis.m_oOptions.sVatField);
		var iVatId = gVat.GetValue();
		var fVat = 0;
		for (var i in gThis.m_oOptions.aoVatValues) {
			if (gThis.m_oOptions.aoVatValues[i].id == iVatId) {
				fVat = gThis.m_oOptions.aoVatValues[i].value;
				break;
			}
		}
		if (sPrice == undefined) {
			var sPrice = gThis.m_jPriceFields.eq(0).val();
		}
		var fPrice = parseFloat(sPrice.replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : fPrice;
		gThis.m_jPriceFields.eq(0).val((fPrice / (1 + fVat / 100)).toFixed(2));
	};

	gThis._UpdatePrice = function(sModifier, fModifierValue) {
		if (sModifier == undefined) {
			sModifier = $('#' + gThis.GetId() + '__modifier option:selected').text();
		}
		if (fModifierValue == undefined) {
			fModifierValue = parseFloat($('#' + gThis.GetId() + '__value').val().replace(/,/, '.'));
		}
		else {
			fModifierValue = parseFloat(('' + fModifierValue).replace(/,/, '.'));
		}
		var fBasePrice = parseFloat(gThis.m_gForm.GetField(gThis.m_oOptions.sBasePriceField).GetValue().replace(/,/, '.'));
		fModifierValue = isNaN(fModifierValue) ? 0 : fModifierValue;
		fBasePrice = isNaN(fBasePrice) ? 0 : fBasePrice;
		var fPrice = 0;
		switch (sModifier) {
			case '%':
				fPrice = fBasePrice * (fModifierValue / 100);
				break;
			case '+':
				fPrice = fBasePrice + fModifierValue;
				break;
			case '-':
				fPrice = fBasePrice - fModifierValue;
				break;
			case '=':
				fPrice = fModifierValue;
				break;
		}
		$('#' + gThis.GetId() + '__price').val(fPrice.toFixed(2));
		var fVatvalue = parseFloat(gThis.m_gForm.GetField(gThis.m_oOptions.sVatField).m_jNode.find('option:selected').text());
		fVatvalue = isNaN(fVatvalue) ? 0 : fVatvalue;
		var fGrossPrice = fPrice * (1 + fVatvalue / 100);
		$('#' + gThis.GetId() + '__gross').val(fGrossPrice.toFixed(2));
	};

	gThis._UpdateModificatorValue = function(fPrice) {
		var sModifier = $('#' + gThis.GetId() + '__modifier option:selected').text();
		if (fPrice == undefined) {
			fPrice = parseFloat($('#' + gThis.GetId() + '__price').val().replace(/,/, '.'));
		}
		else {
			fPrice = parseFloat(('' + fPrice).replace(/,/, '.'));
		}
		var fBasePrice = parseFloat(gThis.m_gForm.GetField(gThis.m_oOptions.sBasePriceField).GetValue().replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : fPrice;
		fBasePrice = isNaN(fBasePrice) ? 0 : fBasePrice;
		var fModifierValue = 0;
		if (fBasePrice > 0) {
			switch (sModifier) {
				case '%':
					fModifierValue = (fPrice / fBasePrice) * 100;
					break;
				case '+':
					fModifierValue = fPrice - fBasePrice;
					break;
				case '-':
					fModifierValue = fBasePrice - fPrice;
					break;
				case '=':
					fModifierValue = fPrice;
					break;
			}
		}
		$('#' + gThis.GetId() + '__value').val(fModifierValue.toFixed(2));
	};

	gThis._Initialize = function() {
		var fHandler = GEventHandler(function(eEvent) {
			setTimeout(function() {
				gThis._CalculateGrossPrice($(eEvent.currentTarget).val());
				gThis._UpdateModificatorValue($(eEvent.currentTarget).val());
			}, 5);
		});
		gThis.m_jPriceFields.eq(0).keypress(fHandler).blur(fHandler).change(gThis.ValidateField);
		fHandler = GEventHandler(function(eEvent) {
			setTimeout(function() {
				gThis._CalculateNetPrice($(eEvent.currentTarget).val());
				gThis._UpdateModificatorValue();
			}, 5);
		});
		gThis.m_jPriceFields.eq(1).keypress(fHandler).blur(fHandler).change(gThis.ValidateField);
		gThis.m_gForm.GetField(gThis.m_oOptions.sVatField).m_jField.change(GEventHandler(function(eEvent) {
			gThis._CalculateGrossPrice();
		}));
		gThis.m_gForm.GetField(gThis.m_oOptions.sBasePriceField).m_jField.change(GEventHandler(function(eEvent) {
			gThis.UpdatePrices();
		}));
		gThis.m_jPriceFields.add(gThis.m_jValueField).focus(GEventHandler(function(eEvent) {
			$(this).closest('.' + gThis._GetClass('FieldSpan')).addClass(gThis._GetClass('Focused'));
		})).blur(GEventHandler(function(eEvent) {
			$(this).closest('.' + gThis._GetClass('FieldSpan')).removeClass(gThis._GetClass('Focused'));
		}));
		gThis.m_jValueField.keypress(GEventHandler(function(eEvent) {
			setTimeout(function() {
				gThis.UpdatePrices(undefined, $(eEvent.currentTarget).val());
			}, 5);
		}));
		gThis.m_jModifierField.change(GEventHandler(function(eEvent) {
			gThis.UpdatePrices($(eEvent.currentTarget).find('option:selected').text());
		}));
		gThis.UpdatePrices();
	};

	gThis.UpdatePrices = function() {
		setTimeout(function() {
			gThis._UpdatePrice();
			gThis.m_jPriceFields.change();
		}, 5);
	};

	gThis.ValidateField = GEventHandler(function(eEvent) {
		var fPrice = parseFloat($(eEvent.currentTarget).val().replace(/,/, '.'));
		fPrice = isNaN(fPrice) ? 0 : fPrice;
		$(eEvent.currentTarget).val(fPrice.toFixed(2));
	});

	gThis.Reset = function() {
		gThis.m_jField.eq(0).val(gThis.m_oOptions.sDefault).change();
	};

}, oDefaults);
/*
* PRODUCT SELECT
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-product-select',
		sFieldSpanClass: 'field',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition'
	},
	oImages: {
		sDeselectIcon: 'images/icons/datagrid/delete.png'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	fLoadProducts: GCore.NULL,
	bAdvancedEditor: false,
	bAllowHierarchy: false,
};

var GFormProductSelect = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;

	gThis.m_fLoadProducts;
	gThis.m_fProcessProduct;
	gThis.m_jDatagrid;
	gThis.m_jSelectedDatagrid;
	gThis.m_gDatagrid;
	gThis.m_gSelectedDatagrid;
	gThis.m_gDataProvider;
	gThis.m_bFirstLoad = true;
	gThis.m_aoExclude = [];
	gThis.m_sDependentSelector;

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		if (gThis.m_bRepeatable) {
			if (sRepetition != undefined) {
				if (gThis.m_oOptions.bAdvancedEditor) {
					return oValue = {
						id: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[id]"]').val(),
						quantity: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[quantity]"]').val(),
						variant: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[variant]"]').val()
					};
				}
				else {
					return gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '"]').val();
				}
			}
			var aValues = [];
			var jValues = gThis.m_jField.find('input');
			if (gThis.m_oOptions.bAdvancedEditor) {
				for (var i = 0; i < jValues.length / 3; i++) {
					aValues.push({
						id: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[id]"]:eq(' + i + ')').val(),
						quantity: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[quantity]"]:eq(' + i + ')').val(),
						variant: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[variant]"]:eq(' + i + ')').val()
					});
				}
			}
			else {
				for (var i = 0; i < jValues.length; i++) {
					aValues.push(jValues.eq(i).val());
				}
			}
			return aValues;
		}
		else {
			return gThis.m_jField.val();
		}
	};

	gThis.PopulateErrors = function(mData) {
		if ((mData == undefined) || (mData == '')) {
			return;
		}
		gThis.SetError(mData);
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (gThis.m_bRepeatable) {
			for (var i in mValue) {
				if (i == 'toJSON') {
					continue;
				}
				if (gThis.m_oOptions.bAdvancedEditor) {
					gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName(i) + '[id]" value="' + mValue[i]['id'] + '"/>');
					gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName(i) + '[quantity]" value="' + mValue[i]['quantity'] + '"/>');
					gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName(i) + '[variant]" value="' + mValue[i]['variant'] + '"/>');
				}
				else {

					gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName(i) + '" value="' + mValue[i] + '"/>');
				}
			}

		}
		else {
			gThis.m_bSkipValidation = true;
			gThis.m_jField.val(mValue).change();
			gThis.m_bSkipValidation = false;
		}
	};

	gThis._OnSelect = function(gDg, sId) {
		if (gThis.m_bRepeatable) {
			var oSelectedRow = gDg.GetRow(sId);
			oSelectedRow.quantity = 1;
			oSelectedRow.variant = '';
			gThis.m_gDataProvider.AddRow(oSelectedRow);
			gThis.m_gSelectedDatagrid.LoadData();
		}
		else {
			gThis.SetValue(sId);
		}
	};

	gThis._OnDeselect = function(gDg, sId) {
		if (gThis.m_bRepeatable) {
			gThis.m_gDataProvider.DeleteRow(sId);
			gThis.m_gSelectedDatagrid.LoadData();
		}
		else {
			gThis.SetValue('');
		}
	};

	gThis._OnChange = function(eEvent) {
		if (!gThis.m_oOptions.bAdvancedEditor) {
			if (gThis.m_bRepeatable) {
				gThis.m_jField.empty();
			}
			var asIds = [];
			for (var i in eEvent.rows) {
				asIds.push(eEvent.rows[i].idproduct);
			}
			gThis.SetValue(asIds);
		}
		else {
			if (gThis.m_bRepeatable) {
				gThis.m_jField.empty();
			}
			var aoData = [];
			for (var i in eEvent.rows) {
				if (i == 'toJSON') {
					continue;
				}
				aoData.push({
					id: eEvent.rows[i].idproduct,
					quantity: eEvent.rows[i].quantity,
					variant: eEvent.rows[i].variant
				});
			}
			gThis.SetValue(aoData);
		}
	};

	gThis._PrepareNode = function() {
		gThis.m_oOptions.oParsedFilterData = {};
		for (var i in gThis.m_oOptions.oFilterData) {
			$.globalEval('var oParsed = [' + gThis.m_oOptions.oFilterData[i] + '];');
			gThis.m_oOptions.oParsedFilterData[i] = $.extend({}, oParsed);
		}
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		if (gThis.m_bRepeatable) {
			gThis.m_jField = $('<div/>');
			gThis.m_jDatagrid = $('<div/>');
			jLabel = $('<label/>');
			jLabel.text(GForm.Language.product_select_selected + ':');
			gThis.m_jSelectedDatagrid = $('<div/>');
			gThis.m_jNode.append(gThis.m_jDatagrid);
			gThis.m_jNode.append(jLabel);
			gThis.m_jNode.append(gThis.m_jSelectedDatagrid);
		}
		else {
			gThis.m_jField = $('<input type="hidden" name="' + gThis.GetName() + '"/>');
			gThis.m_jDatagrid = $('<div/>');
			gThis.m_jNode.append(gThis.m_jDatagrid);
		}
		gThis.m_jNode.append(gThis.m_jField);
		if (gThis.m_oOptions.sExcludeFrom != undefined) {
			var gField = gThis.m_gForm.GetField(gThis.m_oOptions.sExcludeFrom);
			gField.m_sDependentSelector = gThis.m_oOptions.sName;
		}
	};

	gThis.OnReset = function() {
		gThis.m_bFirstLoad = true;
	};

	gThis.Populate = function(mValue) {
		if (gThis.m_bRepeatable) {
			gThis.m_jField.empty();
			if (gThis.m_gDatagrid) {
				gThis.m_oOptions.asDefaults = GCore.Duplicate(mValue);
			}
		}
		else {
			gThis.m_oOptions.sDefault = mValue;
		}
		if (gThis.m_gDatagrid) {
			gThis._UpdateDatagridSelection(mValue);
		}
		gThis.SetValue(mValue);
		if (gThis.m_gDatagrid && gThis.m_bRepeatable) {
			gThis.m_gSelectedDatagrid.LoadData();
		}
	};

	gThis._UpdateDatagridSelection = function(mValue) {
		if (!(mValue instanceof Array)) {
			if ((mValue == undefined) || !mValue.length) {
				mValue = [];
			}
			else {
				mValue = [mValue];
			}
		}
		if (gThis.m_gDatagrid) {
			gThis.m_gDatagrid.m_asSelected = [];
			for (var i = 0; i < mValue.length; i++) {
				if (gThis.m_oOptions.bAdvancedEditor) {
					gThis.m_gDatagrid.m_asSelected[i] = mValue[i].id;
				}
				else {
					gThis.m_gDatagrid.m_asSelected[i] = mValue[i];
				}
			}
		}
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis._InitDatagrid();
			if (gThis.m_bRepeatable) {
				gThis._InitSelectedDatagrid();
				gThis.Populate(gThis.m_oOptions.asDefaults);
			}
			else {
				gThis.Populate(gThis.m_oOptions.sDefault);
			}
			gThis.m_bShown = true;
		}
		else {
			gThis.m_gDatagrid.LoadData();
		}
	};

	gThis._ProcessProduct = function(oProduct) {
		if (oProduct.thumb != '') {
			oProduct.thumbpreview = '<a href="' + oProduct.thumb + '" ><img src="' + oProduct.thumb + '" style="vertical-align: middle;" alt="' + GForm.Language.file_selector_show_thumb + '"/></a>';
		}
		return oProduct;
	};

	gThis._ProcessSelectedProduct = function(oProduct) {
		oProduct = gThis.m_fProcessProduct(oProduct);
		return oProduct;
	};

	gThis._InitColumns = function() {

		var column_id = new GF_Datagrid_Column({
			id: 'idproduct',
			caption: GForm.Language.product_select_id,
			appearance: {
				width: 40,
				visible: false
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_name = new GF_Datagrid_Column({
			id: 'name',
			caption: GForm.Language.product_select_name,
			appearance: {
				align: GF_Datagrid.ALIGN_LEFT,
				width: 240
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_price = new GF_Datagrid_Column({
			id: 'sellprice',
			caption: GForm.Language.product_select_price,
			appearance: {
				width: 70,
				visible: false,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_price_gross = new GF_Datagrid_Column({
			id: 'sellprice_gross',
			caption: GForm.Language.product_select_price_gross,
			appearance: {
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_buyprice = new GF_Datagrid_Column({
			id: 'buyprice',
			caption: GForm.Language.product_select_buyprice,
			appearance: {
				width: 70,
				visible: false,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_buyprice_gross = new GF_Datagrid_Column({
			id: 'buyprice_gross',
			caption: GForm.Language.product_select_buyprice_gross,
			appearance: {
				width: 70,
				visible: false,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_barcode = new GF_Datagrid_Column({
			id: 'barcode',
			caption: GForm.Language.product_select_barcode,
			appearance: {
				width: 150,
				visible: false
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_producer = new GF_Datagrid_Column({
			id: 'producer',
			caption: GForm.Language.product_select_producer,
			appearance: {
				width: 150
			},
			filter: {
				type: GF_Datagrid.FILTER_SELECT,
				options: gThis.m_oOptions.oParsedFilterData['producer'],
			}
		});

		var column_vat = new GF_Datagrid_Column({
			id: 'vat',
			caption: GForm.Language.product_select_vat,
			appearance: {
				width: 60,
				visible: false,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_SELECT,
				options: gThis.m_oOptions.oParsedFilterData['vat'],
			}
		});

		var column_category = new GF_Datagrid_Column({
			id: 'categoriesname',
			caption: GForm.Language.product_select_categories,
			appearance: {
				width: 200,
				align: GF_Datagrid.ALIGN_LEFT
			},
			filter: {
				type: GF_Datagrid.FILTER_TREE,
				filtered_column: 'ancestorcategoryid',
				options: gThis.m_oOptions.oParsedFilterData['categoryid'],
				load_children: gThis.m_oOptions.fLoadCategoryChildren
			}
		});

		var column_thumb = new GF_Datagrid_Column({
			id: 'thumbpreview',
			caption: GForm.Language.file_selector_thumb,
			appearance: {
				width: 30,
				no_title: true
			}
		});

		return [
			column_id,
			column_thumb,
			column_name,
			column_category,
			column_producer,
			column_price,
			column_price_gross,
			column_buyprice,
			column_buyprice_gross,
			column_barcode,
			column_vat,
		];

	};

	gThis._InitAdvancedColumns = function() {

		var column_id = new GF_Datagrid_Column({
			id: 'idproduct',
			caption: GForm.Language.product_select_id,
			appearance: {
				width: 40
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_name = new GF_Datagrid_Column({
			id: 'name',
			caption: GForm.Language.product_select_name,
			appearance: {
				align: GF_Datagrid.ALIGN_LEFT,
				width: 240
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_price = new GF_Datagrid_Column({
			id: 'sellprice',
			caption: GForm.Language.product_select_price,
			appearance: {
				width: 70,
				visible: false,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_price_gross = new GF_Datagrid_Column({
			id: 'sellprice_gross',
			caption: GForm.Language.product_select_price_gross,
			appearance: {
				width: 70,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_barcode = new GF_Datagrid_Column({
			id: 'barcode',
			caption: GForm.Language.product_select_barcode,
			appearance: {
				width: 150,
				visible: false
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_producer = new GF_Datagrid_Column({
			id: 'producer',
			caption: GForm.Language.product_select_producer,
			appearance: {
				width: 150,
				visible: false
			}
		});

		var column_vat = new GF_Datagrid_Column({
			id: 'vat',
			caption: GForm.Language.product_select_vat,
			appearance: {
				width: 60,
				visible: false,
				align: GF_Datagrid.ALIGN_RIGHT
			}
		});

		var column_category = new GF_Datagrid_Column({
			id: 'categoriesname',
			caption: GForm.Language.product_select_categories,
			appearance: {
				width: 200,
				align: GF_Datagrid.ALIGN_LEFT,
				visible: false
			},
			filter: {
				type: GF_Datagrid.FILTER_TREE,
				filtered_column: 'ancestorcategoryid',
				options: gThis.m_oOptions.oParsedFilterData['categoryid'],
				load_children: gThis.m_oOptions.fLoadCategoryChildren
			}
		});

		var column_thumb = new GF_Datagrid_Column({
			id: 'thumbpreview',
			caption: GForm.Language.file_selector_thumb,
			appearance: {
				width: 30,
				no_title: true
			}
		});

		var column_quantity = new GF_Datagrid_Column({
			id: 'quantity',
			caption: GForm.Language.product_select_quantity,
			editable: true,
			appearance: {
				width: 70
			}
		});

		var column_variant = new GF_Datagrid_Column({
			id: 'variant',
			caption: GForm.Language.product_select_variant,
			selectable: true,
			appearance: {
				width: 150
			}
		});

		return [
		    column_id,
			column_thumb,
			column_name,
			column_category,
			column_price_gross,
			column_quantity,
			column_variant,
			column_producer,
			column_vat,
			column_barcode,
		];

	};

	gThis._UpdateExcludes = function() {
		gThis.m_aoExclude = [];
		if (gThis.m_oOptions.sExcludeFrom != undefined) {
			var gField = gThis.m_gForm.GetField(gThis.m_oOptions.sExcludeFrom);
			gThis.m_aoExclude = [gField.GetValue()];
			if (!gThis.m_gDataProvider) {
				return;
			}
			for (var i in gThis.m_gDataProvider.m_aoData) {
				if (gThis.m_gDataProvider.m_aoData[i].idproduct == gField.GetValue()) {
					gThis.m_gDatagrid.DeselectRow(gThis.m_gDataProvider.m_aoData[i].idproduct);
					return;
				}
			}
		}
	};

	gThis._InitDatagrid = function() {

		gThis.m_fProcessProduct = gThis._ProcessProduct;
		gThis.m_fLoadProducts = gThis.m_oOptions.fLoadProducts;

		var aoColumns = gThis._InitColumns();
		var oOptions = {
			id: gThis.GetId(),
			mechanics: {
				rows_per_page: 10,
				key: 'idproduct',
				only_one_selected: !gThis.m_bRepeatable,
				no_column_modification: true,
				persistent: false
			},
			event_handlers: {
				load: function(oData, sProcessFunction) {
					gThis._UpdateExcludes();
					oData.dynamic_exclude = gThis.m_aoExclude;
					return gThis.m_fLoadProducts(oData, sProcessFunction);
				},
				process: gThis.m_fProcessProduct,
				select: gThis._OnSelect,
				deselect: gThis._OnDeselect,
				selection_changed: function() {
					if (gThis.m_sDependentSelector != undefined) {
						var gField = gThis.m_gForm.GetField(gThis.m_sDependentSelector);
						gField._UpdateExcludes();
					}
				}
			},
			columns: aoColumns
    };

    gThis.m_gDatagrid = new GF_Datagrid(gThis.m_jDatagrid, oOptions);

	};

	gThis._Deselect = function(iDg, mId) {
		if (!(mId instanceof Array)) {
			mId = [mId];
		}
		for (var i = 0; i < mId.length; i++) {
			gThis.m_gDatagrid.DeselectRow(mId[i]);
		}
		gThis.m_gSelectedDatagrid.ClearSelection();
		gThis.m_gDatagrid.LoadData();
	};

	gThis._InitSelectedDatagrid = function() {

		gThis.m_gDataProvider = new GF_Datagrid_Data_Provider({
			key: 'idproduct',
			event_handlers: {
				change: gThis._OnChange
			}
		}, []);

		if (gThis.m_oOptions.bAdvancedEditor) {
			var aoColumns = gThis._InitAdvancedColumns();
		}
		else {
			var aoColumns = gThis._InitColumns();
		}

		var gActionDeselect = new GF_Action({
			img: gThis._GetImage('DeselectIcon'),
			caption: GForm.Language.product_select_deselect,
			action: gThis._Deselect
		});

		var oOptions = {
			id: gThis.GetId() + '_selected',
			appearance: {
				filter: false
			},
			mechanics: {
				rows_per_page: 1000,
				key: 'idproduct',
				no_column_modification: true,
				persistent: false
			},
			event_handlers: {
				load: function(oRequest, sResponseHandler) {
					if (gThis.m_bFirstLoad) {
						gThis.m_bFirstLoad = false;
						gThis._LoadSelected(oRequest, sResponseHandler);
					}
					else {
						gThis.m_gDataProvider.Load(oRequest, sResponseHandler);
					}
				},
				update_row: function(sId, oRow) {
					gThis.m_gDataProvider.UpdateRow(sId, oRow);
				},
				process: gThis._ProcessSelectedProduct
			},
			columns: aoColumns,
			row_actions: [
				gActionDeselect
			],
			context_actions: [
				gActionDeselect
			],
			group_actions: [
				gActionDeselect
			]
    };

		gThis.m_gSelectedDatagrid = new GF_Datagrid(gThis.m_jSelectedDatagrid, oOptions);

	};

	gThis._LoadSelected = function(oRequest, sResponseHandler) {
		if (gThis.m_oOptions.bAdvancedEditor) {
			var asDefaults = [];
			for (var i in gThis.m_oOptions.asDefaults) {
				asDefaults.push(gThis.m_oOptions.asDefaults[i].id);
			}
			oRequest.where = [{
				column: 'idproduct',
				value: asDefaults,
				operator: 'IN'
			}];
		}
		else {
			oRequest.where = [{
				column: 'idproduct',
				value: gThis.m_oOptions.asDefaults,
				operator: 'IN'
			}];
		}
		gThis.m_fLoadProducts(oRequest, GCallback(function(eEvent) {
			if (gThis.m_oOptions.bAdvancedEditor) {
				for (var i in eEvent.rows) {
					var sId = eEvent.rows[i].idproduct;
					for (var j in gThis.m_oOptions.asDefaults) {
						if (gThis.m_oOptions.asDefaults[j].id == sId) {
							eEvent.rows[i].quantity = gThis.m_oOptions.asDefaults[j].quantity;
							eEvent.rows[i].variant = gThis.m_oOptions.asDefaults[j].variant;
						}
					}
				}
			}
			gThis.m_gDataProvider.ChangeData(eEvent.rows);
			gThis.m_gSelectedDatagrid.LoadData();
		}));
	};

}, oDefaults);
/*
* PRODUCT SELECT RELATED
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-product-select',
		sFieldSpanClass: 'field',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition'
	},
	oImages: {
		sDeselectIcon: 'images/icons/datagrid/delete.png'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	fLoadProducts: GCore.NULL,
};

var GFormProductSelectRelated = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;

	gThis.m_fLoadProducts;
	gThis.m_fProcessProduct;
	gThis.m_jDatagrid;
	gThis.m_jSelectedDatagrid;
	gThis.m_gDatagrid;
	gThis.m_gSelectedDatagrid;
	gThis.m_gDataProvider;
	gThis.m_bFirstLoad = true;
	gThis.m_aoExclude = [];
	gThis.m_sDependentSelector;

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		if (gThis.m_bRepeatable) {
			if (sRepetition != undefined) {
				return oValue = {
					id: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[id]"]').val(),
					hierarchy: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[hierarchy]"]').val(),
				};
			}
			var aValues = [];
			var jValues = gThis.m_jField.find('input');
			for (var i = 0; i < jValues.length / 3; i++) {
				aValues.push({
					id: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[id]"]:eq(' + i + ')').val(),
					hierarchy: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[hierarchy]"]:eq(' + i + ')').val(),
				});
			}
			return aValues;
		}
		else {
			return gThis.m_jField.val();
		}
	};

	gThis.PopulateErrors = function(mData) {
		if ((mData == undefined) || (mData == '')) {
			return;
		}
		gThis.SetError(mData);
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		if (gThis.m_bRepeatable) {
			for (var i in mValue) {
				if (i == 'toJSON') {
					continue;
				}

				gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName(i) + '[id]" value="' + mValue[i]['id'] + '"/>');
				gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName(i) + '[hierarchy]" value="' + mValue[i]['hierarchy'] + '"/>');
			}
		}
		else {
			gThis.m_bSkipValidation = true;
			gThis.m_jField.val(mValue).change();
			gThis.m_bSkipValidation = false;
		}
	};

	gThis._OnSelect = function(gDg, sId) {
		if (gThis.m_bRepeatable) {
			var oSelectedRow = gDg.GetRow(sId);
			oSelectedRow.hierarchy = 0;
			gThis.m_gDataProvider.AddRow(oSelectedRow);
			gThis.m_gSelectedDatagrid.LoadData();
		}
		else {
			gThis.SetValue(sId);
		}
	};

	gThis._OnDeselect = function(gDg, sId) {
		if (gThis.m_bRepeatable) {
			gThis.m_gDataProvider.DeleteRow(sId);
			gThis.m_gSelectedDatagrid.LoadData();
		}
		else {
			gThis.SetValue('');
		}
	};

	gThis._OnChange = function(eEvent) {
		if (gThis.m_bRepeatable) {
			gThis.m_jField.empty();
		}
		var aoData = [];
		for (var i in eEvent.rows) {
			if (i == 'toJSON') {
				continue;
			}

			aoData.push({
				id: eEvent.rows[i].idproduct,
				hierarchy: eEvent.rows[i].hierarchy,
			});
		}

		gThis.SetValue(aoData);
	};

	gThis._PrepareNode = function() {
		gThis.m_oOptions.oParsedFilterData = {};
		for (var i in gThis.m_oOptions.oFilterData) {
			$.globalEval('var oParsed = [' + gThis.m_oOptions.oFilterData[i] + '];');
			gThis.m_oOptions.oParsedFilterData[i] = $.extend({}, oParsed);
		}
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		if (gThis.m_bRepeatable) {
			gThis.m_jField = $('<div/>');
			gThis.m_jDatagrid = $('<div/>');
			jLabel = $('<label/>');
			jLabel.text(GForm.Language.product_select_selected + ':');
			gThis.m_jSelectedDatagrid = $('<div/>');
			gThis.m_jNode.append(gThis.m_jDatagrid);
			gThis.m_jNode.append(jLabel);
			gThis.m_jNode.append(gThis.m_jSelectedDatagrid);
		}
		else {
			gThis.m_jField = $('<input type="hidden" name="' + gThis.GetName() + '"/>');
			gThis.m_jDatagrid = $('<div/>');
			gThis.m_jNode.append(gThis.m_jDatagrid);
		}
		gThis.m_jNode.append(gThis.m_jField);
		if (gThis.m_oOptions.sExcludeFrom != undefined) {
			var gField = gThis.m_gForm.GetField(gThis.m_oOptions.sExcludeFrom);
			gField.m_sDependentSelector = gThis.m_oOptions.sName;
		}
	};

	gThis.OnReset = function() {
		gThis.m_bFirstLoad = true;
	};

	gThis.Populate = function(mValue) {
		if (gThis.m_bRepeatable) {
			gThis.m_jField.empty();
			if (gThis.m_gDatagrid) {
				gThis.m_oOptions.asDefaults = GCore.Duplicate(mValue);
			}
		}
		else {
			gThis.m_oOptions.sDefault = mValue;
		}
		if (gThis.m_gDatagrid) {
			gThis._UpdateDatagridSelection(mValue);
		}
		gThis.SetValue(mValue);
		if (gThis.m_gDatagrid && gThis.m_bRepeatable) {
			gThis.m_gSelectedDatagrid.LoadData();
		}
	};

	gThis._UpdateDatagridSelection = function(mValue) {
		if (!(mValue instanceof Array)) {
			if ((mValue == undefined) || !mValue.length) {
				mValue = [];
			}
			else {
				mValue = [mValue];
			}
		}
		if (gThis.m_gDatagrid) {
			gThis.m_gDatagrid.m_asSelected = [];
			for (var i = 0; i < mValue.length; i++) {
				gThis.m_gDatagrid.m_asSelected[i] = mValue[i].id;
			}
		}
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis._InitDatagrid();
			if (gThis.m_bRepeatable) {
				gThis._InitSelectedDatagrid();
				gThis.Populate(gThis.m_oOptions.asDefaults);
			}
			else {
				gThis.Populate(gThis.m_oOptions.sDefault);
			}
			gThis.m_bShown = true;
		}
		else {
			gThis.m_gDatagrid.LoadData();
		}
	};

	gThis._ProcessProduct = function(oProduct) {
		if (oProduct.thumb != '') {
			oProduct.thumbpreview = '<a href="' + oProduct.thumb + '" ><img src="' + oProduct.thumb + '" style="vertical-align: middle;" alt="' + GForm.Language.file_selector_show_thumb + '"/></a>';
		}
		return oProduct;
	};

	gThis._ProcessSelectedProduct = function(oProduct) {
		oProduct = gThis.m_fProcessProduct(oProduct);
		return oProduct;
	};

	gThis._InitColumns = function() {

		var column_id = new GF_Datagrid_Column({
			id: 'idproduct',
			caption: GForm.Language.product_select_id,
			appearance: {
				width: 40,
				visible: false
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_name = new GF_Datagrid_Column({
			id: 'name',
			caption: GForm.Language.product_select_name,
			appearance: {
				align: GF_Datagrid.ALIGN_LEFT,
				width: 240
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_price = new GF_Datagrid_Column({
			id: 'sellprice',
			caption: GForm.Language.product_select_price,
			appearance: {
				width: 70,
				visible: false,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_price_gross = new GF_Datagrid_Column({
			id: 'sellprice_gross',
			caption: GForm.Language.product_select_price_gross,
			appearance: {
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_buyprice = new GF_Datagrid_Column({
			id: 'buyprice',
			caption: GForm.Language.product_select_buyprice,
			appearance: {
				width: 70,
				visible: false,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_buyprice_gross = new GF_Datagrid_Column({
			id: 'buyprice_gross',
			caption: GForm.Language.product_select_buyprice_gross,
			appearance: {
				width: 70,
				visible: false,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_barcode = new GF_Datagrid_Column({
			id: 'barcode',
			caption: GForm.Language.product_select_barcode,
			appearance: {
				width: 150,
				visible: false
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_producer = new GF_Datagrid_Column({
			id: 'producer',
			caption: GForm.Language.product_select_producer,
			appearance: {
				width: 150
			},
			filter: {
				type: GF_Datagrid.FILTER_SELECT,
				options: gThis.m_oOptions.oParsedFilterData['producer'],
			}
		});

		var column_vat = new GF_Datagrid_Column({
			id: 'vat',
			caption: GForm.Language.product_select_vat,
			appearance: {
				width: 60,
				visible: false,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_SELECT,
				options: gThis.m_oOptions.oParsedFilterData['vat'],
			}
		});

		var column_category = new GF_Datagrid_Column({
			id: 'categoriesname',
			caption: GForm.Language.product_select_categories,
			appearance: {
				width: 200,
				align: GF_Datagrid.ALIGN_LEFT
			},
			filter: {
				type: GF_Datagrid.FILTER_TREE,
				filtered_column: 'ancestorcategoryid',
				options: gThis.m_oOptions.oParsedFilterData['categoryid'],
				load_children: gThis.m_oOptions.fLoadCategoryChildren
			}
		});

		var column_thumb = new GF_Datagrid_Column({
			id: 'thumbpreview',
			caption: GForm.Language.file_selector_thumb,
			appearance: {
				width: 30,
				no_title: true
			}
		});

		return [
			column_id,
			column_thumb,
			column_name,
			column_category,
			column_producer,
			column_price,
			column_price_gross,
			column_buyprice,
			column_buyprice_gross,
			column_barcode,
			column_vat,
		];

	};

	gThis._InitAdvancedColumns = function() {

		var column_id = new GF_Datagrid_Column({
			id: 'idproduct',
			caption: GForm.Language.product_select_id,
			appearance: {
				width: 40
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_name = new GF_Datagrid_Column({
			id: 'name',
			caption: GForm.Language.product_select_name,
			appearance: {
				align: GF_Datagrid.ALIGN_LEFT,
				width: 240
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_price = new GF_Datagrid_Column({
			id: 'sellprice',
			caption: GForm.Language.product_select_price,
			appearance: {
				width: 70,
				visible: false,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_price_gross = new GF_Datagrid_Column({
			id: 'sellprice_gross',
			caption: GForm.Language.product_select_price_gross,
			appearance: {
				width: 70,
				align: GF_Datagrid.ALIGN_RIGHT
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_barcode = new GF_Datagrid_Column({
			id: 'barcode',
			caption: GForm.Language.product_select_barcode,
			appearance: {
				width: 150,
				visible: false
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_producer = new GF_Datagrid_Column({
			id: 'producer',
			caption: GForm.Language.product_select_producer,
			appearance: {
				width: 150,
				visible: false
			}
		});

		var column_vat = new GF_Datagrid_Column({
			id: 'vat',
			caption: GForm.Language.product_select_vat,
			appearance: {
				width: 60,
				visible: false,
				align: GF_Datagrid.ALIGN_RIGHT
			}
		});

		var column_category = new GF_Datagrid_Column({
			id: 'categoriesname',
			caption: GForm.Language.product_select_categories,
			appearance: {
				width: 200,
				align: GF_Datagrid.ALIGN_LEFT,
				visible: false
			},
			filter: {
				type: GF_Datagrid.FILTER_TREE,
				filtered_column: 'ancestorcategoryid',
				options: gThis.m_oOptions.oParsedFilterData['categoryid'],
				load_children: gThis.m_oOptions.fLoadCategoryChildren
			}
		});

		var column_thumb = new GF_Datagrid_Column({
			id: 'thumbpreview',
			caption: GForm.Language.file_selector_thumb,
			appearance: {
				width: 30,
				no_title: true
			}
		});

		var column_hierarchy = new GF_Datagrid_Column({
			id: 'hierarchy',
			caption: GForm.Language.product_select_hierarchy,
			editable: true,
			appearance: {
				width: 70
			}
		});



		return [
		    column_id,
			column_thumb,
			column_name,
			column_category,
			column_price_gross,
			column_hierarchy,
			column_producer,
			column_vat,
			column_barcode,
		];

	};

	gThis._UpdateExcludes = function() {
		gThis.m_aoExclude = [];
		if (gThis.m_oOptions.sExcludeFrom != undefined) {
			var gField = gThis.m_gForm.GetField(gThis.m_oOptions.sExcludeFrom);
			gThis.m_aoExclude = [gField.GetValue()];
			if (!gThis.m_gDataProvider) {
				return;
			}
			for (var i in gThis.m_gDataProvider.m_aoData) {
				if (gThis.m_gDataProvider.m_aoData[i].idproduct == gField.GetValue()) {
					gThis.m_gDatagrid.DeselectRow(gThis.m_gDataProvider.m_aoData[i].idproduct);
					return;
				}
			}
		}
	};

	gThis._InitDatagrid = function() {

		gThis.m_fProcessProduct = gThis._ProcessProduct;
		gThis.m_fLoadProducts = gThis.m_oOptions.fLoadProducts;

		var aoColumns = gThis._InitColumns();
		var oOptions = {
			id: gThis.GetId(),
			mechanics: {
				rows_per_page: 10,
				key: 'idproduct',
				only_one_selected: !gThis.m_bRepeatable,
				no_column_modification: true,
				persistent: false
			},
			event_handlers: {
				load: function(oData, sProcessFunction) {
					gThis._UpdateExcludes();
					oData.dynamic_exclude = gThis.m_aoExclude;
					return gThis.m_fLoadProducts(oData, sProcessFunction);
				},
				process: gThis.m_fProcessProduct,
				select: gThis._OnSelect,
				deselect: gThis._OnDeselect,
				selection_changed: function() {
					if (gThis.m_sDependentSelector != undefined) {
						var gField = gThis.m_gForm.GetField(gThis.m_sDependentSelector);
						gField._UpdateExcludes();
					}
				}
			},
			columns: aoColumns
    };

    gThis.m_gDatagrid = new GF_Datagrid(gThis.m_jDatagrid, oOptions);

	};

	gThis._Deselect = function(iDg, mId) {
		if (!(mId instanceof Array)) {
			mId = [mId];
		}
		for (var i = 0; i < mId.length; i++) {
			gThis.m_gDatagrid.DeselectRow(mId[i]);
		}
		gThis.m_gSelectedDatagrid.ClearSelection();
		gThis.m_gDatagrid.LoadData();
	};

	gThis._InitSelectedDatagrid = function() {

		gThis.m_gDataProvider = new GF_Datagrid_Data_Provider({
			key: 'idproduct',
			event_handlers: {
				change: gThis._OnChange
			}
		}, []);

		var aoColumns = gThis._InitAdvancedColumns();

		var gActionDeselect = new GF_Action({
			img: gThis._GetImage('DeselectIcon'),
			caption: GForm.Language.product_select_deselect,
			action: gThis._Deselect
		});

		var oOptions = {
			id: gThis.GetId() + '_selected',
			appearance: {
				filter: false
			},
			mechanics: {
				rows_per_page: 1000,
				key: 'idproduct',
				no_column_modification: true,
				persistent: false
			},
			event_handlers: {
				load: function(oRequest, sResponseHandler) {
					if (gThis.m_bFirstLoad) {
						gThis.m_bFirstLoad = false;
						gThis._LoadSelected(oRequest, sResponseHandler);
					}
					else {
						gThis.m_gDataProvider.Load(oRequest, sResponseHandler);
					}
				},
				update_row: function(sId, oRow) {
					gThis.m_gDataProvider.UpdateRow(sId, oRow);
				},
				process: gThis._ProcessSelectedProduct
			},
			columns: aoColumns,
			row_actions: [
				gActionDeselect
			],
			context_actions: [
				gActionDeselect
			],
			group_actions: [
				gActionDeselect
			]
    };

		gThis.m_gSelectedDatagrid = new GF_Datagrid(gThis.m_jSelectedDatagrid, oOptions);

	};

	gThis._LoadSelected = function(oRequest, sResponseHandler) {
		var asDefaults = [];
		for (var i in gThis.m_oOptions.asDefaults) {
			asDefaults.push(gThis.m_oOptions.asDefaults[i].id);
		}
		oRequest.where = [{
			column: 'idproduct',
			value: asDefaults,
			operator: 'IN'
		}];

		gThis.m_fLoadProducts(oRequest, GCallback(function(eEvent) {
			for (var i in eEvent.rows) {
				var sId = eEvent.rows[i].idproduct;
				for (var j in gThis.m_oOptions.asDefaults) {
					if (gThis.m_oOptions.asDefaults[j].id == sId) {
						eEvent.rows[i].hierarchy = gThis.m_oOptions.asDefaults[j].hierarchy;
					}
				}
			}
			gThis.m_gDataProvider.ChangeData(eEvent.rows);
			gThis.m_gSelectedDatagrid.LoadData();
		}));
	};

}, oDefaults);
/*
* RICH TEXT EDITOR
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-rich-text-editor',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sAddRepetitionClass: 'add-field-repetition',
		sRemoveRepetitionClass: 'remove-field-repetition',
		sLanguage: 'pl'
	},
	oImages: {
		sAddRepetition: 'images/icons/buttons/add.png',
		sRemoveRepetition: 'images/icons/buttons/delete.png'
	},
	iRows: 3,
	iCols: 60,
	sDefault: '',
	aoRules: [],
	sComment: '',
	bAdvanced: false,
	sLanguage: 'pl'
};

var GFormRichTextEditor = GCore.ExtendClass(GFormTextArea, function() {

	var gThis = this;

	gThis.OnShow = function() {
		if (gThis.m_bShown) {
			return;
		}

		if(!gThis.m_bShown){
            $('#' + gThis.GetId()).trumbowyg({
                resetCss: true,
                removeformatPasted: true,
                fullscreenable: false,
                btns: [
                    'viewHTML',
                    '|',
                    'formatting',
                    '|',
                    'btnGrp-design',
                    '|',
                    'btnGrp-justify',
                    '|',
                    'btnGrp-lists',
                    '|',
                    'horizontalRule'
                ]
            });

			gThis.m_bShown = true;
		}
	};

    gThis.SetValue = function(mValue, sRepetition) {
        if (gThis.m_jField == undefined) {
            return;
        }

        $('#' + gThis.GetId()).trumbowyg('html', mValue);
        gThis._GetField(sRepetition).val(mValue);
    };

}, oDefaults);

/*
* CONDITIONS
*/

var GFormCondition = function(sCondition, mArgument) {

	var gThis = this;

	gThis.m_sType = sCondition;
	gThis.m_mArgument = mArgument;

	gThis.Evaluate = function(mValue) {
		switch(gThis.m_sType) {

			// EQUALS
			case GFormCondition.EQUALS:
				if (gThis.m_mArgument instanceof GFormCondition) {
					return false;
				}
				else if (gThis.m_mArgument instanceof Array) {
					return $.inArray(mValue, gThis.m_mArgument) != -1;
				}
				else {
					return mValue == gThis.m_mArgument;
				}
				break;

			// GE
			case GFormCondition.GE:
				if (gThis.m_mArgument instanceof GFormCondition) {
					return false;
				}
				else {
					return mValue >= gThis.m_mArgument;
				}
				break;

			// LE
			case GFormCondition.LE:
				if (gThis.m_mArgument instanceof GFormCondition) {
					return false;
				}
				else {
					return mValue <= gThis.m_mArgument;
				}
				break;

			// NOT
			case GFormCondition.NOT:
				if (gThis.m_mArgument instanceof GFormCondition) {
					return !gThis.m_mArgument.Evaluate(mValue);
				}
				else {
					return false;
				}
				break;

			// AND
			case GFormCondition.AND:
				if (gThis.m_mArgument instanceof GFormCondition) {
					return true;
				}
				else if (gThis.m_mArgument instanceof Array) {
					for (var i = 0; i < gThis.m_mArgument.length; i++) {
						if (!(gThis.m_mArgument[i] instanceof GFormCondition) || !gThis.m_mArgument[i].Evaluate(mValue)) {
							return false;
						}
					}
					return true;
				}
				else {
					return false;
				}
				break;

			// OR
			case GFormCondition.OR:
				if (gThis.m_mArgument instanceof GFormCondition) {
					return true;
				}
				else if (gThis.m_mArgument instanceof Array) {
					for (var i = 0; i < gThis.m_mArgument.length; i++) {
						if (!(gThis.m_mArgument[i] instanceof GFormCondition)) {
							return false;
						}
						if (gThis.m_mArgument[i].Evaluate(mValue)) {
							return true;
						}
					}
					return true;
				}
				else {
					return false;
				}
				break;

		};
		return true;
	};

};

GFormCondition.EQUALS = '=';
GFormCondition.GE = '>=';
GFormCondition.LE = '<=';
GFormCondition.NOT = '!';
GFormCondition.AND = '&&';
GFormCondition.OR = '||';
/*
* HIDDEN
*/

var oDefaults = {
	sName: '',
	oClasses: {
		sFieldClass: 'field-hidden'
	},
	sFieldType: 'hidden',
	sDefault: '',
	aoRules: [],
	aoDependencies: [],
	sComment: ''
};

var GFormHidden = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jNode.append(gThis._AddField());
	};

	gThis.Validate = function(bNoRequests, sRepetition) {
		return true;
	};

	gThis._AddField = function(sId) {
		var jField = $('<input type="' + gThis.m_oOptions.sFieldType + '" name="' + gThis.GetName(sId) + '" id="' + gThis.GetId(sId) + '"/>');
		gThis.m_jField = jField;
		return jField;
	};

}, oDefaults);
/*
* ORDER EDITOR
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-order-editor',
		sFieldSpanClass: 'field',
		sGroupClass: 'group',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition',
		sHiddenClass: 'hidden',
		sButtonClass: 'button',
		sTriggerClass: 'trigger'
	},
	oImages: {
		sAddIcon: 'images/icons/buttons/add.png',
		sDeselectIcon: 'images/icons/datagrid/delete.png'
	},
	aoOptions: [],
	sDefault: '',
	aoRules: [],
	sComment: '',
	sLoadProductsRoute: GCore.NULL,
	bAdvancedEditor: false
};

var GFormOrderEditor = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bShown = false;

	gThis.m_sLoadProductsRoute;
	gThis.m_fProcessProduct;
	gThis.m_jDatagrid;
	gThis.m_jSelectedDatagrid;
	gThis.m_jTrigger;
    gThis.m_jTriggerButton;
	gThis.m_gDatagrid;
	gThis.m_gSelectedDatagrid;
	gThis.m_gDataProvider;
	gThis.m_bFirstLoad = true;
	gThis.m_oRequest = {};
	gThis.m_iCounter = 0;

	gThis.GetValue = function(sRepetition) {
		if (gThis.m_jField == undefined) {
			return '';
		}
		var aValues = [];
		var jValues = gThis.m_jField.find('input');
		for (var i = 0; i < jValues.length / 4; i++) {
			aValues.push({
				id: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[id]"]:eq(' + i + ')').val(),
                product_id: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[product_id]"]:eq(' + i + ')').val(),
				quantity: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[quantity]"]:eq(' + i + ')').val(),
				gross_amount: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[gross_amount]"]:eq(' + i + ')').val(),
				variant: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[variant]"]:eq(' + i + ')').val(),
				trackstock: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[trackstock]"]:eq(' + i + ')').val(),
				stock: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[stock]"]:eq(' + i + ')').val(),
				weight: gThis.m_jField.find('input[name="' + gThis.GetName(sRepetition) + '[weight]"]:eq(' + i + ')').val(),
			});
		}

		return aValues;
	};

	gThis.SetValue = function(mValue, sRepetition) {
		if (gThis.m_jField == undefined) {
			return;
		}
		for (var i in mValue) {
			if (mValue[i]['id'] == undefined) {
				continue;
			}
            gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName() + '[' + mValue[i]['id'] + '][id]" value="' + mValue[i]['id'] + '"/>');
			gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName() + '[' + mValue[i]['id'] + '][product_id]" value="' + mValue[i]['product_id'] + '"/>');
			gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName() + '[' + mValue[i]['id'] + '][quantity]" value="' + mValue[i]['quantity'] + '"/>');
			gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName() + '[' + mValue[i]['id'] + '][previousquantity]" value="' + mValue[i]['previousquantity'] + '"/>');
			gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName() + '[' + mValue[i]['id'] + '][trackstock]" value="' + mValue[i]['trackstock'] + '"/>');
			gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName() + '[' + mValue[i]['id'] + '][stock]" value="' + mValue[i]['stock'] + '"/>');
			gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName() + '[' + mValue[i]['id'] + '][gross_amount]" value="' + mValue[i]['gross_amount'] + '"/>');
			gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName() + '[' + mValue[i]['id'] + '][variant]" value="' + mValue[i]['variant'] + '"/>');
            gThis.m_jField.append('<input type="hidden" name="' + gThis.GetName() + '[' + mValue[i]['id'] + '][weight]" value="' + mValue[i]['weight'] + '"/>');
		}
	};

	gThis._OnSelect = function(gDg, sId) {
		if (gThis.m_bRepeatable) {
			var oSelectedRow = GCore.Duplicate(gDg.GetRow(sId));
			gThis._AddRow(oSelectedRow);
			gDg.ClearSelection();
			gThis.m_gSelectedDatagrid.LoadData();
		}
	};

	gThis._AddRow = function(oSelectedRow) {
		GAlert.DestroyAll();
		GMessage('Dodano wybrany produkt do zamówienia.');
		oSelectedRow = $.extend({
            product_id: oSelectedRow.id,
            product_name: oSelectedRow.name,
            tax_rate: oSelectedRow.tax,
			quantity: 1,
			variant: '',
			gross_amount: oSelectedRow.grossAmount
		}, oSelectedRow);
        oSelectedRow.id = 'new-' + (gThis.m_iCounter++);
		gThis.m_gDataProvider.AddRow(oSelectedRow);
		return oSelectedRow;
	};

	gThis._OnDeselect = function(gDg, sId) {
	};

	gThis._OnChange = function(eEvent) {
		if (gThis.m_bRepeatable) {
			gThis.m_jField.empty();
		}
		var asIds = [];
		for (var i in eEvent.rows) {
			if (eEvent.rows[i].id != undefined) {
				asIds.push(eEvent.rows[i]);
			}
		}
		gThis.SetValue(asIds);
	};

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		gThis.m_jDatagridWrapper = $('<div class="existing-products"/>');
		if (gThis.m_bRepeatable) {
			gThis.m_jField = $('<div/>');
			gThis.m_jDatagrid = $('<div/>');
			gThis.m_jDatagridWrapper.append(gThis.m_jDatagrid);
			gThis.m_jSelectedDatagrid = $('<div class="selected-products"/>');
			gThis.m_jNode.append(gThis.m_jDatagridWrapper);
			gThis.m_jNode.append(gThis.m_jSelectedDatagrid);
		}
		else {
			gThis.m_jField = $('<input type="hidden" name="' + gThis.GetName() + '"/>');
			gThis.m_jDatagrid = $('<div/>');
			gThis.m_jNode.append(gThis.m_jDatagridWrapper);
		}
		gThis.m_jNode.append(gThis.m_jField);
		gThis.m_jDatagridWrapper.addClass(gThis._GetClass('Hidden'));
		gThis.m_jTrigger = $('<p class="' + gThis._GetClass('Trigger') + '"/>');
		gThis.m_jTriggerButton = $('<a href="#" class="' + gThis._GetClass('Button') + '" />');
		gThis.m_jTriggerButton.append('<span><img src="' + gThis._GetImage('AddIcon') + '" alt=""/>' + Translator.trans('order.button.add_product', {}, 'wellcommerce'), + '</span>');

		gThis.m_jTriggerButton.click(GEventHandler(function(eEvent) {
			var jImg = gThis.m_jTrigger.find('a span img');
			if (gThis.m_jDatagridWrapper.hasClass(gThis._GetClass('Hidden'))) {
				gThis.m_jDatagridWrapper.css('display', 'none').removeClass(gThis._GetClass('Hidden'));
			}
			if (!gThis.m_jDatagridWrapper.get(0).bHidden) {
				gThis.m_jDatagridWrapper.get(0).bHidden = true;
				gThis.m_jTrigger.find('a span').empty().append(jImg).append(Translator.trans('order.button.close_product_selector', {}, 'wellcommerce'));
			}
			else {
				gThis.m_jDatagridWrapper.get(0).bHidden = false;
				gThis.m_jTrigger.find('a span').empty().append(jImg).append(Translator.trans('order.button.add_product', {}, 'wellcommerce'));
			}
			gThis.m_jDatagridWrapper.slideToggle(250);
			return false;
		}));
		gThis.m_jTrigger.append(gThis.m_jTriggerButton);
		gThis.m_jNode.append(gThis.m_jTrigger);
	};

	gThis.OnReset = function() {
		gThis.m_bFirstLoad = true;
	};

	gThis.Populate = function(mValue) {
		if (!gThis.m_gDatagrid) {
			return;
		}
		gThis.m_jField.empty();
		gThis.m_oOptions.asDefaults = GCore.Duplicate(mValue);
		gThis.SetValue(mValue);
		gThis.m_gSelectedDatagrid.LoadData();
	};

	gThis.OnShow = function() {
		if (!gThis.m_bShown) {
			gThis._InitDatagrid();
			if (gThis.m_bRepeatable) {
				gThis._InitSelectedDatagrid();
				gThis.Populate(gThis.m_oOptions.asDefaults);
			}
			else {
				gThis.Populate(gThis.m_oOptions.sDefault);
			}
			gThis.m_bShown = true;
		}
	};

	gThis._ProcessProduct = function(oProduct) {
		return oProduct;
	};

	gThis._ProcessSelectedProduct = function(oProduct) {
		return gThis.m_fProcessProduct(oProduct);
	};

	gThis._InitColumns = function() {

		var column_id = new GF_Datagrid_Column({
			id: 'id',
			caption: GForm.Language.product_select_id,
			appearance: {
				width: 40,
				visible: false
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_name = new GF_Datagrid_Column({
			id: 'name',
			caption: GForm.Language.product_select_name,
			appearance: {
				align: GF_Datagrid.ALIGN_LEFT,
				width: GF_Datagrid.WIDTH_AUTO,
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_price = new GF_Datagrid_Column({
			id: 'grossAmount',
			caption: GForm.Language.product_select_price,
			appearance: {
				width: 90
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

        var column_tax_rate = new GF_Datagrid_Column({
			id: 'tax',
			caption: GForm.Language.product_select_price,
			appearance: {
				width: 90,
                visible: false
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_weight = new GF_Datagrid_Column({
			id: 'weight',
			caption: 'Waga',
			appearance: {
				width: 70
			},
			filter: {
				type: GF_Datagrid.FILTER_BETWEEN
			}
		});

		var column_producer = new GF_Datagrid_Column({
			id: 'producer',
			caption: GForm.Language.product_select_producer,
			appearance: {
				width: 150
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		var column_category = new GF_Datagrid_Column({
			id: 'category',
			caption: GForm.Language.product_select_categories,
			appearance: {
				width: 200,
				align: GF_Datagrid.ALIGN_LEFT
			},
			filter: {
				type: GF_Datagrid.FILTER_INPUT
			}
		});

		return [
			column_id,
			column_name,
			column_category,
			column_producer,
			column_price,
            column_tax_rate,
			column_weight,
		];

	};

	gThis._InitAdvancedColumns = function() {

		var column_id = new GF_Datagrid_Column({
			id: 'id',
			caption: Translator.trans('order.label.id', {}, 'wellcommerce'),
			appearance: {
				width: 40,
				visible: false
			}
		});

		var column_product_id = new GF_Datagrid_Column({
			id: 'product_id',
			caption: Translator.trans('order.label.product_id', {}, 'wellcommerce'),
			appearance: {
				width: 40,
				visible: false
			}
		});

		var column_product_name = new GF_Datagrid_Column({
			id: 'product_name',
			caption: Translator.trans('order.label.product_name', {}, 'wellcommerce'),
			appearance: {
				align: GF_Datagrid.ALIGN_LEFT
			}
		});

		var column_variant = new GF_Datagrid_Column({
			id: 'variant',
			caption: Translator.trans('order.label.variant', {}, 'wellcommerce'),
			//selectable: true,
			appearance: {
				width: 140
			}
		});

		var column_gross_amount = new GF_Datagrid_Column({
			id: 'gross_amount',
			caption: Translator.trans('order.label.gross_amount', {}, 'wellcommerce'),
            editable: true,
			appearance: {
				width: 70,
				align: GF_Datagrid.ALIGN_CENTER
			}
		});

		var column_weight = new GF_Datagrid_Column({
			id: 'weight',
			caption: Translator.trans('order.label.weight', {}, 'wellcommerce'),
            editable: true,
			appearance: {
				width: 70,
				align: GF_Datagrid.ALIGN_CENTER
			}
		});

		var column_quantity = new GF_Datagrid_Column({
			id: 'quantity',
			caption: Translator.trans('order.label.quantity', {}, 'wellcommerce'),
			editable: true,
			appearance: {
		       width: 50
		    }
		});

		var column_stock = new GF_Datagrid_Column({
			id: 'stock',
			caption: Translator.trans('order.label.stock', {}, 'wellcommerce'),
			appearance: {
				width: 80
			}
		});

		var column_tax_value = new GF_Datagrid_Column({
			id: 'tax_value',
			caption: Translator.trans('order.label.tax_value', {}, 'wellcommerce'),
			appearance: {
				width: 50,
				align: GF_Datagrid.ALIGN_CENTER
			}
		});

		var column_tax_rate = new GF_Datagrid_Column({
			id: 'tax_rate',
			caption: Translator.trans('order.label.tax_rate', {}, 'wellcommerce'),
			appearance: {
				width: 70,
				align: GF_Datagrid.ALIGN_CENTER
			}
		});

		var column_gross_total = new GF_Datagrid_Column({
			id: 'gross_total',
			caption: Translator.trans('order.label.gross_total', {}, 'wellcommerce'),
			appearance: {
				width: 70,
				align: GF_Datagrid.ALIGN_CENTER
			}
		});

		var column_variant_options = new GF_Datagrid_Column({
			id: 'variant_options',
			caption: Translator.trans('order.label.variant_options', {}, 'wellcommerce'),
			appearance: {
				width: 70,
				visible: false
			}
		});

		return [
			column_id,
			column_product_id,
			column_product_name,
			column_variant,
			column_gross_amount,
			column_weight,
			column_quantity,
			column_stock,
			column_tax_rate,
			column_tax_value,
			column_gross_total,
			column_variant_options
		];

	};

	gThis._InitDatagrid = function() {
		gThis.m_fProcessProduct = gThis._ProcessProduct;
		gThis.m_sLoadProductsRoute = gThis.m_oOptions.sLoadProductsRoute;
		var aoColumns = gThis._InitColumns();

        var oOptions = {
    		id: gThis.GetId(),
    		appearance: {
    			column_select: false
			},
            mechanics: {
    			rows_per_page: 15,
    			key: 'id',
				only_one_selected: !gThis.m_bRepeatable,
				no_column_modification: true,
    			persistent: false
    		},
    		event_handlers: {
    			load: function(oRequest){
                    gThis.m_gDatagrid.MakeRequest(Routing.generate(gThis.m_sLoadProductsRoute), oRequest, GF_Datagrid.ProcessIncomingData);
                },
    			process: gThis.m_fProcessProduct,
    			select: gThis._OnSelect,
    			deselect: gThis._OnDeselect
    		},
    		columns: aoColumns
        };

        gThis.m_gDatagrid = new GF_Datagrid(gThis.m_jDatagrid, oOptions);

	};

	gThis._Deselect = function(iDg, mId) {
		if (!(mId instanceof Array)) {
			mId = [mId];
		}
		for (var i = 0; i < mId.length; i++) {
			gThis.m_gDataProvider.DeleteRow(mId[i]);
		}
		gThis.m_gSelectedDatagrid.ClearSelection();
		gThis.m_gSelectedDatagrid.LoadData();
	};

	gThis._CalculateRow = function(oRow) {
        oRow.weight           = isNaN(parseFloat(oRow.weight)) ? 0 : parseFloat(oRow.weight);
		oRow.quantity         = isNaN(parseFloat(oRow.quantity)) ? 0 : parseFloat(oRow.quantity);
		oRow.gross_amount     = String(oRow.gross_amount).replace(/,/, '.');
		oRow.gross_amount     = isNaN(parseFloat(oRow.gross_amount)) ? 0 : parseFloat(oRow.gross_amount);
		oRow.gross_amount     = oRow.gross_amount.toFixed(2);
        oRow.net_amount       = parseFloat(oRow.gross_amount) / (1 + (parseFloat(oRow.tax_rate) / 100)).toFixed(2);
        oRow.net_amount       = oRow.net_amount.toFixed(2);
        oRow.gross_total      = oRow.gross_amount * oRow.quantity;
		oRow.gross_total      = oRow.gross_total.toFixed(2);
        oRow.tax_rate         = isNaN(parseFloat(oRow.tax_rate)) ? 0 : parseFloat(oRow.tax_rate);
        oRow.net_total        = oRow.net_amount * oRow.quantity;
        oRow.tax_value        = oRow.gross_total - oRow.net_total;
		oRow.tax_rate         = oRow.tax_rate.toFixed(2) + '%';
		oRow.tax_value        = oRow.tax_value.toFixed(2);

console.log(oRow);

		return oRow;
	};

	gThis._CalculateTotal = function(aoRows) {
		var tax_value     = 0;
		var gross_total   = 0;
		var weight        = 0;
		for (var i in aoRows) {
			tax_value    += parseFloat(aoRows[i].tax_value);
			gross_total  += parseFloat(aoRows[i].gross_total);
			weight       += parseFloat(aoRows[i].weight * aoRows[i].quantity);
		}
		return {
			product_name:    Translator.trans('order.label.gross_total', {}, 'wellcommerce'),
			gross_total:     gross_total.toFixed(2),
			tax_value:       tax_value.toFixed(2),
			weight:          weight.toFixed(2),
		};
	};

	gThis._OnRowChange = GEventHandler(function(eEvent) {
		if ((eEvent.modified_row.variant != eEvent.previous_row.variant) && (eEvent.modified_row.variant != '')) {
			eval('var aoVariants = ' + eEvent.modified_row.variant__options + ';');
			for (var i in aoVariants) {
				if (aoVariants[i].id == eEvent.modified_row.variant) {
					eEvent.modified_row.sellprice = aoVariants[i].options.price;
					eEvent.modified_row.weight = aoVariants[i].options.weight;
					eEvent.modified_row.stock = aoVariants[i].options.stock;
					eEvent.modified_row.thumb = aoVariants[i].options.thumb;
					eEvent.modified_row.ean = aoVariants[i].options.ean;
				}
			}
		}
	});

	gThis._InitSelectedDatagrid = function() {

		gThis.m_gDataProvider = new GF_Datagrid_Data_Provider({
			key: 'id',
			preProcess: gThis._CalculateRow,
			additional_rows: [
				new GF_Datagrid_Row({
					id: 'total',
					className: 'total',
					source: gThis._CalculateTotal,
					caption: Translator.trans('order.label.gross_total', {}, 'wellcommerce')
				})
			],
			event_handlers: {
				change: gThis._OnChange,
				row_change: gThis._OnRowChange
			}
		}, []);

		var aoColumns = gThis._InitAdvancedColumns();

		var gActionDeselect = new GF_Action({
			img: gThis._GetImage('DeselectIcon'),
			caption: GForm.Language.product_select_deselect,
			action: gThis._Deselect
		});

        var oOptions = {
			id: gThis.GetId() + '_selected',
			appearance: {
				column_select: false,
				footer: false,
				filter: false
			},
			mechanics: {
				rows_per_page: 99999,
				key: 'id',
				no_column_modification: true,
				persistent: false
			},
			event_handlers: {
				load: function(oRequest, sResponseHandler) {
					if (gThis.m_bFirstLoad) {
						gThis.m_bFirstLoad = false;
						gThis._LoadSelected(oRequest, sResponseHandler);
					}
					else {
						gThis.m_gDataProvider.Load(oRequest, sResponseHandler);
					}
				},
				update_row: function(sId, oRow) {
					gThis.m_gDataProvider.UpdateRow(sId, oRow);
					gThis.m_gSelectedDatagrid.LoadData();
				},
				process: gThis._ProcessSelectedProduct,
				loaded: gThis.m_oOptions.fOnChange
			},
			columns: aoColumns,
			row_actions: [
				gActionDeselect
			],
			context_actions: [
				gActionDeselect
			],
			group_actions: [
				gActionDeselect
			]
        };

		gThis.m_gSelectedDatagrid = new GF_Datagrid(gThis.m_jSelectedDatagrid, oOptions);

	};

	gThis.AddProducts = function(mIds) {
		if (!(mIds instanceof Array)) {
			if (mIds == undefined) {
				return;
			}
			mIds = [mIds];
		}

		var oRequest = GCore.Duplicate(gThis.m_oRequest, true);

		oRequest.where = [{
			column: 'id',
			value: mIds,
			operator: 'IN'
		}];

		gThis.m_fLoadProducts(oRequest, GCallback(function(eEvent) {
			for (var j in eEvent.rows) {
				gThis._AddRow(eEvent.rows[j]);
			}
			gThis.m_gSelectedDatagrid.LoadData();
		}));
	};

	gThis._LoadSelected = function(oRequest, sResponseHandler) {
		gThis.m_oRequest = oRequest;
		var asDefaults = [];
		for (var i in gThis.m_oOptions.asDefaults) {
			asDefaults.push(gThis.m_oOptions.asDefaults[i].product_id);
		}
		oRequest.where = [{
			column: 'id',
			value: asDefaults,
			operator: 'IN'
		}];

        GF_Ajax_Request(Routing.generate(gThis.m_oOptions.sLoadProductsRoute), oRequest, function(eEvent){
            var aoRows = [];
			for (var i in gThis.m_oOptions.asDefaults) {
				var sId = gThis.m_oOptions.asDefaults[i].product_id;
				for (var j in eEvent.rows) {
					if (eEvent.rows[j].id == sId) {
						aoRows.push($.extend(true, {id: i}, eEvent.rows[j], gThis.m_oOptions.asDefaults[i]));
						break;
					}
				}
			}

			gThis.m_gDataProvider.ChangeData(aoRows);
			gThis.m_gSelectedDatagrid.LoadData();
        });
	};

}, oDefaults);

/*
 * PRODUCT VARIANTS EDITOR
 */

var oDefaults = {
    sName: '',
    sLabel: '',
    oClasses: {
        sFieldClass: 'field-product-variants-editor',
        sFieldSpanClass: 'field',
        sGroupClass: 'group',
        sFocusedClass: 'focus',
        sInvalidClass: 'invalid',
        sRequiredClass: 'required',
        sWaitingClass: 'waiting'
    },
    oImages: {
        sDeleteIcon: 'images/icons/datagrid/delete.png',
        sSaveIcon: 'images/icons/datagrid/save.png',
        sAddIcon: 'images/icons/datagrid/add.png'
    },
    aoOptions: [],
    asDefaults: '',
    aoRules: [],
    sComment: '',
    fGetSetsForCategories: GCore.NULL,
    fGetCartesian: GCore.NULL,
    fGetAttributesForSet: GCore.NULL,
    fGetValuesForAttribute: GCore.NULL,
    fAddAttribute: GCore.NULL,
    fAddValue: GCore.NULL,
    sCategoryField: '',
};

/**
 * GFormVariantEditor
 *
 * @type {*}
 */
var GFormVariantEditor = GCore.ExtendClass(GFormField, function () {

    var gThis = this;

    gThis.m_bShown = false;

    gThis.m_fLoadProducts;
    gThis.m_fProcessProduct;
    gThis.m_jDatagrid;
    gThis.m_gDatagrid;
    gThis.m_gDataProvider;
    gThis.m_jSetSelect;
    gThis.m_jSetSelectNode;
    gThis.m_jSetEditor;
    gThis.m_jSetEditorLabel;
    gThis.m_jVariantEditor;
    gThis.m_jVariantEditorWrapper;
    gThis.m_jVariantEditorOptions;
    gThis.m_aoSets = [];
    gThis.m_aoAttributes = [];
    gThis.m_bFirstLoad = true;
    gThis.m_aoVariants = [];
    gThis.m_sEditedVariant = GCore.NULL;
    gThis.m_mDataToPopulate;

    gThis.GetValue = function (sRepetition) {
        if (gThis.m_jField == undefined) {
            return '';
        }
    };

    gThis.SetValue = function (mValue, sRepetition) {
        if (gThis.m_jField == undefined) {
            return;
        }
    };

    gThis._OnSelect = function (gDg, sId) {
        gThis._InitVariantEditor(sId, gDg.GetRow(sId));
    };

    gThis._OnDeselect = function (gDg, sId) {
        gThis.SaveVariant();
        gThis.m_sEditedVariant = GCore.NULL;
        gThis.m_jVariantEditor.empty();
        gThis.m_jVariantEditorOptions.find('.save').fadeOut(150);
    };

    gThis.Validation = GEventHandler(function (eEvent) {
        var fValue = parseFloat($(eEvent.currentTarget).val().replace(/,/, '.'));
        if (isNaN(fValue) || fValue < 0) {
            fValue = 0;
        }
        $(eEvent.currentTarget).val(fValue.toFixed(2));
    });

    gThis._InitVariantEditor = function (sId, oVariant) {
        if (oVariant == undefined) {
            oVariant = gThis._GetDefaultVariant(sId);
        }
        gThis.m_sEditedVariant = sId;
        gThis.m_jVariantEditorOptions.find('.save').fadeIn(150);
        gThis.m_jVariantEditor.empty().css('display', 'none');

        var jSpecification = $('<div class="specification"/>');

        gThis.m_jVariantEditor.append(jSpecification);

        var jModifierType = $('<select id="' + gThis.GetId() + '__modifier_type"/>').focus(function () {
            $(this).closest('.field').addClass('focus');
        }).blur(function () {
            $(this).closest('.field').removeClass('focus');
        });
        for (var i = 0; i < gThis.m_oOptions.aoSuffixes.length; i++) {
            jModifierType.append('<option' + ((gThis.m_oOptions.aoSuffixes[i] == oVariant.modifier_type) ? ' selected="selected"' : '') + ' value="' + gThis.m_oOptions.aoSuffixes[i] + '">' + gThis.m_oOptions.aoSuffixes[i] + '</option>');
        }
        console.log(oVariant);
        jSpecification.append($('<div class="field-select"/>').append('<label for="' + gThis.GetId() + '__modifier_type">' + GForm.Language.product_variants_editor_variant_editor_modifier_type + '</label>').append($('<span class="field"/>').append(jModifierType)));
        jModifierType.GSelect();

        var jModifierValue = $('<input type="text" id="' + gThis.GetId() + '__modifier_value"/>').focus(function () {
            $(this).closest('.field').addClass('focus');
        }).blur(function () {
            $(this).closest('.field').removeClass('focus');
        });
        jSpecification.append($('<div class="field-text"/>').append('<label for="' + gThis.GetId() + '__modifier_value">' + GForm.Language.product_variants_editor_variant_editor_modifier_value + '</label>').append($('<span class="field"/>').append(jModifierValue)));

        var fHandler = GEventHandler(function (eEvent) {
            if (eEvent.keyCode == 13) {
                eEvent.preventDefault();
                eEvent.stopImmediatePropagation();
                gThis.SaveVariant();
            }
        });

        jModifierValue.val(oVariant.modifier_value).keypress(fHandler).blur(fHandler).blur(gThis.Validation);

        var jStock = $('<input type="text" id="' + gThis.GetId() + '__stock"/>').focus(function () {
            $(this).closest('.field').addClass('focus');
        }).blur(function () {
            $(this).closest('.field').removeClass('focus');
        });
        jSpecification.append($('<div class="field-text"/>').append('<label for="' + gThis.GetId() + '__stock">' + GForm.Language.product_variants_editor_variant_editor_stock + '</label>').append($('<span class="field"/>').append(jStock)));
        jStock.val(oVariant.stock);

        jStock.keypress(function (eEvent) {
            if (eEvent.keyCode == 13) {
                eEvent.preventDefault();
                eEvent.stopImmediatePropagation();
                gThis.SaveVariant();
            }
        });

        var jSymbol = $('<input type="text" id="' + gThis.GetId() + '__symbol"/>').focus(function () {
            $(this).closest('.field').addClass('focus');
        }).blur(function () {
            $(this).closest('.field').removeClass('focus');
        });

        jSpecification.append($('<div class="field-text"/>').append('<label for="' + gThis.GetId() + '__symbol">Symbol</label>').append($('<span class="field"/>').append(jSymbol)));
        jSymbol.val(oVariant.symbol);

        jSymbol.keypress(function (eEvent) {
            if (eEvent.keyCode == 13) {
                eEvent.preventDefault();
                eEvent.stopImmediatePropagation();
                gThis.SaveVariant();
            }
        });

        var jStatusType = $('<select id="' + gThis.GetId() + '__status"/>').focus(function () {
            $(this).closest('.field').addClass('focus');
        }).blur(function () {
            $(this).closest('.field').removeClass('focus');
        });
        jStatusType.append('<option' + ((1 == oVariant.status) ? ' selected="selected"' : '') + ' value="' + 1 + '">Aktywny</option>');
        jStatusType.append('<option' + ((0 == oVariant.status) ? ' selected="selected"' : '') + ' value="' + 0 + '">Nieaktywny</option>');
        jSpecification.append($('<div class="field-select"/>').append('<label for="' + gThis.GetId() + '__status">Status</label>').append($('<span class="field"/>').append(jStatusType)));
        jStatusType.GSelect();

        var jAvailability = $('<select id="' + gThis.GetId() + '__availability"/>').focus(function () {
            $(this).closest('.field').addClass('focus');
        }).blur(function () {
            $(this).closest('.field').removeClass('focus');
        });
        for (var i in gThis.m_oOptions.aoAvailability) {
            jAvailability.append('<option' + ((i == oVariant.availability) ? ' selected="selected"' : '') + ' value="' + i + '">' + gThis.m_oOptions.aoAvailability[i] + '</option>');
        }
        jSpecification.append($('<div class="field-select"/>').append('<label for="' + gThis.GetId() + '__status">Dostępność</label>').append($('<span class="field"/>').append(jAvailability)));
        jAvailability.GSelect();

        var jWeight = $('<input type="text" id="' + gThis.GetId() + '__weight"/>').focus(function () {
            $(this).closest('.field').addClass('focus');
        }).blur(function () {
            $(this).closest('.field').removeClass('focus');
        });
        jSpecification.append($('<div class="field-text"/>').append('<label for="' + gThis.GetId() + '__weight">Waga</label>').append($('<span class="field"/>').append(jWeight)));
        jWeight.val(oVariant.weight);

        jWeight.keypress(function (eEvent) {
            if (eEvent.keyCode == 13) {
                eEvent.preventDefault();
                eEvent.stopImmediatePropagation();
                gThis.SaveVariant();
            }
        });

        var jPhoto = $('<div class="attribute-photos" />');
        jPhoto.append('<h3>Choose photo</h3><input type="hidden" id="' + gThis.GetId() + '__photo" value="' + oVariant.photo + '" />');
        for (var i = 0; i < gThis.m_oOptions.aoPhotos.length; i++) {
            jPhoto.append('<img' + ((gThis.m_oOptions.aoPhotos[i].id == oVariant.photo) ? ' class="selected"' : '') + ' id="' + gThis.m_oOptions.aoPhotos[i].id + '" src="' + gThis.m_oOptions.aoPhotos[i].thumb + '" />');
        }
        jSpecification.append(jPhoto);

        jPhoto.find('img').click(function () {
            if ($(this).hasClass('selected')) {
                jPhoto.find('img').removeClass('selected');
                var photoid = 0;
            } else {
                jPhoto.find('img').removeClass('selected');
                $(this).addClass('selected');
                var photoid = $(this).attr('id');
            }
            $('#' + gThis.GetId() + '__photo').val(photoid);
        });

        var asExistingAttributes = [];
        var jAttributes = $('<ul class="attributes"/>');
        for (var i in oVariant) {
            if (i.substr(0, 10) != 'attribute_') {
                continue;
            }
            asExistingAttributes.push(i.substr(10));
            jAttributes.append(gThis.AddEditorAttribute(i.substr(10), oVariant[i]));
        }

        var jNew = gThis._GetNewAttributeSelector(asExistingAttributes);
        if (jNew != GCore.NULL) {
            jAttributes.append(jNew);
        }

        gThis.m_jVariantEditor.append(jAttributes);

        gThis.m_jVariantEditor.slideDown(200);
    };

    gThis._GetNewAttributeSelector = function (asExistingAttributes) {
        var jLi = $('<li class="field-select new"/>');
        var jSelect = $('<select id="' + gThis.GetId() + '__attribute_new"/>').focus(function () {
            $(this).closest('.field').addClass('focus');
        }).blur(function () {
            $(this).closest('.field').removeClass('focus');
        });

        jSelect.append('<option value="">' + GForm.Language.product_variants_editor_choose_attribute + '</option>');
        var j = 0;
        for (var i = 0; i < gThis.m_aoAttributes.length; i++) {
            if ($.inArray(gThis.m_aoAttributes[i].id, asExistingAttributes) != -1) {
                continue;
            }
            jSelect.append('<option value="' + gThis.m_aoAttributes[i].id + '">' + gThis.m_aoAttributes[i].name + '</option>');
            j++;
        }
        if (j == 0) {
            return GCore.NULL;
        }
        jLi.append($('<span class="field"/>').append(jSelect));
        jSelect.GSelect();
        jSelect.change(function () {
            var sAttributeId = $(this).find('option:selected').attr('value');
            var sAttributeName = $(this).find('option:selected').text();
            if (sAttributeId == '') {
                return;
            }
            $(this).closest('ul').append(gThis.AddEditorAttribute(sAttributeId));
            var asExistingAttributes = gThis._MakeExistingAttributesList($(this));
            var jNew = gThis._GetNewAttributeSelector(asExistingAttributes);
            if (jNew != GCore.NULL) {
                $(this).closest('ul').append(jNew);
            }
            $(this).closest('li').remove();
        });
        return jLi;
    };

    gThis._MakeExistingAttributesList = function (jContext) {
        var asExistingAttributes = [];
        var jSelects = jContext.closest('ul').find('li select[name^="attribute_"]');
        for (var i = 0; i < jSelects.length; i++) {
            asExistingAttributes.push(jSelects.eq(i).attr('name').substr(10));
        }
        return asExistingAttributes;
    };

    gThis.AddEditorAttribute = function (sAttributeId, sValue) {
        var sAttributeName = '';
        for (var i in gThis.m_aoAttributes) {
            if (gThis.m_aoAttributes[i].id == sAttributeId) {
                sAttributeName = gThis.m_aoAttributes[i].name;
                aoValues = gThis.m_aoAttributes[i].values;
            }
        }
        var jLi = $('<li class="field-select"/>');
        var jSelect = $('<select id="' + gThis.GetId() + '__attribute_' + sAttributeId + '" name="attribute_' + sAttributeId + '"/>').focus(function () {
            $(this).closest('.field').addClass('focus');
        }).blur(function () {
            $(this).closest('.field').removeClass('focus');
        });

        for (var i = 0; i < aoValues.length; i++) {
            jSelect.append('<option' + ((aoValues[i].name == sValue) ? ' selected="selected"' : '') + ' value="' + aoValues[i].id + '">' + aoValues[i].name + '</option>');
        }
        jLi.append('<label for="' + gThis.GetId() + '__attribute_' + sAttributeId + '">' + sAttributeName + '</label>');
        jLi.append($('<span class="field"/>').append(jSelect));
        jSelect.GSelect();

        var jDelete = $('<a href="#" class="delete"/>');
        jDelete.click(function () {
            var jUl = $(this).closest('ul');
            jUl.children('.new').remove();
            $(this).closest('li').remove();
            var asExistingAttributes = gThis._MakeExistingAttributesList(jUl);
            var jNew = gThis._GetNewAttributeSelector(asExistingAttributes);
            if (jNew != GCore.NULL) {
                jUl.append(jNew);
            }
            return false;
        });
        jLi.append(jDelete.append('<img src="' + gThis._GetImage('DeleteIcon') + '" alt=""/>'));

        return jLi;
    };

    gThis.AddVariant = function (oVariant) {
        if (oVariant == undefined) {
            var sId = 'new-' + gThis.m_sRepetitionCounter++;
            gThis.m_gDataProvider.AddRow(gThis._GetDefaultVariant(sId));
        }

        return sId;
    };

    gThis.SaveVariant = function () {
        if (gThis.m_sEditedVariant == GCore.NULL) {
            return;
        }

        var modifierField = $('#' + gThis.GetId() + '__modifier_type option:selected');

        var oRow = {
            id: gThis.m_sEditedVariant,
            modifier_type: modifierField.text(),
            modifier_value: $('#' + gThis.GetId() + '__modifier_value').val(),
            photo: $('#' + gThis.GetId() + '__photo').val(),
            availability: $('#' + gThis.GetId() + '__availability').val(),
            stock: $('#' + gThis.GetId() + '__stock').val().replace(/,/, '.'),
            symbol: $('#' + gThis.GetId() + '__symbol').val(),
            status: $('#' + gThis.GetId() + '__status').val(),
            weight: $('#' + gThis.GetId() + '__weight').val().replace(/,/, '.'),
        };

        var jSelects = gThis.m_jVariantEditor.find('.attributes li select[name^="attribute_"]');
        for (var i = 0; i < jSelects.length; i++) {
            var sAttributeId = jSelects.eq(i).attr('name').substr(10);
            var sValueId = jSelects.eq(i).find('option:selected').attr('value');
            var sValueName = jSelects.eq(i).find('option:selected').text();
            oRow['attribute_' + sAttributeId] = sValueName;
            oRow['attributeid_' + sAttributeId] = sValueId;
        }
        gThis.m_gDataProvider.UpdateRow(gThis.m_sEditedVariant, oRow);
        gThis.m_gDatagrid.LoadData();
    };

    gThis._PrepareNode = function () {
        gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));

        gThis.m_jField = $('<div/>');

        gThis._PrepareSetSelect();
        gThis._PrepareSetEditor();

        gThis.m_jDatagrid = $('<div/>');
        gThis.m_jNode.append(gThis.m_jDatagrid);
        gThis.m_jNode.append(gThis.m_jField);
    };

    gThis._PrepareVariantEditor = function () {
        gThis.m_jVariantEditor = $('<div class="variant-editor"/>');
        gThis.m_jVariantEditorWrapper = $('<div class="variant"/>');
        gThis.m_jVariantEditorWrapper.css('display', 'none');
        gThis.m_jVariantEditorWrapper.append(gThis.m_jVariantEditor);
        gThis.m_jVariantEditorOptions = $('<ul class="options"/>');
        gThis.m_jVariantEditorWrapper.append(gThis.m_jVariantEditorOptions);
        var jAdd = $('<a class="add button" href="#"/>');
        jAdd.append('<span><img src="' + gThis._GetImage('AddIcon') + '" alt=""/>' + GForm.Language.product_variants_editor_add_variant + '</span>');
        var jSave = $('<a class="save button" href="#"/>');
        jSave.append('<span><img src="' + gThis._GetImage('SaveIcon') + '" alt=""/>' + GForm.Language.product_variants_editor_save_variant + '</span>');
        var jGenerate = $('<a class="add button" href="#"/>');
        jGenerate.append('<span><img src="' + gThis._GetImage('AddIcon') + '" alt=""/>Generuj automatycznie</span>');
        if (gThis.m_oOptions.bAllowGenerate == 1) {
            gThis.m_jVariantEditorOptions.append($('<li/>').append(jGenerate));
        }
        gThis.m_jVariantEditorOptions.append($('<li/>').append(jAdd));
        gThis.m_jVariantEditorOptions.append($('<li/>').append(jSave));
        gThis.m_jNode.append(gThis.m_jVariantEditorWrapper);

        jAdd.click(GEventHandler(function (eEvent) {
            var sId = gThis.AddVariant();
            gThis.m_gDatagrid.m_asSelected = [sId];
            gThis.SaveVariant();
            gThis._InitVariantEditor(sId);
            return false;
        }));

        jSave.click(GEventHandler(function (eEvent) {
            gThis.SaveVariant();
            return false;
        })).css('display', 'none');

        jGenerate.click(GEventHandler(function () {
            var aoAttributes = [];
            $(".generate:checked").each(function () {
                aoAttributes.push(this.value);
            });
            if (aoAttributes.length) {
                if (gThis.m_aoVariants.length > 0) {
                    var title = 'Automatyczne wygenerowanie wariantów';
                    var msg = 'Wybranie tej opcji usunie wszystkie dotychczasowe dotychczasowe warianty i wygeneruje kombinacje na nowo. Czy jesteś pewien ?';
                    var params = {};
                    var func = function (p) {
                        gThis.m_gDataProvider.ChangeData();
                        gThis.m_gDatagrid.LoadData();
                        gThis._GenerateCartesian(aoAttributes);
                    };
                    new GF_Alert(title, msg, func, true, params);
                } else {
                    gThis._GenerateCartesian(aoAttributes);
                }
            } else {
                GError('Nie wybrano cech', 'Aby wygenerować automatycznie warianty musisz wybrać cechy zaznaczając checkbox obok ich nazwy.');
            }
            return false;
        }));
    };

    gThis._GenerateCartesian = function (aoAttributes) {
        var sSetId = $('#variants_pane__variants__set').find('option:selected').val();
        gThis.m_oOptions.fGetCartesian({
            setid: sSetId,
            ids: aoAttributes
        }, GCallback(gThis._OnVariantsGenerated));
    };

    gThis._OnVariantsGenerated = GEventHandler(function (eEvent) {

        $.each(eEvent.variants, function (k, key) {
            var sId = 'new-' + gThis.m_sRepetitionCounter++;
            var oRow = {
                id: sId,
                modifier_type: '%',
                modifier_value: 100,
                stock: 0,
                photo: 0,
                availability: 0,
                symbol: '',
                status: 1,
                weight: 0
            };
            $.each(key, function (a, attribute) {
                oRow['attribute_' + attribute.sAttributeId] = attribute.sValueName;
                oRow['attributeid_' + attribute.sAttributeId] = attribute.sValueId;
            });
            gThis.m_gDataProvider.AddRow(oRow);
            gThis.m_gDatagrid.m_asSelected = [sId];
        });
        gThis.m_gDatagrid.LoadData();
        gThis.Update();
    });

    gThis._PrepareSetSelect = function () {
        jSetSelectField = $('<div class="field-select"/>');
        jSetSelectField.append('<label for="' + gThis.GetId() + '__set">' + GForm.Language.product_variants_editor_set_for_this_product + ' <small>' + GForm.Language.product_variants_editor_set_for_this_product_suffix + '</small></label>');
        gThis.m_jSetSelectNode = $('<span class="repetition"/>');
        jSetSelectField.append(gThis.m_jSetSelectNode);
        gThis._CreateSetSelectNode([]);
        gThis.m_jNode.append(jSetSelectField);
    };

    gThis._CreateSetSelectNode = function (aoOptions) {
        gThis.m_jSetSelect = $('<select id="' + gThis.GetId() + '__set" name="' + gThis.GetName() + '[set]"/>');
        gThis.m_jSetSelectNode.empty().append($('<span class="field"/>').append(gThis.m_jSetSelect));
        for (var i = 0; i < aoOptions.length; i++) {
            gThis.m_jSetSelect.append('<option' + ((aoOptions[i].id == gThis.m_oOptions.sSet) ? ' selected="selected"' : '') + ' value="' + aoOptions[i].id + '"' + (aoOptions[i].current_category ? ' class="strong"' : '') + '>' + aoOptions[i].name + '</option>');
        }
    };

    gThis.LoadSets = function () {
        gThis.m_jSetEditorLabel.css('display', 'none');
        gThis.m_jSetEditor.add(gThis.m_jDatagrid).add(gThis.m_jVariantEditorWrapper).animate({
            opacity: 0
        }, 250);
        var jWaiting = $('<span class="' + gThis._GetClass('Waiting') + '"/>');
        gThis.m_jSetSelect.closest('.' + gThis._GetClass('FieldSpan')).parent().find('.' + gThis._GetClass('Waiting')).remove();
        gThis.m_jSetSelect.closest('.' + gThis._GetClass('FieldSpan')).parent().append(jWaiting);
        jWaiting.css('display', 'none').fadeIn(250);
        var jCategories = $(gThis.m_gForm).find('input[name*="[' + gThis.m_oOptions.sCategoryField + '][]"]');
        var asCategories = [];
        for (var i = 0; i < jCategories.length; i++) {
            asCategories.push(jCategories.eq(i).val());
        }

        GF_Ajax_Request(Routing.generate(gThis.m_oOptions.sGetGroupsRoute), {
            'categories': asCategories
        }, gThis.OnSetsLoaded);
    };

    gThis.OnSetsLoaded = GEventHandler(function (eEvent) {
        gThis.m_aoSets = eEvent.sets;
        gThis.ReplaceSetSelect();
        gThis.m_jSetEditorLabel.fadeIn(250);
    });

    gThis.ReplaceSetSelect = function () {
        gThis._CreateSetSelectNode(gThis.m_aoSets);
        gThis.m_jSetSelect.GSelect();
        gThis.m_jSetSelect.closest('.' + gThis._GetClass('FieldSpan')).parent().find('.' + gThis._GetClass('Waiting')).fadeOut(250, function () {
            $(this).remove();
        });
        gThis.m_jSetSelect.change(GEventHandler(function () {
            gThis.LoadAttributes();
        })).change();
    };

    gThis._PrepareSetEditor = function () {
        gThis.m_jSetEditor = $('<ul class="set-editor"/>');
        gThis.m_jSetEditor.css('display', 'none');
        gThis.m_jSetEditorLabel = $('<h3/>');
        gThis.m_jSetEditorLabel.append('<span>' + GForm.Language.product_variants_editor_availble_attributes + '</span>');
        gThis.m_jSetEditorLabel.css('display', 'none');
        gThis.m_jNode.append(gThis.m_jSetEditorLabel);
        gThis.m_jNode.append(gThis.m_jSetEditor);
    };

    gThis.ReplaceSetEditor = function () {
        gThis.m_jSetEditor.empty();
        for (var i = 0; i < gThis.m_aoAttributes.length; i++) {
            var jAttribute = $('<li/>');
            jAttribute.append('<h4>' + gThis.m_aoAttributes[i].name + '</h4>');
            var jUl = $('<ul/>');
            for (var j = 0; j < gThis.m_aoAttributes[i].values.length; j++) {
                var oValue = gThis.m_aoAttributes[i].values[j];
                var jValue = $('<li><input type="checkbox" class="generate" value="' + oValue.id + '" /> ' + oValue.name + '</li>');
                jUl.append(jValue);
            }
            var jSaveValue = $('<a class="save" href="#"/>').append('<img src="' + gThis._GetImage('SaveIcon') + '" alt="' + GForm.Language.product_variants_editor_save_value + '" title="' + GForm.Language.product_variants_editor_save_value + '"/>');
            var jValueField = $('<input class="value" type="text"/>').focus(function () {
                $(this).closest('.field').addClass('focus');
            }).blur(function () {
                $(this).closest('.field').removeClass('focus');
            });
            jValueField.bind('keydown', function (eEvent) {
                if (eEvent.keyCode == 13) {
                    eEvent.stopImmediatePropagation();
                    eEvent.preventDefault();
                    $(this).closest('li').find('.save').trigger('click');
                }
            });
            jValueField.get(0).sAttributeId = gThis.m_aoAttributes[i].id;
            var jValueFieldWrapper = $('<span class="field-text"/>').append($('<span class="field">').append(jValueField)).hide();
            var jAddValue = $('<a class="add" href="#"/>').append('<img src="' + gThis._GetImage('AddIcon') + '" alt="' + GForm.Language.product_variants_editor_add_value + '" title="' + GForm.Language.product_variants_editor_add_value + '"/>');
            jAddValue.click(function () {
                $(this).closest('li').find('.add').hide();
                $(this).closest('li').find('.field-text').show();
                $(this).closest('li').find('.save').show();
                $(this).closest('li').find('.value').focus();
                return false;
            });
            jSaveValue.click(function () {
                var sValue = $(this).closest('li').find('.value').val();
                if ((sValue != undefined) && sValue.length) {
                    gThis.AddValue(sValue, $(this).closest('li').find('.value').get(0).sAttributeId, gThis.m_jSetSelect.find('option:selected').attr('value'));
                }
                $(this).closest('li').find('.value').val('');
                $(this).closest('li').find('.field-text').hide();
                $(this).closest('li').find('.save').hide();
                $(this).closest('li').find('.add').show();
                $(this).closest('li').find('.add').focus();
                return false;
            }).hide();
            jUl.append($('<li class="new"/>').append(jAddValue).append(jValueFieldWrapper).append(jSaveValue));
            jAttribute.append(jUl);
            gThis.m_jSetEditor.append(jAttribute);
        }
        var jSaveAttribute = $('<a class="save" href="#"/>').append('<img src="' + gThis._GetImage('SaveIcon') + '" alt="' + GForm.Language.product_variants_editor_save_attribute + '" title="' + GForm.Language.product_variants_editor_save_attribute + '"/>');
        var jAttributeField = $('<input class="attribute" type="text"/>').focus(function () {
            $(this).closest('.field').addClass('focus');
        }).blur(function () {
            $(this).closest('.field').removeClass('focus');
        });
        jAttributeField.bind('keydown', function (eEvent) {
            if (eEvent.keyCode == 13) {
                eEvent.stopImmediatePropagation();
                eEvent.preventDefault();
                $(this).closest('h4').find('.save').trigger('click');
            }
        });
        var jAttributeFieldWrapper = $('<span class="field-text"/>').append($('<span class="field">').append(jAttributeField)).hide();
        var jAddAttribute = $('<a class="add" href="#"/>').append('<img src="' + gThis._GetImage('AddIcon') + '" alt="' + GForm.Language.product_variants_editor_add_attribute + '" title="' + GForm.Language.product_variants_editor_add_attribute + '"/>');
        jAddAttribute.click(function () {
            $(this).closest('h4').find('.add').hide();
            $(this).closest('h4').find('.field-text').show();
            $(this).closest('h4').find('.save').show();
            $(this).closest('h4').find('.attribute').focus();
            return false;
        });
        jSaveAttribute.click(function () {
            var sAttribute = $(this).closest('h4').find('.attribute').val();
            if ((sAttribute != undefined) && sAttribute.length) {
                gThis.AddAttribute(sAttribute, gThis.m_jSetSelect.find('option:selected').attr('value'));
            }
            $(this).closest('h4').find('.attribute').val('');
            $(this).closest('h4').find('.field-text').hide();
            $(this).closest('h4').find('.save').hide();
            $(this).closest('h4').find('.add').show();
            $(this).closest('h4').find('.add').focus();
            return false;
        }).hide();
        gThis.m_jSetEditor.append($('<li/>').append($('<h4/>').append(jAddAttribute).append(jAttributeFieldWrapper).append(jSaveAttribute)));
    };

    gThis.AddAttribute = function (sAttribute, sSet) {
        gThis.m_jSetEditor.animate({opacity: .5}, 250);
        gThis.m_jDatagrid.animate({opacity: .5}, 250);
        gThis.m_jVariantEditorWrapper.animate({opacity: .5}, 250);
        (!gThis.m_jSetEditorLabel.find('.' + gThis._GetClass('Waiting')).length) && gThis.m_jSetEditorLabel.append($('<span class="' + gThis._GetClass('Waiting') + '"/>').css('display', 'none').fadeIn(150));
        GF_Ajax_Request(Routing.generate(gThis.m_oOptions.sAddAttributeRoute), {
            name: sAttribute,
            set: sSet
        }, gThis.OnAttributeAdded);
    };

    gThis.OnAttributeAdded = GEventHandler(function (eEvent) {
        gThis.LoadAttributes();
    });

    gThis.AddValue = function (sValue, sAttribute, sSet) {
        gThis.m_jSetEditor.animate({opacity: .5}, 250);
        gThis.m_jDatagrid.animate({opacity: .5}, 250);
        gThis.m_jVariantEditorWrapper.animate({opacity: .5}, 250);
        (!gThis.m_jSetEditorLabel.find('.' + gThis._GetClass('Waiting')).length) && gThis.m_jSetEditorLabel.append($('<span class="' + gThis._GetClass('Waiting') + '"/>').css('display', 'none').fadeIn(150));
        GF_Ajax_Request(Routing.generate(gThis.m_oOptions.sAddAttributeValueRoute), {
            name: sValue,
            attribute: sAttribute,
            set: sSet
        }, gThis.OnValueAdded);
    };

    gThis.OnValueAdded = GEventHandler(function () {
        gThis.LoadAttributes();
    });

    gThis.LoadAttributes = function () {
        gThis.m_jSetEditor.animate({opacity: .5}, 250);
        gThis.m_jDatagrid.animate({opacity: .5}, 250);
        gThis.m_jVariantEditorWrapper.animate({opacity: .5}, 250);
        (!gThis.m_jSetEditorLabel.find('.' + gThis._GetClass('Waiting')).length) && gThis.m_jSetEditorLabel.append($('<span class="' + gThis._GetClass('Waiting') + '"/>').css('display', 'none').fadeIn(150));
        var sSetId = gThis.m_jSetSelect.find('option:selected').attr('value');
        GF_Ajax_Request(Routing.generate(gThis.m_oOptions.sGetAttributesRoute), {
            id: sSetId
        }, gThis.OnAttributesLoaded);
    };

    gThis.OnAttributesLoaded = new GEventHandler(function (eEvent) {
        gThis.m_aoAttributes = eEvent.attributes;
        if (gThis.m_mDataToPopulate != undefined) {
            gThis.Populate(gThis.m_mDataToPopulate);
            delete gThis.m_mDataToPopulate;
        }
        gThis.ReplaceSetEditor();
        gThis._InitDatagrid();
        gThis.m_jSetEditorLabel.find('.' + gThis._GetClass('Waiting')).fadeOut(150, function () {
            $(this).remove();
        });
        gThis.m_jSetEditor.slideDown(250);
        gThis.m_jVariantEditorWrapper.slideDown(250);
        gThis.m_jSetEditor.animate({opacity: 1}, 250);
        gThis.m_jDatagrid.animate({opacity: 1}, 250);
        gThis.m_jVariantEditorWrapper.animate({opacity: 1}, 250);
    });

    gThis.OnReset = function () {
        gThis.m_bFirstLoad = true;
    };

    gThis.Populate = function (mValue) {
        if (mValue instanceof Object) {
            if (!gThis.m_aoAttributes.length) {
                gThis.m_mDataToPopulate = mValue;
            }
            var aoData = [];
            for (var i in mValue) {
                var oVariant = {
                    id: mValue[i].id,
                    modifier_type: mValue[i].suffix,
                    modifier_value: mValue[i].modifier,
                    stock: mValue[i].stock,
                    availability: mValue[i].availability,
                    photo: mValue[i].photo,
                    symbol: mValue[i].symbol,
                    status: mValue[i].status,
                    weight: mValue[i].weight,
                };
                if (mValue[i]['attributes'] != undefined) {
                    for (var j in mValue[i]['attributes']) {
                        oVariant['attributeid_' + j] = mValue[i]['attributes'][j];
                        for (var k in gThis.m_aoAttributes) {
                            if (gThis.m_aoAttributes[k].id == j) {
                                for (var l in gThis.m_aoAttributes[k]['values']) {
                                    if (gThis.m_aoAttributes[k]['values'][l].id == mValue[i]['attributes'][j]) {
                                        oVariant['attribute_' + j] = gThis.m_aoAttributes[k]['values'][l].name;
                                    }
                                }
                            }
                        }
                    }
                }
                aoData.push(oVariant);
            }
            gThis.m_aoVariants = aoData.slice(0);
            gThis.Update();
        }
        if (!(gThis.m_gDataProvider instanceof GF_Datagrid_Data_Provider)) {
            return;
        }
        gThis.Update();
    };

    gThis.OnShow = function () {
        if (!gThis.m_bShown) {
            gThis._PrepareVariantEditor();
            gThis.Populate(gThis.m_oOptions.asDefaults);
            gThis.m_jSetSelect.GSelect();
            gThis.m_bShown = true;
        }
        else {
            if (gThis.m_gDataProvider instanceof GF_Datagrid_Data_Provider) {
                gThis.m_gDataProvider._ProcessAllRows();
                gThis.m_gDatagrid.LoadData();
            }
        }
        gThis.LoadSets();
    };

    gThis._InitColumns = function (aoAttributeColumns) {

        if (aoAttributeColumns == undefined) {
            aoAttributeColumns = [];
        }

        var column_id = new GF_Datagrid_Column({
            id: 'id',
            caption: GForm.Language.product_variants_editor_id,
            appearance: {
                width: 40,
                visible: false
            },
            filter: {
                type: GF_Datagrid.FILTER_BETWEEN
            }
        });

        var column_stock = new GF_Datagrid_Column({
            id: 'stock',
            caption: GForm.Language.product_variants_editor_stock,
            appearance: {
                width: 50
            },
            filter: {
                type: GF_Datagrid.FILTER_BETWEEN
            }
        });

        var column_symbol = new GF_Datagrid_Column({
            id: 'symbol',
            caption: 'Symbol',
            appearance: {
                width: 170
            },
            filter: {
                type: GF_Datagrid.FILTER_INPUT
            }
        });

        var column_status = new GF_Datagrid_Column({
            id: 'status',
            caption: 'Status',
            appearance: {
                width: 40
            },
            filter: {
                type: GF_Datagrid.FILTER_SELECT,
                options: [
                    {id: '', caption: ''},
                    {id: '1', caption: 'Aktywny'},
                    {id: '0', caption: 'Nieaktywny'}
                ],
            }
        });

        var column_weight = new GF_Datagrid_Column({
            id: 'weight',
            caption: 'Waga',
            appearance: {
                width: 60
            },
            filter: {
                type: GF_Datagrid.FILTER_BETWEEN
            }
        });

        var column_modifier = new GF_Datagrid_Column({
            id: 'modifier',
            caption: GForm.Language.product_variants_editor_modifier,
            appearance: {
                width: 70
            }
        });

        var aoColumns = [column_id];
        aoColumns = aoColumns.concat(aoAttributeColumns, [
            column_stock,
            column_symbol,
            column_status,
            column_weight,
            column_modifier
        ]);

        return aoColumns;

    };

    gThis.DeleteVariant = function (iDg, mId) {

        if (!(mId instanceof Array)) {
            mId = [mId];
        }
        for (var i = 0; i < mId.length; i++) {
            var oRow = gThis.m_gDataProvider.GetRow(mId);
            if (mId == gThis.m_sEditedVariant) {
                gThis.m_sEditedVariant = GCore.NULL;
                gThis.m_jVariantEditor.empty();
                gThis.m_jVariantEditorOptions.find('.save').fadeOut(150);
            }
            gThis.m_gDataProvider.DeleteRow(mId[i]);
        }
        gThis.m_gDatagrid.LoadData();
    };

    gThis._GetDefaultVariant = function (sId) {
        var sSuffixId = '';
        for (var i in gThis.m_oOptions.aoSuffixes) {
            if (gThis.m_oOptions.aoSuffixes[i].symbol == '%') {
                sSuffixId = gThis.m_oOptions.aoSuffixes[i].id;
            }
        }
        return {
            id: sId,
            modifier_type: '%',
            modifier_value: '100.00',
            stock: '0',
            symbol: '',
            status: 1,
            weight: 0
        }
    };

    gThis.AddVariant = function (oVariant) {
        if (oVariant == undefined) {
            var sId = 'new-' + gThis.m_sRepetitionCounter++;
            gThis.m_gDataProvider.AddRow(gThis._GetDefaultVariant(sId));
        }
        else {
            var sId = oVariant.id;
            gThis.m_gDataProvider.AddRow(oVariant);
        }
        gThis.m_gDatagrid.LoadData();
        return sId;
    };

    gThis.Update = function () {
        gThis.m_jField.empty();
        if (gThis.m_gDataProvider instanceof GF_Datagrid_Data_Provider) {
            gThis.m_aoVariants = gThis.m_gDataProvider.GetData();
        }
        for (var i = 0; i < gThis.m_aoVariants.length; i++) {
            var oVariant = gThis.m_aoVariants[i];
            gThis.m_jField.append('<input value="' + oVariant['modifier_type'] + '" name="' + gThis.GetName() + '[' + oVariant.id + '][suffix]" type="hidden"/>');
            gThis.m_jField.append('<input value="' + oVariant['modifier_value'] + '" name="' + gThis.GetName() + '[' + oVariant.id + '][modifier]" type="hidden"/>');
            gThis.m_jField.append('<input value="' + oVariant['stock'] + '" name="' + gThis.GetName() + '[' + oVariant.id + '][stock]" type="hidden"/>');
            gThis.m_jField.append('<input value="' + oVariant['symbol'] + '" name="' + gThis.GetName() + '[' + oVariant.id + '][symbol]" type="hidden"/>');
            gThis.m_jField.append('<input value="' + oVariant['status'] + '" name="' + gThis.GetName() + '[' + oVariant.id + '][status]" type="hidden"/>');;
            gThis.m_jField.append('<input value="' + oVariant['weight'] + '" name="' + gThis.GetName() + '[' + oVariant.id + '][weight]" type="hidden"/>');
            gThis.m_jField.append('<input value="' + oVariant['availability'] + '" name="' + gThis.GetName() + '[' + oVariant.id + '][availability]" type="hidden"/>');
            gThis.m_jField.append('<input value="' + oVariant['photo'] + '" name="' + gThis.GetName() + '[' + oVariant.id + '][photo]" type="hidden"/>');
            for (var j in oVariant) {
                if (j.substr(0, 12) != 'attributeid_') {
                    continue;
                }
                gThis.m_jField.append('<input value="' + oVariant[j] + '" name="' + gThis.GetName() + '[' + oVariant.id + '][attributes][' + j.substr(12) + ']" type="hidden"/>');
            }
        }
    };

    gThis._PrepareColumnsFromAttributes = function () {
        var aoColumns = [];
        for (var i = 0; i < gThis.m_aoAttributes.length; i++) {
            var oAttribute = gThis.m_aoAttributes[i];
            var aoValues = [];
            for (var j = 0; j < oAttribute['values'].length; j++) {
                aoValues.push({
                    id: oAttribute['values'][j]['name'],
                    caption: oAttribute['values'][j]['name']
                });
            }
            aoColumns.push(new GF_Datagrid_Column({
                id: 'attribute_' + oAttribute['id'],
                caption: oAttribute['name'],
                appearance: {
                    visible: i < 4
                },
                filter: {
                    type: GF_Datagrid.FILTER_SELECT,
                    options: [
                        {id: '', caption: ''}
                    ].concat(aoValues)
                }
            }));
        }
        return aoColumns;
    };

    gThis.PreProcessVariants = function (oRow) {
        oRow.modifier_value = (!isNaN(parseFloat(oRow.modifier_value))) ? parseFloat(oRow.modifier_value).toFixed(2) : '0.00';

        return oRow;
    };

    gThis.ProcessVariant = function (oRow) {
        oRow.status = (oRow.status == 1) ? 'Aktywny' : 'Nieaktywny';
        oRow.modifier_value = (!isNaN(parseFloat(oRow.modifier_value))) ? parseFloat(oRow.modifier_value).toFixed(2) : '0.00';
        switch (oRow.modifier_type) {
			case '%':
				if (!isNaN(parseFloat(oRow.modifier_value))) {
					oRow.modifier = parseFloat(oRow.modifier_value).toFixed(2) + '%';
				}
				break;
			case '+':
				if (!isNaN(parseFloat(oRow.modifier_value))) {
					oRow.modifier = '+' + parseFloat(oRow.modifier_value).toFixed(2);
				}
				break;
			case '-':
				if (!isNaN(parseFloat(oRow.modifier_value))) {
					oRow.modifier = '-' + parseFloat(oRow.modifier_value).toFixed(2);
				}
				break;
		}

        return oRow;
    };

    gThis._InitDatagrid = function () {

        gThis.m_jDatagrid.empty().attr('class', '');

        gThis.m_gDataProvider = new GF_Datagrid_Data_Provider({
            key: 'id',
            preProcess: gThis.PreProcessVariants,
            event_handlers: {
                change: GEventHandler(function (rows) {
                    gThis.Update();
                })
            }
        }, gThis.m_aoVariants);

        var aoAttributeColumns = gThis._PrepareColumnsFromAttributes();

        var aoColumns = gThis._InitColumns(aoAttributeColumns);

        var oOptions = {
            id: gThis.GetId() + '_variants',
            mechanics: {
                rows_per_page: 150,
                key: 'id',
                only_one_selected: true,
                persistent: false
            },
            event_handlers: {
                load: GEventHandler(function (oRequest, sResponseHandler) {
                    gThis.m_gDataProvider.Load(oRequest, sResponseHandler);
                }),
                process: gThis.ProcessVariant,
                delete_row: gThis.DeleteVariant,
                delete_group: gThis.DeleteVariant,
                select: gThis._OnSelect,
                deselect: gThis._OnDeselect
            },
            columns: aoColumns,
            row_actions: [
                GF_Datagrid.ACTION_DELETE
            ],
            group_actions: [
                GF_Datagrid.ACTION_DELETE_GROUP
            ]
        };
        gThis.m_gDatagrid = new GF_Datagrid(gThis.m_jDatagrid, oOptions);

        gThis.Update();

    };

}, oDefaults);

/*
* REPETITION LANGUAGE
*/

var oDefaults = {
	sName: '',
	oClasses: {
		sRepetitionClass: 'GFormRepetition',
		sDeleteButtonClass: 'delete-repetition'
	},
	oImages: {
		sDelete: 'images/buttons/small-delete.png',
		sAdd: 'images/buttons/small-add.png'
	},
	aoLanguages: [],
	aoFields: [],
	agFields: []
};

var GFormRepetitionLanguage = GCore.ExtendClass(GFormContainer, function(options) {

	var gThis = this;
	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div class="' + gThis._GetClass('Repetition') + '"/>');
		var jFlag = $('<a href="#" class="flag-repetition" tabindex="-1"/>');
		$.each(options.aoLanguages,function(l, language){
			if(language.sValue == options.sName) {
				jFlag.append('<img class="locale" data-locale="'+ options.sName +'" src="' + GCore.DESIGN_PATH+"images/languages/"+language.sFlag + '" alt="' + language.sLabel + '" title="' + language.sLabel + '"/>');
			}
		});

		gThis.m_jNode.append(jFlag);
		gThis.m_jNode.append(gThis.RenderChildren());
	};

}, oDefaults);
/*
* REPETITION
*/

var oDefaults = {
	sName: '',
	oClasses: {
		sRepetitionClass: 'GFormRepetition',
		sDeleteButtonClass: 'delete-repetition'
	},
	oImages: {
		sDelete: 'images/buttons/small-delete.png',
		sAdd: 'images/buttons/small-add.png'
	},
	aoFields: [],
	agFields: []
};

var GFormRepetition = GCore.ExtendClass(GFormContainer, function() {

	var gThis = this;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div class="' + gThis._GetClass('Repetition') + '"/>');
		var jDelete = $('<a href="#" class="' + gThis._GetClass('DeleteButton') + '"/>');
		jDelete.append('<img src="' + gThis._GetImage('Delete') + '" alt="' + GForm.Language.delete_repetition + '" title="' + GForm.Language.delete_repetition + '"/>');
		gThis.m_jNode.append(jDelete);
		gThis.m_jNode.append(gThis.RenderChildren());
	};

}, oDefaults);
/*
* RIGHTS TABLE
*/

var oDefaults = {
	sName: '',
	sLabel: '',
	oClasses: {
		sFieldClass: 'field-rights-table',
		sFieldSpanClass: 'field',
		sPrefixClass: 'prefix',
		sSuffixClass: 'suffix',
		sFocusedClass: 'focus',
		sInvalidClass: 'invalid',
		sRequiredClass: 'required',
		sWaitingClass: 'waiting',
		sFieldRepetitionClass: 'repetition'
	},
	sDefault: '',
	aoRules: [],
	sComment: '',
	asControllers: [],
	asActions: []
};

var GFormRightsTable = GCore.ExtendClass(GFormField, function() {

	var gThis = this;

	gThis.m_bDontCheck = false;

	gThis._PrepareNode = function() {
		gThis.m_jNode = $('<div/>').addClass(gThis._GetClass('Field'));
		var jLabel = $('<label for="' + gThis.GetId() + '"/>');
		jLabel.text(gThis.m_oOptions.sLabel);
		if ((gThis.m_oOptions.sComment != undefined) && (gThis.m_oOptions.sComment.length)) {
			jLabel.append(' <small>' + gThis.m_oOptions.sComment + '</small>');
		}
		gThis.m_jNode.append(jLabel);
		gThis.m_jNode.append($('<span class="' + gThis._GetClass('FieldRepetition') + '"/>').append(gThis._PrepareTable()));
	};

	gThis._PrepareTable = function() {
		var jTr;
		var i;
		var j;
		var jTable = $('<table cellspacing="0"/>');
		var jHead = $('<thead/>');
		jTr = $('<tr/>');
		jTr.append('<th>&nbsp;</th>');
		for (i = 0; i < gThis.m_oOptions.asActions.length; i++) {
			jTr.append('<th>' + gThis.m_oOptions.asActions[i].name + '</th>');
		}
		jTr.append('<th class="all">' + GForm.Language.all_actions + '</th>');
		jHead.append(jTr);
		jTable.append(jHead);
		var jBody = $('<tbody/>');
		for (i = 0; i < gThis.m_oOptions.asControllers.length; i++) {
			jTr = $('<tr/>');
			jTr.append('<th scope="row">' + gThis.m_oOptions.asControllers[i].name + '</th>');
			for (j = 0; j < gThis.m_oOptions.asActions.length; j++) {
				jTr.append('<td><input type="hidden" value="0" name="' + gThis.GetName() + '[' + gThis.m_oOptions.asControllers[i].id + '][' + gThis.m_oOptions.asActions[j].id + ']"/><input type="checkbox" value="1" name="' + gThis.GetName() + '[' + gThis.m_oOptions.asControllers[i].id + '][' + gThis.m_oOptions.asActions[j].id + ']"/></td>');
			}
			jTr.append('<td class="all"><input type="checkbox"/></td>');
			jBody.append(jTr);
		}
		jTr = $('<tr class="all"/>');
		jTr.append('<th scope="row">' + GForm.Language.all_controllers + '</th>');
		for (j = 0; j < gThis.m_oOptions.asActions.length; j++) {
			jTr.append('<td><input type="checkbox"/></td>');
		}
		jTr.append('<td>&nbsp;</td>');
		jBody.append(jTr);
		jTable.append(jBody);
		return jTable;
	};

	gThis._Initialize = function() {
		gThis.m_jNode.find('tbody td, tbody th').hover(function() {
			$(this).closest('tr').addClass('active');
			var iIndex = $(this).closest('tr').find('td, th').index($(this).closest('td, th'));
			if (iIndex > 0) {
				$(this).closest('table').find('tr').each(function() {
					$(this).find('td, th').eq(iIndex).addClass('active');
				});
			}
		}, function() {
			$(this).closest('tr').removeClass('active');
			var iIndex = $(this).closest('tr').find('td, th').index($(this).closest('td, th'));
			if (iIndex > 0) {
				$(this).closest('table').find('tr').each(function() {
					$(this).find('td, th').eq(iIndex).removeClass('active');
				});
			}
		});
		gThis.m_jNode.find('td.all input').click(function() {
			if ($(this).is(':checked')) {
				$(this).closest('tr').checkCheckboxes();
			}
			else {
				$(this).closest('tr').unCheckCheckboxes();
			}
		});
		gThis.m_jNode.find('tr.all input').click(function() {
			var iIndex = $(this).closest('tr').find('td, th').index($(this).closest('td, th'));
			if ($(this).is(':checked')) {
				$(this).closest('table').find('tr').each(function() {
					$(this).find('td, th').eq(iIndex).checkCheckboxes();
				});
			}
			else {
				$(this).closest('table').find('tr').each(function() {
					$(this).find('td, th').eq(iIndex).unCheckCheckboxes();
				});
			}
		});
		gThis.m_jNode.find('input').not('.all input').click(gThis.OnInputChange).change(gThis.OnInputChange);
	};

	gThis.OnInputChange = function() {
		gThis._CheckHorizontal.apply(this);
		gThis._CheckVertical.apply(this);
	};

	gThis._CheckHorizontal = function() {
		if (gThis.m_bDontCheck) {
			return;
		}
		if ($(this).closest('tr').find('td:not(.all), th').find('input:not(:checked)').length) {
			$(this).closest('tr').find('.all').unCheckCheckboxes();
		}
		else {
			$(this).closest('tr').find('.all').checkCheckboxes();
		}
	};

	gThis._CheckVertical = function() {
		if (gThis.m_bDontCheck) {
			return;
		}
		var iIndex = $(this).closest('tr').find('td').index($(this).closest('td, th'));
		var jTrs = $(this).closest('table').find('tbody tr:not(.all)');
		var iLength = 0;
		for (var i = 0; i < jTrs.length; i++) {
			iLength += jTrs.eq(i).find('td:eq(' + iIndex + ') input:not(:checked)').length;
			if (iLength) {
				break;
			}
		}
		if (iLength) {
			$(this).closest('table').find('tbody tr.all td:eq(' + iIndex + ')').unCheckCheckboxes();
		}
		else {
			$(this).closest('table').find('tbody tr.all td:eq(' + iIndex + ')').checkCheckboxes();
		}
	};

	gThis.Populate = function(mData) {
		gThis.m_bDontCheck = true;
		for (var iController in mData) {
			for (var iAction in mData[iController]) {
				if (mData[iController][iAction]) {
					gThis.m_jNode.find('input[name="' + gThis.GetName() + '[' + iController + '][' + iAction + ']"]').parent().checkCheckboxes();
				}
			}
		}
		gThis.m_bDontCheck = false;
		gThis.OnShow();
	};

	gThis.OnReset = function() {
		gThis.m_bDontCheck = true;
		gThis.m_jNode.unCheckCheckboxes();
		gThis.m_bDontCheck = false;
		gThis.OnShow();
	};

	gThis.OnShow = function() {
		gThis.m_jNode.find('tbody tr:not(.all)').each(function() {
			$(this).find('td:eq(0) input:checked').each(gThis._CheckHorizontal);
		});
		gThis.m_jNode.find('tbody tr:eq(0)').each(function() {
			$(this).find('td:not(.all) input:checked').each(gThis._CheckVertical);
		});
	};

}, oDefaults);

GFormDate.Language = {
	closeText : 'Zamknij',
	prevText : '&#x3c;Poprzedni',
	nextText : 'Następny&#x3e;',
	currentText : 'Dziś',
	monthNames : [ 'Styczeń', 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec','Lipiec', 'Sierpień', 'Wrzesień', 'Październik', 'Listopad','Grudzień' ],
	monthNamesShort : [ 'Sty', 'Lu', 'Mar', 'Kw', 'Maj', 'Cze', 'Lip', 'Sie','Wrz', 'Pa', 'Lis', 'Gru' ],
	dayNames : [ 'Niedziela', 'Poniedziałek', 'Wtorek', 'Środa', 'Czwartek','Piątek', 'Sobota' ],
	dayNamesShort : [ 'Nie', 'Pn', 'Wt', 'Śr', 'Czw', 'Pt', 'So' ],
	dayNamesMin : [ 'N', 'Pn', 'Wt', 'Śr', 'Cz', 'Pt', 'So' ],
	dateFormat : 'yy-m-d',
	firstDay : 1,
	isRTL : false
};
GException.Language = {
	exception_has_occured : 'Wystąpił błąd!'
};
GForm.Language = {
	select_store : 'Wybierz sklep:',
	add_repetition : 'Add new',
	delete_repetition : 'Delete',
	form_data_invalid : 'Nie można wysłać formularza, ponieważ zawiera on niepoprawne informacje. Przed zapisaniem zmian należy je poprawić.',
	scroll_to_field : 'Przejdź do pola',
	close_alert : 'Zamknij alert',
	next : 'Next',
	previous : 'Back',
	save : 'Save',
	add_field_repetition : 'Dodaj nową wartość',
	remove_field_repetition : 'Usuń wartość',
	all_actions : 'all',
	all_controllers : 'all',
	product_select_id : 'Id',
	product_select_hierarchy : 'Kolejność',
	product_select_product_id : 'Id produktu',
	product_select_name : 'Nazwa',
	product_select_price : 'Cena netto',
	product_select_price_gross : 'Cena brutto',
	product_select_buyprice : 'Cena zakupu netto',
	product_select_buyprice_gross : 'Cena zakupu brutto',
	product_select_barcode : 'Kod',
	product_select_producer : 'Producent',
	product_select_vat : 'VAT',
	product_select_vat_value : 'Podatek',
	product_select_net_subsum : 'Netto',
	product_select_subsum : 'Brutto',
	product_select_categories : 'Kategoria',
	product_select_adddate : 'Data dodania',
	product_select_adduser : 'Autor',
	product_select_editdate : 'Data modyfikacji',
	product_select_edituser : 'Autor modyfikacji',
	product_select_deselect : 'Anuluj wybór',
	product_select_selected : 'Wybrane produkty',
	product_select_quantity : 'Ilość',
	product_select_variant : 'Wariant produktu',
	product_select_add : 'Dodaj',
	product_select_close_add : 'Ukryj listę produktów',
	product_select_sum : 'Suma',
	datagrid_select_selected : 'Wybrane rekordy',
	datagrid_select_deselect : 'Anuluj wybór',
	datagrid_select_dg_error : 'Błąd podczas inicjalizacji Datagrida',
	file_selector_id : 'Id',
	file_selector_filename : 'Name',
	file_selector_filetype : 'Type',
	file_selector_extension : 'Extension',
	file_selector_deselect : 'Anuluj wybór zdjęcia',
	file_selector_thumb : 'Thumbnail',
	file_selector_show_thumb : 'Show thumbnail',
	file_selector_photo : 'Photo',
	file_selector_photo_main : 'Main',
	file_selector_photo_visible : 'Visible',
	file_selector_photo_cancel : 'Cancel selection',
	file_selector_upload_error : 'Error during file upload',
	file_selector_upload_success : 'File uploaded',
	file_selector_processing_error : 'Przetworzanie pliku na serwerze nie powiodło się',
	file_selector_form_blocked : 'Nie wszystkie transfery plików zostały ukończone!',
	file_selector_form_blocked_description : 'Nie można wysłać formularza, dopóki wszystkie transfery nie zostały zakończone. Poczekaj chwilę i spróbuj jeszcze raz.',
	file_selector_selected_image : 'Wybrany plik:',
	product_variants_editor_set_for_this_product : 'Zestaw cech dla tego produktu',
	product_variants_editor_set_for_this_product_suffix : 'sugerowane zestawy są pogrubione',
	product_variants_editor_add_attribute : 'Dodaj nową cechę',
	product_variants_editor_save_attribute : 'Zapisz nową cechę',
	product_variants_editor_add_value : 'Dodaj nową wartość cechy',
	product_variants_editor_save_value : 'Zapisz nową wartość cechy',
	product_variants_editor_id : 'Id wariantu',
	product_variants_editor_stock : 'Magazyn',
	product_variants_editor_modifier_type : 'Typ modyfikatora',
	product_variants_editor_modifier : 'Modyfikator',
	product_variants_editor_price : 'Cena',
	product_variants_editor_add_variant : 'Dodaj nowy wariant',
	product_variants_editor_save_variant : 'Zapisz zmiany',
	product_variants_editor_availble_attributes : 'Cechy dostępne w wybranym zestawie:',
	product_variants_editor_variant_editor_base_net_price : 'Cena podst. netto',
	product_variants_editor_variant_editor_base_gross_price : 'Cena podst. brutto',
	product_variants_editor_variant_editor_modifier_type : 'Rodzaj modyfikatora ceny',
	product_variants_editor_variant_editor_modifier_value : 'Wartość modyfikatora',
	product_variants_editor_variant_editor_net_price : 'Cena netto wariantu',
	product_variants_editor_variant_editor_gross_price : 'Cena brutto wariantu',
	product_variants_editor_variant_editor_stock : 'Stan magazynowy',
	product_variants_editor_choose_attribute : '(wybierz cechę)',
	tree_add_item : 'Dodaj',
	tree_duplicate_item : 'Duplikuj',
	tree_add_subitem : 'Nowa podrzędna',
	tree_delete_item : 'Usuń zaznaczoną',
	tree_save_order : 'Zapisz kolejność',
	tree_restore_order : 'Przywróć kolejność',
	tree_expand_all : 'Rozwiń wszystkie',
	tree_retract_all : 'Zwiń wszystkie',
	tree_ok : 'OK',
	tree_cancel : 'Anuluj',
	tree_found_duplicates : 'Znaleziono dwa elementy o tej samej nazwie na jednym poziomie',
	tree_duplicate_entry_all_levels : 'Znaleziono dwa elementy o tej samej nazwie',
	tree_found_duplicates_description : 'Proponowanej struktury nie można zapisać, ponieważ zawiera zduplikowane elementy na tym samym poziomie w tym samym poddrzewie.',
	tree_duplicate_entry_all_levels_description : 'Proponowanej struktury nie można zapisać, ponieważ zawiera zduplikowane elementy.',
	tree_duplicate_entry : 'Element o tej nazwie już istnieje',
	tree_duplicate_entry_description : 'Na jednym poziomie poddrzewa nie mogą się znaleźć dwa elementy o tej samej nazwie.',
	tree_delete_item_warning : 'Czy na pewno chcesz usunąć tę kategorię?',
	tree_delete_item_warning_description : 'Usunięcie będzie nieodwracalne. Przed usunięciem kategorii należy upewnić się, że nie zawiera ona podkategorii.',
	tree_deselect : 'Anuluj wybór',
	attribute_editor_choose_attribute : '(wybierz lub wpisz cechę)',
	technical_attribute_editor_choose_attribute : '(wybierz grupę lub wpisz nazwę nowej)',
	attribute_editor_rename_attribute : 'Zmień nazwę cechy',
	attribute_editor_rename_attribute_provide_new_name : 'Podaj nową nazwę (pamiętaj, że zmieni się ona we wszystkich grupach i produktach!):',
	attribute_editor_rename_attribute_error : 'Zmiana nazwy cechy nie powiodła się',
	attribute_editor_rename_attribute_error_description : 'Wystąpił błąd podczas dokonywania zmiany w bazie danych.',
	attribute_editor_rename_value : 'Zmień nazwę wartości cechy',
	attribute_editor_rename_value_provide_new_name : 'Podaj nową nazwę (pamiętaj, że zmieni się ona we wszystkich grupach i produktach!):',
	attribute_editor_rename_value_error : 'Zmiana nazwy wartości cechy nie powiodła się',
	attribute_editor_rename_value_error_description : 'Wystąpił błąd podczas dokonywania zmiany w bazie danych.',
	attribute_editor_remove_attribute : 'Usuń z grupy',
	attribute_editor_remove_attribute_from_base : 'Usuń z bazy danych',
	attribute_editor_remove_attribute_from_base_ok : 'Usuń',
	attribute_editor_remove_attribute_from_base_cancel : 'Anuluj',
	attribute_editor_remove_attribute_from_base_confirm : 'Czy na pewno chcesz usunąć tę cechę z bazy danych?',
	attribute_editor_remove_attribute_from_base_confirm_description : 'Spowoduje to utratę wszystkich należących do tej cechy wartości. Ponowne użycie tej cechy będzie wymagało jej dodania do bazy.',
	attribute_editor_remove_attribute_from_base_error : 'Usunięcie cechy z bazy nie powiodło się.',
	attribute_editor_remove_attribute_from_base_error_description : 'Sprawdź, czy usuwana cecha nie jest przypisana któremuś z produktów bądź nie przynależy do innego zestawu cech.',
	attribute_editor_edit_attribute_values : 'Edytuj wartości cechy',
	attribute_editor_remove_value : 'Usuń wartość cechy',
	attribute_editor_add_attribute : 'Dodaj cechę',
	attribute_editor_add_value : 'Dodaj wartość cechy',
	attribute_editor_attributes : 'Cechy',
	technical_attribute_editor_attributes : 'Grupa atrybutów',
	attribute_editor_values : 'Wartości',
	technical_attribute_editor_values : 'Atrybuty',
	client_select_id : 'Id',
	client_select_first_name : 'Imię',
	client_select_surname : 'Nazwisko',
	client_select_email : 'E-mail',
	client_select_phone : 'Telefon',
	client_select_sex : 'Płeć',
	client_select_group : 'Grupa',
	client_select_adddate : 'Data utworzenia konta',
	client_select_editdate : 'Data modyfikacji',
	client_select_add_client : 'Dodaj klienta',
	client_select_select_client : 'Wybierz klienta',
	product_select_close_selection : 'Ukryj listę klientów',
	client_select_client_name : 'Dane osobowe',
	client_select_client_email : 'Adres e-mail',
	client_select_client_group : 'Przynależy do grupy',
	address_different : '(inny adres)',
	address_copy_from : 'Skopiuj adres z:',
	address_update_data : 'Czy zaktualizować dane adresowe?',
	address_update_data_description : 'Zmieniono klienta dla zamówienia. Czy automatycznie ustawić dane płatnika i dane wysyłki na podstawie danych adresowych klienta?',
	product_aggregator_form_blocked : 'Trwa przeliczanie ceny zestawu!',
	product_aggregator_form_blocked_description : 'Nie można zapisać zmian, dopóki przeliczanie nie zostanie ukończone.',
	product_aggregator_count : 'Liczba produktów',
	product_aggregator_sum : 'Suma',
	product_aggregator_setvalue_prohibited : 'Wywołanie metody SetValue dla pola typu FE_ProductAggregator jest niedozwolone.',
	price_modifier_value : 'Wartość modyfikatora',
	price_modifier_modifier : 'Rodzaj modyfikatora',
	range_editor_use_vat : 'Uwzględnij podatek VAT',
	range_editor_vat : 'Stawka VAT',
	range_editor_from : 'od',
	range_editor_to : 'do',
	range_editor_add_range : 'Dodaj nowy zakres poniżej tego',
	range_editor_remove_range : 'Usuń zakres',
	datetime_hour : 'godzina',
	static_listing_collapse : 'Zwiń',
	static_listing_expand : 'Rozwiń',
	preview_trigger_label : '(Podgląd)',
	colour_scheme_picker_colour : 'Kolor',
	colour_scheme_picker_gradient : 'Gradient',
	colour_scheme_picker_image : 'Grafika',
	colour_scheme_picker_background_position : 'Wyrównanie tła',
	colour_scheme_picker_background_repeat : 'Powtarzanie tła',
	colour_scheme_picker_background_repeat_no : 'bez powtarzania',
	colour_scheme_picker_background_repeat_x : 'w poziomie',
	colour_scheme_picker_background_repeat_y : 'w pionie',
	colour_scheme_picker_background_repeat_xy : 'w poziomie i w pionie',
	localfile_select : 'Choose from library',
	localfile_unselect : 'Close library',
	localfiles_select : 'Choose from library',
	localfiles_upload : 'Upload from disk',
	localfile_processing_error : 'File upload unsucessful',
	localfile_none_selected : '(no file chosen)',
	localfile_fullpath : 'Full path',
	localfile_filename : 'File name',
	localfile_filesize : 'File size',
	localfile_fileowner : 'Owner',
	localfile_filemtime : 'Last modified',
	localfile_delete : 'Delete file',
	localfile_delete_warning : 'Czy na pewno chcesz usunąć ten plik?',
	localfile_delete_warning_description : 'Jeśli jest on używany w innym miejscu, jego usunięcie może doprowadzić do niepoprawnego wyświetlania sklepu u klientów.',
	localfile_ok : 'OK',
	localfile_cancel : 'Cancel',
	border_none : 'brak',
	border_side_top : 'Górne obramowanie',
	border_side_right : 'Prawe obramowanie',
	border_side_bottom : 'Dolne obramowanie',
	border_side_left : 'Lewe obramowanie',
	border_separate : 'Rozdziel strony obramowania',
	layout_boxes_list_span : 'Rozciągnij:',
	layout_boxes_list_collapsed : 'Zwinięty',
	layout_boxes_list_add : 'Dodaj boks',
	layout_boxes_list_remove : 'Usuń boks',
	technical_data_choose_set : 'Zestaw atrybutów',
	technical_data_save_set : 'Zapisz jako wybrany zestaw',
	technical_data_save_as_new_set : 'Zapisz zestaw pod nową nazwą',
	technical_data_delete_set : 'Usuń wybrany zestaw',
	technical_data_unsaved_changes : 'Zmiana zestawu',
	technical_data_unsaved_changes_description : 'Wprowadziłeś zmiany, które nie zostaną zapisane. Czy chcesz kontynuować?',
	technical_data_unsaved_changes_save : 'Zapisz',
	technical_data_unsaved_changes_discard : 'Tak, zmień zestaw',
	technical_data_unsaved_changes_cancel : 'Anuluj zmianę zestawu',
	technical_data_save_set_success : 'Zapisano zestaw',
	technical_data_save_set_success_description : 'Zapisanie zestawu powiodło się.',
	technical_data_add_new_set : 'Podaj nazwę nowego zestawu atrybutów',
	technical_data_delete_set_description : 'Po usunięciu zestawu, ten produkt nadal będzie posiadał obecnie wybrane dane techniczne, jednak nie będzie możliwe przypisanie ich zestawu innemu produktowi dopóki nie zostanie utworzony nowy zestaw. Czy na pewno chcesz usunąć ten zestaw?',
	technical_data_delete_set_success : 'Usunięto zestaw',
	technical_data_delete_set_success_description : 'Usunięcie zestawu powiodło się.',
	technical_data_add_new_group : 'Dodaj nową grupę danych',
	technical_data_delete_group : 'Usuń tę grupę danych',
	technical_data_save_group : 'Zapisz',
	technical_data_delete_group_permanently : 'Usuń',
	technical_data_save_group_success : 'Zapisano zmiany w grupie',
	technical_data_save_group_success_description : 'Zapisanie zmian w grupie danych powiodło się.',
	technical_data_delete_attribute_group : 'Usuń wybraną grupę danych technicznych',
	technical_data_delete_attribute_group_description : 'Trwałe usunięcie spowoduje zniknięcie tej grupy także w przypadku innych produktów. Czy chcesz kontynuować?',
	technical_data_delete_group_success : 'Usunięto grupę danych',
	technical_data_delete_group_success_description : 'Usunięcie grupy danych powiodło się.',
	technical_data_save_attribute : 'Zapisz',
	technical_data_delete_attribute_permanently : 'Usuń',
	technical_data_delete_attribute : 'Usuń wybrany atrybut',
	technical_data_delete_attribute_description : 'Trwałe usunięcie spowoduje zniknięcie tego atrybutu także w przypadku innych produktów. Czy chcesz kontynuować?',
	technical_data_delete_attribute_success : 'Usunięto atrybut',
	technical_data_delete_attribute_success_description : 'Usunięcie atrybutu powiodło się.',
	technical_data_save_attribute_success : 'Zapisano zmiany w atrybucie',
	technical_data_save_attribute_success_description : 'Zapisanie zmian w atrybucie powiodło się.',
	technical_data_edit_attribute : 'Edytuj wybrany atrybut',
	technical_data_edit_group : 'Edytuj wybraną grupę',
	technical_data_add_new_attribute : 'Dodaj nowy atrybut do tej grupy',
	technical_data_edit_multilingual_value : 'Edytuj tę wartość w innych językach',
	technical_data_value_type_string : 'Tekst / Liczba',
	technical_data_value_type_multilingual_string : 'Wartość wielojęzyczna',
	technical_data_value_type_text : 'Tekst',
	technical_data_value_type_image : 'Obraz',
	technical_data_value_type_boolean : 'Tak/Nie',
	technical_data_value_type_select : 'Lista wyboru',
	technical_data_value_type_multiselect : 'Lista wielokrotnego wyboru',
	progress_indicator_run_comment : 'Kliknij przycisk Uruchom',
	progress_indicator_run : 'Uruchom',
	progress_indicator_success : 'Operacja zakończona powodzeniem',
	help : 'Pomoc',
	order_editor_historical_product : 'Produkt został usunięty z bazy!',
	allegro_product_select_description: 'Opis',
	allegro_product_select_category: 'Kategoria Allegro',
	allegro_product_select_params: 'Parametry Allegro',
	allegro_product_select_shop_net_buyprice: 'Cena netto zakupu',
	allegro_product_select_shop_gross_buyprice: 'Cena brutto zakupu',
	allegro_product_select_shop_net_price: 'Cena netto',
	allegro_product_select_shop_gross_price: 'Cena brutto',
	allegro_product_select_start_price: 'Wywoławcza',
	allegro_product_select_buy_price: 'Kup Teraz',
	allegro_product_select_min_price: 'Minimalna',
	allegro_product_select_title: 'Tytuł aukcji',
	allegro_product_select_product_id: 'Id produktu',
	allegro_product_select_products_list: 'Wybierz produkty',
	allegro_product_select_title_format: 'Format tytułu aukcji',
	allegro_product_select_selected_products: 'Produkty do wystawienia',
	allegro_product_select_autotitle: 'Zastosuj automatyczne generowanie tytułów aukcji',
	allegro_product_select_edit_description: 'Edytuj opis aukcji',
	allegro_product_select_product_description: 'Opis wybranego produktu',
	allegro_product_select_save_description: 'Zapisz opis',
	allegro_product_select_favourite_categories: 'Kategorie ulubione',
	allegro_product_select_related_categories: 'Kategorie powiązane',
	allegro_product_select_all_categories: 'Wszystkie kategorie',
	allegro_product_select_params: 'Parametry Allegro'

};
GMenu.Language = {
	customize : 'Dostosuj menu',
	choose_mode : 'Kiedy podmenu ma zostać rozwinięte?',
	mode_click : 'Po kliknięciu',
	mode_hover : 'Po najechaniu kursorem',
	mode_delay : 'Po najechaniu kursorem i opóźnieniu',
	mode_delay_ms : 'ms',
	save : 'Zapisz',
	save_desc : 'Zapamiętaj ustawienia dotyczące menu',
	restore_default : 'Przywróć domyślne',
	restore_default_desc : 'Przywróć domyślne ustawienia dotyczące menu'
};

GMessageBar.Language = {
	close_alert : 'OK',
	cancel : 'Anuluj',
	ok : 'OK',
	add : 'OK',
	yes : 'Tak',
	no : 'Nie'
};
GScrollableTabs.Language = {
	next : 'Przewiń w prawo',
	previous : 'Przewiń w lewo'
};

GFormDate.Language = {
	closeText : 'Zamknij',
	prevText : '&#x3c;Poprzedni',
	nextText : 'Następny&#x3e;',
	currentText : 'Dziś',
	monthNames : [ 'Styczeń', 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec','Lipiec', 'Sierpień', 'Wrzesień', 'Październik', 'Listopad','Grudzień' ],
	monthNamesShort : [ 'Sty', 'Lu', 'Mar', 'Kw', 'Maj', 'Cze', 'Lip', 'Sie','Wrz', 'Pa', 'Lis', 'Gru' ],
	dayNames : [ 'Niedziela', 'Poniedziałek', 'Wtorek', 'Środa', 'Czwartek','Piątek', 'Sobota' ],
	dayNamesShort : [ 'Nie', 'Pn', 'Wt', 'Śr', 'Czw', 'Pt', 'So' ],
	dayNamesMin : [ 'N', 'Pn', 'Wt', 'Śr', 'Cz', 'Pt', 'So' ],
	dateFormat : 'yy-m-d',
	firstDay : 1,
	isRTL : false
};

GException.Language = {
	exception_has_occured : 'An error occured!'
};

GForm.Language = {
	add_repetition : 'Add new',
	delete_repetition : 'Delete',
	form_data_invalid : 'Cannot submit the form. Please check errors..',
	scroll_to_field : 'Go to field',
	close_alert : 'Close alert',
	next : 'Next',
	previous : 'Back',
	save : 'Save',
	add_field_repetition : 'Add a new value',
	remove_field_repetition : 'Delete a value',
	all_actions : 'all',
	all_controllers : 'all',
	product_select_id : 'ID',
	product_select_hierarchy : 'Hierarchy',
	product_select_product_id : 'ID',
	product_select_name : 'Name',
	product_select_price : 'Net price',
	product_select_price_gross : 'Gross price',
	product_select_buyprice : 'Bu price net',
	product_select_buyprice_gross : 'Buy price gross',
	product_select_barcode : 'Barcode',
	product_select_producer : 'Producer',
	product_select_vat : 'VAT',
	product_select_vat_value : 'Tax',
	product_select_net_subsum : 'Net',
	product_select_subsum : 'Gross',
	product_select_categories : 'Category',
	product_select_adddate : 'Created at',
	product_select_adduser : 'Created by',
	product_select_editdate : 'Updated at',
	product_select_edituser : 'Updated by',
	product_select_deselect : 'Cancel selection',
	product_select_selected : 'Choosen products',
	product_select_quantity : 'Quantity',
	product_select_variant : 'Variant',
	product_select_add : 'Add',
	product_select_close_add : 'Hide products list',
	product_select_sum : 'Sum',
	datagrid_select_selected : 'Selected records',
	datagrid_select_deselect : 'Cancel selection',
	datagrid_select_dg_error : 'Error during DataGrid initialization',
	file_selector_id : 'ID',
	file_selector_filename : 'Name',
	file_selector_filetype : 'Type',
	file_selector_extension : 'Extension',
	file_selector_deselect : 'Cancel selection',
	file_selector_thumb : 'Thumbnail',
	file_selector_show_thumb : 'Show thumbnail',
	file_selector_photo : 'Photo',
	file_selector_photo_main : 'Main',
	file_selector_photo_visible : 'Visible',
	file_selector_photo_cancel : 'Cancel selection',
	file_selector_upload_error : 'Error during file upload',
	file_selector_upload_success : 'File uploaded',
	file_selector_processing_error : 'An error occured during the upload process',
	file_selector_form_blocked : 'Not all file transfers were finished!',
	file_selector_form_blocked_description : 'Form cannot be submitted while upload is in progress.',
	file_selector_selected_image : 'Choosen file:',
	product_variants_editor_set_for_this_product : 'Attributes group for this product',
	product_variants_editor_set_for_this_product_suffix : 'suggested groups are highlighted',
	product_variants_editor_add_attribute : 'Add new attribute',
	product_variants_editor_save_attribute : 'Save attribute',
	product_variants_editor_add_value : 'Add new value',
	product_variants_editor_save_value : 'Save value',
	product_variants_editor_id : 'ID',
	product_variants_editor_stock : 'Stock',
	product_variants_editor_modifier_type : 'Modificator',
	product_variants_editor_modifier : 'Modificator',
	product_variants_editor_price : 'Price',
	product_variants_editor_add_variant : 'Add new variant',
	product_variants_editor_save_variant : 'Save changes',
	product_variants_editor_availble_attributes : 'Attributes available in group:',
	product_variants_editor_variant_editor_base_net_price : 'Net price',
	product_variants_editor_variant_editor_base_gross_price : 'Gross price',
	product_variants_editor_variant_editor_modifier_type : 'Modifier type',
	product_variants_editor_variant_editor_modifier_value : 'Modifier value',
	product_variants_editor_variant_editor_net_price : 'Variant net price',
	product_variants_editor_variant_editor_gross_price : 'Variant gross price',
	product_variants_editor_variant_editor_stock : 'Stock',
	product_variants_editor_choose_attribute : '(choose an attribute)',
	tree_add_item : 'Add',
	tree_duplicate_item : 'Duplicate',
	tree_add_subitem : 'Add new child',
	tree_delete_item : 'Delete selected',
	tree_save_order : 'Save hierarchy',
	tree_restore_order : 'Restore hierarchy',
	tree_expand_all : 'Expand all',
	tree_retract_all : 'Collapse all',
	tree_ok : 'OK',
	tree_cancel : 'Cancel',
	tree_found_duplicates : 'There are duplicates on the same level',
	tree_duplicate_entry_all_levels : 'There are duplicates on different levels',
	tree_found_duplicates_description : 'Proponowanej struktury nie można zapisać, ponieważ zawiera zduplikowane elementy na tym samym poziomie w tym samym poddrzewie.',
	tree_duplicate_entry_all_levels_description : 'Proponowanej struktury nie można zapisać, ponieważ zawiera zduplikowane elementy.',
	tree_duplicate_entry : 'Element o tej nazwie już istnieje',
	tree_duplicate_entry_description : 'Na jednym poziomie poddrzewa nie mogą się znaleźć dwa elementy o tej samej nazwie.',
	tree_delete_item_warning : 'Czy na pewno chcesz usunąć tę kategorię?',
	tree_delete_item_warning_description : 'Usunięcie będzie nieodwracalne. Przed usunięciem kategorii należy upewnić się, że nie zawiera ona podkategorii.',
	tree_deselect : 'Cancel selection',
	attribute_editor_choose_attribute : '(choose or enter the attribute\'s name)',
	technical_attribute_editor_choose_attribute : '(choose or enter the group\'s name)',
	attribute_editor_rename_attribute : 'Rename the attribute',
	attribute_editor_rename_attribute_provide_new_name : 'Please enter new attribute\'s name:',
	attribute_editor_rename_attribute_error : 'Zmiana nazwy cechy nie powiodła się',
	attribute_editor_rename_attribute_error_description : 'Wystąpił błąd podczas dokonywania zmiany w bazie danych.',
	attribute_editor_rename_value : 'Zmień nazwę wartości cechy',
	attribute_editor_rename_value_provide_new_name : 'Podaj nową nazwę (pamiętaj, że zmieni się ona we wszystkich grupach i produktach!):',
	attribute_editor_rename_value_error : 'Zmiana nazwy wartości cechy nie powiodła się',
	attribute_editor_rename_value_error_description : 'Wystąpił błąd podczas dokonywania zmiany w bazie danych.',
	attribute_editor_remove_attribute : 'Remove from group',
	attribute_editor_remove_attribute_from_base : 'Remove from database',
	attribute_editor_remove_attribute_from_base_ok : 'Delete',
	attribute_editor_remove_attribute_from_base_cancel : 'Cancel',
	attribute_editor_remove_attribute_from_base_confirm : 'Czy na pewno chcesz usunąć tę cechę z bazy danych?',
	attribute_editor_remove_attribute_from_base_confirm_description : 'Spowoduje to utratę wszystkich należących do tej cechy wartości. Ponowne użycie tej cechy będzie wymagało jej dodania do bazy.',
	attribute_editor_remove_attribute_from_base_error : 'Usunięcie cechy z bazy nie powiodło się.',
	attribute_editor_remove_attribute_from_base_error_description : 'Sprawdź, czy usuwana cecha nie jest przypisana któremuś z produktów bądź nie przynależy do innego zestawu cech.',
	attribute_editor_edit_attribute_values : 'Edytuj wartości cechy',
	attribute_editor_remove_value : 'Usuń wartość cechy',
	attribute_editor_add_attribute : 'Add new attribute',
	attribute_editor_add_value : 'Add new value',
	attribute_editor_attributes : 'Attributes',
	technical_attribute_editor_attributes : 'Grupa atrybutów',
	attribute_editor_values : 'Values',
	technical_attribute_editor_values : 'Atrybuty',
	address_different : '(inny adres)',
	address_copy_from : 'Skopiuj adres z:',
	address_update_data : 'Czy zaktualizować dane adresowe?',
	address_update_data_description : 'Zmieniono klienta dla zamówienia. Czy automatycznie ustawić dane płatnika i dane wysyłki na podstawie danych adresowych klienta?',
	product_aggregator_form_blocked : 'Trwa przeliczanie ceny zestawu!',
	product_aggregator_form_blocked_description : 'Nie można zapisać zmian, dopóki przeliczanie nie zostanie ukończone.',
	product_aggregator_count : 'Liczba produktów',
	product_aggregator_sum : 'Suma',
	product_aggregator_setvalue_prohibited : 'Wywołanie metody SetValue dla pola typu FE_ProductAggregator jest niedozwolone.',
	price_modifier_value : 'Wartość modyfikatora',
	price_modifier_modifier : 'Rodzaj modyfikatora',
	range_editor_use_vat : 'Uwzględnij podatek VAT',
	range_editor_vat : 'Stawka VAT',
	range_editor_from : 'od',
	range_editor_to : 'do',
	range_editor_add_range : 'Dodaj nowy zakres poniżej tego',
	range_editor_remove_range : 'Usuń zakres',
	datetime_hour : 'godzina',
	static_listing_collapse : 'Zwiń',
	static_listing_expand : 'Rozwiń',
	preview_trigger_label : '(Podgląd)',
	border_none : 'brak',
	border_side_top : 'Górne obramowanie',
	border_side_right : 'Prawe obramowanie',
	border_side_bottom : 'Dolne obramowanie',
	border_side_left : 'Lewe obramowanie',
	border_separate : 'Rozdziel strony obramowania',
	layout_boxes_list_span : 'Rozciągnij:',
	layout_boxes_list_collapsed : 'Zwinięty',
	layout_boxes_list_add : 'Dodaj boks',
	layout_boxes_list_remove : 'Usuń boks',
	progress_indicator_run_comment : 'Kliknij przycisk Uruchom',
	progress_indicator_run : 'Uruchom',
	progress_indicator_success : 'Operacja zakończona powodzeniem',
	help : 'Pomoc',
	order_editor_historical_product : 'Produkt został usunięty z bazy!',
};

GMessageBar.Language = {
	close_alert : 'OK',
	cancel : 'Cancel',
	ok : 'OK',
	add : 'OK',
	yes : 'Tak',
	no : 'Nie'
};

GScrollableTabs.Language = {
	next : 'Przewiń w prawo',
	previous : 'Przewiń w lewo'
};
