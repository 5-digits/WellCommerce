<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="profiler.admin.controller.class">WellCommerce\Profiler\Controller\Admin\ProfilerController</parameter>
        <parameter key="profiler.class">Symfony\Component\HttpKernel\Profiler\Profiler</parameter>
        <parameter key="profiler.listener.class">Symfony\Component\HttpKernel\EventListener\ProfilerListener</parameter>
        <parameter key="profiler.storage.class">WellCommerce\Profiler\Storage\ProfilerStorage</parameter>
        <parameter key="profiler.repository.class">WellCommerce\Profiler\Repository\ProfilerRepository</parameter>
        <parameter key="profiler.data_collector.request.class">Symfony\Component\HttpKernel\DataCollector\RequestDataCollector</parameter>
        <parameter key="profiler.data_collector.router.class">Symfony\Component\HttpKernel\DataCollector\RouterDataCollector</parameter>
        <parameter key="profiler.data_collector.event.class">Symfony\Component\HttpKernel\DataCollector\EventDataCollector</parameter>
        <parameter key="profiler.data_collector.time.class">Symfony\Component\HttpKernel\DataCollector\TimeDataCollector</parameter>
    </parameters>

    <services>
        <service id="profiler.admin.controller" class="%profiler.admin.controller.class%">
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
            <call method="setRepository">
                <argument type="service" id="profiler.repository"/>
            </call>
        </service>

        <service id="profiler.repository" class="%profiler.repository.class%">
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="profiler" class="%profiler.class%">
            <argument type="service" id="profiler.storage" />
        </service>

        <service id="profiler.storage" class="%profiler.storage.class%">
            <argument type="service" id="profiler.repository"/>
        </service>

        <service id="profiler.listener" class="%profiler.listener.class%">
            <tag name="kernel.event_subscriber" />
            <argument type="service" id="profiler" />
            <argument>null</argument>
            <argument>false</argument>
            <argument>false</argument>
            <argument type="service" id="request_stack" />
        </service>

        <service id="profiler.data_collector.request" class="%profiler.data_collector.request.class%">
            <tag name="kernel.event_subscriber" />
            <tag name="data_collector" id="request" priority="255" />
        </service>

        <service id="profiler.data_collector.router" class="%profiler.data_collector.router.class%" >
            <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
            <tag name="data_collector" id="router" priority="255" />
        </service>

        <service id="profiler.data_collector.event" class="%profiler.data_collector.event.class%" >
            <tag name="data_collector" id="events" priority="255" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <!--<service id="profiler.data_collector.time" class="%profiler.data_collector.time.class%" >-->
            <!--<tag name="data_collector" id="events" priority="255" />-->
            <!--<argument type="service" id="kernel" />-->
            <!--<argument type="service" id="stopwatch" />-->
        <!--</service>-->
    </services>
</container>