<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <imports>
        <import resource="processors.xml"/>
    </imports>

    <services>
        <service id="payment_method.manager.admin" class="WellCommerce\Bundle\PaymentBundle\Manager\Admin\PaymentMethodManager">
            <argument type="service" id="payment_method.repository"/>
            <argument type="service" id="payment_method.event_dispatcher"/>
            <argument type="service" id="payment_method.factory"/>
            <argument type="service" id="payment_method.form_builder"/>
            <argument type="service" id="payment_method.datagrid"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="payment_method.controller.admin" class="WellCommerce\Bundle\PaymentBundle\Controller\Admin\PaymentMethodController">
            <argument type="service" id="payment_method.manager.admin"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="payment_method.repository" class="WellCommerce\Bundle\PaymentBundle\Repository\PaymentMethodRepository" factory-service="doctrine.orm.entity_manager" factory-method="getRepository">
            <argument>WellCommercePaymentBundle:PaymentMethod</argument>
        </service>

        <service id="payment_method.factory" class="WellCommerce\Bundle\PaymentBundle\Factory\PaymentMethodFactory">
            <argument>WellCommercePaymentBundle:PaymentMethod</argument>
        </service>

        <service id="payment_method.event_dispatcher" class="WellCommerce\Bundle\PaymentBundle\EventDispatcher\PaymentMethodEventDispatcher">
            <argument type="service" id="event_dispatcher"/>
        </service>

        <service id="payment_method.dataset.query_builder.admin" class="WellCommerce\Bundle\PaymentBundle\DataSet\Admin\PaymentMethodDataSetQueryBuilder" public="false">
            <argument type="service" id="payment_method.repository"/>
        </service>

        <service id="payment_method.dataset.loader.admin" class="%dataset.loader.class%">
            <argument type="service" id="payment_method.dataset.query_builder.admin"/>
            <argument type="service" id="dataset.processor"/>
        </service>

        <service id="payment_method.dataset.admin" class="WellCommerce\Bundle\PaymentBundle\DataSet\Admin\PaymentMethodDataSet">
            <argument key="identifier">payment_method</argument>
            <argument type="service" id="payment_method.dataset.loader.admin"/>
            <argument type="service" id="payment_method.event_dispatcher"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
            <configurator service="dataset.configurator" method="configure"/>
        </service>

        <service id="payment_method.collection.admin" parent="dataset.collection_builder.factory">
            <argument type="service" id="payment_method.dataset.admin"/>
        </service>

        <service id="payment_method.dataset.query_builder.front" class="WellCommerce\Bundle\PaymentBundle\DataSet\Front\PaymentMethodDataSetQueryBuilder" public="false">
            <argument type="service" id="payment_method.repository"/>
        </service>

        <service id="payment_method.dataset.loader.front" class="%dataset.loader.class%">
            <argument type="service" id="payment_method.dataset.query_builder.front"/>
            <argument type="service" id="dataset.processor"/>
        </service>

        <service id="payment_method.dataset.front" class="WellCommerce\Bundle\PaymentBundle\DataSet\Front\PaymentMethodDataSet">
            <argument key="identifier">payment_method</argument>
            <argument type="service" id="payment_method.dataset.loader.front"/>
            <argument type="service" id="payment_method.event_dispatcher"/>
            <argument type="service" id="payment_method.event_dispatcher"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
            <configurator service="dataset.configurator" method="configure"/>
        </service>

        <service id="payment_method.collection.front" parent="dataset.collection_builder.factory">
            <argument type="service" id="payment_method.dataset.front"/>
        </service>

        <service id="payment_method.datagrid" class="WellCommerce\Bundle\PaymentBundle\DataGrid\PaymentMethodDataGrid">
            <argument key="identifier">payment_method</argument>
            <argument type="service" id="payment_method.dataset.admin"/>
            <argument type="service" id="payment_method.event_dispatcher"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="payment_method.form_builder" class="WellCommerce\Bundle\PaymentBundle\Form\PaymentMethodFormBuilder">
            <argument type="service" id="form.resolver.factory"/>
            <argument type="service" id="form.handler"/>
            <argument type="service" id="payment_method.event_dispatcher"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="payment_method.subscriber" class="WellCommerce\Bundle\PaymentBundle\EventListener\PaymentMethodSubscriber">
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
            <tag name="kernel.event_subscriber" />
        </service>

        <service id="payment_method.processor.collection" class="WellCommerce\Bundle\PaymentBundle\Processor\PaymentMethodProcessorCollection" />
    </services>
</container>
