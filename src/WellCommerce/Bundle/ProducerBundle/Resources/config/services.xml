<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="producer.manager.admin" class="WellCommerce\Bundle\ProducerBundle\Manager\Admin\ProducerManager">
            <argument type="service" id="flash_helper"/>
            <argument type="service" id="redirect_helper"/>
            <argument type="service" id="image_helper"/>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="doctrine.orm.default_entity_manager"/>
            <argument type="service" id="translator"/>
            <call method="setRepository">
                <argument type="service" id="producer.repository"/>
            </call>
            <call method="setForm">
                <argument type="service" id="producer.form"/>
            </call>
            <call method="setDataGrid">
                <argument type="service" id="producer.datagrid"/>
            </call>
        </service>

        <service id="producer.controller.admin" class="WellCommerce\Bundle\ProducerBundle\Controller\Admin\ProducerController">
            <argument type="service" id="producer.manager.admin"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="producer.controller.front" class="WellCommerce\Bundle\ProducerBundle\Controller\Front\ProducerController">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="producer.repository" class="WellCommerce\Bundle\ProducerBundle\Repository\ProducerRepository" factory-service="doctrine.orm.entity_manager" factory-method="getRepository">
            <argument>WellCommerceProducerBundle:Producer</argument>
            <call method="setTranslator">
                <argument type="service" id="translator" />
            </call>
        </service>

        <service id="producer.datagrid" class="WellCommerce\Bundle\ProducerBundle\DataGrid\ProducerDataGrid">
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
            <configurator service="producer.datagrid.configurator" method="configure" />
        </service>

        <service id="producer.datagrid.configurator" class="WellCommerce\Bundle\ProducerBundle\DataGrid\ProducerDataGridConfigurator">
            <argument key="identifier">producer</argument>
            <argument type="service" id="datagrid_manager"/>
            <argument type="service" id="producer.repository"/>
        </service>

        <service id="producer.form" class="WellCommerce\Bundle\ProducerBundle\Form\ProducerForm">
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="producer.subscriber" class="WellCommerce\Bundle\ProducerBundle\EventListener\ProducerSubscriber">
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
            <call method="setTranslator">
                <argument type="service" id="translator"/>
            </call>
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <tag name="kernel.event_subscriber" />
        </service>

        <service id="producer.route.generator" class="WellCommerce\Bundle\ProducerBundle\Routing\ProducerRouteGenerator">
            <argument type="collection" key="defaults">
                <argument key="_controller">producer.controller.front:indexAction</argument>
                <argument key="page">1</argument>
                <argument key="sort">1</argument>
            </argument>
            <argument type="collection" key="requirements">
                <argument key="page">\d{1,10}</argument>
                <argument key="sort">asc|desc</argument>
            </argument>
            <tag name="route.generator" />
        </service>
    </services>
</container>
