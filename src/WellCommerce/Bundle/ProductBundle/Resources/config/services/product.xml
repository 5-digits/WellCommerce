<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="product.manager.admin" class="WellCommerce\Bundle\ProductBundle\Manager\Admin\ProductManager">
            <argument type="service" id="product.repository"/>
            <argument type="service" id="product.event_dispatcher"/>
            <argument type="service" id="product.factory"/>
            <argument type="service" id="product.form_builder"/>
            <argument type="service" id="product.datagrid"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="product.manager.front" class="WellCommerce\Bundle\ProductBundle\Manager\Front\ProductManager">
            <argument type="service" id="product.repository"/>
            <argument type="service" id="product.event_dispatcher"/>
            <argument type="service" id="product.factory"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>
        
        <service id="product.controller.admin" class="WellCommerce\Bundle\ProductBundle\Controller\Admin\ProductController">
            <argument type="service" id="product.manager.admin"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="product.controller.front" class="WellCommerce\Bundle\ProductBundle\Controller\Front\ProductController">
            <argument type="service" id="product.manager.front"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="product.repository" class="WellCommerce\Bundle\ProductBundle\Repository\ProductRepository" factory-service="doctrine.orm.entity_manager" factory-method="getRepository">
            <argument>WellCommerceProductBundle:Product</argument>
        </service>

        <service id="product.dataset.query_builder.admin" class="WellCommerce\Bundle\ProductBundle\DataSet\Admin\ProductDataSetQueryBuilder" public="false">
            <argument type="service" id="product.repository"/>
            <call method="setShopContext">
                <argument type="service" id="shop.context.admin"/>
            </call>
        </service>

        <service id="product.dataset.loader.admin" class="%dataset.loader.class%">
            <argument type="service" id="product.dataset.query_builder.admin"/>
            <argument type="service" id="dataset.processor"/>
        </service>

        <service id="product.dataset.admin" class="WellCommerce\Bundle\ProductBundle\DataSet\Admin\ProductDataSet">
            <argument key="identifier">product</argument>
            <argument type="service" id="product.dataset.loader.admin"/>
            <argument type="service" id="product.event_dispatcher"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <configurator service="dataset.configurator" method="configure"/>
        </service>

        <service id="product.dataset.query_builder.front" class="WellCommerce\Bundle\ProductBundle\DataSet\Front\ProductDataSetQueryBuilder" public="false">
            <argument type="service" id="product.repository"/>
        </service>

        <service id="product.dataset.loader.front" class="%dataset.loader.class%">
            <argument type="service" id="product.dataset.query_builder.front"/>
            <argument type="service" id="dataset.processor"/>
            <argument type="service" id="doctrine.cache"/>
        </service>

        <service id="product.dataset.front" class="WellCommerce\Bundle\ProductBundle\DataSet\Front\ProductDataSet">
            <argument key="identifier">product</argument>
            <argument type="service" id="product.dataset.loader.front"/>
            <argument type="service" id="product.event_dispatcher"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
            <configurator service="dataset.configurator" method="configure"/>
        </service>

        <service id="product.collection.front" parent="dataset.collection_builder.factory">
            <argument type="service" id="product.dataset.front"/>
        </service>

        <service id="product.provider" class="WellCommerce\Bundle\ProductBundle\Provider\ProductProvider">
            <call method="setCollectionBuilder">
                <argument type="service" id="product.collection.front" />
            </call>
            <tag name="resource.provider" alias="product"/>
        </service>

        <service id="product.datagrid" class="WellCommerce\Bundle\ProductBundle\DataGrid\ProductDataGrid">
            <argument key="identifier">product</argument>
            <argument type="service" id="product.dataset.admin"/>
            <argument type="service" id="product.event_dispatcher"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="product.form_builder" class="WellCommerce\Bundle\ProductBundle\Form\ProductFormBuilder">
            <argument type="service" id="form.resolver.factory"/>
            <argument type="service" id="form.handler"/>
            <argument type="service" id="product.event_dispatcher"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="product_info.layout_box.controller" class="WellCommerce\Bundle\ProductBundle\Controller\Box\ProductInfoBoxController">
            <argument type="service" id="product.manager.front"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="product_info.layout_box.configurator" class="WellCommerce\Bundle\ProductBundle\Layout\ProductInfoBoxConfigurator">
            <argument>ProductInfo</argument>
            <argument>product_info.layout_box.controller</argument>
            <argument type="service" id="translator_helper"/>
            <tag name="layout_box.configurator" />
        </service>

        <service id="layered_navigation.layout_box.controller" class="WellCommerce\Bundle\ProductBundle\Controller\Box\ProductLayeredNavigationBoxController">
            <argument type="service" id="product.manager.front"/>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="layered_navigation.layout_box.configurator" class="WellCommerce\Bundle\ProductBundle\Layout\ProductLayeredNavigationBoxConfigurator">
            <argument>ProductLayeredNavigation</argument>
            <argument>layered_navigation.layout_box.controller</argument>
            <argument type="service" id="translator_helper"/>
            <tag name="layout_box.configurator" />
        </service>

        <service id="product.factory" class="WellCommerce\Bundle\ProductBundle\Factory\ProductFactory" />

        <service id="product.event_dispatcher" class="WellCommerce\Bundle\ProductBundle\EventDispatcher\ProductEventDispatcher">
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="product.route.generator" class="WellCommerce\Bundle\ProductBundle\Routing\ProductRouteGenerator">
            <argument type="collection" key="defaults">
                <argument key="_controller">product.controller.front:indexAction</argument>
            </argument>
            <argument type="collection" key="requirements" />
            <tag name="route.generator" />
        </service>

        <service id="product.doctrine.event_subscriber" class="WellCommerce\Bundle\ProductBundle\EventListener\ProductDoctrineEventSubscriber">
            <tag name="doctrine.event_subscriber" connection="default" />
        </service>

        <service id="product.request_param_converter" class="WellCommerce\Bundle\ProductBundle\Request\ParamConverter\ProductParamConverter">
            <argument type="service" id="product.repository" />
            <argument>id</argument>
            <argument type="collection">
                <argument>WellCommerce\Bundle\ProductBundle\Entity\Product</argument>
                <argument>WellCommerce\Bundle\ProductBundle\Entity\ProductInterface</argument>
            </argument>
            <tag name="request.param_converter" converter="product" priority="0"/>
        </service>
    </services>
</container>
